{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@splunk/dashboard-context/DashboardApiContext\"","webpack:///external \"@splunk/visualization-context/DataSourceContext\"","webpack:///./src/DataSourceContext.tsx","webpack:///./src/hooks/useDataSources.ts","webpack:///external \"lodash\"","webpack:///./src/hooks/usePrevious.ts"],"names":[],"mappings":"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","file":"DataSourceContext.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 51);\n","module.exports = require(\"react\");","module.exports = require(\"@splunk/dashboard-context/DashboardApiContext\");","module.exports = require(\"@splunk/visualization-context/DataSourceContext\");","import React, {\n    ReactNode,\n    useMemo,\n    useContext,\n    useRef,\n    useCallback,\n    MutableRefObject,\n} from 'react';\nimport DashboardApiContext from '@splunk/dashboard-context/DashboardApiContext';\nimport DataSourceContext from '@splunk/visualization-context/DataSourceContext';\nimport type { DashboardApi } from '@splunk/dashboard-types';\nimport useDataSources, {\n    Binding,\n    DataSourceRegistry,\n    OnUpdate,\n} from './hooks/useDataSources';\n\nexport interface DataSourceApi {\n    subscribe: (bindingType: string, callback: OnUpdate) => () => void;\n}\n\ninterface Props {\n    consumerId: string;\n    bindings: Binding[];\n    children: ReactNode;\n}\n\nexport type Subscribers = Record<string, OnUpdate[]>;\n\n// a helper function to help testing the subscribe and unsubscribe\nexport const createSubscribe = (subscribers: MutableRefObject<Subscribers>) => (\n    bindingType: string,\n    callback: OnUpdate\n): (() => void) => {\n    if (!subscribers.current[bindingType]) {\n        // eslint-disable-next-line no-param-reassign\n        subscribers.current[bindingType] = [];\n    }\n    subscribers.current[bindingType].push(callback);\n\n    return () => {\n        const idx = subscribers.current[bindingType].indexOf(callback);\n\n        if (idx === -1) {\n            return;\n        }\n\n        subscribers.current[bindingType].splice(idx, 1);\n    };\n};\n\nexport const DataSourceContextProvider = ({\n    consumerId,\n    bindings,\n    children,\n}: Props): JSX.Element => {\n    const dashboardApi = useContext<DashboardApi | null>(\n        DashboardApiContext\n    ) as DashboardApi;\n    const dataSourceRegistry = dashboardApi.getDataSourceRegistry() as DataSourceRegistry;\n    const subscribers = useRef<Subscribers>({});\n\n    const onUpdate = useCallback<OnUpdate>(({ binding, ...rest }) => {\n        const subs = subscribers.current[binding] ?? [];\n\n        subs.forEach((cb) => cb({ binding, ...rest }));\n    }, []);\n\n    useDataSources({\n        consumerId,\n        bindings,\n        dataSourceRegistry,\n        onUpdate,\n    });\n\n    const dataSourceApi = useMemo(() => {\n        return {\n            subscribe: createSubscribe(subscribers),\n        };\n    }, []);\n\n    return (\n        <DataSourceContext.Provider value={dataSourceApi}>\n            {children}\n        </DataSourceContext.Provider>\n    );\n};\n\nexport { default as DataSourceContext } from '@splunk/visualization-context/DataSourceContext';\n","import { useCallback, useEffect, useReducer, useRef } from 'react';\nimport { forEach, isEqual, difference, isNull, omit } from 'lodash';\nimport type { DataSet } from '@splunk/datasource-utils';\nimport usePrevious from './usePrevious';\n\ninterface DataSourceError {\n    level: 'error';\n    message: string;\n}\n\nexport type Meta = Record<string, unknown>;\nexport type RequestParams = Record<string, unknown>;\n\ntype BindingRemovePayload = string;\ntype BindingResetPayload = string;\ninterface BindingErrorPayload {\n    binding: string;\n    error: DataSourceError;\n}\ninterface BindingUpdatePayload {\n    binding: string;\n    data: DataSet;\n    meta: Meta;\n    requestParams: RequestParams;\n}\n\ntype Action =\n    | { type: 'binding/remove'; payload: BindingRemovePayload }\n    | { type: 'binding/reset'; payload: BindingResetPayload }\n    | {\n          type: 'binding/error';\n          payload: BindingErrorPayload;\n      }\n    | {\n          type: 'binding/update';\n          payload: BindingUpdatePayload;\n      };\n\ninterface StateItem {\n    error: DataSourceError | null;\n    data: DataSet | null;\n    meta: Meta | null;\n    requestParams: RequestParams | null;\n}\n\ntype BindingType = string;\ntype State = Record<BindingType, StateItem>;\n\ninterface DataSourceDefinition {\n    type: string;\n    name?: string;\n    options?: Record<string, unknown>;\n}\n\nexport interface Binding {\n    bindingType: string;\n    dataSourceId: string;\n    dataSource: DataSourceDefinition;\n    initialRequestParams: RequestParams;\n}\n\ninterface AllocateArgs {\n    dataSourceId: string;\n}\n\ninterface SubscribeArgs {\n    consumerId: string;\n    initialRequestParams: RequestParams;\n}\n\ntype Refresh = () => void;\n\ninterface DataSourceController {\n    subscribe: ({\n        consumerId,\n        initialRequestParams,\n    }: SubscribeArgs) => Promise<DataSourceSubscription>;\n    refresh: Refresh;\n}\n\ntype HandleDataPayload = Omit<BindingUpdatePayload, 'binding'>;\n\ninterface SubscribeToDataArgs {\n    onData: (payload: HandleDataPayload) => void;\n    onError: (error: DataSourceError) => void;\n}\n\ninterface DataSourceSubscription {\n    subscribeToData: ({ onData, onError }: SubscribeToDataArgs) => void;\n    cancel: () => void;\n    updateRequestParams: (requestParams: RequestParams) => void;\n    dataSource: DataSourceController;\n    consumerId: string;\n}\n\nexport interface DataSourceRegistry {\n    allocate: ({ dataSourceId }: AllocateArgs) => DataSourceController;\n}\n\ntype Consumers = Record<string, DataSourceSubscription>;\ntype Controllers = Record<string, DataSourceController>;\n\nexport type OnUpdate = (\n    payload: BindingUpdatePayload | BindingErrorPayload\n) => void;\n\ninterface UseDataSourcesArgs {\n    consumerId: string;\n    bindings: Binding[];\n    dataSourceRegistry: DataSourceRegistry;\n    onUpdate?: OnUpdate;\n}\n\ninterface UseDataSourcesReturn {\n    loading: boolean;\n    dataSources: State;\n    updateRequestParams: (\n        binding: string,\n        newRequestParams: RequestParams\n    ) => void;\n    refresh: Refresh;\n    getSubscribers: () => Consumers;\n}\n\nconst reducer = (state: State, action: Action) => {\n    switch (action.type) {\n        case 'binding/remove': {\n            const binding = action.payload;\n\n            return omit(state, [binding]);\n        }\n        case 'binding/reset': {\n            const binding = action.payload;\n\n            return {\n                ...state,\n                [binding]: {\n                    error: null,\n                    data: null,\n                    meta: null,\n                    requestParams: null,\n                },\n            };\n        }\n        case 'binding/error': {\n            const { binding, error } = action.payload;\n\n            return {\n                ...state,\n                [binding]: {\n                    error,\n                    data: null,\n                    meta: null,\n                    requestParams: null,\n                },\n            };\n        }\n        case 'binding/update': {\n            const { binding, data, meta, requestParams } = action.payload;\n            return {\n                ...state,\n                [binding]: { error: null, data, meta, requestParams },\n            };\n        }\n        default:\n            return state ?? {};\n    }\n};\n\nconst useDataSources = ({\n    consumerId,\n    bindings,\n    dataSourceRegistry,\n    onUpdate,\n}: UseDataSourcesArgs): UseDataSourcesReturn => {\n    const prevProps = usePrevious({\n        consumerId,\n        bindings,\n        dataSourceRegistry,\n    });\n    const consumers = useRef<Consumers>({});\n    const controllers = useRef<Controllers>({});\n    const [results, dispatch] = useReducer(reducer, {});\n\n    const handleError = useCallback(\n        (binding) => (error: DataSourceError) => {\n            dispatch({ type: 'binding/error', payload: { binding, error } });\n            if (onUpdate) {\n                onUpdate({\n                    binding,\n                    error,\n                });\n            }\n        },\n        [onUpdate]\n    );\n\n    const handleData = useCallback(\n        (binding: string) => (response: HandleDataPayload) => {\n            const payload = { binding, ...response };\n            dispatch({\n                type: 'binding/update',\n                payload,\n            });\n            if (onUpdate) {\n                onUpdate(payload);\n            }\n        },\n        [onUpdate]\n    );\n\n    const cancelSubscription = useCallback((binding: string) => {\n        if (consumers.current[binding]) {\n            consumers.current[binding].cancel();\n            delete consumers.current[binding];\n            delete controllers.current[binding];\n            dispatch({ type: 'binding/remove', payload: binding });\n        }\n    }, []);\n\n    const updateRequestParams = useCallback((binding, newRequestParams) => {\n        if (consumers.current[binding]) {\n            consumers.current[binding].updateRequestParams(newRequestParams);\n        }\n    }, []);\n\n    const refresh = useCallback(() => {\n        forEach(controllers.current, (controller, binding) => {\n            dispatch({ type: 'binding/reset', payload: binding });\n            controller.refresh();\n        });\n    }, []);\n\n    const createSubscription = useCallback(\n        async ({ bindingType, dataSourceId, initialRequestParams }) => {\n            try {\n                const controller = dataSourceRegistry.allocate({\n                    dataSourceId,\n                });\n                const sub = await controller.subscribe({\n                    consumerId,\n                    initialRequestParams,\n                });\n                sub.subscribeToData({\n                    onData: handleData(bindingType),\n                    onError: handleError(bindingType),\n                });\n                consumers.current[bindingType] = sub;\n                controllers.current[bindingType] = controller;\n            } catch (err) {\n                handleError(bindingType)({\n                    level: 'error',\n                    message: err.message,\n                });\n            }\n        },\n        [consumerId, dataSourceRegistry, handleData, handleError]\n    );\n\n    useEffect(() => {\n        // Prune out consumers that are no longer in the binding list\n        const unneededConsumers = difference(\n            Object.keys(consumers.current),\n            bindings.map((b) => b.bindingType)\n        );\n        unneededConsumers.forEach(cancelSubscription);\n\n        // For everything left,\n        // determine if it is a new subscription to create, or has had a definition update\n        forEach(bindings, (binding) => {\n            const { bindingType, dataSource, dataSourceId } = binding;\n            const prevBinding = prevProps?.bindings.find(\n                (b) => b.bindingType === bindingType\n            );\n            if (!prevBinding) {\n                // this is async, but we probably don't need to await because subscriptions should be independent\n                createSubscription(binding);\n            } else if (\n                !isEqual(prevBinding.dataSource, dataSource) ||\n                prevBinding.dataSourceId !== dataSourceId ||\n                consumerId !== prevProps?.consumerId\n            ) {\n                dispatch({ type: 'binding/reset', payload: bindingType });\n                cancelSubscription(bindingType);\n                createSubscription(binding);\n            }\n        });\n    }, [\n        bindings,\n        createSubscription,\n        cancelSubscription,\n        prevProps?.bindings,\n        prevProps?.consumerId,\n        consumerId,\n    ]);\n\n    useEffect(() => {\n        const currentConsumers = consumers.current;\n        return () => {\n            forEach(currentConsumers, (sub) => sub.cancel());\n        };\n    }, []);\n\n    return {\n        loading: results.primary\n            ? isNull(results.primary.error) && isNull(results.primary.data)\n            : false,\n        dataSources: results,\n        updateRequestParams,\n        refresh,\n        getSubscribers() {\n            return consumers.current;\n        },\n    };\n};\n\nexport default useDataSources;\n","module.exports = require(\"lodash\");","import { useRef, useEffect } from 'react';\n\n/**\n * This is the recommended way of saving previous props. Ref https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n * @param {*} value previous props\n */\nconst usePrevious = <T>(value: T): T | null => {\n    const ref = useRef<T | null>(null);\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n};\n\nexport default usePrevious;\n"],"sourceRoot":""}