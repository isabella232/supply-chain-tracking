/*!
 * Copyright © 2020 Splunk Inc.
 * SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or
 * in part without a valid written license from Splunk Inc. is PROHIBITED.
 */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 7);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),

/***/ 7:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useTextInput = void 0;
var react_1 = __webpack_require__(0);
var isString_1 = __importDefault(__webpack_require__(8));
/**
 * Custom hook for Text input property getter and Synthetic event handlers.
 *
 * @param {String} initialValue Initial value of the text input.
 * @param {Function} handleCommit Function to execute that will commit the change to UDF definition.
 * @param {String} uniqKey A unique key to shallow compare that determines if we revert back to `initialValue` for the returned state `value`.
 * @returns {Object} useTextInput
 * @returns {Function} useTextInput.value.onHandleBlur React SyntheticEvent handler.
 * @returns {Function} useTextInput.value.onHandleChange React SyntheticEvent handler.
 * @returns {Function} useTextInput.value.onHandleKeyDown React SyntheticEvent handler.
 * @returns {String} useTextInput.value The value to be rendered in the controlled input.
 */
var useTextInput = function (_a) {
    var _b = _a.initialValue, initialValue = _b === void 0 ? '' : _b, handleCommit = _a.handleCommit, _c = _a.uniqKey, uniqKey = _c === void 0 ? {} : _c, _d = _a.defaultValue, defaultValue = _d === void 0 ? '' : _d;
    var _e = __read(react_1.useState(initialValue), 2), value = _e[0], setValue = _e[1];
    react_1.useEffect(function () {
        setValue(initialValue);
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [uniqKey]); // Don't list initialValue as a dependency. Two objects could have the same initialValue, but we want to use a different handleCommit.
    var safeHandleChange = react_1.useCallback(function (val) {
        if (val !== initialValue) {
            // no need to check val type, because it is always a String https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement
            var v = val.trim();
            handleCommit(v);
            // If the value has been cleared using SUI Text's clear button or selectAll + delete, reset to defaultValue
            if (v === '') {
                setValue(defaultValue);
            }
            else {
                setValue(v);
            }
        }
    }, [handleCommit, initialValue, defaultValue]);
    var onHandleKeyDown = react_1.useCallback(function (evt) {
        if (isString_1.default(evt.key) && evt.key.toLowerCase() === 'enter') {
            safeHandleChange(evt.target.value);
        }
        if (isString_1.default(evt.key) && evt.key.toLowerCase() === 'escape') {
            // This key doesn't work with Chrome 75
            setValue(initialValue);
        }
    }, [initialValue, safeHandleChange]);
    var onHandleBlur = react_1.useCallback(function (evt) {
        safeHandleChange(evt.target.value);
    }, [safeHandleChange]);
    var onHandleChange = react_1.useCallback(function (evt) {
        var evtVal = evt.target.value;
        // Allow the clear ("X") button to propagate the change
        // without requiring the onBlur callback to execute
        if (typeof evtVal === 'undefined') {
            handleCommit('');
        }
        setValue(evtVal || '');
    }, [setValue, handleCommit]);
    return {
        onHandleBlur: onHandleBlur,
        onHandleChange: onHandleChange,
        onHandleKeyDown: onHandleKeyDown,
        value: value,
    };
};
exports.useTextInput = useTextInput;


/***/ }),

/***/ 8:
/***/ (function(module, exports) {

module.exports = require("lodash/isString");

/***/ })

/******/ });
//# sourceMappingURL=useTextInput.js.map