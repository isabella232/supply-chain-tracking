import React from 'react';
export declare type ComboBoxOptions = {
    label?: string;
    value: string;
}[];
export declare type GenerateComboBoxOptionsFunc = ({ currValue, currOptions, }: {
    currValue: string;
    currOptions: ComboBoxOptions;
}) => ComboBoxOptions;
interface ComboBoxEditorProps {
    /**
     * Value of the combo box.
     */
    value?: string;
    /**
     * List of label-value pairs to list as options for the combo box. Labels are optional.
     */
    options?: ComboBoxOptions;
    /**
     * Placeholder to display when the combo box is empty.
     */
    placeholder?: string;
    /**
     * Callback invoked when the value of the combo box changes.
     */
    onChange: (evt: React.SyntheticEvent, updatedValue: string) => void;
    /**
     * Optional function that generates options for the combo box.
     */
    generateOptions?: GenerateComboBoxOptionsFunc;
    /**
     * Show error state
     */
    error?: boolean;
    /**
     * footer message
     */
    footerMessage?: React.ReactNode;
}
declare const ComboBoxEditor: ({ value: initialValue, options: initialOptions, placeholder, onChange, generateOptions, error, footerMessage, }: ComboBoxEditorProps) => JSX.Element;
export default ComboBoxEditor;
//# sourceMappingURL=ComboBoxEditor.d.ts.map