/*!
 * Copyright © 2020 Splunk Inc.
 * SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or
 * in part without a valid written license from Splunk Inc. is PROHIBITED.
 */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 77);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),

/***/ 2:
/***/ (function(module, exports) {

module.exports = require("prop-types");

/***/ }),

/***/ 3:
/***/ (function(module, exports) {

module.exports = require("@splunk/ui-utils/i18n");

/***/ }),

/***/ 5:
/***/ (function(module, exports) {

module.exports = require("lodash/get");

/***/ }),

/***/ 77:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var groupBy_1 = __importDefault(__webpack_require__(78));
var reduce_1 = __importDefault(__webpack_require__(79));
var i18n_1 = __webpack_require__(3);
var AddChartDropdown_1 = __importDefault(__webpack_require__(80));
var presetUtils_1 = __webpack_require__(81);
/**
 * Helper method to filter the category list
 * @method filterByCategory
 * @param {Array} categories List of categories
 * @param {String} category Portion of category name to search for
 * @returns Array
 * @private
 */
var filterByCategory = function (categories, category) {
    return categories.filter(function (_a) {
        var cat = _a.category;
        return new RegExp(category, 'i').test(cat);
    });
};
/**
 * Helper method to filter items from category lists
 * @method filterByLabel
 * @param {Array} categories List of categories
 * @param {String} label Portion of viz label to search for
 * @returns Array
 */
var filterByLabel = function (categories, label) {
    var filteredCategories = [];
    categories.forEach(function (_a) {
        var cat = _a.category, visualizations = _a.visualizations;
        var list = visualizations.filter(function (_a) {
            var l = _a.label;
            return new RegExp(label, 'i').test(l);
        });
        if (list.length) {
            filteredCategories.push({ category: cat, visualizations: list });
        }
    });
    return filteredCategories;
};
/**
 * Maps visualization metadata to a taxonomy
 * @class VisualizationFilter
 */
var VisualizationFilter = /** @class */ (function () {
    /**
     * @constructor
     * @param {Object} preset Hash of dashboard presets
     * @param {Array} [taxonomy] List of category -> visualizationId mapping [{ category: Foo, visualizations: ['viz.foo'] }]
     */
    function VisualizationFilter(preset) {
        if (!preset || !preset.visualizations) {
            throw new Error('Must provide a valid preset');
        }
        var categoryValues = __spread(presetUtils_1.vizCategories.values());
        this.taxonomy = Object.entries(groupBy_1.default(Object.values(preset.visualizations).map(function (_a) {
            var _b;
            var _c = _a.config, _d = _c === void 0 ? {} : _c, category = _d.category, key = _d.key, icon = _d.icon, name = _d.name, meta = _a.meta, includeInVizSwitcher = _a.includeInVizSwitcher, includeInToolbar = _a.includeInToolbar;
            return ({
                type: key,
                label: name,
                icon: icon !== null && icon !== void 0 ? icon : AddChartDropdown_1.default,
                initialOptions: (_b = meta === null || meta === void 0 ? void 0 : meta.initialOptions) !== null && _b !== void 0 ? _b : {},
                category: category,
                includeInVizSwitcher: includeInVizSwitcher,
                includeInToolbar: includeInToolbar,
            });
        }), 'category'))
            .map(function (_a) {
            var _b = __read(_a, 2), category = _b[0], visualizations = _b[1];
            return ({
                category: category,
                visualizations: visualizations,
            });
        })
            // sorting by category index
            .sort(function (catA, catB) {
            return categoryValues.indexOf(catA.category) -
                categoryValues.indexOf(catB.category);
        });
    }
    /**
     * Retrieve a filtered taxonomy of visualization metadata
     * @method getVisualizationList
     * @param {Object} [searchCriteria] Filter { label, category}
     * @returns Array of category metadata
     */
    VisualizationFilter.prototype.getVisualizationList = function (_a) {
        var _b = _a === void 0 ? {} : _a, label = _b.label, category = _b.category;
        var filteredViz = [];
        var filteredVizByLabel = [];
        var filteredVizByCategory = [];
        if (category) {
            filteredVizByCategory = filterByCategory(this.taxonomy, category);
        }
        if (label) {
            filteredVizByLabel = filterByLabel(this.taxonomy, label);
        }
        if (!label && !category) {
            filteredViz = this.taxonomy;
        }
        else if (filteredVizByCategory.length && filteredVizByLabel.length) {
            var categoriesList = this.taxonomy.map(function (_a) {
                var cat = _a.category;
                return cat;
            });
            filteredVizByCategory = reduce_1.default(filteredVizByCategory, function (result, item) {
                result[item.category] = item.visualizations; // eslint-disable-line no-param-reassign
                return result;
            }, {});
            filteredVizByLabel = reduce_1.default(filteredVizByLabel, function (result, item) {
                if (!filteredVizByCategory[item.category]) {
                    result[item.category] = item.visualizations; // eslint-disable-line no-param-reassign
                }
                return result;
            }, {});
            filteredViz = reduce_1.default(categoriesList, function (result, cat) {
                if (filteredVizByCategory[cat] || filteredVizByLabel[cat]) {
                    result.push({
                        category: i18n_1._(cat),
                        visualizations: filteredVizByCategory[cat] ||
                            filteredVizByLabel[cat],
                    });
                }
                return result;
            }, []);
        }
        else if (filteredVizByCategory.length) {
            filteredViz = filteredVizByCategory;
        }
        else if (filteredVizByLabel.length) {
            filteredViz = filteredVizByLabel;
        }
        return filteredViz;
    };
    return VisualizationFilter;
}());
exports.default = VisualizationFilter;


/***/ }),

/***/ 78:
/***/ (function(module, exports) {

module.exports = require("lodash/groupBy");

/***/ }),

/***/ 79:
/***/ (function(module, exports) {

module.exports = require("lodash/reduce");

/***/ }),

/***/ 80:
/***/ (function(module, exports) {

module.exports = require("@splunk/dashboard-icons/AddChartDropdown");

/***/ }),

/***/ 81:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.vizCategories = exports.withUpdatedPreset = exports.withInputConfig = exports.withVizConfig = void 0;
var react_1 = __importStar(__webpack_require__(0));
var prop_types_1 = __importDefault(__webpack_require__(2));
var i18n_1 = __webpack_require__(3);
var mapValues_1 = __importDefault(__webpack_require__(82));
var mapKeys_1 = __importDefault(__webpack_require__(83));
var get_1 = __importDefault(__webpack_require__(5));
/**
 * Add a config property to the legacy/custom Viz class to make it consistent with the new splunk viz api
 * If the Viz contains a meta property, extract name, icon and category into config
 * along with the Viz dataContract, editor and optionsSchema
 * @param {Visualization} Viz The visualization to enhance
 */
var withVizConfig = function (Viz, key) {
    // New splunk.* viz already contain the config property
    if (Viz.config) {
        return Viz;
    }
    var _a = Viz.dataContract, dataContract = _a === void 0 ? {} : _a, _b = Viz.editor, editor = _b === void 0 ? [] : _b, _c = Viz.schema, schema = _c === void 0 ? {} : _c;
    // eslint-disable-next-line no-param-reassign
    Viz.config = {
        dataContract: dataContract,
        editorConfig: editor,
        optionsSchema: schema,
        key: key,
    };
    if (Viz.meta) {
        var _d = Viz.meta, name_1 = _d.label, icon = _d.icon, category = _d.category, metaKey = _d.key;
        // eslint-disable-next-line no-param-reassign
        Viz.config = __assign(__assign({}, Viz.config), { key: metaKey !== null && metaKey !== void 0 ? metaKey : Viz.config.key, name: name_1,
            icon: icon,
            category: category });
    }
    return Viz;
};
exports.withVizConfig = withVizConfig;
/**
 * Add a config property to the custom Input class to make it consistent with the updated input api
 * If the Input contains a meta property, extract all the key/value pairs into config
 * along with the Input dataContract, editor and optionsSchema
 * @param {Input} Input The input to enhance
 */
var withInputConfig = function (Input) {
    // input already contain the config property
    if (Input.config) {
        return Input;
    }
    var _a = Input.dataContract, dataContract = _a === void 0 ? {} : _a, _b = Input.editor, editor = _b === void 0 ? [] : _b, _c = Input.schema, schema = _c === void 0 ? {} : _c, meta = Input.meta;
    // eslint-disable-next-line no-param-reassign
    Input.config = {
        dataContract: dataContract,
        editorConfig: editor,
        optionsSchema: schema,
    };
    if (meta) {
        // eslint-disable-next-line no-param-reassign
        Input.config = __assign(__assign({}, Input.config), mapKeys_1.default(meta, function (_value, key) {
            return key === 'defaultConfig' ? 'baseShape' : key;
        }));
    }
    return Input;
};
exports.withInputConfig = withInputConfig;
/**
 * HOC that updates the Dashboard/DashboardCore component's visualization and input presets
 * Legacy and custom visualizations are updated with the config property to match new splunk viz api
 * Custom inputs are updated with the config property to match the updated input api
 * @param {ReactElement} DashComponent Dashboard/DashboardCore Component
 * @param {Object} preset Dashboard preset
 * @param {Any} rest Remaining component props
 */
var withUpdatedPreset = function (DashComponent) {
    var WrappedComponent = function (_a) {
        var preset = _a.preset, rest = __rest(_a, ["preset"]);
        var updatedPreset = react_1.useMemo(function () {
            var visualizations = get_1.default(preset, 'visualizations');
            var inputs = get_1.default(preset, 'inputs');
            return __assign(__assign(__assign({}, preset), (visualizations
                ? {
                    visualizations: mapValues_1.default(visualizations, exports.withVizConfig),
                }
                : {})), (inputs
                ? {
                    inputs: mapValues_1.default(inputs, exports.withInputConfig),
                }
                : {}));
        }, [preset]);
        return preset ? (react_1.default.createElement(DashComponent, __assign({}, rest, { preset: updatedPreset }))) : (react_1.default.createElement(DashComponent, __assign({}, rest)));
    };
    WrappedComponent.propTypes = {
        preset: prop_types_1.default.object,
        rest: prop_types_1.default.any,
    };
    return WrappedComponent;
};
exports.withUpdatedPreset = withUpdatedPreset;
// NOTE: the order in this list defines the order in which categories appear in toolbar/viz switcher
// TODO: use category constants from viz package(s)
exports.vizCategories = new Map([
    ['table', i18n_1._('Table')],
    ['singleValue', i18n_1._('Single Value')],
    ['trends', i18n_1._('Trends')],
    ['comparisons', i18n_1._('Comparisons')],
    ['gauge', i18n_1._('Gauge')],
    ['distributions', i18n_1._('Distributions')],
    ['choropleth', i18n_1._('Choropleth Maps')],
    ['image', i18n_1._('Image')],
    ['text', i18n_1._('Text')],
    ['shapes', i18n_1._('Shapes')],
    ['flow', i18n_1._('Flow')],
]);


/***/ }),

/***/ 82:
/***/ (function(module, exports) {

module.exports = require("lodash/mapValues");

/***/ }),

/***/ 83:
/***/ (function(module, exports) {

module.exports = require("lodash/mapKeys");

/***/ })

/******/ });
//# sourceMappingURL=VisualizationFilter.js.map