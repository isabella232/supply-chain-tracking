{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"prop-types\"","webpack:///external \"enzyme\"","webpack:///./src/testUtils/mountWithTelemetry.jsx","webpack:///external \"@splunk/dashboard-telemetry\"","webpack:///./src/utils/environment.ts"],"names":[],"mappings":";;;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;AClFA,kC;;;;;;ACAA,uC;;;;;;;;ACAA,mC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,qBAAqB;AACrB,mDAAuD;AACvD,2DAA2B;AAC3B,sCAA+B;AAC/B,mDAIqC;AACrC,kHAAkH;AAClH,6DAAuC;AAE1B,qBAAa,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;AAEhC,IAAM,qBAAqB,GAAG,UAAC,IAAI,IAAK,QAAC;IAC5C,SAAS,EAAE,eAAe;IAC1B,KAAK,EAAE,MAAM;IACb,IAAI,aACA,UAAU,EAAE,qBAAG,CAAC,OAAO,EACvB,QAAQ,EAAE,EAAE,IACT,IAAI,CACV;CACJ,CAAC,EAR6C,CAQ7C,CAAC;AARU,6BAAqB,yBAQ/B;AAEU,4BAAoB,GAAG,6BAAqB,CAAC;IACtD,UAAU,EAAE,YAAY;CAC3B,CAAC,CAAC;AAEH;IAAmC,wCAAgB;IAAnD;QAAA,qEAEC;QADG,eAAS,GAAG,qBAAa,CAAC;;IAC9B,CAAC;IAAD,2BAAC;AAAD,CAAC,CAFkC,sCAAgB,GAElD;AAED,IAAM,WAAW,GAAG;IAChB,IAAM,SAAS,GAAG,kBAAU,CAAC,sCAAgB,CAAC,CAAC;IAE/C,IAAM,WAAW,GAAG,mBAAW,CAAC;QAC5B,SAAS,CAAC,KAAK,CAAC;YACZ,UAAU,EAAE,YAAY;SAC3B,CAAC,CAAC;IACP,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;IAEhB,OAAO,CACH,0CACI,IAAI,EAAC,QAAQ,gBACF,OAAO,eACR,cAAc,EACxB,OAAO,EAAE,WAAW,GACtB,CACL,CAAC;AACN,CAAC,CAAC;AAEF,IAAM,iBAAiB,GAAG,CAAC,IAAI,oBAAoB,EAAE,CAAC,CAAC;AAEvD,4CAA4C;AAC5C,IAAM,cAAc,GAAG,UAAC,EAAY;QAAV,QAAQ;IAAO,QACrC,8BAAC,8CAAwB,IAAC,iBAAiB,EAAE,iBAAiB;QACzD,QAAQ;QACT,8BAAC,WAAW,OAAG,CACQ,CAC9B;AALwC,CAKxC,CAAC;AAEF,cAAc,CAAC,SAAS,GAAG;IACvB,QAAQ,EAAE,oBAAC,CAAC,GAAG;CAClB,CAAC;AAEK,IAAM,kBAAkB,GAAG,UAAC,SAAS;IACxC,OAAO,cAAK,CAAC,SAAS,EAAE;QACpB,iBAAiB,EAAE,cAAc;KACpC,CAAC,CAAC;AACP,CAAC,CAAC;AAJW,0BAAkB,sBAI7B;;;;;;;ACrEF,wD;;;;;;;;;ACAA,kBAAe,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC","file":"mountWithTelemetry.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","module.exports = require(\"react\");","module.exports = require(\"prop-types\");","module.exports = require(\"enzyme\");","/* eslint-env jest */\nimport React, { useContext, useCallback } from 'react';\nimport T from 'prop-types';\nimport { mount } from 'enzyme';\nimport {\n    TelemetryContext,\n    TelemetryContextProvider,\n    MetricsCollector,\n} from '@splunk/dashboard-telemetry';\n// Telemetry is compiled against the current UDF version, so this version will be present in the expected payloads\nimport ENV from '../utils/environment';\n\nexport const sendEventMock = jest.fn();\n\nexport const createExpectedPayload = (data) => ({\n    eventType: 'udf.telemetry',\n    level: 'info',\n    data: {\n        udfVersion: ENV.version,\n        metadata: {},\n        ...data,\n    },\n});\n\nexport const expectedFlushPayload = createExpectedPayload({\n    pageAction: 'test.flush',\n});\n\nclass MetricsCollectorMock extends MetricsCollector {\n    sendEvent = sendEventMock;\n}\n\nconst FlushButton = () => {\n    const telemetry = useContext(TelemetryContext);\n\n    const handleClick = useCallback(() => {\n        telemetry.flush({\n            pageAction: 'test.flush',\n        });\n    }, [telemetry]);\n\n    return (\n        <button\n            type=\"button\"\n            aria-label=\"flush\"\n            data-test=\"flush-button\"\n            onClick={handleClick}\n        />\n    );\n};\n\nconst metricsCollectors = [new MetricsCollectorMock()];\n\n// eslint-disable-next-line react/prop-types\nconst ContextWrapper = ({ children }) => (\n    <TelemetryContextProvider metricsCollectors={metricsCollectors}>\n        {children}\n        <FlushButton />\n    </TelemetryContextProvider>\n);\n\nContextWrapper.propTypes = {\n    children: T.any,\n};\n\nexport const mountWithTelemetry = (Component) => {\n    return mount(Component, {\n        wrappingComponent: ContextWrapper,\n    });\n};\n","module.exports = require(\"@splunk/dashboard-telemetry\");","export default { version: '23.3.0' };\n"],"sourceRoot":""}