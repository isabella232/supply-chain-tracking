{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@splunk/ui-utils/i18n\"","webpack:///./src/common/utils/configUtils.ts","webpack:///./src/common/interfaces/VizBehavior.ts","webpack:///external \"@splunk/visualizations-shared/schemaUtils\"","webpack:///external \"lodash\"","webpack:///./src/common/interfaces/VizCategory.ts","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"@splunk/themes/pick\"","webpack:///external \"@splunk/themes/variables\"","webpack:///external \"@splunk/visualization-color-palettes/editors/PresetPalettes\"","webpack:///external \"@babel/runtime/helpers/toConsumableArray\"","webpack:///external \"@splunk/visualizations-shared/colorConstants\"","webpack:///./src/common/editorConfig/StaticBackgroundColorEditor.js","webpack:///./src/common/configContext/singleValueContext.ts","webpack:///./src/common/editorConfig/DynamicMajorColorEditor.js","webpack:///./src/common/editorConfig/DynamicTrendColorEditor.js","webpack:///./src/common/editorConfig/DynamicBackgroundColorEditor.js","webpack:///./src/common/editorConfig/StaticMajorAndTrendLayout.js","webpack:///./src/common/editorConfig/StaticMajorColorEditor.js","webpack:///./src/common/editorConfig/StaticTrendColorEditor.js","webpack:///./src/SingleValueIcon/config.ts","webpack:///./src/common/editorConfig/StaticIconColorEditor.js"],"names":["StaticBackgroundColorEditor","label","_","option","editor","showEditor","options","isDynamicOption","getDynamicMajorColorEditor","defaultContext","defaultPalettesConfig","context","editorProps","labelPosition","flyoutTitle","formatters","value","defaults","majorValue","majorColorConfig","dataSelectors","getDynamicTrendColorEditor","trendValue","trendColorConfig","getDynamicBackgroundColorEditor","StaticMajorAndTrendLayout","values","min","max","placeholder","isDisabled","StaticMajorColorEditor","StaticTrendColorEditor","StaticIconColorEditor","palette"],"mappings":"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","file":"SingleValueIcon.config.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 62);\n","module.exports = require(\"@splunk/ui-utils/i18n\");","import { get, range } from 'lodash';\nimport { DYNAMIC_OPTIONS_DSL_PATTERN } from '@splunk/visualizations-shared/schemaUtils';\nimport { VizBehavior } from '../interfaces/VizBehavior';\nimport { VizConfig } from '../interfaces/VizConfig';\nimport { OptionsSchema } from '../interfaces/OptionsSchema';\nimport type { JSONSchema7Definition } from 'json-schema';\n\nexport interface PresetEntry {\n    name: string;\n    value: any;\n    label: string;\n}\n\nconst dynamicOptionsDSLType = {\n    type: 'string',\n    pattern: DYNAMIC_OPTIONS_DSL_PATTERN,\n} as const;\n\n/**\n * Helper function to extend an options schema with dynamic options DSL\n * @param optionsSchema a visualization's options schema\n * @returns an updated options schema that additionally allows strings starting with > for each option\n */\nfunction enhanceOptionsSchemaWithDynamicOptions(\n    optionsSchema: OptionsSchema | JSONSchema7Definition\n): OptionsSchema {\n    const enhancedOptionsSchema: OptionsSchema = {};\n    Object.keys(optionsSchema).forEach((key): void => {\n        const {\n            // The next a few are schema annotations, we should leave them as is.\n            // Note: in reality we don't use `readOnly`, `writeOnly` or `examples`, but they are listed here for completeness.\n            // Ref: https://datatracker.ietf.org/doc/html/draft-handrews-json-schema-validation-01\n            title,\n            description,\n            readOnly,\n            writeOnly,\n            examples,\n            default: defaultValue,\n            // The next a few need special care\n            type,\n            properties,\n            patternProperties,\n            // The rest should be handled together\n            ...remainingSchemaEntry\n        } = optionsSchema[key];\n\n        const annotations = {\n            ...(title !== undefined && { title }),\n            ...(description !== undefined && { description }),\n            ...(readOnly !== undefined && { readOnly }),\n            ...(writeOnly !== undefined && { writeOnly }),\n            ...(examples !== undefined && { examples }),\n            ...(defaultValue !== undefined && { default: defaultValue }),\n        };\n\n        if (type === 'object') {\n            enhancedOptionsSchema[key] = {\n                ...remainingSchemaEntry,\n                ...annotations,\n                type,\n                ...(properties && { properties: enhanceOptionsSchemaWithDynamicOptions(properties) }),\n            };\n            if (patternProperties) {\n                let enhancedPatternProperties = {};\n                Object.keys(patternProperties).forEach((key): void => {\n                    enhancedPatternProperties = {\n                        ...enhancedPatternProperties,\n                        ...enhanceOptionsSchemaWithDynamicOptions({ [key]: patternProperties[key] }),\n                    };\n                });\n                enhancedOptionsSchema[key].patternProperties = enhancedPatternProperties;\n            }\n        } else {\n            enhancedOptionsSchema[key] = {\n                ...annotations,\n                anyOf: [\n                    // we can't assume `type` is always there because there are `enum` and `const`.\n                    { ...(type !== undefined && { type }), ...remainingSchemaEntry },\n                    dynamicOptionsDSLType,\n                ],\n            };\n        }\n    });\n    return enhancedOptionsSchema;\n}\n\n/**\n * Helper function to enhance a Visualization Config as needed based on behaviors specified in supports block\n * @param vizConfig a Visualization Config\n * @returns an enhanced Visualization Config containing updated config entries based on behaviors it supports\n */\nfunction enhanceConfig(vizConfig: VizConfig): VizConfig {\n    const enhancedConfig: VizConfig = vizConfig;\n    if (vizConfig.supports.indexOf(VizBehavior.DYNAMIC_OPTIONS) !== -1) {\n        enhancedConfig.optionsSchema = enhanceOptionsSchemaWithDynamicOptions(vizConfig.optionsSchema);\n    }\n    return enhancedConfig;\n}\n\nfunction isDynamicOption(option?: string): boolean {\n    return (option && typeof option === 'string' && option.trim().startsWith('>')) || false;\n}\n\n// private helpers to improve readability of getInitialPreset\n// this shouldn't be tested since this util isn't something that we expect to use outside of getInitialPreset\n\n/**\n * this checks to make sure that all values within vizContext are compatible with the given preset's context to determine the initialPreset\n * if a preset has explicitly specified a key as being undefined, the vizContext must also has that key as undefined, or else this CANNOT be the initialPreset\n * the inverse is true; if a preset has key is NOT undefined, it must also be NOT undefined in the corresponding vizContext\n * the internal config contents are irrelevant (as the user could customize them in source), just as long as the presence of `undefined`s match up\n *\n * Since the presetConfigs have explicit undefined keys to override the existing config, we need to explicitly check the undefined values\n */\nfunction hasCompatibleContexts(\n    vizContext: { [configKey: string]: any },\n    presetContext: { [configKey: string]: any }\n): boolean {\n    const presetContextKeys = Object.keys(presetContext);\n    return presetContextKeys.every(\n        (contextKey): boolean =>\n            (presetContext[contextKey] === undefined && vizContext[contextKey] === undefined) ||\n            (presetContext[contextKey] !== undefined && vizContext[contextKey] !== undefined)\n    );\n}\n\n/**\n * Checks to make sure that dynamic (non-dynamic) options in a given preset are also dynamic (non-dynamic) in the vizOptions\n */\nfunction hasCompatibleOptions(\n    vizOptions: { [configKey: string]: any },\n    presetOptions: { [configKey: string]: any }\n): boolean {\n    const presetOptionKeys = Object.keys(presetOptions);\n    return presetOptionKeys.every(\n        (optionKey): boolean =>\n            isDynamicOption(presetOptions[optionKey]) === isDynamicOption(vizOptions[optionKey])\n    );\n}\n\n/**\n * Evaluates whether there is an initialPreset that fits the current state of vizContext + vizOptions\n * This function ignores extraneous vizOptions or vizContext keys, as they could be outside the scope of what the preset is intended to configure\n *\n * @param {Object} vizContext - the current vizContext definition\n * @param {Object} vizOptions - the current vizOptions definition\n * @param {PresetEntry[]} presets - the list of presets, one of which can be considered an initialPreset\n */\nfunction getInitialPreset(\n    vizContext: { [configKey: string]: any },\n    vizOptions: { [configKey: string]: any },\n    presets: PresetEntry[]\n): PresetEntry | null {\n    return presets.find((preset): boolean => {\n        const presetContext = get(preset, ['value', 'context'], {});\n        const presetOptions = get(preset, ['value', 'options'], {});\n        const presetContextKeys = Object.keys(presetContext);\n        const presetOptionKeys = Object.keys(presetOptions);\n\n        // all presets have to explicitly specify which options to reset (i.e. need explicitly undefined keys)\n        // if not, then the preset is invalid in config.ts\n        if (presetContextKeys.length === 0 || presetOptionKeys.length === 0) return false;\n\n        return (\n            hasCompatibleContexts(vizContext, presetContext) &&\n            hasCompatibleOptions(vizOptions, presetOptions)\n        );\n    });\n}\n\ninterface PrecisionOption {\n    label: string;\n    value: number;\n}\n\n/**\n * generates number precision values for a Select editor\n *\n * @param {Number} numPrecisionValues - number of integer precision values to generate\n * @returns {{ label: string; value; string  }[]} array of { label, value } tuples\n */\nfunction generatePrecisionValues(numPrecisionValues: number): PrecisionOption[] {\n    return range(0, numPrecisionValues + 1).map(\n        (i): PrecisionOption => ({\n            label: `${i} (0${i > 0 ? '.' : ''}${'0'.repeat(i)})`, // e.g. 0.000 for numPrecisionValues = 3\n            value: i,\n        })\n    );\n}\n\nexport {\n    enhanceConfig,\n    enhanceOptionsSchemaWithDynamicOptions,\n    isDynamicOption,\n    getInitialPreset,\n    generatePrecisionValues,\n};\n","export enum VizBehavior {\n    /**\n     * Dynamic Options Behavior.\n     * This allows visualization options to be powered by data\n     *\n     * **Example**\n     *\n     * sparklineValues: \">primary|seriesByIndex(0)\"\n     * would configure sparklineValues with an array of data points\n     * coming from the first series in the primary datasource\n     *\n     */\n    DYNAMIC_OPTIONS = 'dynamic-options',\n    EVENTS = 'events',\n    /**\n     * Placeholder behavior: visualization will display a placeholder rather than fail if any of the `requiredProps` is\n     * missing.\n     * @type {string}\n     */\n    PLACEHOLDER = 'placeholder',\n    PAGE_AND_SORT = 'page-and-sort',\n}\n","module.exports = require(\"@splunk/visualizations-shared/schemaUtils\");","module.exports = require(\"lodash\");","export enum VizCategory {\n    SINGLE_VALUE = 'Single Value',\n    TRENDS = 'Trends',\n    COMPARISONS = 'Comparisons',\n    TABLE = 'Table',\n    GAUGE = 'Gauge',\n    DISTRIBUTIONS = 'Distributions',\n    CHOROPLETH = 'Choropleth Maps',\n    SHAPES = 'Shapes',\n    MISC = 'misc',\n    FLOW = 'Flow',\n    CORRELATION = 'Correlation',\n    SPATIAL = 'Spatial',\n}\n","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@splunk/themes/pick\");","module.exports = require(\"@splunk/themes/variables\");","module.exports = require(\"@splunk/visualization-color-palettes/editors/PresetPalettes\");","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"@splunk/visualizations-shared/colorConstants\");","import { _ } from '@splunk/ui-utils/i18n';\nimport { isDynamicOption } from '../utils/configUtils';\n\nconst StaticBackgroundColorEditor = {\n    label: _('Static Background'),\n    option: 'backgroundColor',\n    editor: 'editor.color',\n    showEditor: ({ options }) => !isDynamicOption(options.backgroundColor),\n};\n\nexport default StaticBackgroundColorEditor;\n","import { DefaultContext } from '../interfaces/DefaultContext';\n\nexport const defaultContext: DefaultContext = {\n    trendColorConfig: [\n        {\n            to: 0,\n            value: '#9E2520',\n        },\n        {\n            from: 0,\n            value: '#1C6B2D',\n        },\n    ],\n    majorColorConfig: [\n        { to: 20, value: '#D41F1F' },\n        { from: 20, to: 40, value: '#D94E17' },\n        { from: 40, to: 60, value: '#CBA700' },\n        { from: 60, to: 80, value: '#669922' },\n        { from: 80, value: '#118832' },\n    ],\n};\n","import { _ } from '@splunk/ui-utils/i18n';\nimport { isDynamicOption } from '../utils/configUtils';\n\nexport const getDynamicMajorColorEditor = ({ defaultContext, defaultPalettesConfig }) => ({\n    label: _('Dynamic Major Value'),\n    option: 'majorColor',\n    context: 'majorColorEditorConfig',\n    editor: 'editor.dynamicColor',\n    showEditor: ({ options }) => isDynamicOption(options.majorColor),\n    editorProps: {\n        labelPosition: 'left',\n        flyoutTitle: _('Dynamic Coloring: Major Value'),\n        formatters: [\n            {\n                label: _('Ranges'),\n                value: 'rangeValue',\n                defaults: {\n                    majorValue: defaultContext.majorColorConfig,\n                },\n            },\n            // TODO(fkurniawan): add back in when FormatterEditor supports full MatchValue editor\n            // {\n            //     label: _('Matches'),\n            //     value: 'matchValue',\n            //     defaults: {\n            //         majorValue: [{ match: 'foo', value: '#f00' }],\n            //     },\n            // },\n        ],\n        dataSelectors: [\n            {\n                label: _('Major Value'),\n                value: 'majorValue',\n            },\n        ],\n        defaultPalettesConfig,\n    },\n});\n","import { _ } from '@splunk/ui-utils/i18n';\nimport { isDynamicOption } from '../utils/configUtils';\n\nexport const getDynamicTrendColorEditor = ({ defaultContext, defaultPalettesConfig }) => ({\n    label: _('Dynamic Trend'),\n    option: 'trendColor',\n    context: 'trendColorEditorConfig',\n    editor: 'editor.dynamicColor',\n    showEditor: ({ options }) => isDynamicOption(options.trendColor),\n    editorProps: {\n        labelPosition: 'left',\n        flyoutTitle: _('Dynamic Coloring: Trend'),\n        formatters: [\n            {\n                label: _('Ranges'),\n                value: 'rangeValue',\n                defaults: {\n                    trendValue: defaultContext.trendColorConfig,\n                },\n            },\n        ],\n        dataSelectors: [\n            {\n                label: _('Trend'),\n                value: 'trendValue',\n            },\n        ],\n        defaultPalettesConfig,\n    },\n});\n","import { _ } from '@splunk/ui-utils/i18n';\nimport { isDynamicOption } from '../utils/configUtils';\n\nexport const getDynamicBackgroundColorEditor = ({ defaultContext, defaultPalettesConfig }) => ({\n    label: _('Dynamic Background'),\n    option: 'backgroundColor',\n    context: 'backgroundColorEditorConfig',\n    editor: 'editor.dynamicColor',\n    showEditor: ({ options }) => isDynamicOption(options.backgroundColor),\n    editorProps: {\n        labelPosition: 'left',\n        flyoutTitle: _('Dynamic Coloring: Background'),\n        formatters: [\n            {\n                label: _('Ranges'),\n                value: 'rangeValue',\n                defaults: {\n                    majorValue: defaultContext.majorColorConfig,\n                    trendValue: defaultContext.trendColorConfig,\n                },\n            },\n            // TODO(fkurniawan): add back in when FormatterEditor supports full MatchValue editor\n            // {\n            //     label: _('Matches'),\n            //     value: 'matchValue',\n            //     defaults: {\n            //         majorValue: [{ match: 'foo', value: '#f00' }],\n            //     },\n            // },\n        ],\n        dataSelectors: [\n            {\n                label: _('Major Value'),\n                value: 'majorValue',\n            },\n            {\n                label: _('Trend'),\n                value: 'trendValue',\n            },\n        ],\n        defaultPalettesConfig,\n    },\n});\n","import { _ } from '@splunk/ui-utils/i18n';\n\nconst StaticMajorAndTrendLayout = [\n    [\n        {\n            label: 'Unit Position', // todo: we need a new editor combining unit and position\n            option: 'unitPosition',\n            editor: 'editor.select',\n            editorProps: {\n                values: [\n                    { label: _('Before'), value: 'before' },\n                    { label: _('After'), value: 'after' },\n                ],\n            },\n            showEditor: ({ options }) => options.showValue || options.showValue === undefined,\n        },\n        {\n            label: _('Unit Label'),\n            option: 'unit',\n            editor: 'editor.text',\n            showEditor: ({ options }) => options.showValue || options.showValue === undefined,\n        },\n    ],\n    [\n        {\n            label: _('Precision'),\n            option: 'numberPrecision',\n            editor: 'editor.number',\n            editorProps: {\n                min: 0,\n                max: 20,\n            },\n            showEditor: ({ options }) => options.showValue || options.showValue === undefined,\n        },\n        {\n            label: _('Major Value Size (px)'),\n            option: 'majorFontSize',\n            editor: 'editor.number',\n            editorProps: {\n                min: 1,\n            },\n            placeholder: _('Auto'),\n            showEditor: ({ options }) => options.showValue || options.showValue === undefined,\n        },\n    ],\n    [\n        {\n            label: _('Trend Display'),\n            option: 'trendDisplay',\n            editor: 'editor.select',\n            editorProps: {\n                values: [\n                    { label: _('Percent'), value: 'percent' },\n                    { label: _('Absolute'), value: 'absolute' },\n                    { label: _('Off'), value: 'off' },\n                ],\n            },\n            showEditor: ({ options }) => options.showValue || options.showValue === undefined,\n        },\n        {\n            label: _('Trend Size (px)'),\n            option: 'trendFontSize',\n            editor: 'editor.number',\n            editorProps: {\n                min: 1,\n            },\n            placeholder: _('Auto'),\n            showEditor: ({ options }) => options.showValue || options.showValue === undefined,\n            isDisabled: ({ options }) => options.trendDisplay === 'off',\n        },\n    ],\n];\n\nexport default StaticMajorAndTrendLayout;\n","import { _ } from '@splunk/ui-utils/i18n';\nimport { isDynamicOption } from '../utils/configUtils';\n\nconst StaticMajorColorEditor = {\n    label: _('Static Major Value'),\n    option: 'majorColor',\n    editor: 'editor.color',\n    showEditor: ({ options }) => !isDynamicOption(options.majorColor),\n};\n\nexport default StaticMajorColorEditor;\n","import { _ } from '@splunk/ui-utils/i18n';\nimport { isDynamicOption } from '../utils/configUtils';\n\nconst StaticTrendColorEditor = {\n    label: _('Static Trend'),\n    option: 'trendColor',\n    editor: 'editor.color',\n    showEditor: ({ options }) => !isDynamicOption(options.trendColor),\n    isDisabled: ({ options }) => options.trendDisplay === 'off',\n};\n\nexport default StaticTrendColorEditor;\n","import { _ } from '@splunk/ui-utils/i18n';\nimport { COLOR_OR_TOKEN_PATTERN, getPattern } from '@splunk/visualizations-shared/schemaUtils';\nimport { defaultPalettesConfig } from '@splunk/visualization-color-palettes/editors/PresetPalettes';\nimport pick from '@splunk/themes/pick';\nimport variables from '@splunk/themes/variables';\nimport { VizConfig } from '../common/interfaces/VizConfig';\nimport { DataContract } from '../common/interfaces/DataContract';\nimport { VizSize } from '../common/interfaces/VizSize';\nimport { defaultContext } from '../common/configContext/singleValueContext';\nimport StaticMajorAndTrendLayout from '../common/editorConfig/StaticMajorAndTrendLayout';\nimport StaticBackgroundColorEditor from '../common/editorConfig/StaticBackgroundColorEditor';\nimport StaticIconColorEditor from '../common/editorConfig/StaticIconColorEditor';\nimport StaticMajorColorEditor from '../common/editorConfig/StaticMajorColorEditor';\nimport StaticTrendColorEditor from '../common/editorConfig/StaticTrendColorEditor';\nimport { getDynamicMajorColorEditor } from '../common/editorConfig/DynamicMajorColorEditor';\nimport { getDynamicTrendColorEditor } from '../common/editorConfig/DynamicTrendColorEditor';\nimport { getDynamicBackgroundColorEditor } from '../common/editorConfig/DynamicBackgroundColorEditor';\nimport { OptionsSchema } from '../common/interfaces/OptionsSchema';\nimport { EditorConfig } from '../common/interfaces/Editor';\nimport { VizBehavior } from '../common/interfaces/VizBehavior';\nimport { PresetEntry, enhanceConfig, getInitialPreset, isDynamicOption } from '../common/utils/configUtils';\nimport { VizCategory } from '../common/interfaces/VizCategory';\n\nconst dataContract: DataContract = {\n    requiredDataSources: [\n        {\n            name: 'primary',\n            description: 'DataSource that powers the visualization',\n        },\n    ],\n    optionalDataSources: [],\n    initialRequestParams: {\n        primary: { offset: 0, count: 10000 },\n    },\n};\n\nconst size: VizSize = {\n    initialWidth: 250,\n    initialHeight: 250,\n};\n\nconst optionsSchema: OptionsSchema = {\n    backgroundColor: {\n        default: 'transparent',\n        description:\n            'Specify the color for the background. You may use a dataSource to apply the color. The hex value format should be “#FFFFFF”.',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    icon: { default: 'default', description: 'Specify an icon.', type: 'string' },\n    iconColor: {\n        default: null,\n        description:\n            'Specify the color for the icon. You may use a dataSource to apply the color. The hex value format should be “#FFFFFF”. The default for enterprise light is \"#000000\". The default for enterprise dark is \"#ffffff\". The default for prisma dark is \"rgba(255, 255, 255, 0.98)\".',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    iconOpacity: {\n        default: 1,\n        description: 'Specify the opacity for the icon using a number between 0 and 1 (inclusive).',\n        type: 'number',\n    },\n    iconPosition: {\n        default: 'before',\n        description: 'Specify where to display the icon in relation to the major value.',\n        type: 'string',\n    },\n    majorColor: {\n        default: '> themes.defaultFontColor',\n        description:\n            'Specify the color for the major value.  You may use a dataSource to apply the color. The hex value format should be “#FFFFFF”. The default for enterprise light is \"#000000\". The default for enterprise dark is \"#ffffff\". The default for prisma dark is \"rgba(255, 255, 255, 0.98)\".',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    majorFontSize: {\n        description:\n            'Specify the font size (px) for the major value. By default the major value font size is calculated dynamically based on the available space.',\n        type: 'number',\n    },\n    majorValue: {\n        default: '> primary|seriesByPrioritizedTypes(\"number\", \"string\", \"time\")|lastPoint()',\n        description: 'The major value to display in the visualization.',\n        type: ['string', 'number'],\n    },\n    majorValueField: {\n        default: '> majorValue | getField()',\n        description: 'The field name of major value.',\n        type: 'string',\n    },\n    numberPrecision: {\n        default: 0,\n        maximum: 20,\n        minimum: 0,\n        description:\n            'Specify the number of decimal places to display. For example, to display 3 decimal places, use a value of 3. The maximum value is 20.',\n        type: 'number',\n    },\n    shouldAbbreviateTrendValue: {\n        default: false,\n        description:\n            'Specify whether to abbreviate the trend value to 2 decimal points. A magnitude unit will be displayed.',\n        type: 'boolean',\n    },\n    shouldUseThousandSeparators: {\n        default: true,\n        description: 'Specify whether numeric values use commas as thousandths separators.',\n        type: 'boolean',\n    },\n    showValue: {\n        default: true,\n        description: 'Specify whether to enable or disable the value and trend indicator displays.',\n        type: 'boolean',\n    },\n    trendColor: {\n        default: '> themes.defaultFontColor',\n        description:\n            'Specify the color for the trend value. You may use a dataSource to apply the color. The hex value format should be “#FFFFFF”. The default for enterprise light is \"#000000\". The default for enterprise dark is \"#ffffff\". The default for prisma dark is \"rgba(255, 255, 255, 0.98)\".',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    trendDisplay: {\n        default: 'absolute',\n        description: 'Specify whether the trend value is displayed as a percentage or an absolute count.',\n        pattern: getPattern(['off', 'percent', 'absolute']),\n        type: 'string',\n    },\n    trendFontSize: {\n        description:\n            'Specify the font size (px) for the trend value. By default the trend value font size is calculated dynamically based on the available space.',\n        type: 'number',\n    },\n    trendValue: {\n        default: '> primary|seriesByPrioritizedTypes(\"number\", \"string\", \"time\")|delta(-2)', // todo: may need update delta method\n        description: 'The trend value to display in the visualization.',\n        type: 'number',\n    },\n    underLabel: { description: 'Specify the text that appears below the major value.', type: 'string' },\n    unit: {\n        description: 'Specify text to show next to the major value.',\n        type: 'string',\n    },\n    unitPosition: {\n        default: 'after',\n        description: 'Specify whether the unit text should appear before or after the major value.',\n        pattern: getPattern(['before', 'after']),\n        type: 'string',\n    },\n};\n\nconst basePresetContext = {\n    iconColorEditorConfig: undefined,\n    majorColorEditorConfig: undefined,\n    trendColorEditorConfig: undefined,\n    backgroundColorEditorConfig: undefined,\n};\n\nconst basePresetOptions = {\n    iconColor: undefined,\n    majorColor: undefined,\n    trendColor: undefined,\n    backgroundColor: undefined,\n};\n\nconst presets: PresetEntry[] = [\n    {\n        // dummy context variables to allow for resetting of unused context states\n        label: _('None'),\n        name: 'singleValueIcon.none',\n        value: {\n            context: { ...basePresetContext },\n            options: { ...basePresetOptions },\n        },\n    },\n    {\n        label: _('Icon'),\n        name: 'singleValueIcon.icon',\n        value: {\n            context: {\n                ...basePresetContext,\n                iconColorEditorConfig: defaultContext.majorColorConfig,\n            },\n            options: {\n                ...basePresetOptions,\n                iconColor: '> majorValue | rangeValue(iconColorEditorConfig)',\n            },\n        },\n    },\n    {\n        label: _('Major Value'),\n        name: 'singleValueIcon.majorValue',\n        value: {\n            context: {\n                ...basePresetContext,\n                majorColorEditorConfig: defaultContext.majorColorConfig,\n            },\n            options: {\n                ...basePresetOptions,\n                majorColor: '> majorValue | rangeValue(majorColorEditorConfig)',\n            },\n        },\n    },\n    {\n        label: _('Trend'),\n        name: 'singleValueIcon.trend',\n        value: {\n            context: {\n                ...basePresetContext,\n                trendColorEditorConfig: defaultContext.trendColorConfig,\n            },\n            options: {\n                ...basePresetOptions,\n                trendColor: '> trendValue | rangeValue(trendColorEditorConfig)',\n            },\n        },\n    },\n    {\n        label: _('Icon & Major Value'),\n        name: 'singleValueIcon.iconAndMajorValue',\n        value: {\n            context: {\n                ...basePresetContext,\n                iconColorEditorConfig: defaultContext.majorColorConfig,\n                majorColorEditorConfig: defaultContext.majorColorConfig,\n            },\n            options: {\n                ...basePresetOptions,\n                iconColor: '> majorValue | rangeValue(iconColorEditorConfig)',\n                majorColor: '> majorValue | rangeValue(majorColorEditorConfig)',\n            },\n        },\n    },\n    {\n        label: _('Background'),\n        name: 'singleValueIcon.background',\n        value: {\n            context: {\n                ...basePresetContext,\n                backgroundColorEditorConfig: defaultContext.majorColorConfig,\n            },\n            options: {\n                ...basePresetOptions,\n                backgroundColor: '> majorValue | rangeValue(backgroundColorEditorConfig)',\n            },\n        },\n    },\n];\n\n/**\n * TODO\n * common theme variables such as enterprise.defaultFontColor\n * that are repeated in multiple viz config themes should be DRYd up.\n */\nconst themes = {\n    defaultFontColor: props =>\n        pick({\n            enterprise: {\n                dark: variables.textColor(props),\n                light: variables.gray20(props),\n            },\n            prisma: variables.contentColorActive(props),\n        })(props),\n    defaultBlockFontColor: props =>\n        pick({\n            enterprise: variables.white(props),\n            prisma: variables.contentColorActive(props),\n        })(props),\n};\n\nconst editorConfig: EditorConfig[] = [\n    {\n        label: _('Major Value & Trend'),\n        layout: [\n            [\n                {\n                    label: _('Enable'),\n                    option: 'showValue',\n                    editor: 'editor.toggle',\n                },\n            ],\n            ...StaticMajorAndTrendLayout,\n        ],\n    },\n    {\n        label: _('Coloring'),\n        layout: [\n            [\n                {\n                    label: 'Dynamic Elements',\n                    key: 'presetSelector',\n                    editor: 'editor.presetSelector',\n                    editorProps: {\n                        presets,\n                        value: ({ context, options }) => {\n                            const initialPreset = getInitialPreset(context, options, presets);\n                            return (initialPreset && initialPreset.label) || null;\n                        },\n                    },\n                },\n            ],\n            StaticIconColorEditor,\n            [\n                {\n                    label: _('Dynamic Icon'),\n                    option: 'iconColor',\n                    context: 'iconColorEditorConfig',\n                    editor: 'editor.dynamicColor',\n                    showEditor: ({ options }) => isDynamicOption(options.iconColor),\n                    editorProps: {\n                        labelPosition: 'left',\n                        flyoutTitle: 'Dynamic Coloring: Icon',\n                        formatters: [\n                            {\n                                label: _('Ranges'),\n                                value: 'rangeValue',\n                                defaults: {\n                                    trendValue: defaultContext.trendColorConfig,\n                                    majorValue: defaultContext.majorColorConfig,\n                                },\n                            },\n                            // TODO(fkurniawan): add back in when FormatterEditor supports full MatchValue editor\n                            // {\n                            //     label: _('Matches'),\n                            //     value: 'matchValue',\n                            //     defaults: {\n                            //         majorValue: [{ match: 'foo', value: '#f00' }],\n                            //     },\n                            // },\n                        ],\n                        dataSelectors: [\n                            {\n                                label: _('Major Value'),\n                                value: 'majorValue',\n                            },\n                            {\n                                label: _('Trend'),\n                                value: 'trendValue',\n                            },\n                        ],\n                        defaultPalettesConfig: defaultPalettesConfig,\n                    },\n                },\n            ],\n            [\n                {\n                    ...StaticMajorColorEditor,\n                    editorProps: {\n                        labelPosition: 'left',\n                        themes,\n                    },\n                },\n            ],\n            [getDynamicMajorColorEditor({ defaultContext, defaultPalettesConfig })],\n            [\n                {\n                    ...StaticTrendColorEditor,\n                    editorProps: {\n                        labelPosition: 'left',\n                        themes,\n                    },\n                },\n            ],\n            [getDynamicTrendColorEditor({ defaultContext, defaultPalettesConfig })],\n            [\n                {\n                    ...StaticBackgroundColorEditor,\n                    editorProps: {\n                        labelPosition: 'left',\n                        themes,\n                    },\n                },\n            ],\n            [getDynamicBackgroundColorEditor({ defaultContext, defaultPalettesConfig })],\n        ],\n    },\n];\n\n/**\n * visualization configuration\n */\nconst config: VizConfig = {\n    /**\n     * unique viz key\n     */\n    key: 'splunk.singlevalueicon',\n    /**\n     * viz name\n     */\n    name: 'Single Value Icon',\n    category: VizCategory.SINGLE_VALUE,\n    /**\n     * viz icon\n     */\n    icon: null,\n    dataContract,\n    size,\n    defaultContext,\n    optionsSchema,\n    editorConfig,\n    events: {\n        'value.click': {\n            description: 'trigger when user clicks major value or icon',\n            payloadKeys: ['majorValue', 'trendValue', 'icon'],\n        },\n    },\n    supports: [VizBehavior.DYNAMIC_OPTIONS, VizBehavior.EVENTS],\n    themes,\n};\n\nexport default enhanceConfig(config);\n","import { _ } from '@splunk/ui-utils/i18n';\nimport { COLOR_EDITOR_PALETTE } from '@splunk/visualizations-shared/colorConstants';\nimport { isDynamicOption } from '../utils/configUtils';\n\nconst StaticIconColorEditor = [\n    {\n        label: _('Static Icon'),\n        option: 'iconColor',\n        editor: 'editor.color',\n        showEditor: ({ options }) => !isDynamicOption(options.iconColor),\n        editorProps: {\n            labelPosition: 'left',\n            value: null,\n            palette: [null, ...COLOR_EDITOR_PALETTE],\n        },\n    },\n];\n\nexport default StaticIconColorEditor;\n"],"sourceRoot":""}