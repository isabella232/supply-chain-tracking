{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"lodash\"","webpack:///external \"@splunk/ui-utils/i18n\"","webpack:///external \"styled-components\"","webpack:///./src/common/interfaces/VizBehavior.ts","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///./src/common/utils/hocUtils.ts","webpack:///./src/common/utils/configUtils.ts","webpack:///external \"@splunk/visualizations-shared/Message\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"@splunk/visualizations-shared/colorUtils\"","webpack:///./src/common/hocs/FixedSizeContainer.tsx","webpack:///external \"@splunk/visualizations-shared/style\"","webpack:///external \"@splunk/visualizations-shared/schemaUtils\"","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"@splunk/visualizations-shared/SizeAwareWrapper\"","webpack:///external \"@splunk/themes/variables\"","webpack:///external \"@splunk/visualizations-shared/numberUtils\"","webpack:///external \"@splunk/themes/pick\"","webpack:///external \"@babel/runtime/helpers/typeof\"","webpack:///./src/common/hooks/getSorting.ts","webpack:///./src/common/hooks/getPagination.ts","webpack:///./src/common/components/IconPlaceholder.tsx","webpack:///./src/common/interfaces/VizCategory.ts","webpack:///./src/common/withDashboardViz.tsx","webpack:///external \"@splunk/themes/getSettingsFromThemedProps\"","webpack:///external \"@splunk/visualization-encoding/Options\"","webpack:///external \"@splunk/visualizations-shared/SanitizeProps\"","webpack:///./src/common/SplunkVisualization.tsx","webpack:///./src/common/interfaces/VizActionHandler.ts","webpack:///./src/common/interfaces/DataSource.ts","webpack:///./src/common/hooks/useDeepMemo.ts","webpack:///./src/common/utils/JSONSchemaUtils.ts","webpack:///./src/common/components/MissingPropsMessage.tsx","webpack:///./src/common/hocs/withEditModeCover.tsx","webpack:///./src/common/hocs/withPlaceholder.tsx","webpack:///external \"@babel/runtime/helpers/toConsumableArray\"","webpack:///external \"@splunk/visualizations-shared/colorConstants\"","webpack:///external \"@babel/runtime/helpers/extends\"","webpack:///./src/common/editorConfig/BackgroundColor.ts","webpack:///external \"@splunk/visualization-color-palettes/editors/PresetPalettes\"","webpack:///./src/common/gaugeUtils.ts","webpack:///./src/common/editorConfig/Gauge.ts","webpack:///./src/common/GaugeMajorTicks.jsx","webpack:///./src/common/GaugeValueMarker.jsx","webpack:///./src/FillerGauge/FillerGauge.ts","webpack:///./src/FillerGauge/config.ts","webpack:///external \"@splunk/react-icons/GaugeFiller\"","webpack:///./src/common/editorConfig/DynamicGaugeColorEditor.ts","webpack:///./src/FillerGauge/PureFillerGauge/FillerGauge.tsx"],"names":["DEFAULT_NUM_OF_TICKS","TICK_LENGTH_DELTA","TICK_LABEL_PADDING_FACTOR","MajorTickLine","styled","props","MajorTickLabel","MajorTick","index","x1","y1","x2","y2","showLabels","label","labelX","labelY","majorTickStrokeColor","majorTickFillColor","formatNumber","useThousandSeparators","useTrendUnits","T","string","positionMajorTick","width","height","startX","startY","orientation","numOfTicks","i","y","x","MajorTicks","min","max","majorUnit","usePercentageRange","range","Number","majorTicks","parseInt","extraNumOfTicks","Math","MARKER_THICKNESS","MARKER_INNER_LENGTH","MARKER_LABEL_WIDTH","MARKER_LABEL_HEIGHT","RADIUS","DELTA_LENGTH","ValueMarkerRect","ValueMarkerLabelRect","ValueMarkerLabel","positionValueMarkerRect","valueMarkerRectLength","hLength","vLength","markerStartX","markerStartY","innerHLength","innerVLength","innerStartX","innerStartY","positionLabel","length","labelRectX","labelRectY","ValueMarker","value","showValue","usePercentageValue","valueMarkerFillColor","valueMarkerLabelFillColor"],"mappings":"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","file":"FillerGauge.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 160);\n","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"lodash\");","module.exports = require(\"@splunk/ui-utils/i18n\");","module.exports = require(\"styled-components\");","export enum VizBehavior {\n    /**\n     * Dynamic Options Behavior.\n     * This allows visualization options to be powered by data\n     *\n     * **Example**\n     *\n     * sparklineValues: \">primary|seriesByIndex(0)\"\n     * would configure sparklineValues with an array of data points\n     * coming from the first series in the primary datasource\n     *\n     */\n    DYNAMIC_OPTIONS = 'dynamic-options',\n    EVENTS = 'events',\n    /**\n     * Placeholder behavior: visualization will display a placeholder rather than fail if any of the `requiredProps` is\n     * missing.\n     * @type {string}\n     */\n    PLACEHOLDER = 'placeholder',\n    PAGE_AND_SORT = 'page-and-sort',\n}\n","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","import { cloneDeep } from 'lodash';\nimport { DashboardVizProps } from '../interfaces/DashboardVizProps';\n\nexport type DashboardVizType = React.ComponentType<DashboardVizProps>;\n\n/**\n * @method extendStaticWrapperProps\n * @param {Object} props\n * @param {DashboardVizType} props.Wrapper\n * @param {DashboardVizType} props.Visualization\n */\nexport const extendStaticWrapperProps = ({\n    Wrapper,\n    Visualization,\n}: {\n    [key: string]: DashboardVizType;\n}): void => {\n    const extendProperties = ['propTypes', 'defaultProps', 'config'];\n    extendProperties.forEach((prop: string): void => {\n        if (Visualization[prop]) {\n            Wrapper[prop] = Visualization[prop];\n        }\n    });\n};\n\n/**\n * helper to deeply merge objects while preserving arrays in earlier source objects\n * deeply nested primitive keys are merged similarly to lodash's defaultsDeep, while keys with arrays will be preserved if already present in the resultant merged object\n * this prevents default arrays from appending values to user-defined arrays (this occurs if the default array is longer than the user-defined one)\n *\n * @method deepMergeWithArrayOverrides\n * @param {Object} initial - target object to merge values into\n * @param {Object[]} sources - other default options to be merged into the resultant object if no explicit value is provided, with earlier args taking precedence over later ones\n *\n * @returns {Object}\n */\nexport const deepMergeWithArrayOverrides = (initial, ...sources) => {\n    const clone = cloneDeep(initial);\n    sources.forEach(sourceToApply => {\n        Object.keys(sourceToApply).forEach(sourceKey => {\n            if (!clone.hasOwnProperty(sourceKey)) {\n                clone[sourceKey] = cloneDeep(sourceToApply[sourceKey]);\n            }\n            // object merging excluding arrays\n            if (\n                clone[sourceKey] &&\n                typeof clone[sourceKey] === 'object' &&\n                !Array.isArray(clone[sourceKey]) &&\n                typeof sourceToApply[sourceKey] === 'object'\n            ) {\n                clone[sourceKey] = deepMergeWithArrayOverrides(clone[sourceKey], sourceToApply[sourceKey]);\n            }\n        });\n    });\n    return clone;\n};\n","import { get, range } from 'lodash';\nimport { DYNAMIC_OPTIONS_DSL_PATTERN } from '@splunk/visualizations-shared/schemaUtils';\nimport { VizBehavior } from '../interfaces/VizBehavior';\nimport { VizConfig } from '../interfaces/VizConfig';\nimport { OptionsSchema } from '../interfaces/OptionsSchema';\nimport type { JSONSchema7Definition } from 'json-schema';\n\nexport interface PresetEntry {\n    name: string;\n    value: any;\n    label: string;\n}\n\nconst dynamicOptionsDSLType = {\n    type: 'string',\n    pattern: DYNAMIC_OPTIONS_DSL_PATTERN,\n} as const;\n\n/**\n * Helper function to extend an options schema with dynamic options DSL\n * @param optionsSchema a visualization's options schema\n * @returns an updated options schema that additionally allows strings starting with > for each option\n */\nfunction enhanceOptionsSchemaWithDynamicOptions(\n    optionsSchema: OptionsSchema | JSONSchema7Definition\n): OptionsSchema {\n    const enhancedOptionsSchema: OptionsSchema = {};\n    Object.keys(optionsSchema).forEach((key): void => {\n        const {\n            // The next a few are schema annotations, we should leave them as is.\n            // Note: in reality we don't use `readOnly`, `writeOnly` or `examples`, but they are listed here for completeness.\n            // Ref: https://datatracker.ietf.org/doc/html/draft-handrews-json-schema-validation-01\n            title,\n            description,\n            readOnly,\n            writeOnly,\n            examples,\n            default: defaultValue,\n            // The next a few need special care\n            type,\n            properties,\n            patternProperties,\n            // The rest should be handled together\n            ...remainingSchemaEntry\n        } = optionsSchema[key];\n\n        const annotations = {\n            ...(title !== undefined && { title }),\n            ...(description !== undefined && { description }),\n            ...(readOnly !== undefined && { readOnly }),\n            ...(writeOnly !== undefined && { writeOnly }),\n            ...(examples !== undefined && { examples }),\n            ...(defaultValue !== undefined && { default: defaultValue }),\n        };\n\n        if (type === 'object') {\n            enhancedOptionsSchema[key] = {\n                ...remainingSchemaEntry,\n                ...annotations,\n                type,\n                ...(properties && { properties: enhanceOptionsSchemaWithDynamicOptions(properties) }),\n            };\n            if (patternProperties) {\n                let enhancedPatternProperties = {};\n                Object.keys(patternProperties).forEach((key): void => {\n                    enhancedPatternProperties = {\n                        ...enhancedPatternProperties,\n                        ...enhanceOptionsSchemaWithDynamicOptions({ [key]: patternProperties[key] }),\n                    };\n                });\n                enhancedOptionsSchema[key].patternProperties = enhancedPatternProperties;\n            }\n        } else {\n            enhancedOptionsSchema[key] = {\n                ...annotations,\n                anyOf: [\n                    // we can't assume `type` is always there because there are `enum` and `const`.\n                    { ...(type !== undefined && { type }), ...remainingSchemaEntry },\n                    dynamicOptionsDSLType,\n                ],\n            };\n        }\n    });\n    return enhancedOptionsSchema;\n}\n\n/**\n * Helper function to enhance a Visualization Config as needed based on behaviors specified in supports block\n * @param vizConfig a Visualization Config\n * @returns an enhanced Visualization Config containing updated config entries based on behaviors it supports\n */\nfunction enhanceConfig(vizConfig: VizConfig): VizConfig {\n    const enhancedConfig: VizConfig = vizConfig;\n    if (vizConfig.supports.indexOf(VizBehavior.DYNAMIC_OPTIONS) !== -1) {\n        enhancedConfig.optionsSchema = enhanceOptionsSchemaWithDynamicOptions(vizConfig.optionsSchema);\n    }\n    return enhancedConfig;\n}\n\nfunction isDynamicOption(option?: string): boolean {\n    return (option && typeof option === 'string' && option.trim().startsWith('>')) || false;\n}\n\n// private helpers to improve readability of getInitialPreset\n// this shouldn't be tested since this util isn't something that we expect to use outside of getInitialPreset\n\n/**\n * this checks to make sure that all values within vizContext are compatible with the given preset's context to determine the initialPreset\n * if a preset has explicitly specified a key as being undefined, the vizContext must also has that key as undefined, or else this CANNOT be the initialPreset\n * the inverse is true; if a preset has key is NOT undefined, it must also be NOT undefined in the corresponding vizContext\n * the internal config contents are irrelevant (as the user could customize them in source), just as long as the presence of `undefined`s match up\n *\n * Since the presetConfigs have explicit undefined keys to override the existing config, we need to explicitly check the undefined values\n */\nfunction hasCompatibleContexts(\n    vizContext: { [configKey: string]: any },\n    presetContext: { [configKey: string]: any }\n): boolean {\n    const presetContextKeys = Object.keys(presetContext);\n    return presetContextKeys.every(\n        (contextKey): boolean =>\n            (presetContext[contextKey] === undefined && vizContext[contextKey] === undefined) ||\n            (presetContext[contextKey] !== undefined && vizContext[contextKey] !== undefined)\n    );\n}\n\n/**\n * Checks to make sure that dynamic (non-dynamic) options in a given preset are also dynamic (non-dynamic) in the vizOptions\n */\nfunction hasCompatibleOptions(\n    vizOptions: { [configKey: string]: any },\n    presetOptions: { [configKey: string]: any }\n): boolean {\n    const presetOptionKeys = Object.keys(presetOptions);\n    return presetOptionKeys.every(\n        (optionKey): boolean =>\n            isDynamicOption(presetOptions[optionKey]) === isDynamicOption(vizOptions[optionKey])\n    );\n}\n\n/**\n * Evaluates whether there is an initialPreset that fits the current state of vizContext + vizOptions\n * This function ignores extraneous vizOptions or vizContext keys, as they could be outside the scope of what the preset is intended to configure\n *\n * @param {Object} vizContext - the current vizContext definition\n * @param {Object} vizOptions - the current vizOptions definition\n * @param {PresetEntry[]} presets - the list of presets, one of which can be considered an initialPreset\n */\nfunction getInitialPreset(\n    vizContext: { [configKey: string]: any },\n    vizOptions: { [configKey: string]: any },\n    presets: PresetEntry[]\n): PresetEntry | null {\n    return presets.find((preset): boolean => {\n        const presetContext = get(preset, ['value', 'context'], {});\n        const presetOptions = get(preset, ['value', 'options'], {});\n        const presetContextKeys = Object.keys(presetContext);\n        const presetOptionKeys = Object.keys(presetOptions);\n\n        // all presets have to explicitly specify which options to reset (i.e. need explicitly undefined keys)\n        // if not, then the preset is invalid in config.ts\n        if (presetContextKeys.length === 0 || presetOptionKeys.length === 0) return false;\n\n        return (\n            hasCompatibleContexts(vizContext, presetContext) &&\n            hasCompatibleOptions(vizOptions, presetOptions)\n        );\n    });\n}\n\ninterface PrecisionOption {\n    label: string;\n    value: number;\n}\n\n/**\n * generates number precision values for a Select editor\n *\n * @param {Number} numPrecisionValues - number of integer precision values to generate\n * @returns {{ label: string; value; string  }[]} array of { label, value } tuples\n */\nfunction generatePrecisionValues(numPrecisionValues: number): PrecisionOption[] {\n    return range(0, numPrecisionValues + 1).map(\n        (i): PrecisionOption => ({\n            label: `${i} (0${i > 0 ? '.' : ''}${'0'.repeat(i)})`, // e.g. 0.000 for numPrecisionValues = 3\n            value: i,\n        })\n    );\n}\n\nexport {\n    enhanceConfig,\n    enhanceOptionsSchemaWithDynamicOptions,\n    isDynamicOption,\n    getInitialPreset,\n    generatePrecisionValues,\n};\n","module.exports = require(\"@splunk/visualizations-shared/Message\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@splunk/visualizations-shared/colorUtils\");","import * as React from 'react';\nimport styled from 'styled-components';\nimport SizeAwareWrapper from '@splunk/visualizations-shared/SizeAwareWrapper';\nimport { toDimension, toPx } from '@splunk/visualizations-shared/style';\nimport { isColor } from '@splunk/visualizations-shared/colorUtils';\nimport { pick } from 'lodash';\n\ninterface Props {\n    enabled?: boolean;\n    width?: number | string;\n    height?: number | string;\n}\n\ninterface ItemProps {\n    backgroundColor?: string;\n    width?: string | number;\n}\n\nconst Item = styled.div.attrs<ItemProps>(({ width }) => ({\n    style: {\n        width: toPx(width),\n    },\n}))<ItemProps>`\n    position: relative;\n    background-color: ${(props): string =>\n        (isColor(props.backgroundColor) && props.backgroundColor) || props.theme.defaultBackgroundColor}};\n`;\n\ninterface FixSizeItemProps {\n    backgroundColor?: string;\n    height?: string | number;\n    width?: string | number;\n}\n\n// Use `.attrs()` for highly dynamic styles. Ref: https://github.com/styled-components/styled-components/issues/134#issuecomment-312415291\nconst FixSizeItem = styled.div.attrs<FixSizeItemProps>(({ width, height }): {\n    style: { width?: string; height?: string };\n} => ({\n    style: {\n        ...(width && { width: toPx(width) }),\n        ...(height && { height: toPx(height) }),\n    },\n}))<FixSizeItemProps>`\n    position: relative;\n    flex-direction: column;\n    flex: 1;\n    display: flex;\n    background-color: ${(props): string =>\n        (isColor(props.backgroundColor) && props.backgroundColor) || props.theme.defaultBackgroundColor}};\n`;\n\nconst ItemContent = styled.div`\n    position: relative;\n    min-height: 100px;\n    width: 100%;\n`;\n\nconst FixSizeItemContent = styled.div`\n    min-height: 0px;\n    flex: 1;\n    position: relative;\n    box-sizing: border-box;\n`;\n\ninterface HeightAndWidthProps {\n    width?: string | number;\n    height?: string | number;\n    backgroundColor?: string;\n}\n\nconst withFixedSizeContainer = <P extends HeightAndWidthProps>(\n    Viz: React.ComponentType<P>\n): React.ComponentType<P> => {\n    const FixedSizeContainer = (props: P): React.ReactElement => {\n        const { width, height, backgroundColor } = props;\n\n        if (!height) {\n            return (\n                <Item data-test=\"item\" width={width} backgroundColor={backgroundColor}>\n                    <ItemContent>\n                        <Viz {...props} />\n                    </ItemContent>\n                </Item>\n            );\n        }\n        return (\n            <FixSizeItem\n                data-test=\"fix-size-item\"\n                width={width}\n                height={height}\n                backgroundColor={backgroundColor}\n            >\n                <FixSizeItemContent>\n                    <SizeAwareWrapper>\n                        {({ width: newWidth, height: newHeight }): React.ReactElement => (\n                            <Viz {...props} width={newWidth} height={newHeight} />\n                        )}\n                    </SizeAwareWrapper>\n                </FixSizeItemContent>\n            </FixSizeItem>\n        );\n    };\n    FixedSizeContainer.displayName = 'withFixedSizeContainer';\n    return FixedSizeContainer;\n};\n\nexport default withFixedSizeContainer;\n","module.exports = require(\"@splunk/visualizations-shared/style\");","module.exports = require(\"@splunk/visualizations-shared/schemaUtils\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@splunk/visualizations-shared/SizeAwareWrapper\");","module.exports = require(\"@splunk/themes/variables\");","module.exports = require(\"@splunk/visualizations-shared/numberUtils\");","module.exports = require(\"@splunk/themes/pick\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","import * as T from 'prop-types';\nimport { has, isFunction } from 'lodash';\nimport { DataSourceMeta, SortDirType, validSortDirs } from '../interfaces/DataSource';\n\nexport interface SortParams {\n    currentSortKey?: undefined | string;\n    currentSortDir?: undefined | SortDirType;\n    onSort?: (e: MouseEvent, { sortKey: string, sortDir: SortDirType }) => void;\n}\n\nexport const SortParamsPropTypes = T.shape({\n    currentSortKey: T.string,\n    currentSortDir: T.oneOf(validSortDirs),\n    onSort: T.func,\n});\n\nexport const getSortingParams = ({ requestParams, onRequestParamsChange }: DataSourceMeta): SortParams => {\n    let currentSortKey;\n    let currentSortDir;\n\n    const nextSortDirMap = {\n        asc: 'desc',\n        desc: 'asc',\n        none: 'asc',\n    };\n\n    let onSort;\n    if (isFunction(onRequestParamsChange)) {\n        if (requestParams && has(requestParams, 'sort')) {\n            currentSortKey = Object.keys(requestParams.sort).shift();\n            currentSortDir = requestParams.sort[currentSortKey];\n        }\n\n        // undid memoization since there is a dependency on requestParams, which is a deeply nested object\n        onSort = (e, { sortKey, sortDir }): void => {\n            if (typeof sortKey === 'string') {\n                const nextSortDir = has(nextSortDirMap, sortDir) ? nextSortDirMap[sortDir] : 'none';\n                onRequestParamsChange({\n                    ...requestParams,\n                    ...{ offset: 0, sort: { [sortKey]: nextSortDir } },\n                });\n            } else {\n                onRequestParamsChange(requestParams);\n            }\n        };\n    }\n\n    return {\n        currentSortKey,\n        currentSortDir,\n        onSort,\n    };\n};\n","import * as T from 'prop-types';\nimport { cloneDeep, isFunction, noop } from 'lodash';\nimport { DataSourceMeta, RequestParams } from '../interfaces/DataSource';\n\nexport interface OnChangeParams {\n    page?: number;\n    count?: number;\n}\nexport interface PaginatorParams {\n    isPaging?: boolean;\n    current?: number;\n    totalPages?: number;\n    onChange?: (e: MouseEvent, x: OnChangeParams) => void;\n}\n\nexport const PaginatorParamsPropTypes = T.shape({\n    isPaging: T.bool,\n    current: T.number,\n    totalPages: T.number,\n    onChange: T.func,\n});\n\nexport const getPaginationParams = ({\n    requestParams,\n    meta,\n    onRequestParamsChange,\n}: DataSourceMeta): PaginatorParams => {\n    const totalCount = (meta && meta.totalCount) || 0;\n    const offset = (requestParams && requestParams.offset) || 0;\n    const count = requestParams && requestParams.count;\n    const totalPages = typeof count === 'number' && count > 0 ? Math.ceil(totalCount / count) : 0;\n    const current = typeof count === 'number' && count > 0 ? Math.floor(offset / count) + 1 : 0;\n    const isPaging = totalPages > 1 && isFunction(onRequestParamsChange);\n\n    const onChangeHandler = (e, { page, count: countArg }: OnChangeParams): void => {\n        const newParams: RequestParams = cloneDeep(requestParams);\n\n        if (typeof countArg === 'number') {\n            newParams.count = countArg;\n            newParams.offset = 0;\n        }\n\n        const pageCount = typeof newParams.count === 'number' ? newParams.count : 10;\n        if (typeof page === 'number' && page > 0) {\n            newParams.count = pageCount;\n            newParams.offset = (page - 1) * pageCount;\n        }\n\n        onRequestParamsChange(newParams);\n    };\n\n    return {\n        isPaging,\n        current,\n        totalPages,\n        onChange: isFunction(onRequestParamsChange) ? onChangeHandler : noop,\n    };\n};\n","import * as React from 'react';\nimport * as T from 'prop-types';\nimport { get } from 'lodash';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport Message from '@splunk/visualizations-shared/Message';\nimport { DataSource } from '../interfaces/DataSource';\nimport withFixedSizeContainer from '../hocs/FixedSizeContainer';\n\n/**\n * @method shouldShowIconPlaceholder\n * @param {object} dataSources\n * @param {boolean} loading\n * @returns {boolean}\n */\nexport const shouldShowIconPlaceholder = (\n    dataSources: { [name: string]: DataSource },\n    loading = false\n): boolean => {\n    const data = get(dataSources, 'primary.data.columns[0]', undefined);\n    const noData = data === undefined;\n    const fields = get(dataSources, 'primary.data.fields[0]', undefined);\n    const noFields = fields === undefined;\n    return loading || noData || noFields;\n};\n\nexport interface IconPlaceholderProps {\n    icon?: React.ComponentClass<any>;\n    width?: string | number;\n    height?: string | number;\n    backgroundColor?: string;\n}\n\nconst propTypes: Record<keyof IconPlaceholderProps, T.Validator<any>> = {\n    icon: T.func,\n    width: T.oneOfType([T.string, T.number]),\n    height: T.oneOfType([T.string, T.number]),\n    backgroundColor: T.string,\n};\n\n/**\n * @method IconPlaceholder\n * @param {IconPlaceholderProps} props\n * @returns {React.ReactElement}\n */\nconst IconPlaceholder = (props: IconPlaceholderProps): React.ReactElement => {\n    const { width, height, icon } = props;\n    if (icon) {\n        return React.createElement(icon, {\n            style: {\n                left: '50%',\n                top: '50%',\n                color: 'grey',\n                position: 'absolute',\n                transform: 'translate(-50%, -50%)',\n            },\n            width: '50%',\n            height: '50%',\n        });\n    }\n\n    return <Message width={width} height={height} level=\"warning\" message={_('No DataSource Connected')} />;\n};\n\nIconPlaceholder.propTypes = propTypes;\nIconPlaceholder.defaultProps = {\n    width: '100%',\n    height: 250,\n};\n\nexport default withFixedSizeContainer(IconPlaceholder);\n","export enum VizCategory {\n    SINGLE_VALUE = 'Single Value',\n    TRENDS = 'Trends',\n    COMPARISONS = 'Comparisons',\n    TABLE = 'Table',\n    GAUGE = 'Gauge',\n    DISTRIBUTIONS = 'Distributions',\n    CHOROPLETH = 'Choropleth Maps',\n    SHAPES = 'Shapes',\n    MISC = 'misc',\n    FLOW = 'Flow',\n    CORRELATION = 'Correlation',\n    SPATIAL = 'Spatial',\n}\n","import * as React from 'react';\nimport { camelCase, has, get, defaultsDeep } from 'lodash';\nimport getSettingsFromThemedProps from '@splunk/themes/getSettingsFromThemedProps';\nimport { Options as Opts } from '@splunk/visualization-encoding/Options';\nimport { withSanitizedProps } from '@splunk/visualizations-shared/SanitizeProps';\n\nimport { withTheme } from 'styled-components';\nimport SplunkVisualization from './SplunkVisualization';\nimport { DashboardVizProps } from './interfaces/DashboardVizProps';\nimport { VizConfig } from './interfaces/VizConfig';\nimport { VizProps } from './interfaces/VizProps';\nimport { VizBehavior } from './interfaces/VizBehavior';\nimport { DataSource } from './interfaces/DataSource';\nimport { getSortingParams } from './hooks/getSorting';\nimport { getPaginationParams } from './hooks/getPagination';\nimport { useDeepMemo } from './hooks/useDeepMemo';\nimport { pickFieldFromJSONSchema } from './utils/JSONSchemaUtils';\nimport MissingPropsMessage, { missingKeys } from './components/MissingPropsMessage';\nimport withEditModeCover from './hocs/withEditModeCover';\nimport withPlaceholder from './hocs/withPlaceholder';\nimport { ChartingProps } from './Charting';\nimport { deepMergeWithArrayOverrides } from './utils/hocUtils';\n\ntype HOC = (props: DashboardVizProps) => React.ReactElement<DashboardVizProps>;\nexport interface DashboardVizOpts {\n    ReactViz: React.ComponentType<ChartingProps | VizProps>; // we will wrap this in DashboardViz (see const DashboardViz = ...)\n    vizConfig: VizConfig;\n    computeVizProps?: (props) => any;\n    useIconPlaceholder?: (\n        dataSources: { [name: string]: DataSource },\n        loading: boolean,\n        options: Record<string, unknown>\n    ) => boolean;\n}\n\n/**\n * hoc that wraps a pure react visualization in a Dashboard visualization\n * @param {DashboardVizOpts} opts\n * @returns {HOC}\n */\nconst withDashboardViz = (opts: DashboardVizOpts): HOC => {\n    const { ReactViz, vizConfig, computeVizProps = () => {}, useIconPlaceholder } = opts;\n\n    // sanitizing props before sending them to reactviz.\n    const SanitizedReactViz = withSanitizedProps(ReactViz);\n    const defaultOptions = pickFieldFromJSONSchema(vizConfig.optionsSchema, 'default');\n\n    const DashboardViz = (props: DashboardVizProps): React.ReactElement<DashboardVizProps> => {\n        const {\n            mode,\n            hasEventHandlers,\n            dataSources, // type of { [key: string]: DataSource }\n            options,\n            context = {},\n            width,\n            height,\n            onComputedProps,\n            onEventTrigger,\n            theme,\n            onRequestParamsChange,\n        } = props;\n\n        const themeFunc = themeVar => vizConfig.themes[themeVar]?.(props);\n        const bgColorFromTheme = themeFunc('defaultBackgroundColor');\n        const {\n            family: currentThemeFamily,\n            colorScheme: currentThemeColorScheme,\n            density: currentThemeDensity,\n        } = getSettingsFromThemedProps({ theme });\n\n        let evaluatedOptions: Opts = {}; // evaluatedOptions need to be initialized as an empty object\n        evaluatedOptions = useDeepMemo((): Record<string, unknown> => {\n            try {\n                return Opts.evaluate(\n                    {\n                        context: defaultsDeep({}, context, vizConfig.defaultContext),\n                        options: deepMergeWithArrayOverrides({}, options, defaultOptions),\n                    },\n                    dataSources,\n                    themeFunc\n                );\n            } catch (e) {\n                console.error(`unexpected error evaluating options:  + ${e.message}`);\n                return {};\n            }\n        }, [currentThemeFamily, currentThemeColorScheme, currentThemeDensity, options, context, dataSources]);\n\n        // useEffect hook needs to be initialized before any early returns\n        // this is in accordance with the order of hook calls being the same on each render https://reactjs.org/docs/hooks-rules.html#explanation\n        React.useEffect((): void => {\n            onComputedProps(evaluatedOptions);\n        });\n\n        // present warning message if any required props are missing\n        const { requiredProps = [], supports } = vizConfig;\n        const missing = missingKeys(requiredProps, evaluatedOptions);\n        if (missing.length > 0 && supports.includes(VizBehavior.PLACEHOLDER)) {\n            return (\n                <MissingPropsMessage\n                    data-test=\"missing-props-message\"\n                    width={width}\n                    height={height}\n                    missingProps={missing}\n                    backgroundColor={bgColorFromTheme}\n                />\n            );\n        }\n\n        // events\n        const eventCallbackProps = {};\n        if (hasEventHandlers && mode === 'view' && vizConfig.supports.indexOf(VizBehavior.EVENTS) > -1) {\n            const supportedEvents = vizConfig.events;\n            Object.keys(supportedEvents).forEach((eventName): void => {\n                const eventCallbackPropName = camelCase(`on.${eventName}`);\n                eventCallbackProps[eventCallbackPropName] = null;\n                // todo: refactor single value and single value icon to send payload from viz\n                // then remove these lines\n                const { payloadKeys } = supportedEvents[eventName];\n                let payload = {};\n                if (Array.isArray(payloadKeys) && payloadKeys.length) {\n                    payloadKeys.forEach(p => (payload[p] = evaluatedOptions[p]));\n                }\n\n                eventCallbackProps[eventCallbackPropName] = (ev): Record<string, unknown> => {\n                    if (ev && ev.payload) {\n                        payload = ev.payload;\n                    }\n\n                    return onEventTrigger({ originalEvent: ev, payload, type: eventName });\n                };\n            });\n        }\n        // compute pure viz props which are not from options\n        const computedVizProps = computeVizProps({\n            ...props,\n            ...evaluatedOptions,\n            ...eventCallbackProps,\n            themeFunc,\n        });\n\n        /**\n         * PAGE_AND_SORT behavior\n         *\n         * Some visualizations, like table, requires metadata about the datasource,\n         * like total number of results, current count, offset, and sort, for rendering\n         * paginator and sorting direction. In this approach, the visualization\n         * allow users to set 'paginateDataSourceKey' to select which datasource\n         * should the visualization extract the metadata from. It defaults to 'primary' datasource.\n         * The visualization config should set the PAGE_AND_SORT behavior to receive\n         * 'requestParams', 'meta' and onRequestParams callback as props.\n         *\n         * In future, we could automatically detect which all datasources are being used\n         * and bind those magically to pagination/sorting behavior.\n         */\n        let dataSourceMetadata = {};\n        const OptionKey = 'paginateDataSourceKey';\n        const paginateDataSourceKey =\n            (has(evaluatedOptions, OptionKey) && evaluatedOptions[OptionKey]) || 'primary';\n        if (\n            vizConfig.supports.indexOf(VizBehavior.PAGE_AND_SORT) > -1 &&\n            has(dataSources, paginateDataSourceKey)\n        ) {\n            const requestParams = get(dataSources, [paginateDataSourceKey, 'requestParams'], {});\n            const meta = get(dataSources, [paginateDataSourceKey, 'meta'], {});\n            const handleRequestParamsChange = (payload: Record<string, unknown>): void =>\n                onRequestParamsChange(paginateDataSourceKey, payload);\n\n            const sortParams = getSortingParams({\n                requestParams,\n                meta,\n                onRequestParamsChange: handleRequestParamsChange,\n            });\n\n            const paginatorParams = getPaginationParams({\n                requestParams,\n                meta,\n                onRequestParamsChange: handleRequestParamsChange,\n            });\n\n            dataSourceMetadata = {\n                sortParams,\n                paginatorParams,\n            };\n        }\n\n        return (\n            <SanitizedReactViz\n                mode={mode}\n                width={width}\n                height={height}\n                {...evaluatedOptions}\n                {...computedVizProps}\n                {...eventCallbackProps}\n                {...dataSourceMetadata}\n            />\n        );\n    };\n\n    DashboardViz.propTypes = {\n        ...SplunkVisualization.propTypes,\n        ...ReactViz.propTypes,\n    };\n\n    DashboardViz.defaultProps = {\n        ...SplunkVisualization.defaultProps,\n        ...ReactViz.defaultProps,\n        // using withTheme requires component to receive theme prop. In case the consumer did not provide ThemeProvider, a default empty object will prevent warnings.\n        theme: {},\n    };\n    // attach viz config\n    DashboardViz.config = vizConfig;\n\n    // @ts-ignore: TODO fix sc upgrade TS issues\n    return withTheme(withPlaceholder(withEditModeCover(DashboardViz), useIconPlaceholder));\n};\n\nexport default withDashboardViz;\n","module.exports = require(\"@splunk/themes/getSettingsFromThemedProps\");","module.exports = require(\"@splunk/visualization-encoding/Options\");","module.exports = require(\"@splunk/visualizations-shared/SanitizeProps\");","/* eslint-disable react/no-unused-prop-types,react/prefer-stateless-function */\nimport * as T from 'prop-types';\nimport { noop } from 'lodash';\nimport { DashboardVizProps } from './interfaces/DashboardVizProps';\nimport { DefaultVizActionHandler } from './interfaces/VizActionHandler';\n\n// this is identical to the initial height and width we use in BaseVisualization in dashboard-visualizations\nexport const INITIAL_WIDTH = 250;\nexport const INITIAL_HEIGHT = 250;\n\n/**\n * A Splunk visualization\n */\nclass SplunkVisualization {\n    static propTypes: Record<keyof DashboardVizProps, T.Validator<any>> = {\n        /**\n         * display mode\n         */\n        mode: T.oneOf(['view', 'edit', 'export']).isRequired,\n        /**\n         * width in pixel or string, defaults to 100%\n         */\n        width: T.oneOfType([T.string, T.number]).isRequired,\n        /**\n         * height in pixel or string\n         */\n        height: T.oneOfType([T.string, T.number]).isRequired,\n        /**\n         * visualization context used for dynamic option evaluation\n         */\n        context: T.object,\n        /**\n         * visualization formatting options\n         */\n        options: T.object,\n        /**\n         * A callback to update formatting options\n         */\n        onOptionsChange: T.func,\n        /**\n         * datasource state which include data and request params, object key indicate the datasource type.\n         */\n        dataSources: T.objectOf(\n            T.shape({\n                /**\n                 * current request params\n                 */\n                requestParams: T.object,\n                /**\n                 * current dataset\n                 */\n                data: T.shape({\n                    fields: T.array,\n                    columns: T.array,\n                }),\n                /**\n                 * error\n                 */\n                error: T.shape({\n                    level: T.string,\n                    message: T.string,\n                }),\n                /**\n                 * meta data that came with the dataset\n                 */\n                meta: T.object,\n            })\n        ),\n        /**\n         * A callback to trigger event\n         */\n        onEventTrigger: T.func,\n        /**\n         * Inform viz if there are handlers listening to events\n         */\n        hasEventHandlers: T.bool,\n        /**\n         * A callback to communicate computed props to a consumer\n         */\n        onComputedProps: T.func,\n        /**\n         * A callback to obtain visualization api\n         */\n        vizActionHandlerRef: T.func,\n\n        loading: T.bool,\n        theme: T.object,\n        /**\n         * A callback to request new data with updated request params\n         */\n        onRequestParamsChange: T.func,\n    };\n    /**\n     *\n     */\n    static defaultProps: DashboardVizProps = {\n        // BaseVisualization in dashboard-visualizations uses 100% for width but 250 for height\n        width: '100%',\n        height: INITIAL_HEIGHT,\n        dataSources: {},\n        onEventTrigger: (): Record<string, unknown> => ({}),\n        mode: 'view',\n        hasEventHandlers: false,\n        options: {},\n        context: {},\n        onOptionsChange: (): Record<string, unknown> => ({}),\n        vizActionHandlerRef: (): DefaultVizActionHandler => new DefaultVizActionHandler(),\n        onComputedProps: (): Record<string, unknown> => ({}),\n        loading: false,\n        onRequestParamsChange: noop,\n    };\n}\n\nexport default SplunkVisualization;\n","export interface VizActionHandler {\n    /**\n     * put focus on the visualization\n     */\n    focus(): void;\n\n    /**\n     * compute snapshot of this visualization\n     */\n    snapshot(): Record<string, unknown>; //(This is for pdf export)\n}\n\nexport class DefaultVizActionHandler {\n    focus(): void {\n        //noop\n    }\n\n    snapshot(): Record<string, unknown> {\n        return null; //noop\n    }\n}\n","/**\n * represents the data in a raw columnar format, resulting from a splunk\n * query request.\n */\ninterface FieldEntry {\n    name: string;\n}\n\nexport interface JsonColumnData {\n    fields: FieldEntry[] | string[];\n    columns: string[][];\n}\nexport interface Meta {\n    totalCount: number;\n}\n\nexport const validSortDirs = ['asc', 'desc', 'none'] as const;\nexport type SortDirType = typeof validSortDirs[number];\n\nexport interface RequestParams {\n    count?: number;\n    offset?: number;\n    sort?: {\n        [sortKey: string]: SortDirType;\n    };\n}\n\nexport interface DataSource {\n    requestParams: Partial<RequestParams>;\n    onRequestParamsChange?: (p: Record<string, unknown>) => void;\n    data: JsonColumnData;\n    error?: { level: string; message: string };\n    meta: Partial<Meta>;\n}\n\nexport interface DataSourceMeta {\n    requestParams: Partial<RequestParams>;\n    meta: Partial<Meta>;\n    onRequestParamsChange: (payload: RequestParams) => void;\n}\n","import { useRef } from 'react';\nimport { isEqual } from 'lodash';\n\n/**\n * This hook evaluates and stores the result of a passed function and only\n * re-evaluates the function when passed dependencies change.\n *\n * It is different from the internal React useMemo in the following aspects:\n * - it only stores the last evaluated result\n * - it uses a deep equality check to determine if dependencies have changed\n *\n * Inspired by apollo-client's useDeepMemo\n *\n * @param fn the function to be executed and\n * @param dependencies an array of dependencies\n */\nexport const useDeepMemo = <FnReturnType, DepType>(\n    fn: () => FnReturnType,\n    dependencies: DepType\n): FnReturnType => {\n    const ref = useRef<{ dependencies: DepType; value: FnReturnType }>();\n    if (!ref.current || !isEqual(dependencies, ref.current.dependencies)) {\n        ref.current = {\n            dependencies,\n            value: fn(),\n        };\n    }\n    return ref.current.value;\n};\n","import type { JSONSchema7Definition } from 'json-schema';\nimport { has, isEmpty, get } from 'lodash';\nimport { KV } from '../interfaces/Object';\nimport { OptionsSchema } from '../interfaces/OptionsSchema';\n\nexport const pickFieldFromJSONSchema = (\n    optionsSchema: OptionsSchema | JSONSchema7Definition,\n    fieldName = 'default'\n): KV =>\n    Object.keys(optionsSchema).reduce((accum: Record<string, unknown>, k): Record<string, unknown> => {\n        if (has(optionsSchema[k], fieldName)) {\n            accum[k] = optionsSchema[k][fieldName];\n        } else if (get(optionsSchema, [k, 'type']) === 'object' && has(optionsSchema[k], 'properties')) {\n            const nestedSchema = pickFieldFromJSONSchema(optionsSchema[k].properties, fieldName);\n            if (!isEmpty(nestedSchema)) {\n                accum[k] = nestedSchema;\n            }\n        }\n        return accum;\n    }, {});\n","import * as React from 'react';\nimport * as T from 'prop-types';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport Message from '@splunk/visualizations-shared/Message';\nimport withFixedSizeContainer from '../hocs/FixedSizeContainer';\n\n/**\n * @method isMissing\n * @param {any} v\n * @returns {boolean} true if the input value === null or undefined\n */\nexport const isMissing = (v): boolean => {\n    return v === null || v === undefined;\n};\n\n/**\n * @method misskingKeys\n * @param {string[]} keys\n * @param {object} target\n * @returns {string[]} the keys of missing required props\n */\nexport const missingKeys = (keys: string[], target: Record<string, unknown>): string[] =>\n    keys.filter(k => isMissing(target[k]));\n\nexport interface MissingPropsProps {\n    width?: string | number;\n    height?: string | number;\n    missingProps: string[];\n    backgroundColor?: string;\n}\n\nconst propTypes: Record<keyof MissingPropsProps, T.Validator<any>> = {\n    width: T.oneOfType([T.string, T.number]),\n    height: T.oneOfType([T.string, T.number]),\n    backgroundColor: T.string,\n    missingProps: T.arrayOf(T.string),\n};\n\n/**\n * @method MissingPropsMessage\n * @param {MissingPropsProps} props\n * @returns {React.ReactElement}\n */\nexport const MissingPropsMessage = (props: MissingPropsProps): React.ReactElement => {\n    const { width, height, missingProps } = props;\n    return (\n        <Message\n            data-test=\"message\"\n            width={width}\n            height={height}\n            message={_(`Missing property: ${missingProps.join(', ')}`)}\n        />\n    );\n};\n\nMissingPropsMessage.propTypes = propTypes;\nMissingPropsMessage.defaultProps = {\n    width: '100%',\n    height: 250,\n};\nexport default withFixedSizeContainer(MissingPropsMessage);\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { DashboardVizProps } from '../interfaces/DashboardVizProps';\nimport { ExtendedDashViz } from '../interfaces/ExtendedDashViz';\nimport { extendStaticWrapperProps } from '../utils/hocUtils';\n\nconst Cover = styled.div`\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n`;\n\nconst Blocker = styled.div`\n    position: relative;\n    width: 100%;\n    height: 100%;\n`;\n\n/**\n * HOC that renders a cover layer in edit mode\n * @method withEditModeCover\n * @param {ExtendedDashViz} Visualization\n * @returns {ExtendedDashViz} Wrapper\n */\nconst withEditModeCover = (Visualization: ExtendedDashViz): ExtendedDashViz => {\n    const Wrapper = (props: DashboardVizProps): React.ReactElement<DashboardVizProps> => {\n        const { mode } = props;\n        return (\n            <Blocker>\n                <Visualization {...props} />\n                {mode === 'edit' && <Cover data-test=\"edit-mode-cover\" />}\n            </Blocker>\n        );\n    };\n    extendStaticWrapperProps({ Wrapper, Visualization });\n    return Wrapper as ExtendedDashViz;\n};\n\nexport default withEditModeCover;\n","import * as React from 'react';\nimport { isColor } from '@splunk/visualizations-shared/colorUtils';\nimport IconPlaceholder, { shouldShowIconPlaceholder } from '../components/IconPlaceholder';\nimport { VizBehavior } from '../interfaces/VizBehavior';\nimport { DashboardVizProps } from '../interfaces/DashboardVizProps';\nimport { DataSource } from '../interfaces/DataSource';\nimport { ExtendedDashViz } from '../interfaces/ExtendedDashViz';\nimport { extendStaticWrapperProps } from '../utils/hocUtils';\n\ntype useIconPlaceholder = (\n    dataSources: { [name: string]: DataSource },\n    loading: boolean,\n    options: Record<string, unknown>\n) => boolean;\n\nconst withPlaceholder = (\n    Visualization: ExtendedDashViz,\n    useIconPlaceholder: useIconPlaceholder = shouldShowIconPlaceholder\n): ExtendedDashViz => {\n    const { config } = Visualization;\n    const { themes } = config;\n\n    const Wrapper = (props: DashboardVizProps): React.ReactElement<DashboardVizProps> => {\n        const { dataSources, loading, options, height, width } = props;\n\n        const showPlaceholder = useIconPlaceholder(dataSources, loading, options);\n        const bgColorFromTheme = isColor(options?.backgroundColor)\n            ? options?.backgroundColor\n            : themes?.defaultBackgroundColor?.(props);\n\n        if (config.supports.includes(VizBehavior.PLACEHOLDER) && showPlaceholder) {\n            return (\n                <IconPlaceholder\n                    data-test=\"icon-placeholder\"\n                    icon={config.icon}\n                    width={width}\n                    height={height}\n                    backgroundColor={bgColorFromTheme}\n                />\n            );\n        }\n\n        return <Visualization {...props} />;\n    };\n    extendStaticWrapperProps({ Wrapper, Visualization });\n    return Wrapper as ExtendedDashViz;\n};\n\nexport default withPlaceholder;\n","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"@splunk/visualizations-shared/colorConstants\");","module.exports = require(\"@babel/runtime/helpers/extends\");","import { _ } from '@splunk/ui-utils/i18n';\nimport { EditorLayoutConfig } from '../interfaces/Editor';\nimport { ThemedDefaults } from '../interfaces/ThemedDefaults';\n\ninterface backgroundEditorProps {\n    label?: string;\n    themes: ThemedDefaults;\n    labelPosition?: string;\n}\n\nconst background: ({ label, themes, labelPosition }: backgroundEditorProps) => EditorLayoutConfig[] = ({\n    label,\n    themes,\n    labelPosition,\n}) => [\n    {\n        label: _(label || 'Background'),\n        option: 'backgroundColor',\n        editor: 'editor.color',\n        editorProps: {\n            labelPosition: labelPosition || 'top',\n            themes,\n        },\n    },\n];\n\nexport default background;\n","module.exports = require(\"@splunk/visualization-color-palettes/editors/PresetPalettes\");","import { chain, mapKeys, omit, uniqBy } from 'lodash';\nimport {\n    SEMANTIC_SUCCESS,\n    SEMANTIC_WARNING,\n    SEMANTIC_ERROR,\n} from '@splunk/visualizations-shared/colorConstants';\nimport { _ } from '@splunk/ui-utils/i18n';\n\nexport const GAUGE_THICKNESS = 50;\nexport const FILL_THICKNESS = 38;\nconst GRADIENT_STOP_OFFSET_MIN = 0;\nconst GRADIENT_STOP_OFFSET_MAX = 100;\n\n/**\n * get width for the whole gauge viz for horizontal or vertical view\n * @method getGaugeWidth\n * @param {Object} input\n * @param {Number} containerWidth\n * @param {String} orientation\n * @return {Number} width\n */\nexport const getGaugeWidth = ({ containerWidth, orientation }) =>\n    orientation === 'vertical' ? GAUGE_THICKNESS : containerWidth * 0.8;\n\n/**\n * get height for the whole gauge viz for horizontal or vertical view\n * @method getGaugeHeight\n * @param {Object} input\n * @param {Number} containerHeight\n * @param {String} orientation\n * @return {Number} height\n */\nexport const getGaugeHeight = ({ containerHeight, orientation }) =>\n    orientation === 'vertical' ? containerHeight * 0.8 : GAUGE_THICKNESS;\n\n/**\n * get how long the gauge shoud be.\n * In horizontal view, gauge length equals to gauge width. In vertical view, it equals to gauge height.\n * @method getGaugeLength\n * @param {Object} input\n * @param {Number} input.containerWidth\n * @param {Number} input.containerHeight\n * @param {String} input.orientation\n * @return {Number} gaugeLength\n */\nexport const getGaugeLength = ({ containerWidth, containerHeight, orientation }) =>\n    orientation === 'vertical'\n        ? getGaugeHeight({ containerHeight, orientation })\n        : getGaugeWidth({ containerWidth, orientation });\n\n/**\n * get start x and y for rendering gauge\n * @method getGaugeStartPosition\n * @param {Object} input\n * @param {Number} containerWidth\n * @param {Number} containerHeight\n * @param {Number} gaugeLength\n * @param {String} orientation\n * @return {Object} position\n * @return {Number} position.gaugeStartX\n * @return {Number} position.gaugeStartY\n */\nexport const getGaugeStartPosition = ({ containerWidth, containerHeight, gaugeLength, orientation }) => {\n    // for horizontal view\n    let gaugeStartX = (containerWidth - gaugeLength) / 2.0;\n    let gaugeStartY = (containerHeight - GAUGE_THICKNESS) / 2.0;\n\n    if (orientation === 'vertical') {\n        gaugeStartX = (containerWidth - GAUGE_THICKNESS) / 2.0;\n        gaugeStartY = (containerHeight - gaugeLength) / 2.0;\n    }\n\n    return { gaugeStartX, gaugeStartY };\n};\n\n/**\n * get dimensions for the whole gauge viz,\n * which can be useful to calculate background bar and major ticks positions.\n * @method getGaugeDimensions\n * @param {Object} input\n * @param {Number} input.containerWidth\n * @param {Number} input.containerHeight\n * @param {String} input.orientation  'horizontal' or 'vertical'\n * @return {Object} gaugeDimensions\n * @return {Number} gaugeDimensions.gaugeLength  how long the gauge shoud be in horizontal or vertical orientation.\n * @return {Number} gaugeDimensions.gaugeStartX  start x to render gauge\n * @return {Number} gaugeDimensions.gaugeStartY  start y to render gauge\n * @return {Number} gaugeDimensions.gaugeWidth   natural width of gauge\n * @return {Number} gaugeDimensions.gaugeHeight  natural height of gauge\n */\nexport const getGaugeDimensions = ({ containerWidth, containerHeight, orientation }) => {\n    const gaugeLength = getGaugeLength({ containerWidth, containerHeight, orientation });\n    const { gaugeStartX, gaugeStartY } = getGaugeStartPosition({\n        containerWidth,\n        containerHeight,\n        gaugeLength,\n        orientation,\n    });\n    const gaugeWidth = getGaugeWidth({ containerWidth, orientation });\n    const gaugeHeight = getGaugeHeight({ containerHeight, orientation });\n\n    return {\n        gaugeLength,\n        gaugeStartX,\n        gaugeStartY,\n        gaugeWidth,\n        gaugeHeight,\n    };\n};\n\n/**\n * if gaugeColor is not specified, auto assign a gauge color to the fill bar\n * based on how much percentage the value is taken between min and max\n * @method assignGaugeColor\n * @params\n * */\nexport const assignGaugeColor = ({ value, min, max }) => {\n    const rate = (value - min) / (max - min);\n\n    if (rate <= 0.3) {\n        return SEMANTIC_SUCCESS;\n    }\n    if (rate > 0.3 && rate <= 0.6) {\n        return SEMANTIC_WARNING;\n    }\n\n    return SEMANTIC_ERROR;\n};\n\n/**\n * get inner bar length in gauge\n * @method getGaugeBarLength\n * @param {Object} input\n * @param {Number} input.gaugeLength\n * @param {Number} input.value\n * @param {Number} input.min\n * @param {Number} input.max\n * @return {Number} gaugeBarLength\n */\nexport const getGaugeBarLength = ({ gaugeLength, value, min, max }) => {\n    if (max < min) {\n        return null;\n    }\n\n    if (value >= max) {\n        return gaugeLength;\n    }\n\n    if (value < min) {\n        return 0;\n    }\n\n    return (gaugeLength * (value - min)) / (max - min);\n};\n\n/**\n * get x and y position for rendering inner bar in gauge\n * @method getGaugeBarStartPositions\n * @param {Object} input\n * @param {Number} input.gaugeStartX\n * @param {Number} input.gaugeStartY\n * @param {Number} input.gaugeWidth\n * @param {Number} input.gaugeHeight\n * @param {Number} input.gaugeBarLength\n * @param {String} input.orientation\n * @return {Object} position\n * @return {Number} position.gaugeBarX\n * @return {Number} position.gaugeBarY\n */\nexport const getGaugeBarStartPositions = ({\n    gaugeStartX,\n    gaugeStartY,\n    gaugeWidth,\n    gaugeHeight,\n    gaugeBarLength,\n    orientation,\n}) => {\n    let gaugeBarX = gaugeStartX;\n    let gaugeBarY = gaugeStartY;\n\n    if (orientation === 'vertical') {\n        gaugeBarX += (gaugeWidth - FILL_THICKNESS) / 2;\n        gaugeBarY += gaugeHeight - gaugeBarLength;\n    } else {\n        gaugeBarY += (gaugeHeight - FILL_THICKNESS) / 2;\n    }\n\n    return {\n        gaugeBarX,\n        gaugeBarY,\n    };\n};\n\n/**\n * get width of inner bar in gauge\n * @method getGaugeBarWidth\n * @param {Object} input\n * @param {Number} input.gaugeBarLength\n * @param {String} orientation\n * @return {Number} gaugeBarWidth\n */\nexport const getGaugeBarWidth = ({ gaugeBarLength, orientation }) =>\n    orientation === 'vertical' ? FILL_THICKNESS : gaugeBarLength;\n\n/**\n * get height of inner bar in gauge\n * @method getGaugeBarWidth\n * @param {Object} input\n * @param {Number} input.gaugeBarLength\n * @param {String} orientation\n * @return {Number} gaugeBarHeight\n */\nexport const getGaugeBarHeight = ({ gaugeBarLength, orientation }) =>\n    orientation === 'vertical' ? gaugeBarLength : FILL_THICKNESS;\n\n/**\n * get dimensions for the fill bar in the gauge\n * @method getFillBarDimensions\n * @param {Object} input\n * @param {Number} input.gaugeLength\n * @param {Number} input.gaugeStartX\n * @param {Number} input.gaugeStartY\n * @param {Number} input.gaugeWidth,\n * @param {Number} input.gaugeHeight,\n * @param {Number} input.value,\n * @param {Number} input.min,\n * @param {Number} input.max,\n * @param {String} input.orientation\n * @return {Object} fillBarDimensions\n * @return {Number} fillBarDimensions.fillBarLength\n * @return {Number} fillBarDimensions.fillBarX\n * @return {Number} fillBarDimensions.fillBarY\n * @return {Number} fillBarDimensions.fillBarWidth\n * @return {Number} fillBarDimensions.fillBarHeight\n */\nexport const getFillBarDimensions = ({\n    gaugeLength,\n    gaugeStartX,\n    gaugeStartY,\n    gaugeWidth,\n    gaugeHeight,\n    value,\n    min,\n    max,\n    orientation,\n}) => {\n    const gaugeBarLength = getGaugeBarLength({ gaugeLength, value, max, min });\n    const { gaugeBarX: fillBarX, gaugeBarY: fillBarY } = getGaugeBarStartPositions({\n        gaugeStartX,\n        gaugeStartY,\n        gaugeWidth,\n        gaugeHeight,\n        gaugeBarLength,\n        orientation,\n    });\n    const fillBarWidth = getGaugeBarWidth({ gaugeBarLength, orientation });\n    const fillBarHeight = getGaugeBarHeight({ gaugeBarLength, orientation });\n\n    return {\n        fillBarLength: gaugeBarLength,\n        fillBarX,\n        fillBarY,\n        fillBarWidth,\n        fillBarHeight,\n    };\n};\n\n/**\n * get position x and y for value marker in filler gauge\n * @method getFillerGaugeValueMarkerPositions\n * @param {Object} input\n * @param {Number} input.fillBarX\n * @param {Number} input.fillBarY\n * @param {Number} input.fillBarLength\n * @param {String} input.orientation\n * @return {Object} position\n * @return {Number} position.valueMarkerX\n * @return {Number} position.valueMarkerY\n */\nexport const getFillerGaugeValueMarkerPositions = ({ fillBarX, fillBarY, fillBarLength, orientation }) => {\n    let valueMarkerX = fillBarX;\n    let valueMarkerY = fillBarY;\n\n    if (orientation === 'vertical') {\n        valueMarkerX -= (GAUGE_THICKNESS - FILL_THICKNESS) / 4;\n    } else {\n        valueMarkerX += fillBarLength;\n        valueMarkerY -= (GAUGE_THICKNESS - FILL_THICKNESS) / 4;\n    }\n\n    return {\n        valueMarkerX,\n        valueMarkerY,\n    };\n};\n\n/**\n * get dimensions for the marker bar in the gauge\n * @method getMarkerBarDimensions\n * @param {Object} input\n * @param {Number} input.gaugeLength\n * @param {Number} input.gaugeStartX\n * @param {Number} input.gaugeStartY\n * @param {Number} input.gaugeWidth,\n * @param {Number} input.gaugeHeight,\n * @param {String} input.orientation\n * @return {Object} markerBarDimensions\n * @return {Number} markerBarDimensions.markerBarLength\n * @return {Number} markerBarDimensions.markerBarX\n * @return {Number} markerBarDimensions.markerBarY\n * @return {Number} markerBarDimensions.markerBarWidth\n * @return {Number} markerBarDimensions.markerBarHeight\n */\nexport const getMarkerBarDimensions = ({\n    gaugeLength,\n    gaugeStartX,\n    gaugeStartY,\n    gaugeWidth,\n    gaugeHeight,\n    orientation,\n}) => {\n    const gaugeBarLength = gaugeLength; // For marker gauge, inner marker bar spans the entire gauge\n    const { gaugeBarX: markerBarX, gaugeBarY: markerBarY } = getGaugeBarStartPositions({\n        gaugeStartX,\n        gaugeStartY,\n        gaugeWidth,\n        gaugeHeight,\n        gaugeBarLength,\n        orientation,\n    });\n    const markerBarWidth = getGaugeBarWidth({ gaugeBarLength, orientation });\n    const markerBarHeight = getGaugeBarHeight({ gaugeBarLength, orientation });\n\n    return {\n        markerBarLength: gaugeBarLength,\n        markerBarX,\n        markerBarY,\n        markerBarWidth,\n        markerBarHeight,\n    };\n};\n\n/**\n * get position x and y for value marker in marker gauge\n * @method getMarkerGaugeValueMarkerPositions\n * @param {Object} input\n * @param {Number} input.markerBarX\n * @param {Number} input.markerBarY\n * @param {Number} input.markerBarHeight\n * @param {Number} input.markerBarLength\n * @param {Number} input.value\n * @param {Number} input.min\n * @param {Number} input.max\n * @param {String} input.orientation\n * @return {Object} position\n * @return {Number} position.valueMarkerX\n * @return {Number} position.valueMarkerY\n */\nexport const getMarkerGaugeValueMarkerPositions = ({\n    markerBarX,\n    markerBarY,\n    markerBarHeight,\n    markerBarLength: gaugeLength,\n    orientation,\n    value,\n    min,\n    max,\n}) => {\n    let valueMarkerX = markerBarX;\n    let valueMarkerY = markerBarY;\n    if (orientation === 'vertical') {\n        valueMarkerY += markerBarHeight - getGaugeBarLength({ gaugeLength, value, max, min });\n        valueMarkerX -= (GAUGE_THICKNESS - FILL_THICKNESS) / 4;\n    } else {\n        valueMarkerX += getGaugeBarLength({ gaugeLength, value, max, min });\n        valueMarkerY -= (GAUGE_THICKNESS - FILL_THICKNESS) / 4;\n    }\n\n    return {\n        valueMarkerX,\n        valueMarkerY,\n    };\n};\n\n/**\n * sort the ranges in ascending order\n * @method getSortedRanges\n * @param {Array} ranges\n * @return {Array} sortedRanges\n */\nexport const getSortedRanges = ranges => ranges.sort((a, b) => a.from - b.from);\n\n/**\n * validate whether ranges prop is valid - continuous ranges, range.to < range.from, range.from != range.to\n * @method validateRanges\n * @param {Array} ranges\n * @return {String} error\n */\nexport const validateRanges = ranges => {\n    if (!ranges.length) {\n        return _('Prop \"ranges\" is missing entries');\n    }\n\n    // check whether a range has \"from\" >= \"to\" eg: 10 - 10, 100 - 10, -20 - -10 are invalid\n    if (ranges.some(range => range.from >= range.to)) {\n        return _('Prop \"ranges\" has invalid entries: invalid range');\n    }\n\n    // check whether ranges have duplicate \"from/to\" eg: 0 - 50, 25 - 50\n    if (ranges.length !== uniqBy(ranges, 'to').length || ranges.length !== uniqBy(ranges, 'from').length) {\n        return _('Prop \"ranges\" has invalid entries: duplicate values');\n    }\n\n    const sortedRanges = getSortedRanges(ranges);\n\n    // check whether ranges are continuous eg: 0 - 10, 10 - 20, 20 - 30\n    for (let i = 1; i < sortedRanges.length; i += 1) {\n        if (sortedRanges[i].from !== sortedRanges[i - 1].to) {\n            return _('Prop \"ranges\" has invalid entries: discontinuous ranges');\n        }\n    }\n\n    return null;\n};\n\n/**\n * calculate min and max value of gauge\n * @method getGaugeRange\n * @param {Array} ranges\n * @return {Object} gaugeRange\n * @return {Number} gaugeRange.min\n * @return {Number} gaugeRange.max\n */\nexport const getGaugeRange = ranges => {\n    const min = Math.min(...ranges.map(range => range.from));\n    const max = Math.max(...ranges.map(range => range.to));\n    return { min, max };\n};\n\n/**\n * calculate stop offsets for linear gradient\n * @method getGradientStopOffsets\n * @param {Array} ranges\n * @param {String} orientation\n * @return {Array} cumulativeOffsets\n */\nexport const getGradientStopOffsets = ({ ranges, orientation }) => {\n    const { min, max } = getGaugeRange(ranges);\n    const offsetScale = (GRADIENT_STOP_OFFSET_MAX - GRADIENT_STOP_OFFSET_MIN) / (max - min);\n    let offsets = ranges.map(range => Math.abs(range.from - range.to) * offsetScale);\n    // When orientation is vertical, since the gauge starts from bottom to top, linear gradient should be reversed\n    offsets = orientation === 'vertical' ? offsets.reverse() : offsets;\n    const cumulativeOffsets = [];\n    offsets.reduce((accumulator, currentValue, idx) => {\n        cumulativeOffsets[idx] = accumulator + currentValue;\n        return cumulativeOffsets[idx];\n    }, 0);\n    return cumulativeOffsets;\n};\n\n/**\n * calculate stop colors for linear gradient\n * @method getGradientStopColors\n * @param {Array} ranges\n * @param {String} orientation\n * @return {Array} stopColors\n */\nexport const getGradientStopColors = ({ ranges, orientation }) => {\n    const stopColors = ranges.map(range => range.value);\n    // When orientation is vertical, since the gauge starts from bottom to top, linear gradient should be reversed\n    return orientation === 'vertical' ? stopColors.reverse() : stopColors;\n};\n\n/**\n * calculate linear gradient stops from ranges\n * @method getGradientStops\n * @param {Object} input\n * @param {Array} ranges\n * @param {String} orientation\n * @return {Array} stops\n */\nexport const getGradientStops = ({ ranges, orientation }) => {\n    const stops = [];\n    const offsets = getGradientStopOffsets({ ranges, orientation });\n    const stopColors = getGradientStopColors({ ranges, orientation });\n    // Initialize stops with the first color stop\n    stops.push({ offset: `${offsets[0]}%`, stopColor: stopColors[0] });\n    // Add the remaining color stops with gradient change at each stop\n    for (let i = 1; i < ranges.length; i += 1) {\n        stops.push({ offset: `${offsets[i - 1]}%`, stopColor: stopColors[i] });\n        stops.push({ offset: `${offsets[i]}%`, stopColor: stopColors[i] });\n    }\n    return stops;\n};\n\n/**\n * calculate linear gradient dimensions\n * @method getGradientDimensions\n * @param {String} orientation\n * @return {Object} dimensions\n * @return {String} dimensions.x1\n * @return {String} dimensions.y1\n * @return {String} dimensions.x2\n * @return {String} dimensions.y2\n */\nexport const getGradientDimensions = orientation => {\n    const x1 = '0%';\n    const y1 = '0%';\n    const x2 = orientation === 'horizontal' ? '100%' : '0%';\n    const y2 = orientation === 'horizontal' ? '0%' : '100%';\n    return { x1, y1, x2, y2 };\n};\n\ninterface GaugeOptions {\n    [key: string]: any;\n}\n\n// map for new options names to old option names\nconst gaugeOptionsMapping = {\n    majorTickInterval: 'majorUnit',\n    gaugeRanges: 'ranges',\n};\n\n/**\n * Helper method to update the option names which can be mapped to pure component options\n * @method mapToOldKey\n * @param {Object} options\n * @returns {Object}\n */\nexport const mapToOldKey = (options: GaugeOptions): GaugeOptions =>\n    mapKeys(options, (val, key) => (gaugeOptionsMapping[key] ? gaugeOptionsMapping[key] : key));\n\ntype LabelOrValue = 'label' | 'value';\n\n/**\n * Helper method to map labelDisplay and valueDisplay options to pure component option names\n * @method mapToOldKey\n * @param {string} labelOrValue\n * @param {Object} options\n * @returns {Object}\n */\nexport const mapValueLabelDisplay = (labelOrValue: LabelOrValue, options: GaugeOptions): GaugeOptions => {\n    const rangeOrValue: string = labelOrValue === 'value' ? 'Value' : 'Range';\n    const showKey: string = labelOrValue === 'value' ? 'showValue' : 'showLabels';\n    const percentKey = `usePercentage${rangeOrValue}`;\n    const optionString = `${labelOrValue}Display`;\n    const newOptions = { ...options };\n    if (newOptions[optionString]) {\n        if (newOptions[optionString] === 'number') {\n            newOptions[showKey] = true;\n            newOptions[percentKey] = false;\n        } else if (newOptions[optionString] === 'percentage') {\n            newOptions[showKey] = true;\n            newOptions[percentKey] = true;\n        } else {\n            newOptions[showKey] = false;\n            newOptions[percentKey] = false;\n        }\n    }\n    return omit(newOptions, [optionString]);\n};\n\n/**\n * Chained helper for mapping the option properties (and values) we expose in config.ts into property values that pure component accepts\n * This is for options that has new key name and can not directly be mapped with pure component props\n * @method convertToGaugeProperties\n * @param {Object} originalOptions\n * @returns {Object}\n */\nexport const convertToGaugeProperties = (originalOptions: GaugeOptions): GaugeOptions =>\n    chain(mapToOldKey(originalOptions))\n        .thru(options => mapValueLabelDisplay('label', options))\n        .thru(options => mapValueLabelDisplay('value', options))\n        .value();\n","import { _ } from '@splunk/ui-utils/i18n';\nimport { EditorConfig } from '../interfaces/Editor';\n\nconst gauge: EditorConfig = {\n    label: _('Gauge Settings'),\n    layout: [\n        [\n            {\n                label: _('Value Display'),\n                option: 'valueDisplay',\n                editor: 'editor.radioBar',\n                editorProps: {\n                    values: [\n                        { label: _('Number'), value: 'number' },\n                        { label: _('Percentage'), value: 'percentage' },\n                        { label: _('Off'), value: 'off' },\n                    ],\n                },\n            },\n        ],\n        [\n            {\n                label: _('Label Display'),\n                option: 'labelDisplay',\n                editor: 'editor.radioBar',\n                editorProps: {\n                    values: [\n                        { label: _('Numbers'), value: 'number' },\n                        { label: _('Percentages'), value: 'percentage' },\n                        { label: _('Off'), value: 'off' },\n                    ],\n                },\n            },\n        ],\n        [\n            {\n                label: _('Orientation'),\n                option: 'orientation',\n                editor: 'editor.radioBar',\n                editorProps: {\n                    values: [\n                        { label: _('Vertical'), value: 'vertical' },\n                        { label: _('Horizontal'), value: 'horizontal' },\n                    ],\n                },\n            },\n        ],\n    ],\n};\n\nexport default gauge;\n","import React from 'react';\nimport T from 'prop-types';\nimport styled from 'styled-components';\nimport { isNumerial, formatNumber } from '@splunk/visualizations-shared/numberUtils';\n\nconst DEFAULT_NUM_OF_TICKS = 5;\nconst TICK_LENGTH_DELTA = 5;\nconst TICK_LABEL_PADDING_FACTOR = 3.2;\n\nconst MajorTickLine = styled.line`\n    stroke: ${props => props.majorTickStrokeColor};\n    stroke-width: 2px;\n    stroke-dasharray: ${props => (props.index === 0 ? 0 : 3)};\n`;\n\nconst MajorTickLabel = styled.text`\n    font-size: 12px;\n    font-family: Splunk Platform Sans, sans-serif;\n    line-height: 19px;\n    fill: ${props => props.majorTickFillColor};\n    text-anchor: middle;\n    text-align: center;\n`;\n\nexport const MajorTick = ({\n    index,\n    x1,\n    y1,\n    x2,\n    y2,\n    showLabels,\n    label,\n    labelX,\n    labelY,\n    majorTickStrokeColor,\n    majorTickFillColor,\n}) => (\n    <g>\n        <MajorTickLine\n            index={index}\n            x1={x1}\n            y1={y1}\n            x2={x2}\n            y2={y2}\n            majorTickStrokeColor={majorTickStrokeColor}\n        />\n        {showLabels && (\n            <MajorTickLabel x={labelX} y={labelY} majorTickFillColor={majorTickFillColor}>\n                {isNumerial(label)\n                    ? formatNumber(label, 0, {\n                          useThousandSeparators: true,\n                          useTrendUnits: true,\n                      })\n                    : label}\n            </MajorTickLabel>\n        )}\n    </g>\n);\n\nMajorTick.propTypes = {\n    index: T.number,\n    x1: T.number,\n    y1: T.number,\n    x2: T.number,\n    y2: T.number,\n    showLabels: T.bool,\n    label: T.oneOfType([T.string, T.number]),\n    labelX: T.number,\n    labelY: T.number,\n    majorTickStrokeColor: T.string,\n    majorTickFillColor: T.string,\n};\n\n/**\n * calculate position for each major tick\n * @method positionMajorTick\n * @param {Object} input\n * @param {Number} input.width\n * @param {Number} input.height\n * @param {Number} input.startX  start x for rendering the first major tick\n * @param {Number} input.startY  start y for rendering the first major tick\n * @param {String} input.orientation\n * @param {Number} input.numOfTicks  how many ticks need to render\n * @param {Number} input.i   index of major tick\n * @return {Object} MajorTick positions\n */\nexport const positionMajorTick = ({ width, height, startX, startY, orientation, numOfTicks, i }) => {\n    let x1 = startX;\n    let y1 = startY;\n    let x2 = startX;\n    let y2 = startY;\n    let labelX = startX;\n    let labelY;\n\n    if (orientation === 'vertical') {\n        const y = (height / numOfTicks) * (numOfTicks - i) + startY;\n        x1 -= TICK_LENGTH_DELTA;\n        y1 = y;\n        x2 += width + TICK_LENGTH_DELTA;\n        y2 = y;\n        labelX += width + TICK_LENGTH_DELTA * TICK_LABEL_PADDING_FACTOR;\n        labelY = y;\n    } else {\n        const x = (width / numOfTicks) * i + startX;\n        x1 = x;\n        y1 -= TICK_LENGTH_DELTA;\n        x2 = x;\n        y2 += height + TICK_LENGTH_DELTA;\n        labelX = x;\n        labelY = y2 + 16;\n    }\n\n    return { x1, y1, x2, y2, labelX, labelY };\n};\n\nconst MajorTicks = ({ ...props }) => {\n    const {\n        width,\n        height,\n        startX,\n        startY,\n        min,\n        max,\n        majorUnit,\n        orientation,\n        showLabels,\n        usePercentageRange,\n        majorTickFillColor,\n        majorTickStrokeColor,\n    } = props;\n\n    const range = max - min;\n    const numOfTicks =\n        majorUnit === 'auto' || Number.isNaN(Number(majorUnit)) || majorUnit <= 0\n            ? DEFAULT_NUM_OF_TICKS\n            : range / majorUnit;\n    const majorTicks = [];\n\n    for (let i = 0; i <= numOfTicks; i += 1) {\n        const { x1, y1, x2, y2, labelX, labelY } = positionMajorTick({\n            width,\n            height,\n            startX,\n            startY,\n            orientation,\n            numOfTicks,\n            i,\n        });\n        const label = usePercentageRange\n            ? `${parseInt((i / numOfTicks - min / range) * 100, 10)}%`\n            : parseInt(min + (range / numOfTicks) * i, 10);\n\n        majorTicks.push(\n            <MajorTick\n                key={i}\n                index={i}\n                x1={x1}\n                y1={y1}\n                x2={x2}\n                y2={y2}\n                showLabels={showLabels}\n                label={label}\n                labelX={labelX}\n                labelY={labelY}\n                majorTickFillColor={majorTickFillColor}\n                majorTickStrokeColor={majorTickStrokeColor}\n            />\n        );\n    }\n\n    // if the gauge is not divided evenly, put the last tick at the end of the gauge\n    if (!Number.isInteger(numOfTicks)) {\n        const extraNumOfTicks = Math.ceil(numOfTicks);\n        const { x1, y1, x2, y2, labelX, labelY } = positionMajorTick({\n            width,\n            height,\n            startX,\n            startY,\n            orientation,\n            numOfTicks: extraNumOfTicks,\n            i: extraNumOfTicks,\n        });\n\n        majorTicks.push(\n            <MajorTick\n                key={extraNumOfTicks}\n                id={extraNumOfTicks}\n                x1={x1}\n                y1={y1}\n                x2={x2}\n                y2={y2}\n                showLabels={showLabels}\n                label={usePercentageRange ? '100%' : max}\n                labelX={labelX}\n                labelY={labelY}\n                majorTickFillColor={majorTickFillColor}\n                majorTickStrokeColor={majorTickStrokeColor}\n            />\n        );\n    }\n\n    return <g>{majorTicks}</g>;\n};\n\nMajorTicks.propTypes = {\n    width: T.number,\n    height: T.number,\n    startX: T.number,\n    startY: T.number,\n    min: T.number,\n    max: T.number,\n    majorUnit: T.oneOfType([T.string, T.number]),\n    orientation: T.string,\n    showLabels: T.bool,\n    usePercentageRange: T.bool,\n    majorTickFillColor: T.string,\n    majorTickStrokeColor: T.string,\n};\n\nMajorTicks.defaultProps = {\n    min: 0,\n    max: 100,\n    majorUnit: 'auto',\n    orientation: 'horizontal',\n    showLabels: true,\n    usePercentageRange: false,\n};\n\nexport default MajorTicks;\n","import React from 'react';\nimport T from 'prop-types';\nimport styled from 'styled-components';\nimport { formatNumber } from '@splunk/visualizations-shared/numberUtils';\n\nconst MARKER_THICKNESS = 15;\nconst MARKER_INNER_LENGTH = 30;\n\nconst MARKER_LABEL_WIDTH = 60;\nconst MARKER_LABEL_HEIGHT = 25;\nconst RADIUS = 2;\nconst DELTA_LENGTH = 12;\n\nconst ValueMarkerRect = styled.path`\n    stroke-width: 2px;\n    fill: ${props => props.valueMarkerFillColor};\n`;\n\nconst ValueMarkerLabelRect = styled.rect`\n    fill: ${props => props.valueMarkerFillColor};\n`;\n\nconst ValueMarkerLabel = styled.text`\n    fill: ${props => props.valueMarkerLabelFillColor};\n    font-size: 14px;\n    font-family: Splunk Platform Sans, sans-serif;\n    line-height: 16px;\n    text-anchor: middle;\n    text-align: center;\n    dominant-baseline: middle;\n`;\n\n/**\n * calculate the path of Value Marker shape\n * @method positionValueMarkerRect\n * @param {Object} input\n * @param {Number} input.x\n * @param {Number} input.y\n * @param {String} input.orientation\n * @param {Number} input.valueMarkerRectLength\n * @return {String} d containing a series of path commands that define the path to be\n */\nexport const positionValueMarkerRect = ({ x, y, orientation, valueMarkerRectLength }) => {\n    let hLength = MARKER_THICKNESS;\n    let vLength = valueMarkerRectLength;\n    let markerStartX = x - MARKER_THICKNESS;\n    const markerStartY = y;\n\n    let innerHLength = hLength / 3;\n    let innerVLength = MARKER_INNER_LENGTH;\n    let innerStartX = markerStartX + innerHLength;\n    let innerStartY = markerStartY + 7;\n\n    if (orientation === 'vertical') {\n        hLength = valueMarkerRectLength;\n        vLength = MARKER_THICKNESS;\n        markerStartX = x;\n\n        innerHLength = MARKER_INNER_LENGTH;\n        innerVLength = vLength / 3;\n        innerStartX = markerStartX + 7;\n        innerStartY = markerStartY + innerVLength;\n    }\n\n    return (\n        `M${markerStartX},${markerStartY}h${hLength}a${RADIUS},${RADIUS} 0 0 1 ${RADIUS},${RADIUS}v${\n            vLength - 2 * RADIUS\n        }a${RADIUS},${RADIUS} 0 0 1 ${-RADIUS},${RADIUS}h${-hLength}a${RADIUS},${RADIUS} 0 0 1 ${-RADIUS},${-RADIUS}v${\n            2 * RADIUS - vLength\n        }a${RADIUS},${RADIUS} 0 0 1 ${RADIUS},${-RADIUS}z` +\n        `M${innerStartX},${innerStartY}v${\n            innerVLength - RADIUS\n        }a${RADIUS},${RADIUS} 0 0 0 ${RADIUS},${RADIUS}h${\n            innerHLength - 2 * RADIUS\n        }a${RADIUS},${RADIUS} 0 0 0 ${RADIUS},${-RADIUS}v${\n            RADIUS - innerVLength\n        }a${RADIUS},${RADIUS} 0 0 0 ${-RADIUS},${-RADIUS}h${\n            2 * RADIUS - innerHLength\n        }a${RADIUS},${RADIUS} 0 0 0 ${-RADIUS},${RADIUS}z`\n    );\n};\n\n/**\n * calculate the position of value marker label\n * @method positionLabel\n * @param {Object} input\n * @param {Number} input.x\n * @param {Number} input.y\n * @param {Number} input.length   gauge thickness\n * @param {String} input.orientation\n * @return {Object} positions\n * @return {Number} positions.labelRectX  x of value marker label rect\n * @return {Number} positions.labelRectY  y of value marker label rect\n * @return {Number} positions.labelX      x of value marker label text\n * @return {Number} positions.labelY      y of value marker label text\n */\nexport const positionLabel = ({ x, y, length, orientation }) => {\n    // for horizontal view\n    let labelRectX = x - MARKER_THICKNESS / 2 - MARKER_LABEL_WIDTH / 2;\n    let labelRectY = y + length;\n    if (orientation === 'vertical') {\n        labelRectX = x + length;\n        labelRectY = y - (MARKER_LABEL_HEIGHT - MARKER_THICKNESS) / 2;\n    }\n    const labelX = labelRectX + MARKER_LABEL_WIDTH / 2;\n    const labelY = labelRectY + MARKER_LABEL_HEIGHT / 2;\n    return { labelRectX, labelRectY, labelX, labelY };\n};\n\nconst ValueMarker = ({ ...props }) => {\n    const {\n        x,\n        y,\n        length,\n        min,\n        max,\n        value,\n        orientation,\n        showValue,\n        usePercentageValue,\n        valueMarkerFillColor,\n        valueMarkerLabelFillColor,\n    } = props;\n\n    const valueMarkerRectLength = length + DELTA_LENGTH;\n    const { labelRectX, labelRectY, labelX, labelY } = positionLabel({\n        x,\n        y,\n        length,\n        orientation,\n    });\n\n    return (\n        <g>\n            <ValueMarkerRect\n                data-test=\"value-marker-rect\"\n                d={positionValueMarkerRect({ x, y, orientation, valueMarkerRectLength })}\n                valueMarkerFillColor={valueMarkerFillColor}\n            />\n            {showValue && (\n                <g>\n                    <ValueMarkerLabelRect\n                        data-test=\"value-marker-label-rect\"\n                        x={labelRectX}\n                        y={labelRectY}\n                        width={MARKER_LABEL_WIDTH}\n                        height={MARKER_LABEL_HEIGHT}\n                        rx={RADIUS}\n                        ry={RADIUS}\n                        valueMarkerFillColor={valueMarkerFillColor}\n                    />\n                    <ValueMarkerLabel\n                        data-test=\"value-marker-label\"\n                        x={labelX}\n                        y={labelY}\n                        valueMarkerLabelFillColor={valueMarkerLabelFillColor}\n                    >\n                        {usePercentageValue\n                            ? `${((value / (max - min)) * 100).toFixed(2)}%`\n                            : formatNumber(value, 0, {\n                                  useThousandSeparators: true,\n                                  useTrendUnits: true,\n                              })}\n                    </ValueMarkerLabel>\n                </g>\n            )}\n        </g>\n    );\n};\n\nValueMarker.propTypes = {\n    x: T.number,\n    y: T.number,\n    length: T.number,\n    min: T.number,\n    max: T.number,\n    value: T.number,\n    orientation: T.string,\n    showValue: T.bool,\n    usePercentageValue: T.bool,\n    valueMarkerFillColor: T.string,\n    valueMarkerLabelFillColor: T.string,\n};\n\nValueMarker.defaultProps = {\n    min: 0,\n    max: 100,\n    orientation: 'horizontal',\n    showValue: true,\n    usePercentageValue: false,\n};\n\nexport default ValueMarker;\n","import { chain } from 'lodash';\nimport vizConfig from './config';\nimport withDashboardViz from '../common/withDashboardViz';\nimport FillerGauge, { FillerGaugeProps } from './PureFillerGauge/FillerGauge';\nimport { convertToGaugeProperties } from '../common/gaugeUtils';\n\nexport const config = vizConfig;\nexport const PureFillerGauge = FillerGauge;\n\nconst validOptions = Object.keys(config.optionsSchema);\n\ntype computeVizPropsFn = (options: Record<string, any>) => Partial<FillerGaugeProps>;\nexport const computeVizProps: computeVizPropsFn = ({ ...props }): Partial<FillerGaugeProps> => {\n    const options = chain(props).pick(validOptions).thru(convertToGaugeProperties).value();\n    const defaultColors = {\n        backgroundBarFillColor: config.themes.defaultBackgroundBarFillColor(props),\n        majorTickFillColor: config.themes.majorTickFillColor(props),\n        majorTickStrokeColor: config.themes.majorTickStrokeColor(props),\n        valueMarkerFillColor: config.themes.valueMarkerFillColor(props),\n        valueMarkerLabelFillColor: config.themes.valueMarkerLabelFillColor(props),\n    };\n    return { ...options, ...defaultColors };\n};\n\nconst viz = withDashboardViz({\n    ReactViz: FillerGauge as any,\n    computeVizProps,\n    vizConfig,\n});\n\nexport const themes = vizConfig.themes;\nexport default viz;\n","import { _ } from '@splunk/ui-utils/i18n';\nimport { COLOR_OR_TOKEN_PATTERN_WITH_RGBA, getPattern } from '@splunk/visualizations-shared/schemaUtils';\nimport pick from '@splunk/themes/pick';\nimport variables from '@splunk/themes/variables';\nimport { defaultPalettesConfig } from '@splunk/visualization-color-palettes/editors/PresetPalettes';\n\nimport SuiGaugeFillerIcon from '@splunk/react-icons/GaugeFiller';\nimport { DataContract } from '../common/interfaces/DataContract';\nimport { DefaultContext } from '../common/interfaces/DefaultContext';\nimport { EditorConfig } from '../common/interfaces/Editor';\nimport { OptionsSchema } from '../common/interfaces/OptionsSchema';\nimport { ThemedDefaults } from '../common/interfaces/ThemedDefaults';\nimport { VizBehavior } from '../common/interfaces/VizBehavior';\nimport { VizCategory } from '../common/interfaces/VizCategory';\nimport { VizConfig } from '../common/interfaces/VizConfig';\nimport { VizSize } from '../common/interfaces/VizSize';\nimport { enhanceConfig } from '../common/utils/configUtils';\nimport GaugeConfig from '../common/editorConfig/Gauge';\nimport getBackgroundColorEditor from '../common/editorConfig/BackgroundColor';\nimport { getDynamicGaugeColorEditor } from '../common/editorConfig/DynamicGaugeColorEditor';\n\nconst dataContract: DataContract = {\n    requiredDataSources: [\n        {\n            name: 'primary',\n            description: 'DataSource that powers the visualization',\n        },\n    ],\n    optionalDataSources: [],\n    initialRequestParams: {\n        primary: { offset: 0, count: 10000 },\n    },\n};\n\nconst size: VizSize = {\n    initialWidth: 300,\n    initialHeight: 300,\n};\n\nconst defaultContext: DefaultContext = {\n    gaugeColorConfig: [\n        { to: 9, value: '#118832' },\n        { from: 10, to: 29, value: '#669922' },\n        { from: 30, to: 49, value: '#CBA700' },\n        { from: 50, to: 69, value: '#D94E17' },\n        { from: 70, value: '#D41F1F' },\n    ],\n};\n\nconst optionsSchema: OptionsSchema = {\n    backgroundColor: {\n        default: '> themes.defaultBackgroundColor',\n        description:\n            'Specify the color used for the background. The default for enterprise light is \"#ffffff\". The default for enterprise dark is \"#000000\". The default for prisma dark is \"#0b0c0e\".',\n        pattern: COLOR_OR_TOKEN_PATTERN_WITH_RGBA,\n        type: 'string',\n    },\n    gaugeColor: {\n        default: '> value | rangeValue(gaugeColorConfig)',\n        description:\n            'Specify the color for the gauge color of the filler gauge. You may use a dataSource to apply the color. The hex value format should be \"#FFFFFF\".',\n        type: 'string',\n    },\n    labelDisplay: {\n        default: 'number',\n        description: 'Specify whether to display the labels as numbers, percentages, or off.',\n        pattern: getPattern(['number', 'percentage', 'off']),\n        type: 'string',\n    },\n    majorTickInterval: {\n        description: 'Specify, in pixels, the spacing between major tick marks.',\n        default: 'auto',\n        type: ['string', 'number'],\n    },\n    orientation: {\n        default: 'vertical',\n        description: 'Specify the axis orientation of the gauge.',\n        pattern: getPattern(['vertical', 'horizontal']),\n        type: 'string',\n    },\n    value: {\n        default: '> primary | seriesByType(\"number\") | lastPoint()',\n        description: 'Specify the dataSource applied to the value of the filler gauge.',\n        type: 'number',\n    },\n    valueDisplay: {\n        default: 'number',\n        description: 'Specify whether to display the value as a number, percentage, or off.',\n        pattern: getPattern(['number', 'percentage', 'off']),\n        type: 'string',\n    },\n};\n\nconst themes: ThemedDefaults = {\n    defaultBackgroundColor: props =>\n        pick({\n            enterprise: {\n                dark: variables.black(props),\n                light: variables.backgroundColor(props),\n            },\n            prisma: variables.backgroundColorSidebar(props),\n        })(props),\n    defaultBackgroundBarFillColor: props =>\n        pick({\n            enterprise: variables.backgroundColorHover(props),\n            prisma: {\n                light: variables.contentColorActive(props),\n                dark: variables.neutral100(props),\n            },\n        })(props),\n    majorTickFillColor: props =>\n        pick({\n            enterprise: {\n                light: variables.gray30(props), // was '#33343B'\n                dark: variables.textGray(props), // was #D7DAE0\n            },\n            prisma: {\n                // TODO: missed colors :(\n                light: variables.neutral100(props), // TBD\n                dark: variables.contentColorMuted(props), // was #D7DAE0; contentColor\n            },\n        })(props),\n    majorTickStrokeColor: props =>\n        pick({\n            enterprise: {\n                light: variables.textGray(props),\n                dark: variables.contentColorMuted(props),\n            },\n            prisma: variables.contentColorMuted(props),\n        })(props),\n    valueMarkerFillColor: props =>\n        pick({\n            enterprise: variables.textColor(props),\n            prisma: {\n                dark: variables.white(props),\n                light: variables.black(props),\n            },\n        })(props),\n    valueMarkerLabelFillColor: props =>\n        pick({\n            enterprise: {\n                light: variables.gray96(props),\n                dark: variables.black(props),\n            },\n            prisma: variables.black(props),\n        })(props),\n};\n\nconst editorConfig: EditorConfig[] = [\n    {\n        label: _('Select Data Field'),\n        layout: [\n            [\n                {\n                    label: '',\n                    editor: 'editor.columnSelector',\n                    option: 'value',\n                    context: 'defaultContext',\n                    editorProps: {\n                        dataSourceKey: 'primary',\n                        prepareValue: (\n                            definition\n                        ): { context: Record<string, any>; options: Record<string, any> } => {\n                            const {\n                                options: { value },\n                            } = definition;\n                            return {\n                                context: {},\n                                options: {\n                                    value: `${value} | lastPoint()`,\n                                },\n                            };\n                        },\n                    },\n                },\n            ],\n        ],\n    },\n    GaugeConfig,\n    {\n        label: _('Coloring'),\n        layout: [\n            [getDynamicGaugeColorEditor({ defaultContext, defaultPalettesConfig })],\n            getBackgroundColorEditor({ themes, labelPosition: 'left' }),\n        ],\n    },\n];\n\n/**\n * visualization configuration\n */\nconst config: VizConfig = {\n    /**\n     * unique viz key\n     */\n    key: 'splunk.fillergauge',\n    /**\n     * viz name\n     */\n    name: 'FillerGauge',\n    category: VizCategory.GAUGE,\n    /**\n     * viz icon\n     */\n    icon: SuiGaugeFillerIcon,\n    dataContract,\n    size,\n    defaultContext,\n    optionsSchema,\n    editorConfig,\n    supports: [VizBehavior.DYNAMIC_OPTIONS, VizBehavior.PLACEHOLDER],\n    themes,\n};\n\nexport default enhanceConfig(config);\n","module.exports = require(\"@splunk/react-icons/GaugeFiller\");","import { _ } from '@splunk/ui-utils/i18n';\n\nexport const getDynamicGaugeColorEditor = ({ defaultContext, defaultPalettesConfig }) => ({\n    label: _('Gauge'),\n    option: 'gaugeColor',\n    context: 'gaugeColorConfig',\n    editor: 'editor.dynamicColor',\n    editorProps: {\n        labelPosition: 'left',\n        flyoutTitle: _('Dynamic Coloring: Gauge'),\n        formatters: [\n            {\n                label: _('Ranges'),\n                value: 'rangeValue',\n                defaults: {\n                    value: defaultContext.gaugeColorConfig,\n                },\n            },\n        ],\n        dataSelectors: [\n            {\n                label: _('Value'),\n                value: 'value',\n            },\n        ],\n        defaultPalettesConfig,\n    },\n});\n","import * as React from 'react';\nimport * as T from 'prop-types';\nimport styled from 'styled-components';\nimport { pick } from 'lodash';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport { toDimension } from '@splunk/visualizations-shared/style';\nimport SizeAwareWrapper from '@splunk/visualizations-shared/SizeAwareWrapper';\nimport Message from '@splunk/visualizations-shared/Message';\nimport {\n    GAUGE_THICKNESS,\n    assignGaugeColor,\n    getGaugeDimensions,\n    getFillBarDimensions,\n    getFillerGaugeValueMarkerPositions,\n} from '../../common/gaugeUtils';\nimport MajorTicks from '../../common/GaugeMajorTicks';\nimport ValueMarker from '../../common/GaugeValueMarker';\n\nconst Container = styled.div<{\n    width: string | number;\n    height: string | number;\n    backgroundColor: string;\n}>`\n    overflow: hidden;\n    ${props => toDimension(pick(props, ['width', 'height']))};\n    background-color: ${props => props.backgroundColor};\n`;\n\nconst FillerGaugeWrapper = styled.div<{\n    backgroundColor: string;\n}>`\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    width: 100%;\n    height: 100%;\n    background-color: ${props => props.backgroundColor};\n`;\n\nconst FillerGaugeContainer = styled.div<{\n    width: string | number;\n    height: string | number;\n}>`\n    overflow: hidden;\n    position: relative;\n    ${props => toDimension(pick(props, ['width', 'height']))};\n`;\n\nconst FillerGaugeSVG = styled.svg<{\n    width: string | number;\n    height: string | number;\n}>`\n    ${props => toDimension(pick(props, ['width', 'height']))};\n`;\n\nconst BackgroundBar = styled.rect.attrs({ 'data-test': 'background-bar-rect' })<{\n    backgroundBarFillColor: string;\n}>`\n    fill: ${props => props.backgroundBarFillColor};\n`;\n\nconst FillBar = styled.rect.attrs({ 'data-test': 'fill-bar-rect' })`\n    fill: ${props => props.color};\n`;\n\nconst MAX_VERTICAL_CONTAINER_WIDTH = 200;\nconst MIN_VERTICAL_CONTAINER_HEIGHT = 200;\nconst MIN_HORIZONTAL_CONTAINER_WIDTH = 200;\nconst MIN_HORIZONTAL_CONTAINER_HEIGHT = 100;\n\nexport enum AXIS_ORIENTATION_TYPES {\n    VERTICAL = 'vertical',\n    HORIZONTAL = 'horizontal',\n}\n\nexport interface FillerGaugeProps {\n    width: string | number;\n    height: string | number;\n    value: number;\n    gaugeColor: string;\n    min: number;\n    max: number;\n    // valueFieldName: T.string, // todo: need add it back when displaying name later\n    // gaugeColorFieldName: T.string, // todo: may need add it back may not\n    orientation: AXIS_ORIENTATION_TYPES;\n    majorUnit: string | number;\n    showLabels: boolean;\n    showValue: boolean;\n    usePercentageRange: boolean;\n    usePercentageValue: boolean;\n    backgroundColor: string;\n    backgroundBarFillColor: string;\n    majorTickFillColor: string;\n    majorTickStrokeColor: string;\n    valueMarkerFillColor: string;\n    valueMarkerLabelFillColor: string;\n}\n\nconst FillerGauge = ({ ...props }: FillerGaugeProps): React.ReactElement => {\n    const {\n        width,\n        height,\n        value,\n        gaugeColor,\n        min,\n        max,\n        orientation,\n        majorUnit,\n        showLabels,\n        showValue,\n        usePercentageRange,\n        usePercentageValue,\n        backgroundColor,\n        backgroundBarFillColor,\n        majorTickFillColor,\n        majorTickStrokeColor,\n        valueMarkerFillColor,\n        valueMarkerLabelFillColor,\n    } = props;\n\n    const renderVisualization = ({ width: containerWidth, height: containerHeight }) => {\n        // todo: need change the size when get design for smaller space\n        // 58 is the title & description header height in dashboard visualization\n        if (\n            ((containerWidth < MAX_VERTICAL_CONTAINER_WIDTH ||\n                containerHeight + 58 < MIN_VERTICAL_CONTAINER_HEIGHT) &&\n                orientation === 'vertical') ||\n            ((containerWidth < MIN_HORIZONTAL_CONTAINER_WIDTH ||\n                containerHeight < MIN_HORIZONTAL_CONTAINER_HEIGHT) &&\n                orientation === 'horizontal')\n        ) {\n            return (\n                <Message\n                    width={containerWidth}\n                    height={containerHeight}\n                    message={_('Too small to render content')}\n                    level=\"info\"\n                />\n            );\n        }\n\n        const { gaugeLength, gaugeStartX, gaugeStartY, gaugeWidth, gaugeHeight } = getGaugeDimensions({\n            containerWidth,\n            containerHeight,\n            orientation,\n        });\n        const { fillBarLength, fillBarX, fillBarY, fillBarWidth, fillBarHeight } = getFillBarDimensions({\n            gaugeLength,\n            gaugeStartX,\n            gaugeStartY,\n            gaugeWidth,\n            gaugeHeight,\n            value,\n            min,\n            max,\n            orientation,\n        });\n        const { valueMarkerX, valueMarkerY } = getFillerGaugeValueMarkerPositions({\n            fillBarX,\n            fillBarY,\n            fillBarLength,\n            orientation,\n        });\n\n        return (\n            <FillerGaugeWrapper backgroundColor={backgroundColor} data-test=\"FillerGaugeWrapper\">\n                <FillerGaugeContainer\n                    width={containerWidth}\n                    height={containerHeight}\n                    data-test=\"FillerGaugeContainer\"\n                >\n                    <FillerGaugeSVG\n                        width={containerWidth}\n                        height={containerHeight}\n                        data-test=\"FillerGaugeSVG\"\n                    >\n                        <BackgroundBar\n                            x={gaugeStartX}\n                            y={gaugeStartY}\n                            width={gaugeWidth}\n                            height={gaugeHeight}\n                            data-test=\"BackgroundBar\"\n                            backgroundBarFillColor={backgroundBarFillColor}\n                        />\n                        <MajorTicks\n                            width={gaugeWidth}\n                            height={gaugeHeight}\n                            startX={gaugeStartX}\n                            startY={gaugeStartY}\n                            min={min}\n                            max={max}\n                            majorUnit={majorUnit}\n                            orientation={orientation}\n                            showLabels={showLabels}\n                            usePercentageRange={usePercentageRange}\n                            majorTickFillColor={majorTickFillColor}\n                            majorTickStrokeColor={majorTickStrokeColor}\n                        />\n                        <FillBar\n                            x={fillBarX}\n                            y={fillBarY}\n                            width={fillBarWidth}\n                            height={fillBarHeight}\n                            color={gaugeColor || assignGaugeColor({ value, min, max })}\n                            data-test=\"FillBar\"\n                        />\n                        <ValueMarker\n                            x={valueMarkerX}\n                            y={valueMarkerY}\n                            length={GAUGE_THICKNESS}\n                            min={min}\n                            max={max}\n                            value={value}\n                            orientation={orientation}\n                            showValue={showValue}\n                            usePercentageValue={usePercentageValue}\n                            valueMarkerFillColor={valueMarkerFillColor}\n                            valueMarkerLabelFillColor={valueMarkerLabelFillColor}\n                        />\n                    </FillerGaugeSVG>\n                </FillerGaugeContainer>\n            </FillerGaugeWrapper>\n        );\n    };\n\n    return (\n        <Container width={width} height={height} backgroundColor={backgroundColor}>\n            <SizeAwareWrapper>\n                {containerDimension => renderVisualization(containerDimension)}\n            </SizeAwareWrapper>\n        </Container>\n    );\n};\n\nconst propTypes: Record<keyof FillerGaugeProps, T.Validator<any>> = {\n    width: T.oneOfType([T.string, T.number]),\n    height: T.oneOfType([T.string, T.number]),\n    value: T.number,\n    gaugeColor: T.string,\n    min: T.number,\n    max: T.number,\n    // valueFieldName: T.string, // todo: need add it back when displaying name later\n    // gaugeColorFieldName: T.string, // todo: may need add it back may not\n    orientation: T.oneOf(['horizontal', 'vertical']),\n    majorUnit: T.oneOfType([T.string, T.number]),\n    showLabels: T.bool,\n    showValue: T.bool,\n    usePercentageRange: T.bool,\n    usePercentageValue: T.bool,\n    backgroundColor: T.string,\n    backgroundBarFillColor: T.string,\n    majorTickFillColor: T.string,\n    majorTickStrokeColor: T.string,\n    valueMarkerFillColor: T.string,\n    valueMarkerLabelFillColor: T.string,\n};\n\nconst defaultProps: Record<keyof FillerGaugeProps, any> = {\n    width: '100%',\n    height: 250,\n    value: undefined,\n    gaugeColor: undefined,\n    orientation: 'vertical',\n    min: 0,\n    max: 100,\n    majorUnit: 'auto',\n    showLabels: true,\n    showValue: true,\n    usePercentageRange: false,\n    usePercentageValue: false,\n    backgroundColor: 'transparent',\n    backgroundBarFillColor: '#f2f4f5',\n    majorTickFillColor: '#3c444d',\n    majorTickStrokeColor: '#6b7785',\n    valueMarkerFillColor: '#3c444d',\n    valueMarkerLabelFillColor: '#f2f4f5',\n};\n\nFillerGauge.propTypes = propTypes;\nFillerGauge.defaultProps = defaultProps;\n\nexport default FillerGauge;\n"],"sourceRoot":""}