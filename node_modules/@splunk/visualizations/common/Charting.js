/*!
 * Copyright © 2018 Splunk Inc.
 * SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or
 * in part without a valid written license from Splunk Inc. is PROHIBITED.
 */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 39);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = require("prop-types");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = require("styled-components");

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = require("lodash");

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/classCallCheck");

/***/ }),
/* 5 */,
/* 6 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/createClass");

/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = require("@splunk/ui-utils/i18n");

/***/ }),
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */,
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */,
/* 17 */,
/* 18 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/Message");

/***/ }),
/* 19 */,
/* 20 */,
/* 21 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/style");

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _classCallCheck = __webpack_require__(4);

var _createClass = __webpack_require__(6);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChartingApiFunctional = void 0;

var ChartingApiFunctional = /*#__PURE__*/function () {
  function ChartingApiFunctional(chartRef) {
    _classCallCheck(this, ChartingApiFunctional);

    this.chartRef = chartRef;
  }
  /**
   * Allows users to programmatically highlight a point on the chart
   *
   * @memberof ChartingApiFunctional
   */


  _createClass(ChartingApiFunctional, [{
    key: "highlight",
    value: function highlight() {
      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        xValue: '',
        seriesName: ''
      },
          xValue = _ref.xValue,
          seriesName = _ref.seriesName;

      this.getChart().highlight(xValue, seriesName);
    }
    /**
     * Allows users to programmatically unhighlight all points on the chart
     *
     * @memberof ChartingApiFunctional
     */

  }, {
    key: "unHighlight",
    value: function unHighlight() {
      this.getChart().unHighlight();
    } // returns chart object

  }, {
    key: "getChart",
    value: function getChart() {
      var _a;

      return (_a = this.chartRef) === null || _a === void 0 ? void 0 : _a.current;
    }
  }]);

  return ChartingApiFunctional;
}();

exports.ChartingApiFunctional = ChartingApiFunctional;

/***/ }),
/* 23 */,
/* 24 */,
/* 25 */,
/* 26 */,
/* 27 */,
/* 28 */,
/* 29 */,
/* 30 */,
/* 31 */,
/* 32 */,
/* 33 */,
/* 34 */,
/* 35 */,
/* 36 */,
/* 37 */,
/* 38 */,
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _this = this;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.updateRowPayload = exports.canUpdateInPlace = exports.changedOptions = exports.NO_INPLACE_PROPS = void 0;
/* eslint-disable react/no-unused-prop-types */

var lodash_1 = __webpack_require__(3);

var i18n_1 = __webpack_require__(7);

var visualization_color_palettes_1 = __webpack_require__(40);

var react_1 = __webpack_require__(0);

var React = __webpack_require__(0);

var T = __webpack_require__(1);

var react_event_listener_1 = __webpack_require__(41);

__webpack_require__(42); // fixme, @splunk/charting should be refactor to use locale & timezone instead of i18n functions


var charting_bundle_1 = __webpack_require__(43);

var style_1 = __webpack_require__(21);

var styled_components_1 = __webpack_require__(2);

var Message_1 = __webpack_require__(18);

var useSplunkTheme_1 = __webpack_require__(44);

var themeUtils_1 = __webpack_require__(45);

var ChartingApi_1 = __webpack_require__(22);

exports.NO_INPLACE_PROPS = ['chart', 'chart.orientation', 'layout.splitSeries', 'chart.style', 'legend.placement'];

var changedOptions = function changedOptions(curOptions, nextOptions) {
  return Object.keys(curOptions).filter(function (key) {
    return !(key in nextOptions);
  }).concat(Object.keys(nextOptions).filter(function (key) {
    return !(key in curOptions) || curOptions[key] !== nextOptions[key];
  }));
};

exports.changedOptions = changedOptions;
charting_bundle_1.default.enableScaledEvents();

function usePrevious(value) {
  var ref = react_1.useRef();
  react_1.useEffect(function () {
    ref.current = value;
  });
  return ref.current;
}

var canUpdateInPlace = function canUpdateInPlace(curOptions, nextOptions) {
  // if either of the options are undefined
  // it cannot update in place.
  if (!curOptions || !nextOptions) {
    return false;
  }

  return !exports.NO_INPLACE_PROPS.some(function (p) {
    return curOptions[p] !== nextOptions[p];
  }) && !exports.changedOptions(curOptions, nextOptions).some(function (p) {
    return p.toLowerCase().endsWith('color');
  });
};

exports.canUpdateInPlace = canUpdateInPlace; // create 'row' payloads from 'rowContext' in the flattened format:
// row.<fieldname>.value

var updateRowPayload = function updateRowPayload(chartEventRowContext, payload) {
  Object.keys(chartEventRowContext || {}).forEach(function (key) {
    payload[key + '.value'] = chartEventRowContext[key];
  });
  return payload;
};

exports.updateRowPayload = updateRowPayload;
var VizChartEventType;

(function (VizChartEventType) {
  VizChartEventType["POINT_CLICK"] = "point.click";
  VizChartEventType["POINT_MOUSE_OUT"] = "point.mouseout";
  VizChartEventType["POINT_MOUSE_OVER"] = "point.mouseover";
  VizChartEventType["LEGEND_CLICK"] = "legend.click";
})(VizChartEventType || (VizChartEventType = {})); // @TODO(pwied): remove after HC upgrade to 8+
// .highcharts-a11y-proxy-container rule addresses a HighCharts < 8 bug
// caused by the accessibility plugin
// https://github.com/highcharts/highcharts/issues/12883


var ChartingContainer = styled_components_1.default.div.attrs(function (props) {
  return {
    'data-test': 'charting-container',
    width: props.width,
    height: props.height
  };
}).withConfig({
  displayName: "Charting__ChartingContainer",
  componentId: "sc-3wbgm0-0"
})(["& .highcharts-a11y-proxy-container{pointer-events:none;}overflow:hidden;position:relative;", ";"], function (props) {
  return style_1.toDimension(lodash_1.pick(props, ['width', 'height']));
});
var propTypes = {
  width: T.oneOfType([T.string, T.number]),
  height: T.oneOfType([T.string, T.number]),
  options: T.object,
  chartData: T.object,
  onEventTrigger: T.func,
  onClick: T.func,
  onSelect: T.func,
  onPointMouseOver: T.func,
  onPointMouseOut: T.func,
  style: T.object,
  colorPalette: T.array,
  visualizationApiRef: T.func,
  themeKey: T.string
};

var Charting = function Charting(props) {
  var container = react_1.useRef(null);
  var needsInit = react_1.useRef(true);
  var chart = react_1.useRef();
  var needsRedraw = react_1.useRef(true);
  var api = react_1.useRef(new ChartingApi_1.ChartingApiFunctional(chart));

  var computeChartingSize = function computeChartingSize() {
    if (container.current) {
      var rect = container.current.getBoundingClientRect();
      return {
        height: rect.height,
        width: rect.width
      };
    }

    return {};
  };

  var splunkTheme = useSplunkTheme_1.default();
  var themeKey = props.themeKey ? props.themeKey : themeUtils_1.getChartingThemeKey({
    splunkThemeV1: splunkTheme
  });
  var width = props.width,
      height = props.height,
      style = props.style,
      chartData = props.chartData,
      options = props.options,
      colorPalette = props.colorPalette,
      onClick = props.onClick,
      onSelect = props.onSelect,
      onPointMouseOut = props.onPointMouseOut,
      onPointMouseOver = props.onPointMouseOver,
      onEventTrigger = props.onEventTrigger;

  var handleClick = function handleClick(chartEvent, type) {
    var payload = lodash_1.pick(chartEvent, 'name2', 'value2', '_span', 'modifierKey');
    payload['name'] = payload['name2'];
    delete payload['name2'];

    if (type === VizChartEventType.POINT_CLICK) {
      payload['value'] = payload['value2'];
      delete payload['value2'];
      payload = exports.updateRowPayload(chartEvent['rowContext'], payload);
    }

    onClick({
      type: type,
      originalEvent: chartEvent,
      payload: payload
    });
  };

  var destroyChart = function destroyChart() {
    if (chart.current) {
      chart.current.destroy();
      chart.current = null;
    }

    needsRedraw.current = true;
    needsInit.current = true;
  };

  var handleSelect = function handleSelect(chartEvent) {
    // todo: need change this after breaking all visualizations
    if (onSelect && typeof onSelect === 'function') {
      onSelect({
        type: 'range.select',
        originalEvent: chartEvent,
        payload: lodash_1.pick(chartEvent, 'startXIndex', 'endXIndex', 'startXValue', 'endXValue')
      });
      return;
    } // the chartEvent here is a jQuery event


    onEventTrigger({
      type: 'range.select',
      originalEvent: chartEvent,
      payload: lodash_1.pick(chartEvent, 'startXIndex', 'endXIndex', 'startXValue', 'endXValue')
    });
  };

  var handlePointMouseOut = function handlePointMouseOut(chartEvent, type) {
    var payload = lodash_1.pick(chartEvent, 'name2', 'value2', '_span', 'modifierKey', 'tooltipContext');
    payload['name'] = payload['name2'];
    delete payload['name2'];
    payload['value'] = payload['value2'];
    delete payload['value2'];
    payload = exports.updateRowPayload(chartEvent['rowContext'], payload);
    onPointMouseOut({
      type: type,
      originalEvent: chartEvent,
      payload: payload
    });
  };

  var handlePointMouseOver = function handlePointMouseOver(chartEvent, type) {
    var payload = lodash_1.pick(chartEvent, 'name2', 'value2', '_span', 'modifierKey', 'tooltipContext');
    payload['name'] = payload['name2'];
    delete payload['name2'];
    payload['value'] = payload['value2'];
    delete payload['value2'];
    payload = exports.updateRowPayload(chartEvent['rowContext'], payload);
    onPointMouseOver({
      type: type,
      originalEvent: chartEvent,
      payload: payload
    });
  };

  var drawChart = function drawChart() {
    var updatedOptions = Object.assign(Object.assign({}, options), {
      shouldColorizeTooltipData: false
    });
    var computedChartSize = computeChartingSize();
    var computedWidth = computedChartSize.width;
    var computedHeight = computedChartSize.height;
    var serializedTimezone = lodash_1.get(_this, ['context', 'serializedTimezone']);
    var ianaTimezone = lodash_1.get(_this, ['context', 'ianaTimezone']);
    var utcOffset = lodash_1.get(_this, ['context', 'utcOffset']);

    if (!computedWidth || !computedHeight) {
      return;
    }

    if (!chartData || !Object.keys(chartData).length) {
      return;
    }

    try {
      if (needsInit.current) {
        destroyChart();
        charting_bundle_1.default.setTheme(themeKey);

        if (colorPalette.length > 0) {
          charting_bundle_1.default.setColorPalette(colorPalette);
        }

        chart.current = charting_bundle_1.default.createChart(container.current, Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, updatedOptions), {
          drilldown: 'all'
        }), typeof serializedTimezone === 'string' && {
          'time.serializedTz': serializedTimezone
        }), typeof ianaTimezone === 'string' && {
          'time.ianaTimezone': ianaTimezone
        }), typeof utcOffset === 'number' && {
          'time.timezoneOffset': utcOffset
        })); // bind event handlers

        chart.current.on('pointClick', function (e) {
          handleClick(e, VizChartEventType.POINT_CLICK);
        });
        chart.current.on('pointMouseOver', function (e) {
          handlePointMouseOver(e, VizChartEventType.POINT_MOUSE_OVER);
        });
        chart.current.on('pointMouseOut', function (e) {
          handlePointMouseOut(e, VizChartEventType.POINT_MOUSE_OUT);
        });
        chart.current.on('legendClick', function (e) {
          handleClick(e, VizChartEventType.LEGEND_CLICK);
        });
        chart.current.on('chartRangeSelect', handleSelect);
      }

      if (needsRedraw.current) {
        charting_bundle_1.default.setTheme(themeKey);

        if (colorPalette.length > 0) {
          charting_bundle_1.default.setColorPalette(colorPalette);
        }

        chart.current.prepareAndDraw(chartData, updatedOptions, function () {});
      }

      if (chart.current) {
        chart.current.resize(computedWidth, computedHeight);
      }

      needsInit.current = false;
      needsRedraw.current = false;
    } catch (e) {
      window.console.error('Caught error rendering chart:', e);
    }
  };

  var debouncedDrawChart = lodash_1.debounce(drawChart, 5);

  var onContainerMount = function onContainerMount(chartingContainer) {
    container.current = chartingContainer;
    debouncedDrawChart();
  };

  var prevOptions = usePrevious(options);
  var prevTheme = usePrevious(themeKey);
  var prevOnClick = usePrevious(onClick);
  react_1.useEffect(function () {
    debouncedDrawChart();
    props.visualizationApiRef(api.current);
    return function () {
      props.visualizationApiRef(null);
      destroyChart();
    };
  }, []);
  react_1.useEffect(function () {
    // TODO: figure out why re-init is needed for functional components (i.e. PlatformViz) when changing theme
    // seems like redraw doesn't suffice to update the background colors
    if (!chart.current || !exports.canUpdateInPlace(prevOptions, options) || !props.themeKey && prevTheme !== themeKey || prevOnClick !== onClick) {
      needsInit.current = true;
    }

    needsRedraw.current = true; // need to immediately call drawChart upon an option or chartData change
    // otherwise a noop would occur if the onContainerMount drawChart is re-invoked when dimensions change

    drawChart();
  }, [JSON.stringify(options), JSON.stringify(chartData.toJSON()), JSON.stringify(chartData.annotations), themeKey, onClick]);
  return React.createElement(ChartingContainer, {
    style: style,
    ref: onContainerMount,
    width: width,
    height: height
  }, React.createElement(react_event_listener_1.default, {
    target: window,
    onResize: debouncedDrawChart
  }));
};

var defaultProps = {
  width: '100%',
  height: 250,
  options: {},
  style: {},
  // todo: need remove it
  onEventTrigger: lodash_1.noop,
  onClick: lodash_1.noop,
  onSelect: lodash_1.noop,
  onPointMouseOver: lodash_1.noop,
  onPointMouseOut: lodash_1.noop,
  colorPalette: visualization_color_palettes_1.VIZ_CATEGORICAL,
  visualizationApiRef: lodash_1.noop,
  chartData: null,
  themeKey: null
};
Charting.propTypes = propTypes;
Charting.defaultProps = defaultProps; // allow for early return in case of empty chartData while still following hook rules

var withEmptyChartMessage = function withEmptyChartMessage(Chart) {
  var Wrapper = function Wrapper(props) {
    var chartData = props.chartData;

    if (!chartData) {
      return React.createElement(Message_1.default, {
        message: i18n_1._('No DataSource'),
        level: "warning"
      });
    }

    if (chartData && !Object.keys(chartData).length) {
      return React.createElement(Message_1.default, {
        message: i18n_1._('No Result'),
        level: "info"
      });
    }

    return React.createElement(Chart, Object.assign({}, props));
  };

  Wrapper.displayName = 'ChartingWrapper';
  Wrapper.propTypes = propTypes;
  Wrapper.defaultProps = defaultProps;
  return Wrapper;
}; // export default Charting;


exports.default = withEmptyChartMessage(Charting);

/***/ }),
/* 40 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualization-color-palettes");

/***/ }),
/* 41 */
/***/ (function(module, exports) {

module.exports = require("react-event-listener");

/***/ }),
/* 42 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/i18n");

/***/ }),
/* 43 */
/***/ (function(module, exports) {

module.exports = require("@splunk/charting-bundle");

/***/ }),
/* 44 */
/***/ (function(module, exports) {

module.exports = require("@splunk/themes/useSplunkTheme");

/***/ }),
/* 45 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/themeUtils");

/***/ })
/******/ ]);
//# sourceMappingURL=Charting.js.map