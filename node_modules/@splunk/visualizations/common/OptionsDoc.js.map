{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"prop-types\"","webpack:///external \"styled-components\"","webpack:///external \"lodash\"","webpack:///external \"@splunk/react-ui/Heading\"","webpack:///external \"@splunk/ui-utils/i18n\"","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"@babel/runtime/helpers/typeof\"","webpack:///external \"@babel/runtime/helpers/slicedToArray\"","webpack:///external \"@splunk/react-ui/Markdown\"","webpack:///external \"lodash/isEmpty\"","webpack:///./.storybook/utils/storybookUtils.ts","webpack:///./src/common/interfaces/VizBehavior.ts","webpack:///./src/common/OptionsDoc.jsx","webpack:///./src/common/utils/configUtils.ts","webpack:///external \"@splunk/visualizations-shared/schemaUtils\""],"names":["Option","styled","OptionName","PairContainer","PairTitle","PairValue","PropertiesWrapper","props","PropertiesContainer","PropertiesContent","isOneOfJsonSchema","item","Array","getOrType","res","one","getArrayType","isEmpty","itemType","getType","values","getDefaultValue","defaultValue","JSON","Pair","title","text","T","string","PropertyItems","isPatternProperty","propsItems","_","array","OptionItem","name","type","desc","enumerable","PropertiesSection","marginLeft","element","PropertiesItem","OptionsDoc","options","description","key","getPatternOptions","properties","patternProperties","allProperties","Object","propsInPattern","allPropsItems","p","pType","getOptionDisplayType","enum","pDefault","pEnumerable"],"mappings":"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","file":"OptionsDoc.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 49);\n","module.exports = require(\"react\");","module.exports = require(\"prop-types\");","module.exports = require(\"styled-components\");","module.exports = require(\"lodash\");","module.exports = require(\"@splunk/react-ui/Heading\");","module.exports = require(\"@splunk/ui-utils/i18n\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","module.exports = require(\"@splunk/react-ui/Markdown\");","module.exports = require(\"lodash/isEmpty\");","import { get, omit, reduce, toNumber, isString } from 'lodash';\nimport { OptionsSchema } from '../../src/common/interfaces/OptionsSchema';\nimport { isDynamicOption } from '../../src/common/utils/configUtils';\n\ninterface ArgTypeControl {\n    type: string;\n    options?: string[];\n    min?: number;\n    max?: number;\n}\n\ninterface ArgTypeEntry {\n    description?: string;\n    control: ArgTypeControl;\n    name: string;\n    defaultValue?: any;\n    type: { required: boolean };\n    optionType: string;\n    table: {\n        type: { summary: string };\n        defaultValue?: { summary: any };\n        category?: string;\n        subcategory?: string;\n        disable?: boolean;\n    };\n}\n\nexport interface ArgTypes {\n    [key: string]: ArgTypeEntry;\n}\n\ntype StoriesList = RegExp | string[];\n\n/**\n * Returns type options from pattern\n * @example\n * // returns ['fixed', 'absolute', 'off']\n * getPatternOptions('\\$(\\w+:)?([^$|:]+?)(\\|[|\\w]+)?\\$|^fixed$|^absolute$|^off$')\n * @example\n * // returns []\n * getPatternOptions('^>.*')\n * @param {string} patternString - visualization option type pattern\n * @return {string[]} array of type options\n */\nexport const getPatternOptions = (patternString): string[] =>\n    patternString.replace(/\\$/g, '').split('|^').slice(1);\n\n/**\n * Returns Storybook display type for an option\n * @param {object} option - visualization option\n * @return {string} Storybook display type\n */\nexport const getOptionDisplayType = (option): string => {\n    const { oneOf, anyOf, type, enum: en, pattern, items } = option;\n    let displayTypes: string[] = [];\n\n    // wrap values in quotes only if enum or pattern is string\n    const conditionalQuote = type === 'string' ? '\"' : '';\n    if (en && Array.isArray(en)) {\n        displayTypes = en.map(e => {\n            const enumQuote = typeof e === 'string' ? '\"' : '';\n            return `${enumQuote}${e}${enumQuote}`;\n        });\n    } else if (type === 'array' && items) {\n        return `${getOptionDisplayType(items)}[]`;\n    } else if (anyOf && Array.isArray(anyOf)) {\n        return getOptionDisplayType(anyOf[0]);\n    } else if (oneOf && Array.isArray(oneOf)) {\n        displayTypes = oneOf.map(item => getOptionDisplayType(item));\n    } else if (Array.isArray(type)) {\n        displayTypes = type;\n    } else if (pattern) {\n        displayTypes = getPatternOptions(pattern).map(p => `${conditionalQuote}${p}${conditionalQuote}`);\n    }\n\n    if (displayTypes.length > 0) {\n        return `(${displayTypes.join(' | ')})`;\n    }\n    return type;\n};\n\n/**\n * Returns Storybook control type for an option\n * @param {object} option - visualization option\n * @param {string} optionKey - visualization option key\n * @return {ArgTypeControl} Storybook control object\n */\nexport const getOptionControl = (option, optionKey): ArgTypeControl => {\n    const { anyOf } = option;\n    const schema = Array.isArray(anyOf) && anyOf.length ? anyOf[0] : option;\n\n    const type = Array.isArray(schema.type) ? schema.type[0] : schema.type;\n    const { maximum, minimum, enum: en } = schema;\n\n    const isColorOption = new RegExp(/color/, 'i').test(optionKey) && type !== 'array';\n\n    if (isColorOption) {\n        return { type: 'color' };\n    } else if (en && Array.isArray(en)) {\n        return { type: 'select', options: en };\n    } else if (anyOf && type === 'string' && anyOf[0].pattern) {\n        return { type: 'select', options: getPatternOptions(anyOf[0].pattern) };\n    } else if (type === 'number' && (minimum || maximum)) {\n        return {\n            type: 'range',\n            ...(typeof minimum === 'number' && { min: minimum }),\n            ...(typeof maximum === 'number' && { max: maximum }),\n        };\n    } else if (type === 'string') {\n        return { type: 'text' };\n    }\n\n    return { type };\n};\n\n/**\n * platform specific visualization option argTypes\n */\nconst objectTableControl = { control: { type: 'object' } };\nconst disableTableControl = { table: { disable: true } };\nexport const platformOptionArgTypes = {\n    context: objectTableControl,\n    dataSources: objectTableControl,\n    dataSource: disableTableControl,\n    options: disableTableControl,\n    onEventTrigger: { action: 'eventTrigger', ...disableTableControl },\n    hasEventHandlers: disableTableControl,\n};\n\n/**\n * Returns formatted Storybook argTypes for a visualization from its options schema\n * @param {OptionsSchema} options - visualization options\n * @param {string[]} requiredProps - required visualization props\n * @param {boolean} isPlatformViz - indicates if pure or platform visualization\n * @param {string} subcategory - nested property parent option name\n * @return {ArgTypes} Storybook argTypes\n */\nexport const optionsSchemaToArgTypes = ({\n    options = {},\n    requiredProps = [],\n    isPlatformViz = false,\n    subcategory = null,\n}: {\n    options: OptionsSchema;\n    requiredProps: string[];\n    isPlatformViz?: boolean;\n    subcategory?: string;\n}): ArgTypes => {\n    const validObjectTypeOptions = ['lineDashStylesByField', 'seriesColorsByField', 'seriesColorsByValue'];\n    let argTypes: ArgTypes = {};\n    Object.keys(options).forEach(optionKey => {\n        const option = get(options, optionKey);\n        if (option.type === 'object' && !validObjectTypeOptions.includes(optionKey)) {\n            // do not support controls for patternProperties, only nested properties\n            if (option.properties) {\n                argTypes = {\n                    ...argTypes,\n                    ...optionsSchemaToArgTypes({\n                        options: option.properties as OptionsSchema,\n                        isPlatformViz,\n                        requiredProps,\n                        subcategory: optionKey,\n                    }),\n                };\n            }\n        } else {\n            const { description, default: optionDefault } = option;\n            const optionControl = getOptionControl(option, optionKey);\n            const control = isPlatformViz ? { type: 'text' } : optionControl;\n            const required = requiredProps.includes(optionKey);\n\n            let defaultValue = optionDefault;\n            if (!isPlatformViz && isDynamicOption(optionDefault as string)) {\n                defaultValue = null;\n            }\n\n            argTypes[optionKey] = {\n                description,\n                control,\n                name: optionKey,\n                defaultValue,\n                type: { required },\n                optionType: optionControl.type,\n                table: {\n                    type: { summary: getOptionDisplayType(option) },\n                    defaultValue: { summary: defaultValue },\n                    ...(subcategory && {\n                        category: 'Nested Options',\n                        subcategory,\n                    }),\n                },\n            };\n        }\n    });\n\n    if (isPlatformViz) {\n        Object.assign(argTypes, platformOptionArgTypes);\n    }\n    return argTypes;\n};\n\n/**\n * Helper which converts string visualization options to their required type\n * @param {any} value - option values\n * @param {string} expectedType - expected option type\n * @return {any} correctly typed option value\n */\nexport const transformOptionType = (value, expectedType = 'string'): any => {\n    const isStringValue = !isDynamicOption(value) && isString(value);\n    if (isStringValue && expectedType === 'boolean') return value == 'true';\n    else if (isStringValue && expectedType === 'number') return toNumber(value);\n    return value;\n};\n\n// stringify these fields for storybook controls' support\nconst FieldsToStringify = [\n    'legendLabels',\n    'lineDashStylesByField',\n    'seriesColors',\n    'seriesColorsByField',\n    'seriesColorsByValue',\n];\n\n/**\n * Helper which returns platform visualization options from Storybook controls\n * Utilizes argTypes to determine valid and nested options\n * @param {object} args - visualization story args\n * @param {ArgTypes} argTypes - visualization argTypes\n * @return {object} visualization options\n */\nexport const getOptionsFromArgTypes = (args: Record<string, any>, argTypes: ArgTypes): Record<string, any> =>\n    reduce(\n        argTypes,\n        (accum, val, option) => {\n            const subcategory = get(val, 'table.subcategory');\n            const { optionType, defaultValue } = argTypes[option];\n            let controlledOption = transformOptionType(get(args, option), optionType);\n            // filter options from react & json if set to default value or is undefined\n            if (optionType && controlledOption != null && controlledOption !== defaultValue) {\n                // parse the value if option is stringified as part of flattenVizOptions\n                if (FieldsToStringify.includes(option)) {\n                    try {\n                        controlledOption = JSON.parse(controlledOption);\n                    } catch (e) {\n                        controlledOption = null;\n                    }\n                }\n                if (subcategory) {\n                    if (!accum[subcategory]) accum[subcategory] = {};\n                    accum[subcategory][option] = controlledOption;\n                } else accum[option] = controlledOption;\n            }\n            return accum;\n        },\n        { ...omit(args.options, Object.keys(argTypes)) }\n    );\n\n/**\n * Helper which flattens objects single depth level\n * @param {object} options - visualization options object\n * @return {object} flattened visualization options\n */\nexport const flattenVizOptions = (options: Record<string, any>): Record<string, any> => {\n    const nonFlattenOptions = new Set(['y2Fields', 'overlayFields', 'gaugeRanges']);\n\n    return reduce(\n        options,\n        (accum, val, option) => {\n            if (!platformOptionArgTypes[option]) {\n                if (typeof val === 'object' && FieldsToStringify.includes(option))\n                    accum[option] = JSON.stringify(val);\n                else if (typeof val === 'object' && !nonFlattenOptions.has(option))\n                    accum = { ...accum, ...val };\n                else accum[option] = val;\n            }\n            return accum;\n        },\n        {}\n    );\n};\n/**\n * Returns value based on Storybook publishing status\n * @param {T} publishedStories - stories to include in published Storybook\n * @param {T} localStories - stories to include in local Storybook\n * @return {T} one of the two params\n */\nexport const getStoriesToInclude = <T>(publishedStories: T, localStories: T): T =>\n    process.env.STORYBOOK_PUBLISH ? publishedStories : localStories;\n\n/**\n * Returns component level stories to include, defaults to innclude all stories\n * @param {StoriesList} stories - stories to include in published Storybook\n * @return {object} CSF includeStories config\n */\nexport const componentStoriesToInclude = (stories: StoriesList): object =>\n    getStoriesToInclude({ includeStories: stories }, {});\n","export enum VizBehavior {\n    /**\n     * Dynamic Options Behavior.\n     * This allows visualization options to be powered by data\n     *\n     * **Example**\n     *\n     * sparklineValues: \">primary|seriesByIndex(0)\"\n     * would configure sparklineValues with an array of data points\n     * coming from the first series in the primary datasource\n     *\n     */\n    DYNAMIC_OPTIONS = 'dynamic-options',\n    EVENTS = 'events',\n    /**\n     * Placeholder behavior: visualization will display a placeholder rather than fail if any of the `requiredProps` is\n     * missing.\n     * @type {string}\n     */\n    PLACEHOLDER = 'placeholder',\n    PAGE_AND_SORT = 'page-and-sort',\n}\n","import React from 'react';\nimport T from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport Heading from '@splunk/react-ui/Heading';\nimport Markdown from '@splunk/react-ui/Markdown';\nimport styled from 'styled-components';\nimport { getOptionDisplayType, getPatternOptions } from '../../.storybook/utils/storybookUtils';\n\nconst Option = styled.div`\n    margin-top: 20px;\n`;\nconst OptionName = styled.div`\n    color: #5ca300;\n    padding-bottom: 5px;\n`;\nconst PairContainer = styled.div`\n    margin-left: 40px;\n    margin-top: 10px;\n`;\nconst PairTitle = styled.span`\n    display: inline-block;\n    color: #8293a7;\n    width: 80px;\n`;\n\nconst PairValue = styled.span`\n    font-family: 'Splunk Platform Mono', 'monospace';\n    white-space: pre;\n`;\n\nconst PropertiesWrapper = styled.div`\n    margin-left: ${props => (props.isPatternProperty ? 0 : 40)}px;\n    margin-top: 20px;\n`;\n\nconst PropertiesContainer = styled.div`\n    margin-left: ${props => (props.isPatternProperty ? 40 : 0)}px;\n    margin-top: 10px;\n`;\n\nconst PropertiesContent = styled.div`\n    margin-left: ${props => (props.isPatternProperty ? 40 : 0)}px;\n`;\n\n/**\n * @method isOneOfJsonSchema\n * @param {object} item\n * @returns {boolean}\n */\nconst isOneOfJsonSchema = item => item.oneOf && Array.isArray(item.oneOf);\n\n/**\n * get Or type as string\n * @method getOrType\n * @param {object} item\n * @param {string} res\n * @returns {string} res  eg: (string | number)\n */\nconst getOrType = item => {\n    let res = '';\n\n    if (isOneOfJsonSchema(item)) {\n        res = item.oneOf\n            .map(one => {\n                if (one.type !== 'array') {\n                    return one.type;\n                }\n                // eslint-disable-next-line no-use-before-define\n                return getArrayType(one, '');\n            })\n            .join(' | ');\n    } else if (Array.isArray(item.type)) {\n        if (isEmpty(item.default)) {\n            return item.type.join(' | ');\n        }\n\n        res = item.type.filter(itemType => itemType !== 'string').join(' | ');\n        res += ' | ';\n        res += `\"${item.default}\"`;\n    }\n\n    return res;\n};\n\n/**\n * get the array type as string\n * @method getArrayType\n * @param {object} item\n * @param {string} res\n * @returns {string} res  eg: arrayOf(arrayOf(string | number | arrayOf(string | number)))\n */\nconst getArrayType = (item, res = '') => {\n    if (item.type !== 'array') {\n        if (Array.isArray(item.type) || isOneOfJsonSchema(item)) {\n            return getOrType(item);\n        }\n\n        return item.type;\n    }\n\n    if (item.type === 'array') {\n        res += 'arrayOf('; // eslint-disable-line no-param-reassign\n    }\n    res += getArrayType(item.items, ''); // eslint-disable-line no-param-reassign\n    res += ')'; // eslint-disable-line no-param-reassign\n    return res;\n};\n\n/**\n * get the type of this option item\n * @method getType\n * @param {ojbect} item option item\n * @returns {string} type\n */\nexport const getType = item => {\n    if (isOneOfJsonSchema(item)) {\n        return `oneOf(${getOrType(item)})`;\n    }\n    if (item.enum && Array.isArray(item.enum)) {\n        const values =\n            !isEmpty(item.enum) && typeof item.enum[0] === 'string'\n                ? item.enum.map(v => `\"${v}\"`).join(', ')\n                : item.enum.join(', ');\n\n        return `oneOf([${values}])`;\n    }\n\n    if (Array.isArray(item.type)) {\n        return getOrType(item);\n    }\n\n    if (item.type === 'array') {\n        if ('items' in item) {\n            return `arrayOf(${getType(item.items)})`;\n        }\n        return 'array';\n    }\n    return item.type;\n};\n\n/**\n * get the default value as string\n * @method getDefaultValue\n * @param {object | boolean | number | string} defaultValue\n * @returns {string} default value\n */\nconst getDefaultValue = defaultValue => {\n    if (typeof defaultValue === 'boolean' || typeof defaultValue === 'number') {\n        return defaultValue.toString();\n    }\n    if (Array.isArray(defaultValue)) {\n        const values = defaultValue.map(v => JSON.stringify(v)).join(', ');\n        return `[${values}]`;\n    }\n    return defaultValue;\n};\n\nconst Pair = ({ title, text }) => (\n    <PairContainer>\n        <PairTitle>{`${title}:`}</PairTitle>\n        <PairValue>{text}</PairValue>\n    </PairContainer>\n);\n\nPair.propTypes = {\n    title: T.string,\n    text: T.string,\n};\n\nconst PropertyItems = ({ isPatternProperty = false, propsItems }) => (\n    <PropertiesContainer isPatternProperty={isPatternProperty}>\n        {isPatternProperty ? <PairTitle>{_('[fieldName]:')}</PairTitle> : null}\n        <PropertiesContent isPatternProperty={isPatternProperty}>{propsItems}</PropertiesContent>\n    </PropertiesContainer>\n);\n\nPropertyItems.propTypes = {\n    isPatternProperty: T.bool,\n    propsItems: T.array,\n};\n\nconst OptionItem = ({ name, type, desc, defaultValue, enumerable, PropertiesSection }) => (\n    <Option>\n        <OptionName>{name}</OptionName>\n        <Markdown style={{ marginLeft: 40 }} text={desc} />\n        <Pair title={_('Type')} text={type} />\n        {enumerable?.length > 0 && (\n            <Pair\n                title={_('oneOf')}\n                text={`(${enumerable\n                    .map(\n                        entry =>\n                            `${typeof entry === 'string' ? '\"' : ''}${entry}${\n                                typeof entry === 'string' ? '\"' : ''\n                            }`\n                    )\n                    .join(' | ')})`}\n            />\n        )}\n        {defaultValue && <Pair title={_('Default')} text={defaultValue} />}\n        {PropertiesSection}\n    </Option>\n);\n\nOptionItem.propTypes = {\n    name: T.string,\n    type: T.string,\n    desc: T.string,\n    enumerable: T.arrayOf(T.oneOfType([T.string, T.number])),\n    defaultValue: T.string,\n    PropertiesSection: T.element,\n};\n\nOptionItem.default = {\n    PropertiesItem: null,\n};\n\nconst OptionsDoc = ({ options, description }) => (\n    <div>\n        {options.length === 0 ? (\n            <Heading level={4}> No Options</Heading>\n        ) : (\n            <Heading level={4}>Options</Heading>\n        )}\n        {description && <div>{description}</div>}\n        {Object.entries(options).map(([key, item]) => {\n            let type;\n            let enumerable = [];\n            let PropertiesSection = null;\n\n            // get oneOf property listing\n            if (typeof item.anyOf?.[0]?.pattern === 'string') {\n                enumerable = getPatternOptions(item.anyOf[0].pattern);\n            } else if (item.enum) {\n                enumerable = item.enum;\n            }\n\n            // get properties for object type\n            if (item.type === 'object') {\n                type = item.type;\n\n                const { properties } = item;\n                const { patternProperties } = item;\n                let allProperties = [];\n                let isPatternProperty = false;\n\n                // the properties either comes from property field of the option schema item\n                // or from the property field of each patternProperties of the option schema item\n                // can check table tableFormat and columnFormat as examples\n                if (!isEmpty(properties)) {\n                    allProperties = [properties];\n                } else if (!isEmpty(patternProperties)) {\n                    Object.keys(patternProperties).forEach(patternKey => {\n                        const propsInPattern = patternProperties[patternKey].properties;\n                        if (propsInPattern) {\n                            allProperties.push(propsInPattern);\n                        }\n                    });\n\n                    isPatternProperty = true;\n                }\n\n                if (allProperties.length) {\n                    const allPropsItems = allProperties.map(props => {\n                        const propsItems = Object.keys(props).map(pKey => {\n                            const p = props[pKey];\n                            let pType = getOptionDisplayType({ ...p.anyOf[0], enum: p.enum });\n                            const pDefault = getDefaultValue(p.default);\n\n                            let pEnumerable;\n                            // get nested oneOf property listing\n                            if (typeof p.anyOf?.[0]?.pattern === 'string') {\n                                pEnumerable = getPatternOptions(p.anyOf[0].pattern);\n                            } else if (p.anyOf?.[0]?.items?.enum?.length > 0) {\n                                // quick fix for nested `columnFormat` enumerables that replaces enums within brackets with raw JS types\n                                pType = pType.replace(/\\((.+?)\\)/g, 'string');\n                                pEnumerable = p.anyOf[0].items.enum;\n                            } else if (p.anyOf?.[0]?.items?.items?.enum?.length > 0) {\n                                // quick fix for nested `tableFormat` enumerables that replaces enums within brackets with raw JS types\n                                pType = pType.replace(/\\((.+?)\\)/g, 'string');\n                                pEnumerable = p.anyOf[0].items.items.enum;\n                            } else if (p.enum) {\n                                pEnumerable = p.enum;\n                            }\n\n                            // use the JS types (e.g. string, number) of the nested property if the nested property is an enumerable\n                            if (pEnumerable?.length) {\n                                pType = p.anyOf?.[0]?.type !== 'array' ? p.anyOf?.[0]?.type : pType;\n                                if (Array.isArray(pType)) {\n                                    pType = pType.join(' | ');\n                                }\n                            }\n\n                            return (\n                                <OptionItem\n                                    key={pKey}\n                                    name={pKey}\n                                    type={pType}\n                                    enumerable={pEnumerable}\n                                    desc={p.description}\n                                    defaultValue={pDefault}\n                                />\n                            );\n                        });\n                        return (\n                            <PropertyItems\n                                key={propsItems}\n                                isPatternProperty={isPatternProperty}\n                                propsItems={propsItems}\n                            />\n                        );\n                    });\n\n                    PropertiesSection = (\n                        <PropertiesWrapper isPatternProperty={isPatternProperty}>\n                            {allPropsItems}\n                        </PropertiesWrapper>\n                    );\n                }\n            } else if (enumerable?.length) {\n                // use the JS types (e.g. string, number) of the property if the property is an enumerable\n                type = item.anyOf?.[0]?.type;\n                if (Array.isArray(type)) {\n                    type = type.join(' | ');\n                }\n            } else {\n                type = getOptionDisplayType({ ...item.anyOf[0], enum: item.enum });\n            }\n\n            return (\n                <OptionItem\n                    key={key}\n                    name={key}\n                    // item.anyOf in the config.ts is a tuple which holds [{ type, pattern, items }, { type, pattern: DYNAMIC_OPTIONS_PATTERN }]\n                    type={type}\n                    enumerable={enumerable}\n                    desc={item.description}\n                    defaultValue={getDefaultValue(item.default)}\n                    PropertiesSection={PropertiesSection}\n                />\n            );\n        })}\n    </div>\n);\n\nOptionsDoc.propTypes = {\n    options: T.object.isRequired,\n    description: T.string,\n};\n\nexport default OptionsDoc;\n","import { get, range } from 'lodash';\nimport { DYNAMIC_OPTIONS_DSL_PATTERN } from '@splunk/visualizations-shared/schemaUtils';\nimport { VizBehavior } from '../interfaces/VizBehavior';\nimport { VizConfig } from '../interfaces/VizConfig';\nimport { OptionsSchema } from '../interfaces/OptionsSchema';\nimport type { JSONSchema7Definition } from 'json-schema';\n\nexport interface PresetEntry {\n    name: string;\n    value: any;\n    label: string;\n}\n\nconst dynamicOptionsDSLType = {\n    type: 'string',\n    pattern: DYNAMIC_OPTIONS_DSL_PATTERN,\n} as const;\n\n/**\n * Helper function to extend an options schema with dynamic options DSL\n * @param optionsSchema a visualization's options schema\n * @returns an updated options schema that additionally allows strings starting with > for each option\n */\nfunction enhanceOptionsSchemaWithDynamicOptions(\n    optionsSchema: OptionsSchema | JSONSchema7Definition\n): OptionsSchema {\n    const enhancedOptionsSchema: OptionsSchema = {};\n    Object.keys(optionsSchema).forEach((key): void => {\n        const {\n            // The next a few are schema annotations, we should leave them as is.\n            // Note: in reality we don't use `readOnly`, `writeOnly` or `examples`, but they are listed here for completeness.\n            // Ref: https://datatracker.ietf.org/doc/html/draft-handrews-json-schema-validation-01\n            title,\n            description,\n            readOnly,\n            writeOnly,\n            examples,\n            default: defaultValue,\n            // The next a few need special care\n            type,\n            properties,\n            patternProperties,\n            // The rest should be handled together\n            ...remainingSchemaEntry\n        } = optionsSchema[key];\n\n        const annotations = {\n            ...(title !== undefined && { title }),\n            ...(description !== undefined && { description }),\n            ...(readOnly !== undefined && { readOnly }),\n            ...(writeOnly !== undefined && { writeOnly }),\n            ...(examples !== undefined && { examples }),\n            ...(defaultValue !== undefined && { default: defaultValue }),\n        };\n\n        if (type === 'object') {\n            enhancedOptionsSchema[key] = {\n                ...remainingSchemaEntry,\n                ...annotations,\n                type,\n                ...(properties && { properties: enhanceOptionsSchemaWithDynamicOptions(properties) }),\n            };\n            if (patternProperties) {\n                let enhancedPatternProperties = {};\n                Object.keys(patternProperties).forEach((key): void => {\n                    enhancedPatternProperties = {\n                        ...enhancedPatternProperties,\n                        ...enhanceOptionsSchemaWithDynamicOptions({ [key]: patternProperties[key] }),\n                    };\n                });\n                enhancedOptionsSchema[key].patternProperties = enhancedPatternProperties;\n            }\n        } else {\n            enhancedOptionsSchema[key] = {\n                ...annotations,\n                anyOf: [\n                    // we can't assume `type` is always there because there are `enum` and `const`.\n                    { ...(type !== undefined && { type }), ...remainingSchemaEntry },\n                    dynamicOptionsDSLType,\n                ],\n            };\n        }\n    });\n    return enhancedOptionsSchema;\n}\n\n/**\n * Helper function to enhance a Visualization Config as needed based on behaviors specified in supports block\n * @param vizConfig a Visualization Config\n * @returns an enhanced Visualization Config containing updated config entries based on behaviors it supports\n */\nfunction enhanceConfig(vizConfig: VizConfig): VizConfig {\n    const enhancedConfig: VizConfig = vizConfig;\n    if (vizConfig.supports.indexOf(VizBehavior.DYNAMIC_OPTIONS) !== -1) {\n        enhancedConfig.optionsSchema = enhanceOptionsSchemaWithDynamicOptions(vizConfig.optionsSchema);\n    }\n    return enhancedConfig;\n}\n\nfunction isDynamicOption(option?: string): boolean {\n    return (option && typeof option === 'string' && option.trim().startsWith('>')) || false;\n}\n\n// private helpers to improve readability of getInitialPreset\n// this shouldn't be tested since this util isn't something that we expect to use outside of getInitialPreset\n\n/**\n * this checks to make sure that all values within vizContext are compatible with the given preset's context to determine the initialPreset\n * if a preset has explicitly specified a key as being undefined, the vizContext must also has that key as undefined, or else this CANNOT be the initialPreset\n * the inverse is true; if a preset has key is NOT undefined, it must also be NOT undefined in the corresponding vizContext\n * the internal config contents are irrelevant (as the user could customize them in source), just as long as the presence of `undefined`s match up\n *\n * Since the presetConfigs have explicit undefined keys to override the existing config, we need to explicitly check the undefined values\n */\nfunction hasCompatibleContexts(\n    vizContext: { [configKey: string]: any },\n    presetContext: { [configKey: string]: any }\n): boolean {\n    const presetContextKeys = Object.keys(presetContext);\n    return presetContextKeys.every(\n        (contextKey): boolean =>\n            (presetContext[contextKey] === undefined && vizContext[contextKey] === undefined) ||\n            (presetContext[contextKey] !== undefined && vizContext[contextKey] !== undefined)\n    );\n}\n\n/**\n * Checks to make sure that dynamic (non-dynamic) options in a given preset are also dynamic (non-dynamic) in the vizOptions\n */\nfunction hasCompatibleOptions(\n    vizOptions: { [configKey: string]: any },\n    presetOptions: { [configKey: string]: any }\n): boolean {\n    const presetOptionKeys = Object.keys(presetOptions);\n    return presetOptionKeys.every(\n        (optionKey): boolean =>\n            isDynamicOption(presetOptions[optionKey]) === isDynamicOption(vizOptions[optionKey])\n    );\n}\n\n/**\n * Evaluates whether there is an initialPreset that fits the current state of vizContext + vizOptions\n * This function ignores extraneous vizOptions or vizContext keys, as they could be outside the scope of what the preset is intended to configure\n *\n * @param {Object} vizContext - the current vizContext definition\n * @param {Object} vizOptions - the current vizOptions definition\n * @param {PresetEntry[]} presets - the list of presets, one of which can be considered an initialPreset\n */\nfunction getInitialPreset(\n    vizContext: { [configKey: string]: any },\n    vizOptions: { [configKey: string]: any },\n    presets: PresetEntry[]\n): PresetEntry | null {\n    return presets.find((preset): boolean => {\n        const presetContext = get(preset, ['value', 'context'], {});\n        const presetOptions = get(preset, ['value', 'options'], {});\n        const presetContextKeys = Object.keys(presetContext);\n        const presetOptionKeys = Object.keys(presetOptions);\n\n        // all presets have to explicitly specify which options to reset (i.e. need explicitly undefined keys)\n        // if not, then the preset is invalid in config.ts\n        if (presetContextKeys.length === 0 || presetOptionKeys.length === 0) return false;\n\n        return (\n            hasCompatibleContexts(vizContext, presetContext) &&\n            hasCompatibleOptions(vizOptions, presetOptions)\n        );\n    });\n}\n\ninterface PrecisionOption {\n    label: string;\n    value: number;\n}\n\n/**\n * generates number precision values for a Select editor\n *\n * @param {Number} numPrecisionValues - number of integer precision values to generate\n * @returns {{ label: string; value; string  }[]} array of { label, value } tuples\n */\nfunction generatePrecisionValues(numPrecisionValues: number): PrecisionOption[] {\n    return range(0, numPrecisionValues + 1).map(\n        (i): PrecisionOption => ({\n            label: `${i} (0${i > 0 ? '.' : ''}${'0'.repeat(i)})`, // e.g. 0.000 for numPrecisionValues = 3\n            value: i,\n        })\n    );\n}\n\nexport {\n    enhanceConfig,\n    enhanceOptionsSchemaWithDynamicOptions,\n    isDynamicOption,\n    getInitialPreset,\n    generatePrecisionValues,\n};\n","module.exports = require(\"@splunk/visualizations-shared/schemaUtils\");"],"sourceRoot":""}