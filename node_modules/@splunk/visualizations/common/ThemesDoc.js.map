{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"prop-types\"","webpack:///external \"@splunk/react-ui/ColumnLayout\"","webpack:///external \"@babel/runtime/helpers/typeof\"","webpack:///external \"@splunk/visualizations-shared/colorUtils\"","webpack:///external \"@babel/runtime/helpers/slicedToArray\"","webpack:///external \"styled-components\"","webpack:///external \"@splunk/visualization-themes/variables\"","webpack:///external \"@splunk/react-ui/Select\"","webpack:///external \"lodash/omit\"","webpack:///external \"lodash/cloneDeep\"","webpack:///external \"@splunk/react-ui/Message\"","webpack:///external \"@splunk/react-ui/Tooltip\"","webpack:///external \"@splunk/themes/SplunkThemeProvider\"","webpack:///external \"@splunk/react-ui/Heading\"","webpack:///./src/common/ThemesDoc.jsx"],"names":["ThemeVar","styled","ThemeVarName","props","PairContainer","PairTitle","ColorPreview","Pair","title","text","isColor","T","string","themeFamilyMapping","enterprise","colorScheme","dark","light","prisma","themeIdToVariant","enterpriseLightComfortable","density","family","label","enterpriseLightCompact","enterpriseDarkComfortable","enterpriseDarkCompact","prismaLightComfortable","prismaLightCompact","prismaDarkComfortable","prismaDarkCompact","ThemesDoc","renderVisualization","themeVars","useState","highlightedThemeVariable","setHighlightedThemeVariable","selectedTheme","setSelectedTheme","previewTheme","cloneDeep","marginTop","value","padding","themeValue","theme","splunkThemeV1","omit","isFromSharedVariables","isJSON","JSON","varKey","themes","isRequired"],"mappings":"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","file":"ThemesDoc.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 64);\n","module.exports = require(\"react\");","module.exports = require(\"prop-types\");","module.exports = require(\"@splunk/react-ui/ColumnLayout\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","module.exports = require(\"@splunk/visualizations-shared/colorUtils\");","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","module.exports = require(\"styled-components\");","module.exports = require(\"@splunk/visualization-themes/variables\");","module.exports = require(\"@splunk/react-ui/Select\");","module.exports = require(\"lodash/omit\");","module.exports = require(\"lodash/cloneDeep\");","module.exports = require(\"@splunk/react-ui/Message\");","module.exports = require(\"@splunk/react-ui/Tooltip\");","module.exports = require(\"@splunk/themes/SplunkThemeProvider\");","module.exports = require(\"@splunk/react-ui/Heading\");","/* eslint-disable react/no-multi-comp */\nimport React, { useState } from 'react';\nimport T from 'prop-types';\nimport Heading from '@splunk/react-ui/Heading';\nimport styled from 'styled-components';\nimport omit from 'lodash/omit';\nimport cloneDeep from 'lodash/cloneDeep';\nimport ColumnLayout from '@splunk/react-ui/ColumnLayout';\nimport Select from '@splunk/react-ui/Select';\nimport Message from '@splunk/react-ui/Message';\nimport Tooltip from '@splunk/react-ui/Tooltip';\nimport SplunkThemeProvider from '@splunk/themes/SplunkThemeProvider';\nimport { isColor } from '@splunk/visualizations-shared/colorUtils';\nimport * as sharedThemeVariables from '@splunk/visualization-themes/variables';\n\nconst ThemeVar = styled.div`\n    margin-top: 20px;\n    cursor: pointer;\n`;\nconst ThemeVarName = styled.div`\n    color: #5ca300;\n    padding-bottom: 5px;\n    display: inline-block;\n    padding-right: 5px;\n    font-weight: ${props => (props.highlighted ? 'bold' : 'normal')};\n`;\nconst PairContainer = styled.div`\n    margin-left: 40px;\n    margin-top: 10px;\n`;\nconst PairTitle = styled.span`\n    display: inline-block;\n    color: #8293a7;\n    width: 80px;\n`;\nconst ColorPreview = styled.div`\n    width: 20px;\n    height: 20px;\n    background: ${props => props.color};\n    display: inline-block;\n    vertical-align: bottom;\n    margin-right: 5px;\n    border: 1px solid rgba(0, 0, 0, 0.3);\n    border-radius: 5px;\n`;\n\nconst Pair = ({ title, text }) => (\n    <PairContainer>\n        <PairTitle>{`${title}:`}</PairTitle>\n        {isColor(text) && <ColorPreview color={text} />}\n        <samp>{text}</samp>\n    </PairContainer>\n);\nPair.propTypes = {\n    title: T.string,\n    text: T.string,\n};\n\nconst themeFamilyMapping = {\n    enterprise: {\n        colorScheme: {\n            dark: 'enterpriseDark',\n            light: 'enterprise',\n        },\n    },\n    prisma: {\n        colorScheme: {\n            dark: 'scp',\n            light: 'enterprise',\n        },\n    },\n};\n\nconst themeIdToVariant = {\n    enterpriseLightComfortable: {\n        colorScheme: 'light',\n        density: 'comfortable',\n        family: 'enterprise',\n        label: 'Enterprise Light Comfortable',\n    },\n    enterpriseLightCompact: {\n        colorScheme: 'light',\n        density: 'compact',\n        family: 'enterprise',\n        label: 'Enterprise Light Compact',\n    },\n    enterpriseDarkComfortable: {\n        colorScheme: 'dark',\n        density: 'comfortable',\n        family: 'enterprise',\n        label: 'Enterprise Dark Comfortable',\n    },\n    enterpriseDarkCompact: {\n        colorScheme: 'dark',\n        density: 'compact',\n        family: 'enterprise',\n        label: 'Enterprise Dark Compact',\n    },\n    prismaLightComfortable: {\n        colorScheme: 'light',\n        density: 'comfortable',\n        family: 'prisma',\n        label: 'Prisma Light Comfortable',\n    },\n    prismaLightCompact: {\n        colorScheme: 'light',\n        density: 'compact',\n        family: 'prisma',\n        label: 'Prisma Light Compact',\n    },\n    prismaDarkComfortable: {\n        colorScheme: 'dark',\n        density: 'comfortable',\n        family: 'prisma',\n        label: 'Prisma Dark Comfortable',\n    },\n    prismaDarkCompact: {\n        colorScheme: 'dark',\n        density: 'compact',\n        family: 'prisma',\n        label: 'Prisma Dark Compact',\n    },\n};\n\nconst ThemesDoc = props => {\n    const { renderVisualization, themes: themeVars } = props;\n    const [highlightedThemeVariable, setHighlightedThemeVariable] = useState('');\n    const [selectedTheme, setSelectedTheme] = useState(themeIdToVariant.enterpriseLightComfortable);\n    const previewTheme = cloneDeep(themeVars);\n    // if the highlighted theme variable is a color, color it red\n    // TODO(fkurniawan): fix red highlighting. this broke ~v20.7.0, and approach needs to be modified again owing to SUI upgrade\n    if (isColor(themeVars[highlightedThemeVariable])) {\n        previewTheme[highlightedThemeVariable] = () => 'red';\n    }\n    return (\n        <ColumnLayout style={{ marginTop: -20 }}>\n            <ColumnLayout.Row>\n                <ColumnLayout.Column span={12}>\n                    <Heading level={4}>Theme</Heading>\n                    <Select value={selectedTheme} onChange={(e, { value }) => setSelectedTheme(value)}>\n                        {Object.keys(themeIdToVariant).map(themeId => (\n                            <Select.Option\n                                key={themeId}\n                                label={themeIdToVariant[themeId].label}\n                                value={themeIdToVariant[themeId]}\n                            />\n                        ))}\n                    </Select>\n                </ColumnLayout.Column>\n            </ColumnLayout.Row>\n            <ColumnLayout.Row>\n                <ColumnLayout.Column colStyle={{ padding: 10 }} span={4}>\n                    <Heading level={4}>Preview</Heading>\n                    <SplunkThemeProvider\n                        family={selectedTheme.family}\n                        colorScheme={selectedTheme.colorScheme}\n                        density={selectedTheme.density}\n                    >\n                        {renderVisualization()}\n                    </SplunkThemeProvider>\n                    <Message type=\"info\">\n                        This preview may differ from the visualization&apos;s default look and feel. <br />\n                        It exists to show areas affected by theme variables.\n                    </Message>\n                </ColumnLayout.Column>\n                <ColumnLayout.Column colStyle={{ padding: 10 }} span={8}>\n                    <Heading level={4}>Variables</Heading>\n                    {Object.keys(previewTheme).map(varKey => {\n                        const themeValue = previewTheme[varKey]({\n                            theme: { splunkThemeV1: omit(selectedTheme, ['label']) },\n                        });\n                        // if a theme variable is in @splunk/visualization-themes and it has the same value\n                        // we assume we used the shared variable.\n                        const isFromSharedVariables =\n                            sharedThemeVariables?.[\n                                themeFamilyMapping?.[selectedTheme.family]?.[selectedTheme.colorScheme]\n                            ]?.[varKey] === themeValue;\n                        // for now we only show simple theme values (nested theme objects shouldn't have been introduced in the first place)\n                        let isJSON;\n                        try {\n                            isJSON = typeof JSON.parse(themeValue) === 'object';\n                        } catch (e) {} // eslint-disable-line no-empty\n                        return (\n                            !isJSON && (\n                                <ThemeVar\n                                    key={varKey}\n                                    onMouseOver={() => setHighlightedThemeVariable(varKey)}\n                                    onMouseOut={() => setHighlightedThemeVariable('')}\n                                >\n                                    <ThemeVarName\n                                        highlighted={varKey === highlightedThemeVariable}\n                                    >{`${varKey}`}</ThemeVarName>\n                                    {isFromSharedVariables && (\n                                        <Tooltip content=\"This is a shared theme variable from @splunk/visualization-themes\" />\n                                    )}\n                                    <Pair title=\"Value\" text={themeValue} />\n                                </ThemeVar>\n                            )\n                        );\n                    })}\n                </ColumnLayout.Column>\n            </ColumnLayout.Row>\n        </ColumnLayout>\n    );\n};\n\nThemesDoc.propTypes = {\n    themes: T.object.isRequired, // @TODO: replace with themes object from viz config when we add docs/descs to theme vars\n    renderVisualization: T.func.isRequired,\n};\n\nexport default ThemesDoc;\n"],"sourceRoot":""}