{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"lodash\"","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"@splunk/visualizations-shared/numberUtils\"","webpack:///external \"@splunk/visualizations-shared/propUtils\"","webpack:///external \"@splunk/visualizations-shared/colorConstants\"","webpack:///external \"@splunk/visualizations-shared/domUtils\"","webpack:///./src/common/utils/singleValueUtils.js"],"names":["DEFAULT_FONT","DEFAULT_FONT_FAMILY","shouldShowTrend","trendDisplay","isLoadingOrNoColumns","data","get","noColumns","loading","getFormattedColor","formatColor","hasBackground","backgroundColor","isIdenticalColor","colorA","colorB","getDefaultColorWithBg","defaultFontColor","defaultBlockFontColor","getMajorColor","majorColor","getTrendColor","trendColor","trendValue","majorValue","customizedBgColor","defaultColors","Number","defaultBackgroundColor","isInvalidTrend","parseFloat","computeColors","props","backgroundEnabled","underLabelColor","computeText","value","numberPrecision","shouldUseThousandSeparators","shouldAbbreviateTrendValue","text","formatNumber","useThousandSeparators","useTrendUnits","getMajorText","getTrendText","compute","isNumerial","showPercent","diff","Math","val","computeFontSize","width","height","fontFamily","fontWeight","widthInDefaultFont","computeTextSize","fontSize","parseInt","getMajorFontSize","unit","majorText","spaceRatio","majorTextCalc","getTrendFontSize","trendText","trendFontSize","getUnderLabelHeight","getUnderLabel","underLabel","getMajorAndTrend","majorFontSize","majorTextSpaceRatio","textContentWidth","textContentHeight","majorTextFontSize","trendTextFontSize","updateVizInSmallSpace","toRemoveList","removeIndex","newProps","newMajorAndTrend","newTextSize","toRemove","truncateValue","updatedProps","computeSingleValueContent","contentWidth","contentHeight","containerWidth","containerHeight","majorValueTitle","smallVizProps","getGraphColors","customColorFormatter","adjustRGB","rgb","changeColor","hex","color","r","g","b","newR","newG","newB","ratio","lighten","darken","handleValueClickCallback","payload","name","majorValueField","onValueClick"],"mappings":"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","file":"singleValueUtils.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","module.exports = require(\"lodash\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@splunk/visualizations-shared/numberUtils\");","module.exports = require(\"@splunk/visualizations-shared/propUtils\");","module.exports = require(\"@splunk/visualizations-shared/colorConstants\");","module.exports = require(\"@splunk/visualizations-shared/domUtils\");","import { get } from 'lodash';\nimport { isNumerial, formatNumber } from '@splunk/visualizations-shared/numberUtils';\nimport { computeTextSize } from '@splunk/visualizations-shared/domUtils';\nimport { formatColor } from '@splunk/visualizations-shared/propUtils';\nimport { DELTA_GREEN, DELTA_RED } from '@splunk/visualizations-shared/colorConstants';\n\nexport const DEFAULT_FONT = 12;\nexport const DEFAULT_FONT_FAMILY =\n    '\"Splunk Platform Sans\", \"Proxima Nova\", \"Helvetica Neue\", Helvetica, Arial, sans-serif';\n\n/**\n * @method shouldShowTrend\n * @param {String} trendDisplay\n * @returns {Bool}\n */\nexport const shouldShowTrend = trendDisplay => trendDisplay === 'absolute' || trendDisplay === 'percent';\n\n/**\n * @method isLoadingOrNoColumns\n * @param {Object} dataSources\n * @param {Boolean} loading\n * @returns {Boolean} return true if loading or without columns in dataSources\n */\nexport const isLoadingOrNoColumns = (dataSources, loading) => {\n    const data = get(dataSources, 'primary.data.columns[0]', undefined);\n    const noColumns = data === undefined;\n    return loading || noColumns;\n};\n\n/**\n * Retrieve the valid formatted color\n * @method getFormattedColor\n * @param {String} color\n * @param {String} defaultColor\n * @returns {String} the formatted color\n */\nexport const getFormattedColor = (color, defaultColor) => formatColor(color) || formatColor(defaultColor);\n\n/**\n * Determines if there is a background color\n * @method hasBackground\n * @param {String} backgroundColor\n * @returns true for non-transparent background color\n */\nexport const hasBackground = backgroundColor => !!backgroundColor && backgroundColor !== 'transparent';\n\n/**\n * @method isIdenticalColor\n * @param {String} colorA\n * @param {String} colorB\n * @returns {Boolean}\n */\nexport const isIdenticalColor = (colorA, colorB) =>\n    !!colorA && !!colorB && formatColor(colorA.toLowerCase()) === formatColor(colorB.toLowerCase());\n\n/*\n * @method getDefaultColorWithBg\n * @param {Object} props\n * @param {String} props.backgroundColor\n * @param {String} props.defaultFontColor\n * @param {String} props.defaultBlockFontColor\n * @returns {String} defaultColor\n */\nexport const getDefaultColorWithBg = ({ backgroundColor, defaultFontColor, defaultBlockFontColor }) =>\n    isIdenticalColor(backgroundColor, defaultBlockFontColor) ? defaultFontColor : defaultBlockFontColor;\n\n/*\n * @method getMajorColor\n * return formatted majorColor.\n * @param {Object} props\n * @param {String} props.majorColor\n * @param {String} props.backgroundColor\n * @param {String} props.defaultFontColor\n * @param {String} props.defaultBlockFontColor\n * @returns {String} majorColor\n */\nexport const getMajorColor = ({ majorColor, backgroundColor, defaultFontColor, defaultBlockFontColor }) => {\n    // If backgroundColor is set, but no majorColor,\n    // the default majorColor will turn to be defaultBlockFontColor.\n    // eg: major color will turn to be white in enterprise mode.\n    // however, if the bgColor is the same as defaultBlockFontColor, use defaultFontColor.\n    if (hasBackground(backgroundColor) && !majorColor) {\n        return getDefaultColorWithBg({\n            backgroundColor,\n            defaultFontColor,\n            defaultBlockFontColor,\n        });\n    }\n\n    return getFormattedColor(majorColor, defaultFontColor);\n};\n\n/**\n * Get the color for the trend components\n * @method getTrendColor\n * @param {Object} props\n * @param {String} props.trendColor                   The trendColor value determined from encoding\n * @param {Number} props.trendValue\n * @param {Number} props.majorValue\n * @param {String} props.customizedBgColor\n * @param {String} props.trendDisplay  absolute || percent || off\n * @param {Object} defaultColors\n * @returns {String} trendColor\n */\nexport const getTrendColor = ({\n    trendColor,\n    trendValue,\n    majorValue,\n    customizedBgColor,\n    trendDisplay,\n    defaultColors,\n}) => {\n    if (trendColor) {\n        return trendColor;\n    }\n\n    if (Number.isNaN(Number(trendValue))) {\n        return undefined;\n    }\n\n    const { defaultFontColor, defaultBlockFontColor, defaultBackgroundColor } = defaultColors;\n\n    // if user defined a backgroundColor, the default trend color will be defaultBlockFontColor\n    if (\n        hasBackground(customizedBgColor) &&\n        !isIdenticalColor(customizedBgColor, defaultBackgroundColor) &&\n        !isIdenticalColor(customizedBgColor, defaultBlockFontColor)\n    ) {\n        return defaultBlockFontColor;\n    }\n\n    // if trendDisplay is percent, and trendValue === value\n    // the trend percent = trendValue / (value - trendValue) will return Infinity\n    const isInvalidTrend = trendDisplay === 'percent' && trendValue === parseFloat(majorValue);\n\n    if (trendValue === 0 || isInvalidTrend) {\n        return defaultFontColor;\n    }\n\n    return trendValue > 0 ? DELTA_GREEN : DELTA_RED;\n};\n\n/**\n * Computes visualization properties for display component\n * @method computeColors\n * @param {Object} props    all viz props\n * @param {Object} defaultColors    defaultColors from theme\n * @returns {Object} result\n * @returns {Boolean} backgroundEnabled\n * @returns {String} backgroundColor\n * @returns {String} majorColor\n * @returns {String} trendColor\n * @returns {String} underLabelColor\n */\nexport const computeColors = (props, defaultColors) => {\n    const backgroundColor = getFormattedColor(props.backgroundColor, defaultColors.defaultBackgroundColor);\n    const backgroundEnabled = hasBackground(backgroundColor);\n    const majorColor = getMajorColor({\n        majorColor: props.majorColor,\n        backgroundColor,\n        defaultFontColor: defaultColors.defaultFontColor,\n        defaultBlockFontColor: defaultColors.defaultBlockFontColor,\n    });\n    const trendColor = getTrendColor({\n        trendColor: props.trendColor,\n        trendValue: props.trendValue,\n        majorValue: props.majorValue,\n        customizedBgColor: props.backgroundColor,\n        trendDisplay: props.trendDisplay,\n        defaultColors,\n    });\n    // todo: need change it to not depend on majorColor\n    const underLabelColor = backgroundEnabled ? majorColor : defaultColors.defaultFontColor;\n\n    return {\n        backgroundColor,\n        backgroundEnabled,\n        majorColor,\n        trendColor,\n        underLabelColor,\n    };\n};\n\n/**\n * Format and return the value (major/trend)\n * @method computeText\n * @param {Object} props\n * @param {Number} props.value                    // The major/trend value\n * @param {Number} props.numberPrecision\n * @param {Bool} props.shouldUseThousandSeparators\n * @param {Bool} props.shouldAbbreviateTrendValue\n * @returns {Number} major or trend text\n */\nexport const computeText = ({\n    value,\n    numberPrecision,\n    shouldUseThousandSeparators,\n    shouldAbbreviateTrendValue,\n}) => {\n    let text = isNumerial(value)\n        ? formatNumber(value, numberPrecision, {\n              useThousandSeparators: shouldUseThousandSeparators, // todo: need update formatNumber\n              useTrendUnits: shouldAbbreviateTrendValue,\n          })\n        : value;\n    // When text is undefined, return empty string\n    text = text || '';\n    return text;\n};\n\n/*\n * @method getMajorText\n * @param {Object} props\n * @param {Number} props.majorValue\n * @param {Number} props.numberPrecision\n * @param {Bool} props.shouldUseThousandSeparators\n * @returns {String} majorText\n */\nexport const getMajorText = ({ majorValue, numberPrecision, shouldUseThousandSeparators }) =>\n    computeText({\n        value: majorValue === null ? 'N/A' : majorValue, // if majorValue is null, use `N/A`.\n        numberPrecision,\n        shouldUseThousandSeparators,\n        shouldAbbreviateTrendValue: false,\n    });\n\n/*\n * @method getTrendText\n * @param {Object} props\n * @param {Number} props.majorValue\n * @param {Number} props.trendValue\n * @param {String} props.trendDisplay\n * @param {Number} props.numberPrecision\n * @param {Bool} props.shouldUseThousandSeparators\n * @param {Bool} props.shouldAbbreviateTrendValue\n * @returns {String} trendText\n */\nexport const getTrendText = ({\n    majorValue,\n    trendValue,\n    trendDisplay,\n    numberPrecision,\n    shouldUseThousandSeparators,\n    shouldAbbreviateTrendValue,\n}) => {\n    const compute = value =>\n        computeText({\n            value,\n            numberPrecision,\n            shouldUseThousandSeparators,\n            shouldAbbreviateTrendValue,\n        });\n\n    if (trendValue === '' || !isNumerial(trendValue)) {\n        return '';\n    }\n    const showPercent = trendDisplay === 'percent';\n    if (!showPercent) {\n        return compute(trendValue);\n    }\n\n    const diff = Math.abs(trendValue - majorValue);\n    let val = Math.round((trendValue / diff) * 100);\n    if (trendValue === 0 && diff === 0) {\n        val = 0;\n    }\n\n    if (!Number.isFinite(val)) {\n        return 'N/A';\n    }\n    const text = compute(val);\n\n    return `${text}%`;\n};\n\n/**\n * Helper to determine the font size for an element\n * @method computeFontSize\n * @param {String} text                     The string to find a size for\n * @param {Object} dimensions\n * @param {Number} dimensions.width         The width of the container\n * @param {Number} dimensions.height        The height of the container\n * @param {String} [fontFamily='\"Splunk Platform Sans\" ...'] The font being used\n * @param {String} [fontWeight='normal']    Boldness of font\n * @returns {Number} The size to use for fontSize styles\n */\nexport const computeFontSize = (\n    text,\n    { width, height },\n    fontFamily = DEFAULT_FONT_FAMILY,\n    fontWeight = 'normal'\n) => {\n    const widthInDefaultFont = computeTextSize(text, `${fontWeight} ${DEFAULT_FONT}px ${fontFamily}`);\n    const fontSize = Math.min(\n        (width / widthInDefaultFont) * DEFAULT_FONT,\n        (height / DEFAULT_FONT) * DEFAULT_FONT\n    );\n    return parseInt(fontSize, 10);\n};\n\n/*\n * @method getMajorFontSize\n * @param {Object} props\n * @param {Number} props.width\n * @param {Number} props.height\n * @param {String} props.unit\n * @param {String} props.majorText\n * @param {Number} props.spaceRatio\n * @returns {Number} majorFontSize\n */\nexport const getMajorFontSize = ({ width, height, unit, majorText, spaceRatio = 1 }) => {\n    const majorTextCalc = unit ? `${unit}${majorText}` : majorText;\n    return computeFontSize(majorTextCalc, {\n        width: width * spaceRatio,\n        height,\n    });\n};\n\n/*\n * @method getTrendFontSize\n * @param {Object} props\n * @param {Number} props.width\n * @param {Number} props.height\n * @param {String} props.trendText\n * @param {Number} props.spaceRatio\n * @returns {Number} trendFontSize\n */\nexport const getTrendFontSize = ({ width, height, trendText, spaceRatio = 1 }) => {\n    let trendFontSize = 12;\n    if (spaceRatio > 0) {\n        trendFontSize = computeFontSize(trendText, {\n            width: width * spaceRatio,\n            height,\n        });\n        trendFontSize = parseInt(trendFontSize, 10) * spaceRatio;\n    }\n    return trendFontSize;\n};\n\n/*\n * The height of underLabel should no more than 12px\n * @param {Number} height\n * @return {Number} height || DEFAULT_FONT\n */\nexport const getUnderLabelHeight = height => (height > DEFAULT_FONT ? DEFAULT_FONT : height);\n\n/*\n * @param {Object} config\n * @param {String} underLabel\n * @param {Number} width     width of underLabel\n * @param {Number} height    height of underLabel\n * @param {Number} fond size of underLabel\n */\nexport const getUnderLabel = ({ underLabel, width, height }) =>\n    // todo: may need truncate underLabel later\n    computeFontSize(underLabel, {\n        width,\n        height,\n    });\n\n/**\n * Compute value and font size for major and trend\n * @method getMajorAndTrend\n * @param {Object} props\n * @param {Number} props.width                    // Width of the text container\n * @param {Number} props.height                   // Height of the text container\n * @param {Number} props.majorValue               // Major value\n * @param {Number} props.trendValue               // Trend value\n * @param {Number} props.majorFontSize\n * @param {Number} props.trendFontSize\n * @param {String} props.trendDisplay\n * @param {String} props.unit                     // Unit for the value\n * @param {Number} props.numberPrecision\n * @param {Bool} props.shouldUseThousandSeparators\n * @param {Bool} props.shouldAbbreviateTrendValue\n * @returns {Number, Number, Number, Number} Major text, trend text, major text size, trend text size\n */\nexport const getMajorAndTrend = ({\n    width,\n    height,\n    majorValue,\n    trendValue,\n    majorFontSize,\n    trendFontSize,\n    trendDisplay,\n    unit,\n    numberPrecision,\n    shouldUseThousandSeparators,\n    shouldAbbreviateTrendValue,\n}) => {\n    const majorTextSpaceRatio = isNumerial(trendValue) && shouldShowTrend(trendDisplay) ? 0.6 : 1;\n    const textContentWidth = width * 0.9;\n    const textContentHeight = height * 0.9;\n    const majorText = getMajorText({ majorValue, numberPrecision, shouldUseThousandSeparators });\n    const majorTextFontSize =\n        majorFontSize ||\n        getMajorFontSize({\n            width: textContentWidth,\n            height: textContentHeight,\n            unit,\n            majorText,\n            spaceRatio: majorTextSpaceRatio,\n        });\n    const trendText = getTrendText({\n        majorValue,\n        trendValue,\n        trendDisplay,\n        numberPrecision,\n        shouldUseThousandSeparators,\n        shouldAbbreviateTrendValue,\n    });\n    const trendTextFontSize =\n        trendFontSize ||\n        getTrendFontSize({\n            width: textContentWidth,\n            height: textContentHeight,\n            trendText,\n            spaceRatio: 1 - majorTextSpaceRatio,\n        });\n\n    return {\n        majorText,\n        majorTextFontSize,\n        trendText,\n        trendTextFontSize,\n    };\n};\n\n/*\n * @method updateVizInSmallSpace\n * @param {Object} props\n * @param {Number} props.width                    // Width of the text container\n * @param {Number} props.height                   // Height of the text container\n * @param {Object} props.toRemoveList\n * @param {Number} props.majorValue               // Major value\n * @param {Number} props.trendValue               // Trend value\n * @param {Number} props.majorFontSize\n * @param {Number} props.trendFontSize\n * @param {Number} props.majorTextFontSize\n * @param {String} props.unit                     // Unit for the value\n * @param {Number} props.numberPrecision\n * @param {Bool} props.shouldUseThousandSeparators\n * @param {Bool} props.shouldAbbreviateTrendValue\n * @returns {Object} results\n * @returns {Object} results.newMajorAndTrend\n * @returns {Object} results.updatedProps\n */\nexport const updateVizInSmallSpace = ({\n    width,\n    height,\n    toRemoveList,\n    majorValue,\n    trendValue,\n    majorFontSize,\n    trendFontSize,\n    majorTextFontSize,\n    unit,\n    numberPrecision,\n    shouldUseThousandSeparators,\n    shouldAbbreviateTrendValue,\n}) => {\n    let removeIndex = 0;\n    let newProps = {}; // options need to be updated\n    let newMajorAndTrend = {};\n    let newTextSize = majorTextFontSize;\n\n    // remove info on viz to make textFontSize >= 12px;\n    while (newTextSize < 12 && removeIndex < toRemoveList.length) {\n        const toRemove = toRemoveList[removeIndex];\n        newProps = {\n            ...newProps,\n            ...{\n                [toRemove.key]: toRemove.value,\n            },\n        };\n\n        newMajorAndTrend = getMajorAndTrend({\n            majorValue,\n            trendValue,\n            majorFontSize,\n            trendFontSize,\n            width,\n            height,\n            unit,\n            numberPrecision,\n            shouldUseThousandSeparators,\n            shouldAbbreviateTrendValue,\n            ...newProps,\n        });\n\n        newTextSize = newMajorAndTrend.majorTextFontSize;\n        removeIndex += 1;\n    }\n\n    // truncate text if textFontSize is still less than 12\n    if (newTextSize < 12) {\n        const truncateValue = `${majorValue.toString().slice(0, 3)}...`;\n        newMajorAndTrend = getMajorAndTrend({\n            majorValue: truncateValue,\n            trendValue,\n            majorFontSize,\n            trendFontSize,\n            width,\n            height,\n            unit,\n            numberPrecision,\n            shouldUseThousandSeparators,\n            shouldAbbreviateTrendValue,\n            ...newProps,\n        });\n    }\n\n    return { newMajorAndTrend, updatedProps: newProps };\n};\n\n/*\n * @method computeSingleValueContent\n * @param {Object} props\n * @param {Number} props.contentWidth\n * @param {Number} props.contentHeight\n * @param {Number} props.containerWidth\n * @param {Number} props.containerHeight\n * @param {Number} props.majorValue               // Major value\n * @param {Number} props.trendValue               // Trend value\n * @param {Number} props.majorFontSize\n * @param {Number} props.trendFontSize\n * @param {String} props.trendDisplay\n * @param {String} props.unit                     // Unit for the value\n * @param {Number} props.numberPrecision\n * @param {Bool} props.shouldUseThousandSeparators\n * @param {Bool} props.shouldAbbreviateTrendValue\n * @param {Object} props.toRemoveList\n * @returns {Object} results\n * @returns {String} results.majorText\n * @returns {String} results.trendText\n * @returns {Number} results.majorTextFontSize\n * @returns {Number} results.trendTextFontSize\n * @returns {String} results.majorValueTitle\n * @returns {Object} results.smallVizProps\n */\nexport const computeSingleValueContent = ({\n    contentWidth,\n    contentHeight,\n    containerWidth,\n    containerHeight,\n    majorValue,\n    trendValue,\n    majorFontSize,\n    trendFontSize,\n    trendDisplay,\n    unit,\n    numberPrecision,\n    shouldUseThousandSeparators,\n    shouldAbbreviateTrendValue,\n    toRemoveList,\n}) => {\n    let { majorText, trendText, majorTextFontSize, trendTextFontSize } = getMajorAndTrend({\n        majorValue,\n        trendValue,\n        majorFontSize,\n        trendFontSize,\n        trendDisplay,\n        width: contentWidth,\n        height: contentHeight,\n        unit,\n        numberPrecision,\n        shouldUseThousandSeparators,\n        shouldAbbreviateTrendValue,\n    });\n    const majorValueTitle = majorText;\n    let smallVizProps = {};\n\n    // update viz in small space\n    // if textFontSize is less than 12, remove extra info like sparkline, trendvalue, unit\n    // or truncate major value to make the major font size >= 12\n    if (majorTextFontSize < 12) {\n        const { newMajorAndTrend, updatedProps } = updateVizInSmallSpace({\n            width: containerWidth,\n            height: containerHeight,\n            toRemoveList,\n            majorValue,\n            trendValue,\n            majorFontSize,\n            trendFontSize,\n            majorTextFontSize,\n            unit,\n            numberPrecision,\n            shouldUseThousandSeparators,\n            shouldAbbreviateTrendValue,\n        });\n\n        ({ majorText, trendText, majorTextFontSize, trendTextFontSize } = newMajorAndTrend);\n        smallVizProps = updatedProps;\n    }\n    return {\n        majorText,\n        trendText,\n        majorTextFontSize,\n        trendTextFontSize,\n        majorValueTitle,\n        smallVizProps,\n    };\n};\n\n/**\n * Get the colors for a graph\n *\n * @method getGraphColors\n * @param {Object} options\n * @param {Bool} options.backgroundEnabled          // Flag to turn on color mode\n * @param {String} options.backgroundColor          // The current background color, overrides trend background color\n * @param {Object} options.defaultColors            // Default colors by severity\n * @param {Function} options.customColorFormatter   // must return { background, stroke } given a color\n * @returns {Object} { background, stroke } colors\n * @private\n */\nexport const getGraphColors = ({\n    backgroundEnabled,\n    backgroundColor,\n    defaultColors,\n    customColorFormatter,\n}) => {\n    // Only do custom colors in block mode\n    if (backgroundEnabled) {\n        // Check if the user defined colors to use\n        if (backgroundColor && typeof customColorFormatter === 'function') {\n            return customColorFormatter(backgroundColor);\n        }\n    }\n\n    return defaultColors.none;\n};\n\n/**\n * Adjust rgb value if it equals to 0 or 255\n * @method adjustRGB\n * @param {Number} rgb      [0 - 255]\n * @param {Number} delta\n * @returns {Number} adjusted rgb\n * @private\n */\nexport const adjustRGB = (rgb, delta) => {\n    if (rgb === 255) {\n        return rgb - delta;\n    }\n\n    if (rgb === 0) {\n        return rgb + delta;\n    }\n\n    return rgb;\n};\n\n/**\n * Modifies colors by multiplying by a given ratio\n * @method changeColor\n * @param {String} color    // Color to modify\n * @param {Number} ratio    // Float to modify color\n * @returns {String} new color\n * @private\n */\nconst changeColor = (color, ratio) => {\n    const hex = color.replace(/(0x|#)/, '');\n    const r = parseInt(hex.substr(0, 2), 16);\n    const g = parseInt(hex.substr(2, 2), 16);\n    const b = parseInt(hex.substr(4, 2), 16);\n\n    // Multiply by given ratio, make sure is between 0 and 255;\n    let newR = Math.max(Math.min(Math.floor(r * ratio), 255), 0);\n    let newG = Math.max(Math.min(Math.floor(g * ratio), 255), 0);\n    let newB = Math.max(Math.min(Math.floor(b * ratio), 255), 0);\n\n    // If the color is not changed\n    // case 1: the color is (0, 0 0)\n    //         lighten color (80, 80, 80)\n    //         darken color (40, 40, 40)\n    // case 2: the color is (255, 255, 255)\n    //         lighten color (235, 235, 235)\n    //         darken color (175, 175, 175)\n    // case 3: the color is e.g. (0, 255, 0)\n    //         new color (20, 235, 20)\n    if (newR === r && newG === g && newB === b) {\n        if (newR === 0 && newG === 0 && newB === 0) {\n            if (ratio > 1) {\n                newR = adjustRGB(newR, 80);\n                newG = adjustRGB(newG, 80);\n                newB = adjustRGB(newB, 80);\n            } else {\n                newR = adjustRGB(newR, 40);\n                newG = adjustRGB(newG, 40);\n                newB = adjustRGB(newB, 40);\n            }\n        } else if (newR === 255 && newG === 255 && newB === 255) {\n            if (ratio > 1) {\n                newR = adjustRGB(newR, 20);\n                newG = adjustRGB(newG, 20);\n                newB = adjustRGB(newB, 20);\n            } else {\n                newR = adjustRGB(newR, 80);\n                newG = adjustRGB(newG, 80);\n                newB = adjustRGB(newB, 80);\n            }\n        } else {\n            newR = adjustRGB(newR, 20);\n            newG = adjustRGB(newG, 20);\n            newB = adjustRGB(newB, 20);\n        }\n    }\n\n    return (\n        `#${newR.toString(16).padStart(2, 0)}` +\n        `${newG.toString(16).padStart(2, 0)}` +\n        `${newB.toString(16).padStart(2, 0)}`\n    );\n};\n\n/**\n * Lighten a given color\n * @method lighten\n * @param {String} color\n * @returns {String}\n * @private\n */\nexport const lighten = color => changeColor(color, 1.3);\n\n/**\n * Darkens a given color\n * @method darken\n * @param {String} color\n * @returns {String}\n * @private\n */\nexport const darken = color => changeColor(color, 0.5);\n\n/** consistent token structure: handle callback to add value and name in event payload\n * @method handleValueClickCallback\n * @param {Object} ev\n * @param {String | Number} majorValue\n * @param {String} majorValueField\n * @param {Number} trendValue\n * @param {Function} onValueClick\n */\nexport const handleValueClickCallback = (ev, majorValue, majorValueField, trendValue, onValueClick) => {\n    const payload = {\n        trendValue,\n        value: majorValue,\n        name: majorValueField,\n    };\n\n    return onValueClick({ ...ev, payload });\n};\n"],"sourceRoot":""}