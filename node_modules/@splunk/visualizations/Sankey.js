/*!
 * Copyright © 2018 Splunk Inc.
 * SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or
 * in part without a valid written license from Splunk Inc. is PROHIBITED.
 */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 219);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = require("prop-types");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = require("lodash");

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = require("@splunk/ui-utils/i18n");

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = require("styled-components");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VizBehavior = void 0;
var VizBehavior;

(function (VizBehavior) {
  /**
   * Dynamic Options Behavior.
   * This allows visualization options to be powered by data
   *
   * **Example**
   *
   * sparklineValues: ">primary|seriesByIndex(0)"
   * would configure sparklineValues with an array of data points
   * coming from the first series in the primary datasource
   *
   */
  VizBehavior["DYNAMIC_OPTIONS"] = "dynamic-options";
  VizBehavior["EVENTS"] = "events";
  /**
   * Placeholder behavior: visualization will display a placeholder rather than fail if any of the `requiredProps` is
   * missing.
   * @type {string}
   */

  VizBehavior["PLACEHOLDER"] = "placeholder";
  VizBehavior["PAGE_AND_SORT"] = "page-and-sort";
})(VizBehavior = exports.VizBehavior || (exports.VizBehavior = {}));

/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/defineProperty");

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof = __webpack_require__(22);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deepMergeWithArrayOverrides = exports.extendStaticWrapperProps = void 0;

var lodash_1 = __webpack_require__(2);
/**
 * @method extendStaticWrapperProps
 * @param {Object} props
 * @param {DashboardVizType} props.Wrapper
 * @param {DashboardVizType} props.Visualization
 */


var extendStaticWrapperProps = function extendStaticWrapperProps(_ref) {
  var Wrapper = _ref.Wrapper,
      Visualization = _ref.Visualization;
  var extendProperties = ['propTypes', 'defaultProps', 'config'];
  extendProperties.forEach(function (prop) {
    if (Visualization[prop]) {
      Wrapper[prop] = Visualization[prop];
    }
  });
};

exports.extendStaticWrapperProps = extendStaticWrapperProps;
/**
 * helper to deeply merge objects while preserving arrays in earlier source objects
 * deeply nested primitive keys are merged similarly to lodash's defaultsDeep, while keys with arrays will be preserved if already present in the resultant merged object
 * this prevents default arrays from appending values to user-defined arrays (this occurs if the default array is longer than the user-defined one)
 *
 * @method deepMergeWithArrayOverrides
 * @param {Object} initial - target object to merge values into
 * @param {Object[]} sources - other default options to be merged into the resultant object if no explicit value is provided, with earlier args taking precedence over later ones
 *
 * @returns {Object}
 */

var deepMergeWithArrayOverrides = function deepMergeWithArrayOverrides(initial) {
  var clone = lodash_1.cloneDeep(initial);

  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    sources[_key - 1] = arguments[_key];
  }

  sources.forEach(function (sourceToApply) {
    Object.keys(sourceToApply).forEach(function (sourceKey) {
      if (!clone.hasOwnProperty(sourceKey)) {
        clone[sourceKey] = lodash_1.cloneDeep(sourceToApply[sourceKey]);
      } // object merging excluding arrays


      if (clone[sourceKey] && _typeof(clone[sourceKey]) === 'object' && !Array.isArray(clone[sourceKey]) && _typeof(sourceToApply[sourceKey]) === 'object') {
        clone[sourceKey] = exports.deepMergeWithArrayOverrides(clone[sourceKey], sourceToApply[sourceKey]);
      }
    });
  });
  return clone;
};

exports.deepMergeWithArrayOverrides = deepMergeWithArrayOverrides;

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _defineProperty = __webpack_require__(6);

var __rest = this && this.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generatePrecisionValues = exports.getInitialPreset = exports.isDynamicOption = exports.enhanceOptionsSchemaWithDynamicOptions = exports.enhanceConfig = void 0;

var lodash_1 = __webpack_require__(2);

var schemaUtils_1 = __webpack_require__(14);

var VizBehavior_1 = __webpack_require__(5);

var dynamicOptionsDSLType = {
  type: 'string',
  pattern: schemaUtils_1.DYNAMIC_OPTIONS_DSL_PATTERN
};
/**
 * Helper function to extend an options schema with dynamic options DSL
 * @param optionsSchema a visualization's options schema
 * @returns an updated options schema that additionally allows strings starting with > for each option
 */

function enhanceOptionsSchemaWithDynamicOptions(optionsSchema) {
  var enhancedOptionsSchema = {};
  Object.keys(optionsSchema).forEach(function (key) {
    var _a = optionsSchema[key],
        title = _a.title,
        description = _a.description,
        readOnly = _a.readOnly,
        writeOnly = _a.writeOnly,
        examples = _a.examples,
        defaultValue = _a.default,
        type = _a.type,
        properties = _a.properties,
        patternProperties = _a.patternProperties,
        remainingSchemaEntry = __rest(_a, ["title", "description", "readOnly", "writeOnly", "examples", "default", "type", "properties", "patternProperties"]);

    var annotations = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, title !== undefined && {
      title: title
    }), description !== undefined && {
      description: description
    }), readOnly !== undefined && {
      readOnly: readOnly
    }), writeOnly !== undefined && {
      writeOnly: writeOnly
    }), examples !== undefined && {
      examples: examples
    }), defaultValue !== undefined && {
      default: defaultValue
    });

    if (type === 'object') {
      enhancedOptionsSchema[key] = Object.assign(Object.assign(Object.assign(Object.assign({}, remainingSchemaEntry), annotations), {
        type: type
      }), properties && {
        properties: enhanceOptionsSchemaWithDynamicOptions(properties)
      });

      if (patternProperties) {
        var enhancedPatternProperties = {};
        Object.keys(patternProperties).forEach(function (key) {
          enhancedPatternProperties = Object.assign(Object.assign({}, enhancedPatternProperties), enhanceOptionsSchemaWithDynamicOptions(_defineProperty({}, key, patternProperties[key])));
        });
        enhancedOptionsSchema[key].patternProperties = enhancedPatternProperties;
      }
    } else {
      enhancedOptionsSchema[key] = Object.assign(Object.assign({}, annotations), {
        anyOf: [Object.assign(Object.assign({}, type !== undefined && {
          type: type
        }), remainingSchemaEntry), dynamicOptionsDSLType]
      });
    }
  });
  return enhancedOptionsSchema;
}

exports.enhanceOptionsSchemaWithDynamicOptions = enhanceOptionsSchemaWithDynamicOptions;
/**
 * Helper function to enhance a Visualization Config as needed based on behaviors specified in supports block
 * @param vizConfig a Visualization Config
 * @returns an enhanced Visualization Config containing updated config entries based on behaviors it supports
 */

function enhanceConfig(vizConfig) {
  var enhancedConfig = vizConfig;

  if (vizConfig.supports.indexOf(VizBehavior_1.VizBehavior.DYNAMIC_OPTIONS) !== -1) {
    enhancedConfig.optionsSchema = enhanceOptionsSchemaWithDynamicOptions(vizConfig.optionsSchema);
  }

  return enhancedConfig;
}

exports.enhanceConfig = enhanceConfig;

function isDynamicOption(option) {
  return option && typeof option === 'string' && option.trim().startsWith('>') || false;
}

exports.isDynamicOption = isDynamicOption; // private helpers to improve readability of getInitialPreset
// this shouldn't be tested since this util isn't something that we expect to use outside of getInitialPreset

/**
 * this checks to make sure that all values within vizContext are compatible with the given preset's context to determine the initialPreset
 * if a preset has explicitly specified a key as being undefined, the vizContext must also has that key as undefined, or else this CANNOT be the initialPreset
 * the inverse is true; if a preset has key is NOT undefined, it must also be NOT undefined in the corresponding vizContext
 * the internal config contents are irrelevant (as the user could customize them in source), just as long as the presence of `undefined`s match up
 *
 * Since the presetConfigs have explicit undefined keys to override the existing config, we need to explicitly check the undefined values
 */

function hasCompatibleContexts(vizContext, presetContext) {
  var presetContextKeys = Object.keys(presetContext);
  return presetContextKeys.every(function (contextKey) {
    return presetContext[contextKey] === undefined && vizContext[contextKey] === undefined || presetContext[contextKey] !== undefined && vizContext[contextKey] !== undefined;
  });
}
/**
 * Checks to make sure that dynamic (non-dynamic) options in a given preset are also dynamic (non-dynamic) in the vizOptions
 */


function hasCompatibleOptions(vizOptions, presetOptions) {
  var presetOptionKeys = Object.keys(presetOptions);
  return presetOptionKeys.every(function (optionKey) {
    return isDynamicOption(presetOptions[optionKey]) === isDynamicOption(vizOptions[optionKey]);
  });
}
/**
 * Evaluates whether there is an initialPreset that fits the current state of vizContext + vizOptions
 * This function ignores extraneous vizOptions or vizContext keys, as they could be outside the scope of what the preset is intended to configure
 *
 * @param {Object} vizContext - the current vizContext definition
 * @param {Object} vizOptions - the current vizOptions definition
 * @param {PresetEntry[]} presets - the list of presets, one of which can be considered an initialPreset
 */


function getInitialPreset(vizContext, vizOptions, presets) {
  return presets.find(function (preset) {
    var presetContext = lodash_1.get(preset, ['value', 'context'], {});
    var presetOptions = lodash_1.get(preset, ['value', 'options'], {});
    var presetContextKeys = Object.keys(presetContext);
    var presetOptionKeys = Object.keys(presetOptions); // all presets have to explicitly specify which options to reset (i.e. need explicitly undefined keys)
    // if not, then the preset is invalid in config.ts

    if (presetContextKeys.length === 0 || presetOptionKeys.length === 0) return false;
    return hasCompatibleContexts(vizContext, presetContext) && hasCompatibleOptions(vizOptions, presetOptions);
  });
}

exports.getInitialPreset = getInitialPreset;
/**
 * generates number precision values for a Select editor
 *
 * @param {Number} numPrecisionValues - number of integer precision values to generate
 * @returns {{ label: string; value; string  }[]} array of { label, value } tuples
 */

function generatePrecisionValues(numPrecisionValues) {
  return lodash_1.range(0, numPrecisionValues + 1).map(function (i) {
    return {
      label: "".concat(i, " (0").concat(i > 0 ? '.' : '').concat('0'.repeat(i), ")"),
      value: i
    };
  });
}

exports.generatePrecisionValues = generatePrecisionValues;

/***/ }),
/* 9 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/Message");

/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/classCallCheck");

/***/ }),
/* 11 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/colorUtils");

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __webpack_require__(1);

var styled_components_1 = __webpack_require__(4);

var SizeAwareWrapper_1 = __webpack_require__(17);

var style_1 = __webpack_require__(13);

var colorUtils_1 = __webpack_require__(11);

var Item = styled_components_1.default.div.attrs(function (_ref) {
  var width = _ref.width;
  return {
    style: {
      width: style_1.toPx(width)
    }
  };
}).withConfig({
  displayName: "FixedSizeContainer__Item",
  componentId: "sc-1yhgpod-0"
})(["position:relative;background-color:", "};"], function (props) {
  return colorUtils_1.isColor(props.backgroundColor) && props.backgroundColor || props.theme.defaultBackgroundColor;
}); // Use `.attrs()` for highly dynamic styles. Ref: https://github.com/styled-components/styled-components/issues/134#issuecomment-312415291

var FixSizeItem = styled_components_1.default.div.attrs(function (_ref2) {
  var width = _ref2.width,
      height = _ref2.height;
  return {
    style: Object.assign(Object.assign({}, width && {
      width: style_1.toPx(width)
    }), height && {
      height: style_1.toPx(height)
    })
  };
}).withConfig({
  displayName: "FixedSizeContainer__FixSizeItem",
  componentId: "sc-1yhgpod-1"
})(["position:relative;flex-direction:column;flex:1;display:flex;background-color:", "};"], function (props) {
  return colorUtils_1.isColor(props.backgroundColor) && props.backgroundColor || props.theme.defaultBackgroundColor;
});
var ItemContent = styled_components_1.default.div.withConfig({
  displayName: "FixedSizeContainer__ItemContent",
  componentId: "sc-1yhgpod-2"
})(["position:relative;min-height:100px;width:100%;"]);
var FixSizeItemContent = styled_components_1.default.div.withConfig({
  displayName: "FixedSizeContainer__FixSizeItemContent",
  componentId: "sc-1yhgpod-3"
})(["min-height:0px;flex:1;position:relative;box-sizing:border-box;"]);

var withFixedSizeContainer = function withFixedSizeContainer(Viz) {
  var FixedSizeContainer = function FixedSizeContainer(props) {
    var width = props.width,
        height = props.height,
        backgroundColor = props.backgroundColor;

    if (!height) {
      return React.createElement(Item, {
        "data-test": "item",
        width: width,
        backgroundColor: backgroundColor
      }, React.createElement(ItemContent, null, React.createElement(Viz, Object.assign({}, props))));
    }

    return React.createElement(FixSizeItem, {
      "data-test": "fix-size-item",
      width: width,
      height: height,
      backgroundColor: backgroundColor
    }, React.createElement(FixSizeItemContent, null, React.createElement(SizeAwareWrapper_1.default, null, function (_ref3) {
      var newWidth = _ref3.width,
          newHeight = _ref3.height;
      return React.createElement(Viz, Object.assign({}, props, {
        width: newWidth,
        height: newHeight
      }));
    })));
  };

  FixedSizeContainer.displayName = 'withFixedSizeContainer';
  return FixedSizeContainer;
};

exports.default = withFixedSizeContainer;

/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/style");

/***/ }),
/* 14 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/schemaUtils");

/***/ }),
/* 15 */,
/* 16 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/createClass");

/***/ }),
/* 17 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/SizeAwareWrapper");

/***/ }),
/* 18 */,
/* 19 */,
/* 20 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/numberUtils");

/***/ }),
/* 21 */,
/* 22 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/typeof");

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _defineProperty = __webpack_require__(6);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getSortingParams = exports.SortParamsPropTypes = void 0;

var T = __webpack_require__(0);

var lodash_1 = __webpack_require__(2);

var DataSource_1 = __webpack_require__(33);

exports.SortParamsPropTypes = T.shape({
  currentSortKey: T.string,
  currentSortDir: T.oneOf(DataSource_1.validSortDirs),
  onSort: T.func
});

var getSortingParams = function getSortingParams(_ref) {
  var requestParams = _ref.requestParams,
      onRequestParamsChange = _ref.onRequestParamsChange;
  var currentSortKey;
  var currentSortDir;
  var nextSortDirMap = {
    asc: 'desc',
    desc: 'asc',
    none: 'asc'
  };
  var onSort;

  if (lodash_1.isFunction(onRequestParamsChange)) {
    if (requestParams && lodash_1.has(requestParams, 'sort')) {
      currentSortKey = Object.keys(requestParams.sort).shift();
      currentSortDir = requestParams.sort[currentSortKey];
    } // undid memoization since there is a dependency on requestParams, which is a deeply nested object


    onSort = function onSort(e, _ref2) {
      var sortKey = _ref2.sortKey,
          sortDir = _ref2.sortDir;

      if (typeof sortKey === 'string') {
        var nextSortDir = lodash_1.has(nextSortDirMap, sortDir) ? nextSortDirMap[sortDir] : 'none';
        onRequestParamsChange(Object.assign(Object.assign({}, requestParams), {
          offset: 0,
          sort: _defineProperty({}, sortKey, nextSortDir)
        }));
      } else {
        onRequestParamsChange(requestParams);
      }
    };
  }

  return {
    currentSortKey: currentSortKey,
    currentSortDir: currentSortDir,
    onSort: onSort
  };
};

exports.getSortingParams = getSortingParams;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getPaginationParams = exports.PaginatorParamsPropTypes = void 0;

var T = __webpack_require__(0);

var lodash_1 = __webpack_require__(2);

exports.PaginatorParamsPropTypes = T.shape({
  isPaging: T.bool,
  current: T.number,
  totalPages: T.number,
  onChange: T.func
});

var getPaginationParams = function getPaginationParams(_ref) {
  var requestParams = _ref.requestParams,
      meta = _ref.meta,
      onRequestParamsChange = _ref.onRequestParamsChange;
  var totalCount = meta && meta.totalCount || 0;
  var offset = requestParams && requestParams.offset || 0;
  var count = requestParams && requestParams.count;
  var totalPages = typeof count === 'number' && count > 0 ? Math.ceil(totalCount / count) : 0;
  var current = typeof count === 'number' && count > 0 ? Math.floor(offset / count) + 1 : 0;
  var isPaging = totalPages > 1 && lodash_1.isFunction(onRequestParamsChange);

  var onChangeHandler = function onChangeHandler(e, _ref2) {
    var page = _ref2.page,
        countArg = _ref2.count;
    var newParams = lodash_1.cloneDeep(requestParams);

    if (typeof countArg === 'number') {
      newParams.count = countArg;
      newParams.offset = 0;
    }

    var pageCount = typeof newParams.count === 'number' ? newParams.count : 10;

    if (typeof page === 'number' && page > 0) {
      newParams.count = pageCount;
      newParams.offset = (page - 1) * pageCount;
    }

    onRequestParamsChange(newParams);
  };

  return {
    isPaging: isPaging,
    current: current,
    totalPages: totalPages,
    onChange: lodash_1.isFunction(onRequestParamsChange) ? onChangeHandler : lodash_1.noop
  };
};

exports.getPaginationParams = getPaginationParams;

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shouldShowIconPlaceholder = void 0;

var React = __webpack_require__(1);

var T = __webpack_require__(0);

var lodash_1 = __webpack_require__(2);

var i18n_1 = __webpack_require__(3);

var Message_1 = __webpack_require__(9);

var FixedSizeContainer_1 = __webpack_require__(12);
/**
 * @method shouldShowIconPlaceholder
 * @param {object} dataSources
 * @param {boolean} loading
 * @returns {boolean}
 */


var shouldShowIconPlaceholder = function shouldShowIconPlaceholder(dataSources) {
  var loading = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var data = lodash_1.get(dataSources, 'primary.data.columns[0]', undefined);
  var noData = data === undefined;
  var fields = lodash_1.get(dataSources, 'primary.data.fields[0]', undefined);
  var noFields = fields === undefined;
  return loading || noData || noFields;
};

exports.shouldShowIconPlaceholder = shouldShowIconPlaceholder;
var propTypes = {
  icon: T.func,
  width: T.oneOfType([T.string, T.number]),
  height: T.oneOfType([T.string, T.number]),
  backgroundColor: T.string
};
/**
 * @method IconPlaceholder
 * @param {IconPlaceholderProps} props
 * @returns {React.ReactElement}
 */

var IconPlaceholder = function IconPlaceholder(props) {
  var width = props.width,
      height = props.height,
      icon = props.icon;

  if (icon) {
    return React.createElement(icon, {
      style: {
        left: '50%',
        top: '50%',
        color: 'grey',
        position: 'absolute',
        transform: 'translate(-50%, -50%)'
      },
      width: '50%',
      height: '50%'
    });
  }

  return React.createElement(Message_1.default, {
    width: width,
    height: height,
    level: "warning",
    message: i18n_1._('No DataSource Connected')
  });
};

IconPlaceholder.propTypes = propTypes;
IconPlaceholder.defaultProps = {
  width: '100%',
  height: 250
};
exports.default = FixedSizeContainer_1.default(IconPlaceholder);

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VizCategory = void 0;
var VizCategory;

(function (VizCategory) {
  VizCategory["SINGLE_VALUE"] = "Single Value";
  VizCategory["TRENDS"] = "Trends";
  VizCategory["COMPARISONS"] = "Comparisons";
  VizCategory["TABLE"] = "Table";
  VizCategory["GAUGE"] = "Gauge";
  VizCategory["DISTRIBUTIONS"] = "Distributions";
  VizCategory["CHOROPLETH"] = "Choropleth Maps";
  VizCategory["SHAPES"] = "Shapes";
  VizCategory["MISC"] = "misc";
  VizCategory["FLOW"] = "Flow";
  VizCategory["CORRELATION"] = "Correlation";
  VizCategory["SPATIAL"] = "Spatial";
})(VizCategory = exports.VizCategory || (exports.VizCategory = {}));

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __webpack_require__(1);

var lodash_1 = __webpack_require__(2);

var getSettingsFromThemedProps_1 = __webpack_require__(28);

var Options_1 = __webpack_require__(29);

var SanitizeProps_1 = __webpack_require__(30);

var styled_components_1 = __webpack_require__(4);

var SplunkVisualization_1 = __webpack_require__(31);

var VizBehavior_1 = __webpack_require__(5);

var getSorting_1 = __webpack_require__(23);

var getPagination_1 = __webpack_require__(24);

var useDeepMemo_1 = __webpack_require__(34);

var JSONSchemaUtils_1 = __webpack_require__(35);

var MissingPropsMessage_1 = __webpack_require__(36);

var withEditModeCover_1 = __webpack_require__(37);

var withPlaceholder_1 = __webpack_require__(38);

var hocUtils_1 = __webpack_require__(7);
/**
 * hoc that wraps a pure react visualization in a Dashboard visualization
 * @param {DashboardVizOpts} opts
 * @returns {HOC}
 */


var withDashboardViz = function withDashboardViz(opts) {
  var ReactViz = opts.ReactViz,
      vizConfig = opts.vizConfig,
      _opts$computeVizProps = opts.computeVizProps,
      computeVizProps = _opts$computeVizProps === void 0 ? function () {} : _opts$computeVizProps,
      useIconPlaceholder = opts.useIconPlaceholder; // sanitizing props before sending them to reactviz.

  var SanitizedReactViz = SanitizeProps_1.withSanitizedProps(ReactViz);
  var defaultOptions = JSONSchemaUtils_1.pickFieldFromJSONSchema(vizConfig.optionsSchema, 'default');

  var DashboardViz = function DashboardViz(props) {
    var mode = props.mode,
        hasEventHandlers = props.hasEventHandlers,
        dataSources = props.dataSources,
        options = props.options,
        _props$context = props.context,
        context = _props$context === void 0 ? {} : _props$context,
        width = props.width,
        height = props.height,
        onComputedProps = props.onComputedProps,
        onEventTrigger = props.onEventTrigger,
        theme = props.theme,
        onRequestParamsChange = props.onRequestParamsChange;

    var themeFunc = function themeFunc(themeVar) {
      var _a, _b;

      return (_b = (_a = vizConfig.themes)[themeVar]) === null || _b === void 0 ? void 0 : _b.call(_a, props);
    };

    var bgColorFromTheme = themeFunc('defaultBackgroundColor');

    var _getSettingsFromTheme = getSettingsFromThemedProps_1.default({
      theme: theme
    }),
        currentThemeFamily = _getSettingsFromTheme.family,
        currentThemeColorScheme = _getSettingsFromTheme.colorScheme,
        currentThemeDensity = _getSettingsFromTheme.density;

    var evaluatedOptions = {}; // evaluatedOptions need to be initialized as an empty object

    evaluatedOptions = useDeepMemo_1.useDeepMemo(function () {
      try {
        return Options_1.Options.evaluate({
          context: lodash_1.defaultsDeep({}, context, vizConfig.defaultContext),
          options: hocUtils_1.deepMergeWithArrayOverrides({}, options, defaultOptions)
        }, dataSources, themeFunc);
      } catch (e) {
        console.error("unexpected error evaluating options:  + ".concat(e.message));
        return {};
      }
    }, [currentThemeFamily, currentThemeColorScheme, currentThemeDensity, options, context, dataSources]); // useEffect hook needs to be initialized before any early returns
    // this is in accordance with the order of hook calls being the same on each render https://reactjs.org/docs/hooks-rules.html#explanation

    React.useEffect(function () {
      onComputedProps(evaluatedOptions);
    }); // present warning message if any required props are missing

    var _vizConfig$requiredPr = vizConfig.requiredProps,
        requiredProps = _vizConfig$requiredPr === void 0 ? [] : _vizConfig$requiredPr,
        supports = vizConfig.supports;
    var missing = MissingPropsMessage_1.missingKeys(requiredProps, evaluatedOptions);

    if (missing.length > 0 && supports.includes(VizBehavior_1.VizBehavior.PLACEHOLDER)) {
      return React.createElement(MissingPropsMessage_1.default, {
        "data-test": "missing-props-message",
        width: width,
        height: height,
        missingProps: missing,
        backgroundColor: bgColorFromTheme
      });
    } // events


    var eventCallbackProps = {};

    if (hasEventHandlers && mode === 'view' && vizConfig.supports.indexOf(VizBehavior_1.VizBehavior.EVENTS) > -1) {
      var supportedEvents = vizConfig.events;
      Object.keys(supportedEvents).forEach(function (eventName) {
        var eventCallbackPropName = lodash_1.camelCase("on.".concat(eventName));
        eventCallbackProps[eventCallbackPropName] = null; // todo: refactor single value and single value icon to send payload from viz
        // then remove these lines

        var payloadKeys = supportedEvents[eventName].payloadKeys;
        var payload = {};

        if (Array.isArray(payloadKeys) && payloadKeys.length) {
          payloadKeys.forEach(function (p) {
            return payload[p] = evaluatedOptions[p];
          });
        }

        eventCallbackProps[eventCallbackPropName] = function (ev) {
          if (ev && ev.payload) {
            payload = ev.payload;
          }

          return onEventTrigger({
            originalEvent: ev,
            payload: payload,
            type: eventName
          });
        };
      });
    } // compute pure viz props which are not from options


    var computedVizProps = computeVizProps(Object.assign(Object.assign(Object.assign(Object.assign({}, props), evaluatedOptions), eventCallbackProps), {
      themeFunc: themeFunc
    }));
    /**
     * PAGE_AND_SORT behavior
     *
     * Some visualizations, like table, requires metadata about the datasource,
     * like total number of results, current count, offset, and sort, for rendering
     * paginator and sorting direction. In this approach, the visualization
     * allow users to set 'paginateDataSourceKey' to select which datasource
     * should the visualization extract the metadata from. It defaults to 'primary' datasource.
     * The visualization config should set the PAGE_AND_SORT behavior to receive
     * 'requestParams', 'meta' and onRequestParams callback as props.
     *
     * In future, we could automatically detect which all datasources are being used
     * and bind those magically to pagination/sorting behavior.
     */

    var dataSourceMetadata = {};
    var OptionKey = 'paginateDataSourceKey';
    var paginateDataSourceKey = lodash_1.has(evaluatedOptions, OptionKey) && evaluatedOptions[OptionKey] || 'primary';

    if (vizConfig.supports.indexOf(VizBehavior_1.VizBehavior.PAGE_AND_SORT) > -1 && lodash_1.has(dataSources, paginateDataSourceKey)) {
      var requestParams = lodash_1.get(dataSources, [paginateDataSourceKey, 'requestParams'], {});
      var meta = lodash_1.get(dataSources, [paginateDataSourceKey, 'meta'], {});

      var handleRequestParamsChange = function handleRequestParamsChange(payload) {
        return onRequestParamsChange(paginateDataSourceKey, payload);
      };

      var sortParams = getSorting_1.getSortingParams({
        requestParams: requestParams,
        meta: meta,
        onRequestParamsChange: handleRequestParamsChange
      });
      var paginatorParams = getPagination_1.getPaginationParams({
        requestParams: requestParams,
        meta: meta,
        onRequestParamsChange: handleRequestParamsChange
      });
      dataSourceMetadata = {
        sortParams: sortParams,
        paginatorParams: paginatorParams
      };
    }

    return React.createElement(SanitizedReactViz, Object.assign({
      mode: mode,
      width: width,
      height: height
    }, evaluatedOptions, computedVizProps, eventCallbackProps, dataSourceMetadata));
  };

  DashboardViz.propTypes = Object.assign(Object.assign({}, SplunkVisualization_1.default.propTypes), ReactViz.propTypes);
  DashboardViz.defaultProps = Object.assign(Object.assign(Object.assign({}, SplunkVisualization_1.default.defaultProps), ReactViz.defaultProps), {
    // using withTheme requires component to receive theme prop. In case the consumer did not provide ThemeProvider, a default empty object will prevent warnings.
    theme: {}
  }); // attach viz config

  DashboardViz.config = vizConfig; // @ts-ignore: TODO fix sc upgrade TS issues

  return styled_components_1.withTheme(withPlaceholder_1.default(withEditModeCover_1.default(DashboardViz), useIconPlaceholder));
};

exports.default = withDashboardViz;

/***/ }),
/* 28 */
/***/ (function(module, exports) {

module.exports = require("@splunk/themes/getSettingsFromThemedProps");

/***/ }),
/* 29 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualization-encoding/Options");

/***/ }),
/* 30 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/SanitizeProps");

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _classCallCheck = __webpack_require__(10);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.INITIAL_HEIGHT = exports.INITIAL_WIDTH = void 0;
/* eslint-disable react/no-unused-prop-types,react/prefer-stateless-function */

var T = __webpack_require__(0);

var lodash_1 = __webpack_require__(2);

var VizActionHandler_1 = __webpack_require__(32); // this is identical to the initial height and width we use in BaseVisualization in dashboard-visualizations


exports.INITIAL_WIDTH = 250;
exports.INITIAL_HEIGHT = 250;
/**
 * A Splunk visualization
 */

var SplunkVisualization = function SplunkVisualization() {
  _classCallCheck(this, SplunkVisualization);
};

SplunkVisualization.propTypes = {
  /**
   * display mode
   */
  mode: T.oneOf(['view', 'edit', 'export']).isRequired,

  /**
   * width in pixel or string, defaults to 100%
   */
  width: T.oneOfType([T.string, T.number]).isRequired,

  /**
   * height in pixel or string
   */
  height: T.oneOfType([T.string, T.number]).isRequired,

  /**
   * visualization context used for dynamic option evaluation
   */
  context: T.object,

  /**
   * visualization formatting options
   */
  options: T.object,

  /**
   * A callback to update formatting options
   */
  onOptionsChange: T.func,

  /**
   * datasource state which include data and request params, object key indicate the datasource type.
   */
  dataSources: T.objectOf(T.shape({
    /**
     * current request params
     */
    requestParams: T.object,

    /**
     * current dataset
     */
    data: T.shape({
      fields: T.array,
      columns: T.array
    }),

    /**
     * error
     */
    error: T.shape({
      level: T.string,
      message: T.string
    }),

    /**
     * meta data that came with the dataset
     */
    meta: T.object
  })),

  /**
   * A callback to trigger event
   */
  onEventTrigger: T.func,

  /**
   * Inform viz if there are handlers listening to events
   */
  hasEventHandlers: T.bool,

  /**
   * A callback to communicate computed props to a consumer
   */
  onComputedProps: T.func,

  /**
   * A callback to obtain visualization api
   */
  vizActionHandlerRef: T.func,
  loading: T.bool,
  theme: T.object,

  /**
   * A callback to request new data with updated request params
   */
  onRequestParamsChange: T.func
};
/**
 *
 */

SplunkVisualization.defaultProps = {
  // BaseVisualization in dashboard-visualizations uses 100% for width but 250 for height
  width: '100%',
  height: exports.INITIAL_HEIGHT,
  dataSources: {},
  onEventTrigger: function onEventTrigger() {
    return {};
  },
  mode: 'view',
  hasEventHandlers: false,
  options: {},
  context: {},
  onOptionsChange: function onOptionsChange() {
    return {};
  },
  vizActionHandlerRef: function vizActionHandlerRef() {
    return new VizActionHandler_1.DefaultVizActionHandler();
  },
  onComputedProps: function onComputedProps() {
    return {};
  },
  loading: false,
  onRequestParamsChange: lodash_1.noop
};
exports.default = SplunkVisualization;

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _classCallCheck = __webpack_require__(10);

var _createClass = __webpack_require__(16);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DefaultVizActionHandler = void 0;

var DefaultVizActionHandler = /*#__PURE__*/function () {
  function DefaultVizActionHandler() {
    _classCallCheck(this, DefaultVizActionHandler);
  }

  _createClass(DefaultVizActionHandler, [{
    key: "focus",
    value: function focus() {//noop
    }
  }, {
    key: "snapshot",
    value: function snapshot() {
      return null; //noop
    }
  }]);

  return DefaultVizActionHandler;
}();

exports.DefaultVizActionHandler = DefaultVizActionHandler;

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.validSortDirs = void 0;
exports.validSortDirs = ['asc', 'desc', 'none'];

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useDeepMemo = void 0;

var react_1 = __webpack_require__(1);

var lodash_1 = __webpack_require__(2);
/**
 * This hook evaluates and stores the result of a passed function and only
 * re-evaluates the function when passed dependencies change.
 *
 * It is different from the internal React useMemo in the following aspects:
 * - it only stores the last evaluated result
 * - it uses a deep equality check to determine if dependencies have changed
 *
 * Inspired by apollo-client's useDeepMemo
 *
 * @param fn the function to be executed and
 * @param dependencies an array of dependencies
 */


var useDeepMemo = function useDeepMemo(fn, dependencies) {
  var ref = react_1.useRef();

  if (!ref.current || !lodash_1.isEqual(dependencies, ref.current.dependencies)) {
    ref.current = {
      dependencies: dependencies,
      value: fn()
    };
  }

  return ref.current.value;
};

exports.useDeepMemo = useDeepMemo;

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pickFieldFromJSONSchema = void 0;

var lodash_1 = __webpack_require__(2);

var pickFieldFromJSONSchema = function pickFieldFromJSONSchema(optionsSchema) {
  var fieldName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';
  return Object.keys(optionsSchema).reduce(function (accum, k) {
    if (lodash_1.has(optionsSchema[k], fieldName)) {
      accum[k] = optionsSchema[k][fieldName];
    } else if (lodash_1.get(optionsSchema, [k, 'type']) === 'object' && lodash_1.has(optionsSchema[k], 'properties')) {
      var nestedSchema = exports.pickFieldFromJSONSchema(optionsSchema[k].properties, fieldName);

      if (!lodash_1.isEmpty(nestedSchema)) {
        accum[k] = nestedSchema;
      }
    }

    return accum;
  }, {});
};

exports.pickFieldFromJSONSchema = pickFieldFromJSONSchema;

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MissingPropsMessage = exports.missingKeys = exports.isMissing = void 0;

var React = __webpack_require__(1);

var T = __webpack_require__(0);

var i18n_1 = __webpack_require__(3);

var Message_1 = __webpack_require__(9);

var FixedSizeContainer_1 = __webpack_require__(12);
/**
 * @method isMissing
 * @param {any} v
 * @returns {boolean} true if the input value === null or undefined
 */


var isMissing = function isMissing(v) {
  return v === null || v === undefined;
};

exports.isMissing = isMissing;
/**
 * @method misskingKeys
 * @param {string[]} keys
 * @param {object} target
 * @returns {string[]} the keys of missing required props
 */

var missingKeys = function missingKeys(keys, target) {
  return keys.filter(function (k) {
    return exports.isMissing(target[k]);
  });
};

exports.missingKeys = missingKeys;
var propTypes = {
  width: T.oneOfType([T.string, T.number]),
  height: T.oneOfType([T.string, T.number]),
  backgroundColor: T.string,
  missingProps: T.arrayOf(T.string)
};
/**
 * @method MissingPropsMessage
 * @param {MissingPropsProps} props
 * @returns {React.ReactElement}
 */

var MissingPropsMessage = function MissingPropsMessage(props) {
  var width = props.width,
      height = props.height,
      missingProps = props.missingProps;
  return React.createElement(Message_1.default, {
    "data-test": "message",
    width: width,
    height: height,
    message: i18n_1._("Missing property: ".concat(missingProps.join(', ')))
  });
};

exports.MissingPropsMessage = MissingPropsMessage;
exports.MissingPropsMessage.propTypes = propTypes;
exports.MissingPropsMessage.defaultProps = {
  width: '100%',
  height: 250
};
exports.default = FixedSizeContainer_1.default(exports.MissingPropsMessage);

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __webpack_require__(1);

var styled_components_1 = __webpack_require__(4);

var hocUtils_1 = __webpack_require__(7);

var Cover = styled_components_1.default.div.withConfig({
  displayName: "withEditModeCover__Cover",
  componentId: "sc-1gsbnxb-0"
})(["position:absolute;left:0;right:0;top:0;bottom:0;"]);
var Blocker = styled_components_1.default.div.withConfig({
  displayName: "withEditModeCover__Blocker",
  componentId: "sc-1gsbnxb-1"
})(["position:relative;width:100%;height:100%;"]);
/**
 * HOC that renders a cover layer in edit mode
 * @method withEditModeCover
 * @param {ExtendedDashViz} Visualization
 * @returns {ExtendedDashViz} Wrapper
 */

var withEditModeCover = function withEditModeCover(Visualization) {
  var Wrapper = function Wrapper(props) {
    var mode = props.mode;
    return React.createElement(Blocker, null, React.createElement(Visualization, Object.assign({}, props)), mode === 'edit' && React.createElement(Cover, {
      "data-test": "edit-mode-cover"
    }));
  };

  hocUtils_1.extendStaticWrapperProps({
    Wrapper: Wrapper,
    Visualization: Visualization
  });
  return Wrapper;
};

exports.default = withEditModeCover;

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __webpack_require__(1);

var colorUtils_1 = __webpack_require__(11);

var IconPlaceholder_1 = __webpack_require__(25);

var VizBehavior_1 = __webpack_require__(5);

var hocUtils_1 = __webpack_require__(7);

var withPlaceholder = function withPlaceholder(Visualization) {
  var useIconPlaceholder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : IconPlaceholder_1.shouldShowIconPlaceholder;
  var config = Visualization.config;
  var themes = config.themes;

  var Wrapper = function Wrapper(props) {
    var _a;

    var dataSources = props.dataSources,
        loading = props.loading,
        options = props.options,
        height = props.height,
        width = props.width;
    var showPlaceholder = useIconPlaceholder(dataSources, loading, options);
    var bgColorFromTheme = colorUtils_1.isColor(options === null || options === void 0 ? void 0 : options.backgroundColor) ? options === null || options === void 0 ? void 0 : options.backgroundColor : (_a = themes === null || themes === void 0 ? void 0 : themes.defaultBackgroundColor) === null || _a === void 0 ? void 0 : _a.call(themes, props);

    if (config.supports.includes(VizBehavior_1.VizBehavior.PLACEHOLDER) && showPlaceholder) {
      return React.createElement(IconPlaceholder_1.default, {
        "data-test": "icon-placeholder",
        icon: config.icon,
        width: width,
        height: height,
        backgroundColor: bgColorFromTheme
      });
    }

    return React.createElement(Visualization, Object.assign({}, props));
  };

  hocUtils_1.extendStaticWrapperProps({
    Wrapper: Wrapper,
    Visualization: Visualization
  });
  return Wrapper;
};

exports.default = withPlaceholder;

/***/ }),
/* 39 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/toConsumableArray");

/***/ }),
/* 40 */,
/* 41 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualization-color-palettes");

/***/ }),
/* 42 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualization-icons");

/***/ }),
/* 43 */,
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var i18n_1 = __webpack_require__(3);

var background = function background(_ref) {
  var label = _ref.label,
      themes = _ref.themes,
      labelPosition = _ref.labelPosition;
  return [{
    label: i18n_1._(label || 'Background'),
    option: 'backgroundColor',
    editor: 'editor.color',
    editorProps: {
      labelPosition: labelPosition || 'top',
      themes: themes
    }
  }];
};

exports.default = background;

/***/ }),
/* 45 */,
/* 46 */,
/* 47 */,
/* 48 */
/***/ (function(module, exports) {

module.exports = require("d3-array");

/***/ }),
/* 49 */,
/* 50 */,
/* 51 */,
/* 52 */,
/* 53 */,
/* 54 */,
/* 55 */,
/* 56 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualization-color-palettes/editors/PresetPalettes");

/***/ }),
/* 57 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(styled_components__WEBPACK_IMPORTED_MODULE_0__);

var VizStyleWrapper = styled_components__WEBPACK_IMPORTED_MODULE_0___default.a.div.attrs(function (_ref) {
  var dataTestKey = _ref.dataTestKey;
  return {
    'data-test': dataTestKey
  };
}).withConfig({
  displayName: "VizStyleWrapper",
  componentId: "sc-6rw6wv-0"
})(["display:flex;justify-content:center;flex-direction:column;width:100%;height:100%;background-color:", ";"], function (props) {
  return props.backgroundColor;
});
VizStyleWrapper.displayName = 'VizStyleWrapper';
/* harmony default export */ __webpack_exports__["default"] = (VizStyleWrapper);

/***/ }),
/* 58 */,
/* 59 */,
/* 60 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/slicedToArray");

/***/ }),
/* 61 */,
/* 62 */,
/* 63 */,
/* 64 */,
/* 65 */,
/* 66 */,
/* 67 */,
/* 68 */,
/* 69 */,
/* 70 */,
/* 71 */,
/* 72 */
/***/ (function(module, exports) {

module.exports = require("@splunk/themes");

/***/ }),
/* 73 */
/***/ (function(module, exports) {

module.exports = require("d3-scale");

/***/ }),
/* 74 */,
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _toConsumableArray = __webpack_require__(39);

var _slicedToArray = __webpack_require__(60);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEFAULT_LINK_VALUE_INDEX = exports.DEFAULT_TARGET_INDEX = exports.DEFAULT_SOURCE_INDEX = exports.DEFAULT_CHART_HEIGHT = exports.DEFAULT_CHART_WIDTH = exports.CHART_MIN_HEIGHT = exports.CHART_MIN_WIDTH = exports.INACTIVE_OPACITY = exports.DEFAULT_NODE_OPACITY = exports.DEFAULT_LINK_OPACITY = exports.DEFAULT_SERIES_COLOR = exports.DEFAULT_LINK_COLOR = exports.DEFAULT_NODE_COLOR = exports.DEFAULT_FONT_FAMILY = exports.NODE_TEXT_FONT_SIZE = exports.DEFAULT_COLORS = void 0;

var React = __webpack_require__(1);

var react_1 = __webpack_require__(1);

var T = __webpack_require__(0);

var lodash_1 = __webpack_require__(2);

var styled_components_1 = __webpack_require__(4);

var Message_1 = __webpack_require__(9);

var i18n_1 = __webpack_require__(3);

var SizeAwareWrapper_1 = __webpack_require__(17);

var style_1 = __webpack_require__(13);

var visualization_color_palettes_1 = __webpack_require__(41);

var sankey_1 = __webpack_require__(220);

var VizStyleWrapper_1 = __webpack_require__(57);

var SankeyUtils_1 = __webpack_require__(95);

var SankeyNode_1 = __webpack_require__(221);

var SankeyLink_1 = __webpack_require__(222);

var SankeyTooltip_1 = __webpack_require__(223);

exports.DEFAULT_COLORS = {
  backgroundColor: '#ffffff',
  nodeTextColor: '#2c2c2c',
  tooltip: {
    headerColor: 'rgba(0, 0, 0, 0.54)',
    linkHeaderColor: '#2c2c2c',
    rowColor: '#2c2c2c'
  }
};
exports.NODE_TEXT_FONT_SIZE = 10;
exports.DEFAULT_FONT_FAMILY = '"Splunk Platform Sans", "Proxima Nova", "Helvetica Neue", Helvetica, Arial, sans-serif';
exports.DEFAULT_NODE_COLOR = '#909090';
exports.DEFAULT_LINK_COLOR = '#909090';
exports.DEFAULT_SERIES_COLOR = visualization_color_palettes_1.VIZ_CATEGORICAL;
exports.DEFAULT_LINK_OPACITY = 0.5;
exports.DEFAULT_NODE_OPACITY = 1;
exports.INACTIVE_OPACITY = 0.05;
exports.CHART_MIN_WIDTH = 300;
exports.CHART_MIN_HEIGHT = 200;
exports.DEFAULT_CHART_WIDTH = 600;
exports.DEFAULT_CHART_HEIGHT = 300;
exports.DEFAULT_SOURCE_INDEX = 0;
exports.DEFAULT_TARGET_INDEX = 1;
exports.DEFAULT_LINK_VALUE_INDEX = 2;
var SankeyContainer = styled_components_1.default.div.withConfig({
  displayName: "PureSankey__SankeyContainer",
  componentId: "sc-1r333qx-0"
})(["overflow:hidden;", ";"], function (props) {
  return style_1.toDimension(lodash_1.pick(props, ['width', 'height']));
});

var PureSankey = function PureSankey(props) {
  var width = props.width,
      height = props.height,
      columns = props.columns,
      colorMode = props.colorMode,
      nodeWidth = props.nodeWidth,
      nodePadding = props.nodePadding,
      resultLimit = props.resultLimit,
      seriesColors = props.seriesColors,
      linkColors = props.linkColors,
      linkOpacity = props.linkOpacity,
      linkValueField = props.linkValueField,
      backgroundColor = props.backgroundColor,
      nodeTextColor = props.nodeTextColor,
      tooltipRowColor = props.tooltipRowColor,
      tooltipLinkHeaderColor = props.tooltipLinkHeaderColor,
      tooltipHeaderColor = props.tooltipHeaderColor;
  var margin = {
    top: 17,
    right: 25,
    bottom: 17,
    left: 30
  }; // This is to translate the svg's root g based on margin
  // The y position is same as margin top & bottom
  // The x position is an avg of margin right & left

  var translatePos = {
    x: 28,
    y: 17
  };

  var _react_1$useState = react_1.useState([]),
      _react_1$useState2 = _slicedToArray(_react_1$useState, 2),
      activeLinks = _react_1$useState2[0],
      setActiveLinks = _react_1$useState2[1];

  var _react_1$useState3 = react_1.useState([]),
      _react_1$useState4 = _slicedToArray(_react_1$useState3, 2),
      activeNodes = _react_1$useState4[0],
      setActiveNodes = _react_1$useState4[1];

  var _react_1$useState5 = react_1.useState(null),
      _react_1$useState6 = _slicedToArray(_react_1$useState5, 2),
      nodeHovered = _react_1$useState6[0],
      setNodeHovered = _react_1$useState6[1];

  var _react_1$useState7 = react_1.useState(null),
      _react_1$useState8 = _slicedToArray(_react_1$useState7, 2),
      hoveredNodeElement = _react_1$useState8[0],
      setHoveredNodeElement = _react_1$useState8[1];

  var _react_1$useState9 = react_1.useState(false),
      _react_1$useState10 = _slicedToArray(_react_1$useState9, 2),
      openNodeToolTip = _react_1$useState10[0],
      setOpenNodeToolTip = _react_1$useState10[1];

  var _react_1$useState11 = react_1.useState(null),
      _react_1$useState12 = _slicedToArray(_react_1$useState11, 2),
      hoveredLinkElement = _react_1$useState12[0],
      setHoveredLinkElement = _react_1$useState12[1];

  var _react_1$useState13 = react_1.useState(false),
      _react_1$useState14 = _slicedToArray(_react_1$useState13, 2),
      openLinkToolTip = _react_1$useState14[0],
      setOpenLinkToolTip = _react_1$useState14[1];

  var sankeyContainerElement = react_1.useRef(null);

  var _react_1$useState15 = react_1.useState(exports.DEFAULT_CHART_WIDTH - margin.left - margin.right),
      _react_1$useState16 = _slicedToArray(_react_1$useState15, 2),
      sankeyWidth = _react_1$useState16[0],
      setSankeyWidth = _react_1$useState16[1];

  var _react_1$useState17 = react_1.useState(exports.DEFAULT_CHART_HEIGHT - margin.top - margin.bottom),
      _react_1$useState18 = _slicedToArray(_react_1$useState17, 2),
      sankeyHeight = _react_1$useState18[0],
      setSankeyHeight = _react_1$useState18[1];

  react_1.useEffect(function () {
    if (sankeyContainerElement && sankeyContainerElement.current) {
      var w = sankeyContainerElement.current.getBoundingClientRect().width;
      var h = sankeyContainerElement.current.getBoundingClientRect().height;
      var sWidth = SankeyUtils_1.checkDigitsOnly(width) ? parseInt(width) : w;
      var sHeight = SankeyUtils_1.checkDigitsOnly(height) ? parseInt(height) : h;
      setSankeyWidth(sWidth - margin.left - margin.right);
      setSankeyHeight(sHeight - margin.top - margin.bottom);
    }
  }, [width, height]);
  var sankeyData = SankeyUtils_1.convertInputToSankeyDataFormat(columns, exports.DEFAULT_SOURCE_INDEX, exports.DEFAULT_TARGET_INDEX, exports.DEFAULT_LINK_VALUE_INDEX, resultLimit);

  if (!sankeyData || !columns || !Array.isArray(columns) || columns.length < 3) {
    return React.createElement(Message_1.default, {
      width: width,
      height: height,
      message: i18n_1._('Invalid data to render'),
      level: "info"
    });
  }

  var sortAndAssignLinkIds = function sortAndAssignLinkIds(links) {
    links.sort(function (a, b) {
      return a.dy - b.dy;
    });
    links.forEach(function (link) {
      link.id = "link-".concat(link.source.index, "-").concat(link.target.index);
    });
  };

  var d3sankey = sankey_1.d3_sankey().nodeWidth(nodeWidth).nodePadding(nodePadding).size([sankeyWidth, sankeyHeight]);
  var path = d3sankey.reversibleLink();
  d3sankey.nodes(sankeyData.nodes).links(sankeyData.links).layout(500);
  sortAndAssignLinkIds(sankeyData.links);
  var nodeConnectionsMap = SankeyUtils_1.computeAllConnectedLinksToNodes(sankeyData.nodes, sankeyData.links);
  var uniqCategory = SankeyUtils_1.getAllNodeNames(sankeyData);
  var colorCategoryMapping = SankeyUtils_1.getColorCategoryMapping({
    category: uniqCategory,
    colorMode: colorMode,
    seriesColors: seriesColors,
    linkColors: linkColors
  });

  var resetStates = function resetStates() {
    setActiveLinks([]);
    setActiveNodes([]);
    setHoveredLinkElement(null);
    setHoveredNodeElement(null);
    setNodeHovered(null);
    setOpenLinkToolTip(false);
    setOpenNodeToolTip(false);
  };

  var renderVisualization = function renderVisualization(_ref) {
    var containerWidth = _ref.width,
        containerHeight = _ref.height;

    if (containerWidth < exports.CHART_MIN_WIDTH || containerHeight < exports.CHART_MIN_HEIGHT) {
      return React.createElement(Message_1.default, {
        width: containerWidth,
        height: containerHeight,
        message: i18n_1._('Too small to render content'),
        level: "info"
      });
    }

    var renderLinks = function renderLinks(links) {
      return links.map(function (link) {
        return React.createElement(SankeyLink_1.default, {
          link: link,
          activeLinks: activeLinks,
          linkOpacity: linkOpacity,
          path: path,
          key: SankeyUtils_1.getLinkId(link),
          "data-test": SankeyUtils_1.getLinkId(link),
          colorCategoryMapping: colorCategoryMapping,
          colorMode: colorMode,
          handleMouseOver: function handleMouseOver(ev) {
            setActiveLinks([link]);
            setActiveNodes([link.source, link.target]);
            setHoveredLinkElement(ev.currentTarget.querySelector('circle'));
            setOpenNodeToolTip(false);
            setOpenLinkToolTip(true);
          },
          handleMouseLeave: function handleMouseLeave() {
            resetStates();
          }
        });
      });
    };

    var renderNodes = function renderNodes(nodes) {
      var chartWidth = typeof width === 'number' ? width : Number.parseInt(width);
      return nodes.map(function (node) {
        return React.createElement(SankeyNode_1.default, {
          node: node,
          key: SankeyUtils_1.getNodeId(node),
          "data-test": SankeyUtils_1.getNodeId(node),
          activeNodes: activeNodes,
          nodeWidth: nodeWidth,
          chartWidth: chartWidth,
          colorCategoryMapping: colorCategoryMapping,
          nodeTextColor: nodeTextColor,
          handleMouseOver: function handleMouseOver(ev) {
            var connections = nodeConnectionsMap[node.index];
            setActiveLinks(connections.links);
            setNodeHovered(node);
            setActiveNodes([].concat(_toConsumableArray(connections.sourceNodes), _toConsumableArray(connections.targetNodes)));
            setHoveredNodeElement(ev.currentTarget);
            setOpenLinkToolTip(false);
            setOpenNodeToolTip(true);
          },
          handleMouseLeave: function handleMouseLeave() {
            return resetStates();
          }
        });
      });
    };

    return React.createElement(VizStyleWrapper_1.default, {
      backgroundColor: backgroundColor,
      dataTestKey: "SankeyWrapper",
      onMouseLeave: function onMouseLeave() {
        return resetStates();
      }
    }, React.createElement("svg", {
      height: "100%",
      width: "100%",
      "data-test": "sankey-svg"
    }, React.createElement("g", {
      transform: "translate(".concat(translatePos.x, ",").concat(translatePos.y, ")")
    }, React.createElement("g", {
      className: "link-group",
      "data-test": "link-group"
    }, renderLinks(sankeyData.links), openLinkToolTip && React.createElement(SankeyTooltip_1.default, {
      mode: "link",
      open: openLinkToolTip,
      handleTooltipRequestClose: function handleTooltipRequestClose() {
        return resetStates();
      },
      linkValue: linkValueField,
      connectionsMap: nodeConnectionsMap,
      anchor: hoveredLinkElement,
      link: activeLinks[0],
      height: sankeyHeight,
      width: sankeyWidth,
      colorCategoryMapping: colorCategoryMapping,
      tooltipRowColor: tooltipRowColor,
      tooltipLinkHeaderColor: tooltipLinkHeaderColor,
      tooltipHeaderColor: tooltipHeaderColor
    })), React.createElement("g", {
      className: "node-group",
      "data-test": "node-group"
    }, renderNodes(sankeyData.nodes), openNodeToolTip && React.createElement(SankeyTooltip_1.default, {
      mode: "node",
      open: openNodeToolTip,
      handleTooltipRequestClose: function handleTooltipRequestClose() {
        return resetStates();
      },
      linkValue: linkValueField,
      connectionsMap: nodeConnectionsMap,
      anchor: hoveredNodeElement,
      node: nodeHovered,
      height: sankeyHeight,
      width: sankeyWidth,
      colorCategoryMapping: colorCategoryMapping,
      tooltipRowColor: tooltipRowColor,
      tooltipLinkHeaderColor: tooltipLinkHeaderColor,
      tooltipHeaderColor: tooltipHeaderColor
    })))));
  };

  return React.createElement(SankeyContainer, {
    height: height,
    width: width,
    ref: sankeyContainerElement
  }, React.createElement(SizeAwareWrapper_1.default, null, function (containerDimension) {
    return renderVisualization(containerDimension);
  }));
};

PureSankey.propTypes = {
  columns: T.array,
  width: T.oneOfType([T.string, T.number]),
  height: T.oneOfType([T.string, T.number]),
  mode: T.string,
  colorMode: T.string,
  nodeWidth: T.number,
  nodePadding: T.number,
  resultLimit: T.number,
  seriesColors: T.arrayOf(T.string),
  linkColors: T.arrayOf(T.string),
  linkOpacity: T.number,
  linkValueField: T.string,
  backgroundColor: T.string,
  nodeTextColor: T.string,
  tooltipRowColor: T.string,
  tooltipLinkHeaderColor: T.string,
  tooltipHeaderColor: T.string
};
PureSankey.defaultProps = {
  columns: [],
  width: exports.DEFAULT_CHART_WIDTH,
  height: exports.DEFAULT_CHART_HEIGHT,
  mode: 'view',
  colorMode: 'categorical',
  nodeWidth: 12,
  nodePadding: 18,
  resultLimit: 1000,
  seriesColors: exports.DEFAULT_SERIES_COLOR,
  linkColors: [],
  linkOpacity: exports.DEFAULT_LINK_OPACITY,
  linkValueField: 'value',
  backgroundColor: '#0b0c0e',
  nodeTextColor: 'rgba(255, 255, 255, 0.98)',
  tooltipRowColor: 'rgba(255, 255, 255, 0.98)',
  tooltipLinkHeaderColor: 'rgba(255, 255, 255, 0.98)',
  tooltipHeaderColor: 'rgba(255, 255, 255, 0.5)'
};
exports.default = PureSankey;

/***/ }),
/* 76 */,
/* 77 */,
/* 78 */,
/* 79 */,
/* 80 */,
/* 81 */,
/* 82 */,
/* 83 */,
/* 84 */,
/* 85 */,
/* 86 */,
/* 87 */,
/* 88 */,
/* 89 */,
/* 90 */,
/* 91 */,
/* 92 */,
/* 93 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/dataSourceUtils");

/***/ }),
/* 94 */,
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof = __webpack_require__(22);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.truncateSVGTextWithEllipsis = exports.checkDigitsOnly = exports.computeAllConnectedLinksToNodes = exports.getAllConnectedLinks = exports.extractLinkMidPoint = exports.getNodesIndex = exports.getAllNodeNames = exports.getLinkId = exports.getNodeId = exports.convertInputToSankeyDataFormat = exports.getColorCategoryMapping = void 0;

var d3_scale_1 = __webpack_require__(73);

var getColorCategoryMapping = function getColorCategoryMapping(_ref) {
  var category = _ref.category,
      colorMode = _ref.colorMode,
      seriesColors = _ref.seriesColors,
      linkColors = _ref.linkColors;

  if (colorMode !== 'categorical') {
    return linkColors;
  }

  return seriesColors ? d3_scale_1.scaleOrdinal().domain(category).range(seriesColors).unknown(seriesColors[0]) : null;
};

exports.getColorCategoryMapping = getColorCategoryMapping;

var convertInputToSankeyDataFormat = function convertInputToSankeyDataFormat(columns, sourceFieldIdx, targetFieldIdx, linkValueFieldIdx, resultLimit) {
  if (!columns || !Array.isArray(columns) || !columns.length || !columns[sourceFieldIdx] || !columns[targetFieldIdx] || !columns[linkValueFieldIdx] || columns.length < 3 || !Array.isArray(columns[sourceFieldIdx]) || !Array.isArray(columns[targetFieldIdx]) || !Array.isArray(columns[linkValueFieldIdx]) || !columns[sourceFieldIdx] || typeof columns[sourceFieldIdx][0] !== 'string' || !columns[targetFieldIdx] || typeof columns[targetFieldIdx][0] !== 'string' || !columns[linkValueFieldIdx] || typeof columns[linkValueFieldIdx][0] !== 'number') {
    return null;
  }

  var sankeyData = {
    nodes: [],
    links: []
  };
  var maxlen = Math.min(columns[sourceFieldIdx].length, columns[targetFieldIdx].length, columns[linkValueFieldIdx].length, resultLimit);

  var _loop = function _loop(i) {
    if (typeof columns[sourceFieldIdx][i] !== 'string' || typeof columns[targetFieldIdx][i] !== 'string' || typeof columns[linkValueFieldIdx][i] !== 'number') {
      console.error('Link excluded. Invalid type in column input, row :- ', i, "[".concat(columns[sourceFieldIdx][i], ", ").concat(columns[targetFieldIdx][i], ", ").concat(columns[linkValueFieldIdx][i], "]"));
      return {
        v: void 0
      };
    }

    var sourceNodeName = columns[sourceFieldIdx][i].trim();
    var targetNodeName = columns[targetFieldIdx][i].trim();
    insertNodeIfNotExist(sankeyData, sourceNodeName);
    insertNodeIfNotExist(sankeyData, targetNodeName); // If same link exists then sum up the value and donot insert new link

    var sourceNodeIdx = exports.getNodesIndex(sankeyData, sourceNodeName);
    var targetNodeIdx = exports.getNodesIndex(sankeyData, targetNodeName);
    var linkExist = sankeyData.links.find(function (link) {
      return link.source === sourceNodeIdx && link.target === targetNodeIdx;
    });

    if (linkExist) {
      linkExist.value += columns[linkValueFieldIdx][i];
    } else {
      insertLink(sankeyData, sourceNodeIdx, targetNodeIdx, columns[linkValueFieldIdx][i], i);
    }
  };

  for (var i = 0; i < maxlen; i++) {
    var _ret = _loop(i);

    if (_typeof(_ret) === "object") return _ret.v;
  }

  return sankeyData;
};

exports.convertInputToSankeyDataFormat = convertInputToSankeyDataFormat;

var getNodeId = function getNodeId(node) {
  if (!node) {
    return '';
  }

  return "node-".concat(node.index);
};

exports.getNodeId = getNodeId;

var getLinkId = function getLinkId(link) {
  if (!link) {
    return '';
  }

  return "link-".concat(link.id);
};

exports.getLinkId = getLinkId;

var insertNodeIfNotExist = function insertNodeIfNotExist(sankeyData, nodeName) {
  var nodes = sankeyData.nodes;
  nodes = nodes ? nodes : [];

  if (typeof nodeName !== 'string') {
    console.error('Node not created, invalid nodename:', nodeName);
    return;
  }

  nodeName = nodeName.trim();

  if (!nodes.find(function (node) {
    return node.name.toLocaleLowerCase() === nodeName.toLocaleLowerCase();
  })) {
    nodes.push({
      name: nodeName
    });
  }
};

var insertLink = function insertLink(sankeyData, sourceFieldIdx, targetFieldIdx, linkValue, index) {
  var links = sankeyData.links;
  links = links ? links : [];
  links.push({
    source: sourceFieldIdx,
    target: targetFieldIdx,
    value: linkValue,
    index: index
  });
};

var getAllNodeNames = function getAllNodeNames(sankeyData) {
  if (!sankeyData || !sankeyData.nodes || !sankeyData.nodes.length) {
    return [];
  }

  return sankeyData.nodes.map(function (node) {
    return node.name;
  });
};

exports.getAllNodeNames = getAllNodeNames;

var getNodesIndex = function getNodesIndex(sankeyData, nodeName) {
  if (!sankeyData || !sankeyData.nodes || !sankeyData.nodes.length) {
    return -1;
  }

  return sankeyData.nodes.findIndex(function (node) {
    return node.name.toLocaleLowerCase() === nodeName.toLocaleLowerCase();
  });
};

exports.getNodesIndex = getNodesIndex;

var extractLinkMidPoint = function extractLinkMidPoint(pathStr) {
  if (!pathStr) {
    return null;
  }

  var mIndex = pathStr.indexOf('M');
  var cIndexFirst = pathStr.indexOf('C');
  var lIndex = pathStr.indexOf('L');
  var cIndexLast = pathStr.lastIndexOf('C');
  var zIndex = pathStr.lastIndexOf('Z');

  if (mIndex < 0 || cIndexLast < 0 || cIndexLast < 0 || zIndex < 0) {
    console.error('Extract link midpoint error. Invalid path -', pathStr);
    return null;
  }

  var section1 = pathStr.slice(mIndex + 1, cIndexFirst).trim();
  var section2 = pathStr.slice(cIndexFirst + 1, lIndex).trim();
  var section3 = pathStr.slice(lIndex + 1, cIndexLast).trim();
  var section4 = pathStr.slice(cIndexLast + 1, zIndex).trim();

  if (!section1.length || !section2.length || !section3.length || !section4.length) {
    console.error('Extract link midpoint error. Invalid path -', pathStr);
    return null;
  }

  var points = [];
  points.push(section1.split(',').map(function (i) {
    return Number.parseFloat(i);
  }));
  var point2Arr = section2.split(' ');
  points.push(point2Arr[point2Arr.length - 1].split(',').map(function (i) {
    return Number.parseFloat(i);
  }));
  points.push(section3.split(',').map(function (i) {
    return Number.parseFloat(i);
  }));
  var point4Arr = section4.split(' ');
  points.push(point4Arr[point4Arr.length - 1].split(',').map(function (i) {
    return Number.parseFloat(i);
  }));
  var width = Math.abs(points[0][0] - points[1][0]) / 2;
  var x = Math.min(points[0][0], points[1][0]) + width;
  var height = Math.abs(points[0][1] - points[2][1]) / 2;
  var y = Math.min(points[0][1], points[2][1]) + height;
  return {
    x: x,
    y: y
  };
};

exports.extractLinkMidPoint = extractLinkMidPoint;

var getAllConnectedLinks = function getAllConnectedLinks(links, nodeIdx) {
  var result = {
    links: [],
    sourceNodes: [],
    targetNodes: []
  };

  if (!links || !links.length) {
    return result;
  }

  links.forEach(function (link) {
    if (link.source.index === nodeIdx || link.target.index === nodeIdx) {
      var linkAdded = result.links.find(function (l) {
        return l.id === link.id;
      });

      if (!linkAdded) {
        result.links.push(link);
      }

      var sourceNodeAdded = result.sourceNodes.find(function (n) {
        return n.index === link.source.index;
      });

      if (!sourceNodeAdded) {
        result.sourceNodes.push(link.source);
      }

      var targetNodeAdded = result.targetNodes.find(function (n) {
        return n.index === link.target.index;
      });

      if (!targetNodeAdded) {
        result.targetNodes.push(link.target);
      }
    }
  });
  return result;
};

exports.getAllConnectedLinks = getAllConnectedLinks;

var computeAllConnectedLinksToNodes = function computeAllConnectedLinksToNodes(nodes, links) {
  var connectionsMap = {};

  if (!nodes || !links) {
    return connectionsMap;
  }

  nodes.forEach(function (node) {
    var connections = exports.getAllConnectedLinks(links, node.index);
    connectionsMap[node.index] = connections;
  });
  return connectionsMap;
};

exports.computeAllConnectedLinksToNodes = computeAllConnectedLinksToNodes;

var checkDigitsOnly = function checkDigitsOnly(input) {
  return /^\d+$/.test(input);
};

exports.checkDigitsOnly = checkDigitsOnly; //Truncate the node text and show ellipsis at the end if text string width exceeds the max limit

var truncateSVGTextWithEllipsis = function truncateSVGTextWithEllipsis(textElement, textString, width) {
  if (textElement && textElement.getSubStringLength !== undefined) {
    textElement.textContent = textString; //ellipsis is needed

    if (textElement.getSubStringLength(0, textString.length) >= width) {
      for (var x = textString.length - 3; x > 0; x -= 3) {
        if (textElement.getSubStringLength(0, x) <= width) {
          textElement.textContent = textString.substring(0, x) + '...';
          return;
        }
      }

      textElement.textContent = '...'; //can't place at all
    }
  }
};

exports.truncateSVGTextWithEllipsis = truncateSVGTextWithEllipsis;

/***/ }),
/* 96 */,
/* 97 */,
/* 98 */,
/* 99 */,
/* 100 */,
/* 101 */,
/* 102 */,
/* 103 */,
/* 104 */,
/* 105 */,
/* 106 */
/***/ (function(module, exports) {

module.exports = require("d3-interpolate");

/***/ }),
/* 107 */
/***/ (function(module, exports) {

module.exports = require("d3-collection");

/***/ }),
/* 108 */,
/* 109 */,
/* 110 */,
/* 111 */,
/* 112 */,
/* 113 */,
/* 114 */,
/* 115 */,
/* 116 */,
/* 117 */,
/* 118 */,
/* 119 */,
/* 120 */,
/* 121 */,
/* 122 */,
/* 123 */,
/* 124 */,
/* 125 */,
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof = __webpack_require__(22);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PureSankey = exports.config = exports.themes = exports.computeVizProps = exports.showPlaceHolderIcon = void 0;

var lodash_1 = __webpack_require__(2);

var dataSourceUtils_1 = __webpack_require__(93);

var colorUtils_1 = __webpack_require__(11);

var withDashboardViz_1 = __webpack_require__(27);

var PureSankey_1 = __webpack_require__(75);

exports.PureSankey = PureSankey_1.default;

var config_1 = __webpack_require__(225);

exports.config = config_1.default;
/**
 * @method showPlaceHolderIcon
 * @param {Object} dataSources
 * @returns {Boolean} return true if loading, error, non existent state or without columns in dataSources
 */

var showPlaceHolderIcon = function showPlaceHolderIcon(dataSources) {
  var columns = lodash_1.get(dataSources, 'primary.data.columns', undefined);
  var noColumns = columns === undefined;
  var dataSourceState = dataSourceUtils_1.getDataSourceStateInfo(dataSources);
  return dataSourceState === dataSourceUtils_1.DataSourceState.ERROR || dataSourceState === dataSourceUtils_1.DataSourceState.LOADING || dataSourceState === dataSourceUtils_1.DataSourceState.NONEXISTENT || noColumns;
};

exports.showPlaceHolderIcon = showPlaceHolderIcon;

var computeVizProps = function computeVizProps(_ref) {
  var themeFunc = _ref.themeFunc,
      dataSources = _ref.dataSources,
      linkValues = _ref.linkValues,
      seriesColors = _ref.seriesColors;

  var _a, _b, _c, _d, _e, _f, _g, _h, _j; // Compute all themeColor variables needed for PureSankey


  var themeColorVariables = ['defaultBackgroundColor', 'nodeTextColor', 'tooltipRowColor', 'tooltipLinkHeaderColor', 'tooltipHeaderColor'];
  var themeColors = {};
  themeColorVariables.forEach(function (variable) {
    themeColors[variable] = themeFunc(variable);
  }); // Sanitize seriesColors prop
  // (Note:- This is handled outside SanitizeProps because it would impact seriesColors option used in splunk-charting viz as the types are different.
  // The type used in splunk-charting viz expects a string of comma separated colors, but here the type is an array of string)

  seriesColors = colorUtils_1.isArrayOfColors(seriesColors) ? seriesColors : undefined; // Compute the columns props and linkValueField props for pure Sankey
  // The columns props is computed as [primary.data.columns[0], primary.data.columns[1], linkValues].
  // The source and target columns are the default as columns[0] and columns[1] respectively
  // The linkValueField props is the fieldName which is set as the source of linkValues

  var columnsFromDataSource = [];
  var linkValueField = '';

  if (((_b = (_a = dataSources === null || dataSources === void 0 ? void 0 : dataSources.primary) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.columns) && ((_e = (_d = (_c = dataSources === null || dataSources === void 0 ? void 0 : dataSources.primary) === null || _c === void 0 ? void 0 : _c.data) === null || _d === void 0 ? void 0 : _d.columns) === null || _e === void 0 ? void 0 : _e.length) >= 2 && Array.isArray(linkValues)) {
    var columns = dataSources.primary.data.columns;
    columnsFromDataSource = columns ? [columns[0], columns[1], linkValues] : null;
    var linkIndex = columns.findIndex(function (col) {
      return lodash_1.isEqual(col, linkValues);
    });

    if ((_g = (_f = dataSources === null || dataSources === void 0 ? void 0 : dataSources.primary) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.fields) {
      var linkField = (_j = (_h = dataSources === null || dataSources === void 0 ? void 0 : dataSources.primary) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.fields[linkIndex];

      if (_typeof(linkField) === 'object' && linkField !== null) {
        linkValueField = linkField.name;
      } else {
        linkValueField = linkField !== null && linkField !== void 0 ? linkField : '';
      }
    }
  }

  return Object.assign(Object.assign({}, themeColors), {
    columns: columnsFromDataSource,
    linkValueField: linkValueField,
    seriesColors: seriesColors
  });
};

exports.computeVizProps = computeVizProps;
var Sankey = withDashboardViz_1.default({
  ReactViz: PureSankey_1.default,
  vizConfig: config_1.default,
  computeVizProps: exports.computeVizProps,
  useIconPlaceholder: function useIconPlaceholder(dataSources, loading) {
    return exports.showPlaceHolderIcon(dataSources);
  }
});
var themes = config_1.default.themes;
exports.themes = themes;
exports.default = Sankey;

/***/ }),
/* 127 */,
/* 128 */,
/* 129 */,
/* 130 */,
/* 131 */,
/* 132 */,
/* 133 */,
/* 134 */,
/* 135 */,
/* 136 */,
/* 137 */,
/* 138 */,
/* 139 */,
/* 140 */,
/* 141 */,
/* 142 */,
/* 143 */,
/* 144 */,
/* 145 */,
/* 146 */,
/* 147 */,
/* 148 */,
/* 149 */,
/* 150 */,
/* 151 */,
/* 152 */,
/* 153 */,
/* 154 */,
/* 155 */,
/* 156 */,
/* 157 */,
/* 158 */,
/* 159 */,
/* 160 */,
/* 161 */,
/* 162 */,
/* 163 */,
/* 164 */,
/* 165 */,
/* 166 */,
/* 167 */,
/* 168 */,
/* 169 */,
/* 170 */,
/* 171 */,
/* 172 */,
/* 173 */,
/* 174 */,
/* 175 */,
/* 176 */,
/* 177 */,
/* 178 */,
/* 179 */,
/* 180 */,
/* 181 */,
/* 182 */,
/* 183 */,
/* 184 */,
/* 185 */,
/* 186 */,
/* 187 */,
/* 188 */,
/* 189 */,
/* 190 */,
/* 191 */,
/* 192 */,
/* 193 */,
/* 194 */,
/* 195 */,
/* 196 */,
/* 197 */,
/* 198 */,
/* 199 */,
/* 200 */,
/* 201 */,
/* 202 */,
/* 203 */,
/* 204 */,
/* 205 */,
/* 206 */,
/* 207 */,
/* 208 */,
/* 209 */,
/* 210 */,
/* 211 */,
/* 212 */,
/* 213 */,
/* 214 */,
/* 215 */,
/* 216 */,
/* 217 */,
/* 218 */,
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) {
    if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
  }
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

__exportStar(__webpack_require__(126), exports);

var Sankey_1 = __webpack_require__(126);

Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function get() {
    return Sankey_1.default;
  }
});

/***/ }),
/* 220 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d3_sankey", function() { return d3_sankey; });
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(106);
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(d3_interpolate__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(48);
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(d3_array__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var d3_collection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(107);
/* harmony import */ var d3_collection__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(d3_collection__WEBPACK_IMPORTED_MODULE_2__);
// reference link :- https://github.com/csaladenes/sankey

/* eslint-disable */



var d3_sankey = function d3_sankey() {
  var sankey = {},
      nodeWidth = 24,
      nodePadding = 8,
      size = [1, 1],
      nodes = [],
      links = [],
      components = [];

  sankey.nodeWidth = function (_) {
    if (!arguments.length) return nodeWidth;
    nodeWidth = +_;
    return sankey;
  };

  sankey.nodePadding = function (_) {
    if (!arguments.length) return nodePadding;
    nodePadding = +_;
    return sankey;
  };

  sankey.nodes = function (_) {
    if (!arguments.length) return nodes;
    nodes = _;
    return sankey;
  };

  sankey.links = function (_) {
    if (!arguments.length) return links;
    links = _;
    return sankey;
  };

  sankey.size = function (_) {
    if (!arguments.length) return size;
    size = _;
    return sankey;
  };

  sankey.layout = function (iterations) {
    computeNodeLinks();
    computeNodeValues();
    computeNodeStructure();
    computeNodeBreadths();
    computeNodeDepths(iterations);
    computeLinkDepths();
    return sankey;
  };

  sankey.relayout = function () {
    computeLinkDepths();
    return sankey;
  }; // A more involved path generator that requires 3 elements to render --
  // It draws a starting element, intermediate and end element that are useful
  // while drawing reverse links to get an appropriate fill.
  //
  // Each link is now an area and not a basic spline and no longer guarantees
  // fixed width throughout.
  //
  // Sample usage:
  //
  //  linkNodes = this._svg.append("g").selectAll(".link")
  //      .data(this.links)
  //    .enter().append("g")
  //      .attr("fill", "none")
  //      .attr("class", ".link")
  //      .sort(function(a, b) { return b.dy - a.dy; });
  //
  //  linkNodePieces = [];
  //  for (var i = 0; i < 3; i++) {
  //    linkNodePieces[i] = linkNodes.append("path")
  //      .attr("class", ".linkPiece")
  //      .attr("d", path(i))
  //      .attr("fill", ...)
  //  }


  sankey.reversibleLink = function () {
    var curvature = 0.5; // Used when source is behind target, the first and last paths are simple
    // lines at the start and end node while the second path is the spline

    function forwardLink(part, d) {
      var x0 = d.source.x + d.source.dx,
          x1 = d.target.x,
          xi = Object(d3_interpolate__WEBPACK_IMPORTED_MODULE_0__["interpolateNumber"])(x0, x1),
          x2 = xi(curvature),
          x3 = xi(1 - curvature),
          y0 = d.source.y + d.sy,
          y1 = d.target.y + d.ty,
          y2 = d.source.y + d.sy + d.dy,
          y3 = d.target.y + d.ty + d.dy;

      switch (part) {
        case 0:
          return 'M' + x0 + ',' + y0 + 'L' + x0 + ',' + (y0 + d.dy);

        case 1:
          return 'M' + x0 + ',' + y0 + 'C' + x2 + ',' + y0 + ' ' + x3 + ',' + y1 + ' ' + x1 + ',' + y1 + 'L' + x1 + ',' + y3 + 'C' + x3 + ',' + y3 + ' ' + x2 + ',' + y2 + ' ' + x0 + ',' + y2 + 'Z';

        case 2:
          return 'M' + x1 + ',' + y1 + 'L' + x1 + ',' + (y1 + d.dy);
      }
    } // Used for self loops and when the source is actually in front of the
    // target; the first element is a turning path from the source to the
    // destination, the second element connects the two twists and the last
    // twists into the target element.
    //
    //
    //  /--Target
    //  \----------------------\
    //                 Source--/
    //


    function backwardLink(part, d) {
      var curveExtension = 30;
      var curveDepth = 15;

      function getDir(d) {
        return d.source.y + d.sy > d.target.y + d.ty ? -1 : 1;
      }

      function p(x, y) {
        return x + ',' + y + ' ';
      }

      var dt = getDir(d) * curveDepth,
          x0 = d.source.x + d.source.dx,
          y0 = d.source.y + d.sy,
          x1 = d.target.x,
          y1 = d.target.y + d.ty;

      switch (part) {
        case 0:
          return 'M' + p(x0, y0) + 'C' + p(x0, y0) + p(x0 + curveExtension, y0) + p(x0 + curveExtension, y0 + dt) + 'L' + p(x0 + curveExtension, y0 + dt + d.dy) + 'C' + p(x0 + curveExtension, y0 + d.dy) + p(x0, y0 + d.dy) + p(x0, y0 + d.dy) + 'Z';

        case 1:
          return 'M' + p(x0 + curveExtension, y0 + dt) + 'C' + p(x0 + curveExtension, y0 + 3 * dt) + p(x1 - curveExtension, y1 - 3 * dt) + p(x1 - curveExtension, y1 - dt) + 'L' + p(x1 - curveExtension, y1 - dt + d.dy) + 'C' + p(x1 - curveExtension, y1 - 3 * dt + d.dy) + p(x0 + curveExtension, y0 + 3 * dt + d.dy) + p(x0 + curveExtension, y0 + dt + d.dy) + 'Z';

        case 2:
          return 'M' + p(x1 - curveExtension, y1 - dt) + 'C' + p(x1 - curveExtension, y1) + p(x1, y1) + p(x1, y1) + 'L' + p(x1, y1 + d.dy) + 'C' + p(x1, y1 + d.dy) + p(x1 - curveExtension, y1 + d.dy) + p(x1 - curveExtension, y1 + d.dy - dt) + 'Z';
      }
    }

    return function (part) {
      return function (d) {
        if (d.source.x < d.target.x) {
          return forwardLink(part, d);
        } else {
          return backwardLink(part, d);
        }
      };
    };
  }; // The standard link path using a constant width spline that needs a
  // single path element.


  sankey.link = function () {
    var curvature = 0.5;

    function link(d) {
      var x0 = d.source.x + d.source.dx,
          x1 = d.target.x,
          xi = Object(d3_interpolate__WEBPACK_IMPORTED_MODULE_0__["interpolateNumber"])(x0, x1),
          x2 = xi(curvature),
          x3 = xi(1 - curvature),
          y0 = d.source.y + d.sy + d.dy / 2,
          y1 = d.target.y + d.ty + d.dy / 2;
      return 'M' + x0 + ',' + y0 + 'C' + x2 + ',' + y0 + ' ' + x3 + ',' + y1 + ' ' + x1 + ',' + y1;
    }

    link.curvature = function (_) {
      if (!arguments.length) return curvature;
      curvature = +_;
      return link;
    };

    return link;
  }; // Populate the sourceLinks and targetLinks for each node.
  // Also, if the source and target are not objects, assume they are indices.


  function computeNodeLinks() {
    nodes.forEach(function (node) {
      node.sourceLinks = [];
      node.targetLinks = [];
    });
    links.forEach(function (link) {
      var source = link.source,
          target = link.target;
      if (typeof source === 'number') source = link.source = nodes[link.source];
      if (typeof target === 'number') target = link.target = nodes[link.target];
      source.sourceLinks.push(link);
      target.targetLinks.push(link);
    });
  } // Compute the value (size) of each node by summing the associated links.


  function computeNodeValues() {
    nodes.forEach(function (node) {
      if (!node.value) //if not already given
        node.value = Math.max(Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["sum"])(node.sourceLinks, value), Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["sum"])(node.targetLinks, value));
    });
  } // Take the list of nodes and create a DAG of supervertices, each consisting
  // of a strongly connected component of the graph
  //
  // Based off:
  // http://en.wikipedia.org/wiki/Tarjan's_strongly_connected_components_algorithm


  function computeNodeStructure() {
    var nodeStack = [],
        index = 0;
    nodes.forEach(function (node) {
      if (!node.index) {
        connect(node);
      }
    });

    function connect(node) {
      node.index = index++;
      node.lowIndex = node.index;
      node.onStack = true;
      nodeStack.push(node);

      if (node.sourceLinks) {
        node.sourceLinks.forEach(function (sourceLink) {
          var target = sourceLink.target;

          if (!target.hasOwnProperty('index')) {
            connect(target);
            node.lowIndex = Math.min(node.lowIndex, target.lowIndex);
          } else if (target.onStack) {
            node.lowIndex = Math.min(node.lowIndex, target.index);
          }
        });

        if (node.lowIndex === node.index) {
          var component = [],
              currentNode;

          do {
            currentNode = nodeStack.pop();
            currentNode.onStack = false;
            component.push(currentNode);
          } while (currentNode != node);

          components.push({
            root: node,
            scc: component
          });
        }
      }
    }

    components.forEach(function (component, i) {
      component.index = i;
      component.scc.forEach(function (node) {
        node.component = i;
      });
    });
  } // Assign the breadth (x-position) for each strongly connected component,
  // followed by assigning breadth within the component.


  function computeNodeBreadths() {
    layerComponents();
    components.forEach(function (component, i) {
      bfs(component.root, function (node) {
        var result = node.sourceLinks.filter(function (sourceLink) {
          return sourceLink.target.component == i;
        }).map(function (sourceLink) {
          return sourceLink.target;
        });
        return result;
      });
    });
    var max = 0;
    var componentsByBreadth = Object(d3_collection__WEBPACK_IMPORTED_MODULE_2__["nest"])().key(function (d) {
      return d.x;
    }).sortKeys(d3_array__WEBPACK_IMPORTED_MODULE_1__["ascending"]).entries(components).map(function (d) {
      return d.values;
    });
    var max = -1,
        nextMax = -1;
    componentsByBreadth.forEach(function (c) {
      c.forEach(function (component) {
        component.x = max + 1;
        component.scc.forEach(function (node) {
          if (node.layer) node.x = node.layer;else node.x = component.x + node.x;
          nextMax = Math.max(nextMax, node.x);
        });
      });
      max = nextMax;
    });
    nodes.filter(function (node) {
      var outLinks = node.sourceLinks.filter(function (link) {
        return link.source.name != link.target.name;
      });
      return outLinks.length == 0;
    }).forEach(function (node) {
      node.x = node.layer ? node.x : max;
    });
    scaleNodeBreadths((size[0] - nodeWidth) / Math.max(max, 1));

    function flatten(a) {
      return [].concat.apply([], a);
    }

    function layerComponents() {
      var remainingComponents = components,
          nextComponents,
          visitedIndex,
          x = 0;

      while (remainingComponents.length) {
        nextComponents = [];
        visitedIndex = {};
        remainingComponents.forEach(function (component) {
          component.x = x;
          component.scc.forEach(function (n) {
            n.sourceLinks.forEach(function (l) {
              if (!visitedIndex.hasOwnProperty(l.target.component) && l.target.component != component.index) {
                nextComponents.push(components[l.target.component]);
                visitedIndex[l.target.component] = true;
              }
            });
          });
        });
        remainingComponents = nextComponents;
        ++x;
      }
    }

    function bfs(node, extractTargets) {
      var queue = [node],
          currentCount = 1,
          nextCount = 0;
      var x = 0;

      while (currentCount > 0) {
        var currentNode = queue.shift();
        currentCount--;

        if (!currentNode.hasOwnProperty('x')) {
          currentNode.x = x;
          currentNode.dx = nodeWidth;
          var targets = extractTargets(currentNode);
          queue = queue.concat(targets);
          nextCount += targets.length;
        }

        if (currentCount == 0) {
          // level change
          x++;
          currentCount = nextCount;
          nextCount = 0;
        }
      }
    } //extra code for fixed layout - x part

    /*
    if (fixedlayout && fixedlayout.length > 0) {
    sankey.nodes().forEach(function (d, i) {
    d.x = fixedlayout[i][0];
    });
    }
    */

  }

  function moveSourcesRight() {
    nodes.forEach(function (node) {
      if (!node.targetLinks.length) {
        node.x = Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["min"])(node.sourceLinks, function (d) {
          return d.target.x;
        }) - 1;
      }
    });
  }

  function moveSinksRight(x) {
    nodes.forEach(function (node) {
      if (!node.sourceLinks.length) {
        node.x = x - 1;
      }
    });
  }

  function scaleNodeBreadths(kx) {
    nodes.forEach(function (node) {
      node.x *= kx;
    });
  }

  function computeNodeDepths(iterations) {
    var nodesByBreadth = Object(d3_collection__WEBPACK_IMPORTED_MODULE_2__["nest"])().key(function (d) {
      return d.x;
    }).sortKeys(d3_array__WEBPACK_IMPORTED_MODULE_1__["ascending"]).entries(nodes).map(function (d) {
      return d.values;
    });
    initializeNodeDepth();
    resolveCollisions();

    for (var alpha = 1; iterations > 0; --iterations) {
      relaxRightToLeft(alpha *= 0.99);
      resolveCollisions();
      relaxLeftToRight(alpha);
      resolveCollisions();
    }

    function initializeNodeDepth() {
      var ky = Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["min"])(nodesByBreadth, function (nodes) {
        return (size[1] - (nodes.length - 1) * nodePadding) / Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["sum"])(nodes, value);
      });
      nodesByBreadth.forEach(function (nodes) {
        nodes.forEach(function (node, i) {
          node.y = i;
          node.dy = node.value * ky;
        });
      });
      links.forEach(function (link) {
        link.dy = link.value * ky;
      });
    }

    function relaxLeftToRight(alpha) {
      nodesByBreadth.forEach(function (nodes, breadth) {
        nodes.forEach(function (node) {
          if (node.targetLinks.length) {
            var y = Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["sum"])(node.targetLinks, weightedSource) / Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["sum"])(node.targetLinks, value);
            node.y += (y - center(node)) * alpha;
          }
        });
      });

      function weightedSource(link) {
        return center(link.source) * link.value;
      }
    }

    function relaxRightToLeft(alpha) {
      nodesByBreadth.slice().reverse().forEach(function (nodes) {
        nodes.forEach(function (node) {
          if (node.sourceLinks.length) {
            var y = Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["sum"])(node.sourceLinks, weightedTarget) / Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["sum"])(node.sourceLinks, value);
            node.y += (y - center(node)) * alpha;
          }
        });
      });

      function weightedTarget(link) {
        return center(link.target) * link.value;
      }
    }

    function resolveCollisions() {
      nodesByBreadth.forEach(function (nodes) {
        var node,
            dy,
            y0 = 0,
            n = nodes.length,
            i; // Push any overlapping nodes down.

        nodes.sort(ascendingDepth);

        for (i = 0; i < n; ++i) {
          node = nodes[i];

          if (node) {
            dy = y0 - node.y;
            if (dy > 0) node.y += dy;
            y0 = node.y + node.dy + nodePadding;
          }
        } // If the bottommost node goes outside the bounds, push it back up.


        dy = y0 - nodePadding - size[1];

        if (node && dy > 0) {
          y0 = node.y -= dy; // Push any overlapping nodes back up.

          for (i = n - 2; i >= 0; --i) {
            node = nodes[i];
            dy = node.y + node.dy + nodePadding - y0;
            if (dy > 0) node.y -= dy;
            y0 = node.y;
          }
        }
      });
    }

    function ascendingDepth(a, b) {
      return a.y - b.y;
    } //extra code for fixed layout - y part

    /*
    if (fixedlayout.length > 0) {
    sankey.nodes().forEach(function (d, i) {
    d.y = fixedlayout[i][1];
    });
    }
    */

  }

  function computeLinkDepths() {
    nodes.forEach(function (node) {
      var parallelrendering = false;

      if (parallelrendering) {} else node.sourceLinks.sort(ascendingTargetDepth);

      node.targetLinks.sort(ascendingSourceDepth);
    });
    nodes.forEach(function (node) {
      var sy = 0,
          ty = 0;
      node.sourceLinks.forEach(function (link) {
        link.sy = sy;
        sy += link.dy;
      });
      node.targetLinks.forEach(function (link) {
        link.ty = ty;
        ty += link.dy;
      });
    });

    function ascendingSourceDepth(a, b) {
      return a.source.y - b.source.y;
    }

    function ascendingTargetDepth(a, b) {
      return a.target.y - b.target.y;
    }
  }

  function center(node) {
    return node.y + node.dy / 2;
  }

  function value(link) {
    return link.value;
  }

  return sankey;
};

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __webpack_require__(1);

var T = __webpack_require__(0);

var styled_components_1 = __webpack_require__(4);

var PureSankey_1 = __webpack_require__(75);

var react_1 = __webpack_require__(1);

var react_2 = __webpack_require__(1);

var SankeyUtils_1 = __webpack_require__(95);

var MAX_NODE_TEXT_WIDTH = 150;

var getNodeOpacity = function getNodeOpacity(nodeIndex, activeNodes) {
  if (!activeNodes || !activeNodes.length) {
    return PureSankey_1.DEFAULT_NODE_OPACITY;
  }

  var isActiveNode = activeNodes.find(function (node) {
    return node.index === nodeIndex;
  });
  return isActiveNode ? PureSankey_1.DEFAULT_NODE_OPACITY : PureSankey_1.INACTIVE_OPACITY;
};

var getNodeHeight = function getNodeHeight(node) {
  return node.dy < 0 ? 1 : node.dy;
};

var NodeGroup = styled_components_1.default.g.withConfig({
  displayName: "SankeyNode__NodeGroup",
  componentId: "sc-1a3nkch-0"
})(["opacity:", ";"], function (props) {
  return getNodeOpacity(props.node.index, props.activeNodes);
});
NodeGroup.displayName = 'NodeGroup';
var NodeRect = styled_components_1.default.rect.withConfig({
  displayName: "SankeyNode__NodeRect",
  componentId: "sc-1a3nkch-1"
})(["fill:", ";"], function (props) {
  return typeof props.colorCategoryMapping === 'function' ? props.colorCategoryMapping(props.node.name) : PureSankey_1.DEFAULT_NODE_COLOR;
});
var NodeText = styled_components_1.default.text.withConfig({
  displayName: "SankeyNode__NodeText",
  componentId: "sc-1a3nkch-2"
})(["text-anchor:", ";font-size:12px;font-family:", ";letter-spacing:0.02em;fill:", ";"], function (props) {
  return props.node.x < props.chartWidth / 2 ? 'start' : 'end';
}, PureSankey_1.DEFAULT_FONT_FAMILY, function (props) {
  return props.nodeTextColor;
});

var SankeyNode = function SankeyNode(props) {
  var node = props.node,
      activeNodes = props.activeNodes,
      nodeWidth = props.nodeWidth,
      chartWidth = props.chartWidth,
      handleMouseOver = props.handleMouseOver,
      handleMouseLeave = props.handleMouseLeave,
      colorCategoryMapping = props.colorCategoryMapping,
      nodeTextColor = props.nodeTextColor;
  var nodeTextRef = react_1.useRef();
  react_2.useEffect(function () {
    SankeyUtils_1.truncateSVGTextWithEllipsis(nodeTextRef.current, node.name, MAX_NODE_TEXT_WIDTH);
  });
  return React.createElement(NodeGroup, {
    node: node,
    activeNodes: activeNodes,
    className: "node",
    key: "node-".concat(node.index),
    "data-test": "node-".concat(node.index),
    transform: "translate(".concat(node.x, ",").concat(node.y, ")")
  }, React.createElement(React.Fragment, null, React.createElement(NodeRect, {
    node: node,
    height: getNodeHeight(node),
    width: nodeWidth,
    colorCategoryMapping: colorCategoryMapping,
    onMouseOver: function onMouseOver(ev) {
      return handleMouseOver(ev);
    },
    onMouseLeave: function onMouseLeave(ev) {
      return handleMouseLeave(ev);
    }
  }), React.createElement(NodeText, {
    ref: nodeTextRef,
    node: node,
    chartWidth: chartWidth,
    x: node.x < chartWidth / 2 ? 6 + nodeWidth : -6,
    y: node.dy / 2,
    dy: ".35em",
    nodeTextColor: nodeTextColor
  }, node.name)));
};

SankeyNode.propTypes = {
  node: T.object,
  activeNodes: T.arrayOf(T.object),
  nodeWidth: T.number,
  chartWidth: T.number,
  handleMouseOver: T.func,
  handleMouseLeave: T.func,
  colorCategoryMapping: T.oneOfType([T.func, T.arrayOf(T.string)]),
  nodeTextColor: T.string
};
SankeyNode.defaultProps = {
  handleMouseOver: function handleMouseOver() {},
  handleMouseLeave: function handleMouseLeave() {}
};
exports.default = SankeyNode;

/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __webpack_require__(1);

var T = __webpack_require__(0);

var PureSankey_1 = __webpack_require__(75);

var SankeyUtils_1 = __webpack_require__(95);

var getLinkFill = function getLinkFill(link, colorCategoryMapping, colorMode) {
  if (colorMode === 'categorical') {
    return colorCategoryMapping ? colorCategoryMapping(link.source.name) : PureSankey_1.DEFAULT_LINK_COLOR;
  } else {
    return colorCategoryMapping && colorCategoryMapping[link.index] ? colorCategoryMapping[link.index] : PureSankey_1.DEFAULT_LINK_COLOR;
  }
};

var getLinkOpacity = function getLinkOpacity(link, activeLinks, linkOpacity) {
  if (!activeLinks || !activeLinks.length) {
    return linkOpacity;
  }

  var isActiveLink = activeLinks.find(function (l) {
    return l.id === link.id;
  });
  return isActiveLink ? linkOpacity : PureSankey_1.INACTIVE_OPACITY;
};

var SankeyLink = function SankeyLink(props) {
  var link = props.link,
      colorCategoryMapping = props.colorCategoryMapping,
      activeLinks = props.activeLinks,
      linkOpacity = props.linkOpacity,
      colorMode = props.colorMode,
      path = props.path,
      handleMouseOver = props.handleMouseOver,
      handleMouseLeave = props.handleMouseLeave; // This is to draw an invisible circle added to the link's path midpoint,
  // which acts as an anchor for the link tooltip

  var circlePoints = SankeyUtils_1.extractLinkMidPoint(path(1)(link));
  return React.createElement("g", {
    className: "link",
    key: link.id,
    id: link.id,
    "data-test": link.id,
    fill: getLinkFill(link, colorCategoryMapping, colorMode),
    opacity: getLinkOpacity(link, activeLinks, linkOpacity),
    onMouseOver: function onMouseOver(ev) {
      handleMouseOver(ev);
    },
    onMouseLeave: function onMouseLeave(ev) {
      var relatedTarget = ev.relatedTarget;
      var isRelatedTargetPopover = false; // This is to verify if the mouseLeave is being triggered because of mouseover on a the popover itself.
      // In that case the relatedTarget will have the popover elements and this logic will check on the class name used.
      // If detects the relatedTarget is a popover, then mouseLeave event handler wont be triggered.

      if (relatedTarget && relatedTarget.classList) {
        var classList = relatedTarget.classList;
        classList.forEach(function (name) {
          if (name.toLocaleLowerCase().indexOf('sankeytooltip') > -1 || name.toLocaleLowerCase().indexOf('popoverstyles') > -1) {
            isRelatedTargetPopover = true;
            return;
          }
        });
      }

      if (!isRelatedTargetPopover) {
        handleMouseLeave(ev);
      }
    }
  }, React.createElement("path", {
    d: path(0)(link)
  }), React.createElement("path", {
    d: path(1)(link)
  }), React.createElement("path", {
    d: path(2)(link)
  }), circlePoints && React.createElement("circle", {
    cx: circlePoints.x,
    cy: circlePoints.y,
    r: 5,
    fill: "transparent"
  }));
};

SankeyLink.propTypes = {
  link: T.object,
  activeLinks: T.arrayOf(T.object),
  linkOpacity: T.number,
  path: T.func,
  handleMouseOver: T.func,
  handleMouseLeave: T.func,
  colorCategoryMapping: T.oneOfType([T.func, T.arrayOf(T.string)])
};
SankeyLink.defaultProps = {
  handleMouseOver: function handleMouseOver() {},
  handleMouseLeave: function handleMouseLeave() {}
};
exports.default = SankeyLink;

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __webpack_require__(1);

var T = __webpack_require__(0);

var Popover_1 = __webpack_require__(224);

var styled_components_1 = __webpack_require__(4);

var PureSankey_1 = __webpack_require__(75);

var numberUtils_1 = __webpack_require__(20);

var DEFAULT_PLACEMENT = 'below';
var StyledTooltipContainer = styled_components_1.default.div.withConfig({
  displayName: "SankeyTooltip__StyledTooltipContainer",
  componentId: "x563qp-0"
})(["display:flex;min-width:200px;max-width:300px;padding:16px;flex-direction:column;"]);
var StyledTooltipSection = styled_components_1.default.div.withConfig({
  displayName: "SankeyTooltip__StyledTooltipSection",
  componentId: "x563qp-1"
})(["display:flex;flex-direction:column;> div:nth-child(1){margin-top:8px;}> div:last-child{margin-bottom:8px;}"]);
var StyledTooltipHeader = styled_components_1.default.div.withConfig({
  displayName: "SankeyTooltip__StyledTooltipHeader",
  componentId: "x563qp-2"
})(["display:flex;flex-direction:row;justify-content:space-between;font-size:14px;color:", ";"], function (props) {
  return props.headerColor;
});
var StyledTooltipLinkHeader = styled_components_1.default.div.withConfig({
  displayName: "SankeyTooltip__StyledTooltipLinkHeader",
  componentId: "x563qp-3"
})(["display:flex;flex-direction:row;justify-content:space-between;font-size:14px;margin-bottom:8px;color:", ";"], function (props) {
  return props.linkHeaderColor;
});
var StyledTooltipRow = styled_components_1.default.div.withConfig({
  displayName: "SankeyTooltip__StyledTooltipRow",
  componentId: "x563qp-4"
})(["display:flex;flex-direction:row;justify-content:space-between;font-size:12px;color:", ";margin-bottom:6px;"], function (props) {
  return props.rowColor;
});
var StyledTooltipLeftCell = styled_components_1.default.div.withConfig({
  displayName: "SankeyTooltip__StyledTooltipLeftCell",
  componentId: "x563qp-5"
})(["display:flex;flex-direction:row;justify-content:flex-start;align-items:center;"]);
var StyledTooltipRightCell = styled_components_1.default.div.withConfig({
  displayName: "SankeyTooltip__StyledTooltipRightCell",
  componentId: "x563qp-6"
})(["margin-left:5px;"]);
var ColorTile = styled_components_1.default.div.withConfig({
  displayName: "SankeyTooltip__ColorTile",
  componentId: "x563qp-7"
})(["width:6px;height:16px;background-color:", ";}"], function (props) {
  return typeof props.colorCategoryMapping === 'function' ? props.colorCategoryMapping(props.node.name) : PureSankey_1.DEFAULT_NODE_COLOR;
});
var NodeValue = styled_components_1.default.div.withConfig({
  displayName: "SankeyTooltip__NodeValue",
  componentId: "x563qp-8"
})(["margin-left:8px;max-width:200px;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;"]);

var SankeyTooltip = function SankeyTooltip(props) {
  var mode = props.mode,
      node = props.node,
      link = props.link,
      open = props.open,
      connectionsMap = props.connectionsMap,
      anchor = props.anchor,
      linkValue = props.linkValue,
      colorCategoryMapping = props.colorCategoryMapping,
      width = props.width,
      tooltipRowColor = props.tooltipRowColor,
      tooltipLinkHeaderColor = props.tooltipLinkHeaderColor,
      tooltipHeaderColor = props.tooltipHeaderColor,
      handleTooltipRequestClose = props.handleTooltipRequestClose;

  var showSection = function showSection(connection, nodeData, section) {
    if (!connection) {
      return false;
    }

    var connectionNodes = section === 'source' ? connection.sourceNodes : connection.targetNodes;
    var filteredNodes = connectionNodes.filter(function (cNode) {
      return cNode.index !== nodeData.index;
    });
    return filteredNodes.length > 0;
  };

  var getPopoverPlacement = function getPopoverPlacement(anchorElement) {
    if (!anchorElement) {
      return DEFAULT_PLACEMENT;
    }

    var bBox = anchorElement.getBoundingClientRect(); // TODO: Depending on the testing result in dashboard reg tooltip position, might need further optimization
    // If anchorElement is too close to the left border of the chart, place it to the right side of anchorElement

    if (bBox.x <= 15) {
      return 'right';
    } else if (bBox.x >= width - 15) {
      // If anchorElement is too close to the right border of the chart, place it to the right side of anchorElement
      return 'left';
    }

    return DEFAULT_PLACEMENT;
  };

  var renderNodeToolTip = function renderNodeToolTip() {
    if (!node) {
      return null;
    }

    var connections = connectionsMap[node.index];
    return React.createElement(Popover_1.default, {
      open: open,
      anchor: anchor,
      onRequestClose: function onRequestClose() {
        return handleTooltipRequestClose();
      },
      defaultPlacement: getPopoverPlacement(anchor)
    }, React.createElement(StyledTooltipContainer, {
      className: "sankeyToolTip"
    }, React.createElement(StyledTooltipRow, {
      rowColor: tooltipRowColor,
      "data-test": "main-row"
    }, React.createElement(StyledTooltipLeftCell, {
      "data-test": "main-row-name"
    }, React.createElement(ColorTile, {
      node: node,
      colorCategoryMapping: colorCategoryMapping
    }), React.createElement(NodeValue, null, node === null || node === void 0 ? void 0 : node.name)), React.createElement(StyledTooltipRightCell, {
      "data-test": "main-row-value"
    }, numberUtils_1.formatNumber(node === null || node === void 0 ? void 0 : node.value, 0, {
      useTrendUnits: true
    }))), showSection(connections, node, 'source') && React.createElement(StyledTooltipHeader, {
      headerColor: tooltipHeaderColor
    }, React.createElement(StyledTooltipLeftCell, null, "Source"), React.createElement(StyledTooltipRightCell, null, linkValue)), React.createElement(StyledTooltipSection, null, connections && connections.sourceNodes.map(function (sNode, idx) {
      var _a, _b;

      if ((sNode === null || sNode === void 0 ? void 0 : sNode.index) !== (node === null || node === void 0 ? void 0 : node.index) || ((_a = connections.sourceNodes[idx]) === null || _a === void 0 ? void 0 : _a.index) === ((_b = connections.targetNodes[idx]) === null || _b === void 0 ? void 0 : _b.index)) {
        return React.createElement(StyledTooltipRow, {
          key: sNode.index,
          rowColor: tooltipRowColor,
          "data-test": "source-row"
        }, React.createElement(StyledTooltipLeftCell, null, React.createElement(ColorTile, {
          node: sNode,
          colorCategoryMapping: colorCategoryMapping
        }), React.createElement(NodeValue, {
          "data-test": "source-row-name"
        }, sNode === null || sNode === void 0 ? void 0 : sNode.name)), React.createElement(StyledTooltipRightCell, {
          "data-test": "source-row-value"
        }, numberUtils_1.formatNumber(sNode === null || sNode === void 0 ? void 0 : sNode.value, 0, {
          useTrendUnits: true
        })));
      }
    })), showSection(connections, node, 'target') && React.createElement(StyledTooltipHeader, {
      headerColor: tooltipHeaderColor
    }, React.createElement(StyledTooltipLeftCell, null, "Target"), React.createElement(StyledTooltipRightCell, null, linkValue)), React.createElement(StyledTooltipSection, null, connections && connections.targetNodes.map(function (tNode, idx) {
      var _a, _b;

      if ((tNode === null || tNode === void 0 ? void 0 : tNode.index) !== (node === null || node === void 0 ? void 0 : node.index) || ((_a = connections.sourceNodes[idx]) === null || _a === void 0 ? void 0 : _a.index) === ((_b = connections.targetNodes[idx]) === null || _b === void 0 ? void 0 : _b.index)) {
        return React.createElement(StyledTooltipRow, {
          key: tNode.index,
          rowColor: tooltipRowColor,
          "data-test": "target-row"
        }, React.createElement(StyledTooltipLeftCell, null, React.createElement(ColorTile, {
          node: tNode,
          colorCategoryMapping: colorCategoryMapping
        }), React.createElement(NodeValue, {
          "data-test": "target-row-name"
        }, tNode === null || tNode === void 0 ? void 0 : tNode.name)), React.createElement(StyledTooltipRightCell, {
          "data-test": "target-row-value"
        }, numberUtils_1.formatNumber(tNode === null || tNode === void 0 ? void 0 : tNode.value, 0, {
          useTrendUnits: true
        })));
      }
    }))));
  };

  var renderLinkToolTip = function renderLinkToolTip() {
    var _a, _b, _c, _d;

    if (!link) {
      return null;
    }

    return React.createElement(Popover_1.default, {
      open: open,
      anchor: anchor,
      onRequestClose: function onRequestClose() {
        return handleTooltipRequestClose();
      }
    }, React.createElement(StyledTooltipContainer, {
      className: "sankeyToolTip"
    }, React.createElement(StyledTooltipLinkHeader, {
      linkHeaderColor: tooltipLinkHeaderColor,
      "data-test": "main-row"
    }, React.createElement(StyledTooltipLeftCell, {
      "data-test": "main-row-name"
    }, "Link Size"), React.createElement(StyledTooltipRightCell, {
      "data-test": "main-row-value"
    }, numberUtils_1.formatNumber(link === null || link === void 0 ? void 0 : link.value, 0, {
      useTrendUnits: true
    }))), React.createElement(StyledTooltipHeader, {
      headerColor: tooltipHeaderColor
    }, React.createElement(StyledTooltipLeftCell, null, "Source"), React.createElement(StyledTooltipRightCell, null, linkValue)), React.createElement(StyledTooltipSection, null, React.createElement(StyledTooltipRow, {
      rowColor: tooltipRowColor,
      "data-test": "source-row"
    }, React.createElement(StyledTooltipLeftCell, null, React.createElement(ColorTile, {
      node: link === null || link === void 0 ? void 0 : link.source,
      colorCategoryMapping: colorCategoryMapping
    }), React.createElement(NodeValue, {
      "data-test": "source-row-name"
    }, (_a = link === null || link === void 0 ? void 0 : link.source) === null || _a === void 0 ? void 0 : _a.name)), React.createElement(StyledTooltipRightCell, {
      "data-test": "source-row-value"
    }, numberUtils_1.formatNumber((_b = link === null || link === void 0 ? void 0 : link.source) === null || _b === void 0 ? void 0 : _b.value, 0, {
      useTrendUnits: true
    }), ' '))), React.createElement(StyledTooltipHeader, {
      headerColor: tooltipHeaderColor
    }, React.createElement(StyledTooltipLeftCell, null, "Target"), React.createElement(StyledTooltipRightCell, null, linkValue)), React.createElement(StyledTooltipSection, null, React.createElement(StyledTooltipRow, {
      rowColor: tooltipRowColor,
      "data-test": "target-row"
    }, React.createElement(StyledTooltipLeftCell, null, React.createElement(ColorTile, {
      node: link === null || link === void 0 ? void 0 : link.target,
      colorCategoryMapping: colorCategoryMapping
    }), React.createElement(NodeValue, {
      "data-test": "target-row-name"
    }, (_c = link === null || link === void 0 ? void 0 : link.target) === null || _c === void 0 ? void 0 : _c.name)), React.createElement(StyledTooltipRightCell, {
      "data-test": "target-row-value"
    }, numberUtils_1.formatNumber((_d = link === null || link === void 0 ? void 0 : link.target) === null || _d === void 0 ? void 0 : _d.value, 0, {
      useTrendUnits: true
    }))))));
  };

  return mode === 'node' ? renderNodeToolTip() : renderLinkToolTip();
};

SankeyTooltip.propTypes = {
  mode: T.string,
  node: T.object,
  linkValue: T.string,
  open: T.bool,
  connectionsMap: T.object,
  anchor: T.object,
  colorCategoryMapping: T.oneOfType([T.func, T.arrayOf(T.string)]),
  tooltipRowColor: T.string,
  tooltipLinkHeaderColor: T.string,
  tooltipHeaderColor: T.string,
  width: T.number,
  height: T.number,
  handleTooltipRequestClose: T.func
};
SankeyTooltip.defaultProps = {
  handleTooltipRequestClose: function handleTooltipRequestClose() {}
};
exports.default = SankeyTooltip;

/***/ }),
/* 224 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/Popover");

/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var visualization_icons_1 = __webpack_require__(42);

var visualization_color_palettes_1 = __webpack_require__(41);

var schemaUtils_1 = __webpack_require__(14);

var PresetPalettes_1 = __webpack_require__(56);

var themes_1 = __webpack_require__(72);

var i18n_1 = __webpack_require__(3);

var VizBehavior_1 = __webpack_require__(5);

var VizCategory_1 = __webpack_require__(26);

var configUtils_1 = __webpack_require__(8);

var DynamicLinkColorsEditor_1 = __webpack_require__(226);

var BackgroundColor_1 = __webpack_require__(44);

var defaultContext = {
  linkColorRangeConfig: [{
    to: 20,
    value: '#D41F1F'
  }, {
    from: 20,
    to: 40,
    value: '#D94E17'
  }, {
    from: 40,
    to: 60,
    value: '#CBA700'
  }, {
    from: 60,
    to: 80,
    value: '#669922'
  }, {
    from: 80,
    value: '#118832'
  }]
};
var dataContract = {
  requiredDataSources: [{
    name: 'primary',
    description: 'DataSource that powers the visualization'
  }],
  optionalDataSources: [],
  initialRequestParams: {
    primary: {
      offset: 0,
      count: 10000
    }
  }
};
var size = {
  initialWidth: 600,
  initialHeight: 300
};
var optionsSchema = {
  backgroundColor: {
    default: '> themes.defaultBackgroundColor',
    description: 'Specify the color for the background. You may use a dataSource to apply the color. The default for enterprise light is "#ffffff". The default for enterprise dark is "#000000". The default for prisma dark is "#0b0c0e".',
    pattern: schemaUtils_1.COLOR_OR_TOKEN_PATTERN_WITH_RGBA,
    type: 'string'
  },
  colorMode: {
    default: 'categorical',
    description: 'Specify the coloring method used for the links. When set to "categorical" the nodes and links will be colored based on the "seriesColors". When set to "dynamic" the links will be colored based on the dynamic string assigned to "linkColors".',
    pattern: schemaUtils_1.getPattern(['categorical', 'dynamic']),
    type: 'string'
  },
  linkOpacity: {
    default: 0.5,
    description: 'Specify the opacity of the links. Choose a number in the range of 0 - 1 (inclusive).',
    type: 'number'
  },
  linkValues: {
    default: "> primary | seriesByType('number')",
    description: 'Specify the dataSource to apply link width.',
    type: 'string'
  },
  linkColors: {
    default: "> linkValues | rangeValue(linkColorRangeConfig)",
    description: 'Specify the coloring method used for the links when the colorMode “dynamic” is specified.',
    type: 'array',
    items: {
      type: 'string',
      pattern: schemaUtils_1.COLOR_OR_TOKEN_PATTERN_WITH_RGBA
    }
  },
  resultLimit: {
    default: 1000,
    description: 'Specify the maximum length of link data points rendered.',
    type: 'number'
  },
  seriesColors: {
    default: visualization_color_palettes_1.VIZ_CATEGORICAL,
    description: 'Specify the colors used for a series. For example, ["#FF0000", "#0000FF", "#008000"].',
    type: 'array',
    items: {
      type: 'string'
    }
  }
};
var themes = {
  defaultBackgroundColor: function defaultBackgroundColor(props) {
    return themes_1.pick({
      enterprise: {
        dark: themes_1.variables.black(props),
        light: themes_1.variables.backgroundColor(props)
      },
      prisma: themes_1.variables.backgroundColorSidebar(props)
    })(props);
  },
  nodeTextColor: function nodeTextColor(props) {
    return themes_1.pick({
      enterprise: {
        dark: themes_1.variables.textColor(props),
        light: themes_1.variables.textColor(props)
      },
      prisma: themes_1.variables.contentColorActive(props)
    })(props);
  },
  tooltipRowColor: function tooltipRowColor(props) {
    return themes_1.pick({
      enterprise: {
        dark: themes_1.variables.textColor(props),
        light: themes_1.variables.textColor(props)
      },
      prisma: themes_1.variables.contentColorActive(props)
    })(props);
  },
  tooltipLinkHeaderColor: function tooltipLinkHeaderColor(props) {
    return themes_1.pick({
      enterprise: {
        dark: themes_1.variables.textColor(props),
        light: themes_1.variables.textColor(props)
      },
      prisma: themes_1.variables.contentColorActive(props)
    })(props);
  },
  tooltipHeaderColor: function tooltipHeaderColor(props) {
    return themes_1.pick({
      enterprise: {
        dark: themes_1.variables.textGray(props),
        light: themes_1.variables.textGray(props)
      },
      prisma: themes_1.variables.contentColorMuted(props)
    })(props);
  }
};
var editorConfig = [{
  label: i18n_1._('Data Selection'),
  layout: [[{
    label: 'Link Value Field',
    editor: 'editor.columnSelector',
    option: 'linkValues',
    context: 'linkValuesContext',
    editorProps: {
      dataSourceKey: 'primary',
      filterByTypes: ['number']
    }
  }]]
}, {
  label: i18n_1._('Coloring'),
  layout: [[{
    label: i18n_1._('Color Mode'),
    option: 'colorMode',
    editor: 'editor.radioBar',
    editorProps: {
      values: [{
        label: i18n_1._('Categorical'),
        value: 'categorical'
      }, {
        label: i18n_1._('Dynamic'),
        value: 'dynamic'
      }]
    }
  }], [Object.assign(Object.assign({}, DynamicLinkColorsEditor_1.getDynamicLinkColorsEditor({
    defaultContext: defaultContext,
    defaultPalettesConfig: PresetPalettes_1.defaultPalettesConfig
  })), {
    showEditor: function showEditor(_ref) {
      var options = _ref.options;
      return options.colorMode === 'dynamic';
    }
  })], BackgroundColor_1.default({
    themes: themes
  })]
}];
/**
 * visualization configuration
 */

var config = {
  /**
   * unique viz key
   */
  key: 'splunk.sankey',

  /**
   * viz name
   */
  name: 'Sankey',
  category: VizCategory_1.VizCategory.FLOW,
  status: 'preview',

  /**
   * viz icon
   */
  icon: visualization_icons_1.Sankey,
  dataContract: dataContract,
  size: size,
  defaultContext: defaultContext,
  optionsSchema: optionsSchema,
  editorConfig: editorConfig,
  events: {},
  supports: [VizBehavior_1.VizBehavior.DYNAMIC_OPTIONS, VizBehavior_1.VizBehavior.EVENTS, VizBehavior_1.VizBehavior.PLACEHOLDER],
  themes: themes,
  requiredProps: []
};
exports.default = configUtils_1.enhanceConfig(config);

/***/ }),
/* 226 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDynamicLinkColorsEditor", function() { return getDynamicLinkColorsEditor; });
/* harmony import */ var _splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_configUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var _utils_configUtils__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_utils_configUtils__WEBPACK_IMPORTED_MODULE_1__);


var getDynamicLinkColorsEditor = function getDynamicLinkColorsEditor(_ref) {
  var defaultContext = _ref.defaultContext,
      defaultPalettesConfig = _ref.defaultPalettesConfig;
  return {
    label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Dynamic Link Color'),
    option: 'linkColors',
    context: 'linkColorRangeConfig',
    editor: 'editor.dynamicColor',
    showEditor: function showEditor(_ref2) {
      var options = _ref2.options;
      return Object(_utils_configUtils__WEBPACK_IMPORTED_MODULE_1__["isDynamicOption"])(options.linkColors);
    },
    editorProps: {
      labelPosition: 'left',
      flyoutTitle: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Dynamic Coloring: Links'),
      formatters: [{
        label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Ranges'),
        value: 'rangeValue',
        defaults: {
          linkValues: defaultContext.linkColorRangeConfig
        }
      }],
      dataSelectors: [{
        label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Link Colors'),
        value: 'linkValues'
      }],
      defaultPalettesConfig: defaultPalettesConfig
    }
  };
};

/***/ })
/******/ ]);
//# sourceMappingURL=Sankey.js.map