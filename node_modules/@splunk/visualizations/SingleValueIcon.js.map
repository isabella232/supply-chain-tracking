{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"lodash\"","webpack:///external \"@splunk/ui-utils/i18n\"","webpack:///external \"styled-components\"","webpack:///./src/common/interfaces/VizBehavior.ts","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///./src/common/utils/hocUtils.ts","webpack:///./src/common/utils/configUtils.ts","webpack:///external \"@splunk/visualizations-shared/Message\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"@splunk/visualizations-shared/colorUtils\"","webpack:///./src/common/hocs/FixedSizeContainer.tsx","webpack:///external \"@splunk/visualizations-shared/style\"","webpack:///external \"@splunk/visualizations-shared/schemaUtils\"","webpack:///./src/common/utils/singleValueUtils.js","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"@splunk/visualizations-shared/SizeAwareWrapper\"","webpack:///external \"@splunk/visualizations-shared/propUtils\"","webpack:///external \"@splunk/themes/variables\"","webpack:///external \"@splunk/visualizations-shared/numberUtils\"","webpack:///external \"@splunk/themes/pick\"","webpack:///external \"@babel/runtime/helpers/typeof\"","webpack:///./src/common/hooks/getSorting.ts","webpack:///./src/common/hooks/getPagination.ts","webpack:///./src/common/components/IconPlaceholder.tsx","webpack:///./src/common/interfaces/VizCategory.ts","webpack:///./src/common/withDashboardViz.tsx","webpack:///external \"@splunk/themes/getSettingsFromThemedProps\"","webpack:///external \"@splunk/visualization-encoding/Options\"","webpack:///external \"@splunk/visualizations-shared/SanitizeProps\"","webpack:///./src/common/SplunkVisualization.tsx","webpack:///./src/common/interfaces/VizActionHandler.ts","webpack:///./src/common/interfaces/DataSource.ts","webpack:///./src/common/hooks/useDeepMemo.ts","webpack:///./src/common/utils/JSONSchemaUtils.ts","webpack:///./src/common/components/MissingPropsMessage.tsx","webpack:///./src/common/hocs/withEditModeCover.tsx","webpack:///./src/common/hocs/withPlaceholder.tsx","webpack:///external \"@babel/runtime/helpers/toConsumableArray\"","webpack:///external \"@splunk/visualizations-shared/colorConstants\"","webpack:///external \"@babel/runtime/helpers/extends\"","webpack:///external \"@splunk/visualizations-shared/domUtils\"","webpack:///external \"@splunk/visualization-color-palettes/editors/PresetPalettes\"","webpack:///./src/common/components/VizStyleWrapper.jsx","webpack:///external \"lodash/pick\"","webpack:///external \"lodash/isEmpty\"","webpack:///./src/common/editorConfig/StaticBackgroundColorEditor.js","webpack:///./src/common/configContext/singleValueContext.ts","webpack:///./src/common/editorConfig/DynamicMajorColorEditor.js","webpack:///./src/common/editorConfig/DynamicTrendColorEditor.js","webpack:///./src/common/editorConfig/DynamicBackgroundColorEditor.js","webpack:///./src/common/editorConfig/StaticMajorAndTrendLayout.js","webpack:///./src/common/editorConfig/StaticMajorColorEditor.js","webpack:///./src/common/editorConfig/StaticTrendColorEditor.js","webpack:///external \"@splunk/visualizations/SingleValueBasic\"","webpack:///external \"@splunk/react-icons/Activity\"","webpack:///external \"@splunk/react-icons/Clock\"","webpack:///external \"@splunk/react-icons/Pencil\"","webpack:///external \"@splunk/react-icons/Star\"","webpack:///external \"@splunk/react-icons/Question\"","webpack:///./src/SingleValueIcon/SingleValueIcon.tsx","webpack:///external \"@splunk/visualizations-shared/RemoteIcon\"","webpack:///external \"@splunk/visualizations-shared/iconUtils\"","webpack:///./src/SingleValueIcon/config.ts","webpack:///./src/common/editorConfig/StaticIconColorEditor.js","webpack:///./src/SingleValueIcon/PureSingleValueIcon/utils/iconUtils.js","webpack:///./src/SingleValueIcon/PureSingleValueIcon/IconContainer.jsx","webpack:///./src/SingleValueIcon/PureSingleValueIcon/SingleValueIconLayout.jsx","webpack:///./src/SingleValueIcon/PureSingleValueIcon/SingleValueIcon.jsx"],"names":["DEFAULT_FONT","DEFAULT_FONT_FAMILY","shouldShowTrend","trendDisplay","isLoadingOrNoColumns","data","get","noColumns","loading","getFormattedColor","formatColor","hasBackground","backgroundColor","isIdenticalColor","colorA","colorB","getDefaultColorWithBg","defaultFontColor","defaultBlockFontColor","getMajorColor","majorColor","getTrendColor","trendColor","trendValue","majorValue","customizedBgColor","defaultColors","Number","defaultBackgroundColor","isInvalidTrend","parseFloat","computeColors","props","backgroundEnabled","underLabelColor","computeText","value","numberPrecision","shouldUseThousandSeparators","shouldAbbreviateTrendValue","text","formatNumber","useThousandSeparators","useTrendUnits","getMajorText","getTrendText","compute","isNumerial","showPercent","diff","Math","val","computeFontSize","width","height","fontFamily","fontWeight","widthInDefaultFont","computeTextSize","fontSize","parseInt","getMajorFontSize","unit","majorText","spaceRatio","majorTextCalc","getTrendFontSize","trendText","trendFontSize","getUnderLabelHeight","getUnderLabel","underLabel","getMajorAndTrend","majorFontSize","majorTextSpaceRatio","textContentWidth","textContentHeight","majorTextFontSize","trendTextFontSize","updateVizInSmallSpace","toRemoveList","removeIndex","newProps","newMajorAndTrend","newTextSize","toRemove","truncateValue","updatedProps","computeSingleValueContent","contentWidth","contentHeight","containerWidth","containerHeight","majorValueTitle","smallVizProps","getGraphColors","customColorFormatter","adjustRGB","rgb","changeColor","hex","color","r","g","b","newR","newG","newB","ratio","lighten","darken","handleValueClickCallback","payload","name","majorValueField","onValueClick","VizStyleWrapper","dataTestKey","StaticBackgroundColorEditor","label","_","option","editor","showEditor","options","isDynamicOption","getDynamicMajorColorEditor","defaultContext","defaultPalettesConfig","context","editorProps","labelPosition","flyoutTitle","formatters","defaults","majorColorConfig","dataSelectors","getDynamicTrendColorEditor","trendColorConfig","getDynamicBackgroundColorEditor","StaticMajorAndTrendLayout","values","min","max","placeholder","isDisabled","StaticMajorColorEditor","StaticTrendColorEditor","StaticIconColorEditor","palette","ICON_POSITIONS","ICON_HORIZONTAL_RATIO","ICON_VERTICAL_RATIO","iconMap","activity","clock","pencil","star","default","Question","getIcon","key","isValidPosition","isHorizontal","iconPosition","getIconWidth","showHorizontal","getIconHeight","getIconFontSize","showValue","iconWidth","getSVGDimension","containerDimension","iconDimension","getValuesWidth","getValuesHeight","iconHeight","getIconColor","iconColor","StyledIconContainer","IconContainer","opacity","icon","IconComponent","onIconClick","onClick","Icon","T","func","Column","styled","IconRow","IconColumn","SingleValueIconLayout","showTrendIndicator","unitPosition","underLabelFontSize","iconOpacity","iconFontSize","svgIconComponent","iconContainer","singleValueBasic","iconLayout","SingleValueBasic","element","Container","toDimension","pick","SingleValueIcon","style","noDataSources","noResult","handleValueClick","useCallback","renderVisualization","IconLayout","isEmpty","underLabelHeight","string"],"mappings":"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","file":"SingleValueIcon.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 233);\n","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"lodash\");","module.exports = require(\"@splunk/ui-utils/i18n\");","module.exports = require(\"styled-components\");","export enum VizBehavior {\n    /**\n     * Dynamic Options Behavior.\n     * This allows visualization options to be powered by data\n     *\n     * **Example**\n     *\n     * sparklineValues: \">primary|seriesByIndex(0)\"\n     * would configure sparklineValues with an array of data points\n     * coming from the first series in the primary datasource\n     *\n     */\n    DYNAMIC_OPTIONS = 'dynamic-options',\n    EVENTS = 'events',\n    /**\n     * Placeholder behavior: visualization will display a placeholder rather than fail if any of the `requiredProps` is\n     * missing.\n     * @type {string}\n     */\n    PLACEHOLDER = 'placeholder',\n    PAGE_AND_SORT = 'page-and-sort',\n}\n","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","import { cloneDeep } from 'lodash';\nimport { DashboardVizProps } from '../interfaces/DashboardVizProps';\n\nexport type DashboardVizType = React.ComponentType<DashboardVizProps>;\n\n/**\n * @method extendStaticWrapperProps\n * @param {Object} props\n * @param {DashboardVizType} props.Wrapper\n * @param {DashboardVizType} props.Visualization\n */\nexport const extendStaticWrapperProps = ({\n    Wrapper,\n    Visualization,\n}: {\n    [key: string]: DashboardVizType;\n}): void => {\n    const extendProperties = ['propTypes', 'defaultProps', 'config'];\n    extendProperties.forEach((prop: string): void => {\n        if (Visualization[prop]) {\n            Wrapper[prop] = Visualization[prop];\n        }\n    });\n};\n\n/**\n * helper to deeply merge objects while preserving arrays in earlier source objects\n * deeply nested primitive keys are merged similarly to lodash's defaultsDeep, while keys with arrays will be preserved if already present in the resultant merged object\n * this prevents default arrays from appending values to user-defined arrays (this occurs if the default array is longer than the user-defined one)\n *\n * @method deepMergeWithArrayOverrides\n * @param {Object} initial - target object to merge values into\n * @param {Object[]} sources - other default options to be merged into the resultant object if no explicit value is provided, with earlier args taking precedence over later ones\n *\n * @returns {Object}\n */\nexport const deepMergeWithArrayOverrides = (initial, ...sources) => {\n    const clone = cloneDeep(initial);\n    sources.forEach(sourceToApply => {\n        Object.keys(sourceToApply).forEach(sourceKey => {\n            if (!clone.hasOwnProperty(sourceKey)) {\n                clone[sourceKey] = cloneDeep(sourceToApply[sourceKey]);\n            }\n            // object merging excluding arrays\n            if (\n                clone[sourceKey] &&\n                typeof clone[sourceKey] === 'object' &&\n                !Array.isArray(clone[sourceKey]) &&\n                typeof sourceToApply[sourceKey] === 'object'\n            ) {\n                clone[sourceKey] = deepMergeWithArrayOverrides(clone[sourceKey], sourceToApply[sourceKey]);\n            }\n        });\n    });\n    return clone;\n};\n","import { get, range } from 'lodash';\nimport { DYNAMIC_OPTIONS_DSL_PATTERN } from '@splunk/visualizations-shared/schemaUtils';\nimport { VizBehavior } from '../interfaces/VizBehavior';\nimport { VizConfig } from '../interfaces/VizConfig';\nimport { OptionsSchema } from '../interfaces/OptionsSchema';\nimport type { JSONSchema7Definition } from 'json-schema';\n\nexport interface PresetEntry {\n    name: string;\n    value: any;\n    label: string;\n}\n\nconst dynamicOptionsDSLType = {\n    type: 'string',\n    pattern: DYNAMIC_OPTIONS_DSL_PATTERN,\n} as const;\n\n/**\n * Helper function to extend an options schema with dynamic options DSL\n * @param optionsSchema a visualization's options schema\n * @returns an updated options schema that additionally allows strings starting with > for each option\n */\nfunction enhanceOptionsSchemaWithDynamicOptions(\n    optionsSchema: OptionsSchema | JSONSchema7Definition\n): OptionsSchema {\n    const enhancedOptionsSchema: OptionsSchema = {};\n    Object.keys(optionsSchema).forEach((key): void => {\n        const {\n            // The next a few are schema annotations, we should leave them as is.\n            // Note: in reality we don't use `readOnly`, `writeOnly` or `examples`, but they are listed here for completeness.\n            // Ref: https://datatracker.ietf.org/doc/html/draft-handrews-json-schema-validation-01\n            title,\n            description,\n            readOnly,\n            writeOnly,\n            examples,\n            default: defaultValue,\n            // The next a few need special care\n            type,\n            properties,\n            patternProperties,\n            // The rest should be handled together\n            ...remainingSchemaEntry\n        } = optionsSchema[key];\n\n        const annotations = {\n            ...(title !== undefined && { title }),\n            ...(description !== undefined && { description }),\n            ...(readOnly !== undefined && { readOnly }),\n            ...(writeOnly !== undefined && { writeOnly }),\n            ...(examples !== undefined && { examples }),\n            ...(defaultValue !== undefined && { default: defaultValue }),\n        };\n\n        if (type === 'object') {\n            enhancedOptionsSchema[key] = {\n                ...remainingSchemaEntry,\n                ...annotations,\n                type,\n                ...(properties && { properties: enhanceOptionsSchemaWithDynamicOptions(properties) }),\n            };\n            if (patternProperties) {\n                let enhancedPatternProperties = {};\n                Object.keys(patternProperties).forEach((key): void => {\n                    enhancedPatternProperties = {\n                        ...enhancedPatternProperties,\n                        ...enhanceOptionsSchemaWithDynamicOptions({ [key]: patternProperties[key] }),\n                    };\n                });\n                enhancedOptionsSchema[key].patternProperties = enhancedPatternProperties;\n            }\n        } else {\n            enhancedOptionsSchema[key] = {\n                ...annotations,\n                anyOf: [\n                    // we can't assume `type` is always there because there are `enum` and `const`.\n                    { ...(type !== undefined && { type }), ...remainingSchemaEntry },\n                    dynamicOptionsDSLType,\n                ],\n            };\n        }\n    });\n    return enhancedOptionsSchema;\n}\n\n/**\n * Helper function to enhance a Visualization Config as needed based on behaviors specified in supports block\n * @param vizConfig a Visualization Config\n * @returns an enhanced Visualization Config containing updated config entries based on behaviors it supports\n */\nfunction enhanceConfig(vizConfig: VizConfig): VizConfig {\n    const enhancedConfig: VizConfig = vizConfig;\n    if (vizConfig.supports.indexOf(VizBehavior.DYNAMIC_OPTIONS) !== -1) {\n        enhancedConfig.optionsSchema = enhanceOptionsSchemaWithDynamicOptions(vizConfig.optionsSchema);\n    }\n    return enhancedConfig;\n}\n\nfunction isDynamicOption(option?: string): boolean {\n    return (option && typeof option === 'string' && option.trim().startsWith('>')) || false;\n}\n\n// private helpers to improve readability of getInitialPreset\n// this shouldn't be tested since this util isn't something that we expect to use outside of getInitialPreset\n\n/**\n * this checks to make sure that all values within vizContext are compatible with the given preset's context to determine the initialPreset\n * if a preset has explicitly specified a key as being undefined, the vizContext must also has that key as undefined, or else this CANNOT be the initialPreset\n * the inverse is true; if a preset has key is NOT undefined, it must also be NOT undefined in the corresponding vizContext\n * the internal config contents are irrelevant (as the user could customize them in source), just as long as the presence of `undefined`s match up\n *\n * Since the presetConfigs have explicit undefined keys to override the existing config, we need to explicitly check the undefined values\n */\nfunction hasCompatibleContexts(\n    vizContext: { [configKey: string]: any },\n    presetContext: { [configKey: string]: any }\n): boolean {\n    const presetContextKeys = Object.keys(presetContext);\n    return presetContextKeys.every(\n        (contextKey): boolean =>\n            (presetContext[contextKey] === undefined && vizContext[contextKey] === undefined) ||\n            (presetContext[contextKey] !== undefined && vizContext[contextKey] !== undefined)\n    );\n}\n\n/**\n * Checks to make sure that dynamic (non-dynamic) options in a given preset are also dynamic (non-dynamic) in the vizOptions\n */\nfunction hasCompatibleOptions(\n    vizOptions: { [configKey: string]: any },\n    presetOptions: { [configKey: string]: any }\n): boolean {\n    const presetOptionKeys = Object.keys(presetOptions);\n    return presetOptionKeys.every(\n        (optionKey): boolean =>\n            isDynamicOption(presetOptions[optionKey]) === isDynamicOption(vizOptions[optionKey])\n    );\n}\n\n/**\n * Evaluates whether there is an initialPreset that fits the current state of vizContext + vizOptions\n * This function ignores extraneous vizOptions or vizContext keys, as they could be outside the scope of what the preset is intended to configure\n *\n * @param {Object} vizContext - the current vizContext definition\n * @param {Object} vizOptions - the current vizOptions definition\n * @param {PresetEntry[]} presets - the list of presets, one of which can be considered an initialPreset\n */\nfunction getInitialPreset(\n    vizContext: { [configKey: string]: any },\n    vizOptions: { [configKey: string]: any },\n    presets: PresetEntry[]\n): PresetEntry | null {\n    return presets.find((preset): boolean => {\n        const presetContext = get(preset, ['value', 'context'], {});\n        const presetOptions = get(preset, ['value', 'options'], {});\n        const presetContextKeys = Object.keys(presetContext);\n        const presetOptionKeys = Object.keys(presetOptions);\n\n        // all presets have to explicitly specify which options to reset (i.e. need explicitly undefined keys)\n        // if not, then the preset is invalid in config.ts\n        if (presetContextKeys.length === 0 || presetOptionKeys.length === 0) return false;\n\n        return (\n            hasCompatibleContexts(vizContext, presetContext) &&\n            hasCompatibleOptions(vizOptions, presetOptions)\n        );\n    });\n}\n\ninterface PrecisionOption {\n    label: string;\n    value: number;\n}\n\n/**\n * generates number precision values for a Select editor\n *\n * @param {Number} numPrecisionValues - number of integer precision values to generate\n * @returns {{ label: string; value; string  }[]} array of { label, value } tuples\n */\nfunction generatePrecisionValues(numPrecisionValues: number): PrecisionOption[] {\n    return range(0, numPrecisionValues + 1).map(\n        (i): PrecisionOption => ({\n            label: `${i} (0${i > 0 ? '.' : ''}${'0'.repeat(i)})`, // e.g. 0.000 for numPrecisionValues = 3\n            value: i,\n        })\n    );\n}\n\nexport {\n    enhanceConfig,\n    enhanceOptionsSchemaWithDynamicOptions,\n    isDynamicOption,\n    getInitialPreset,\n    generatePrecisionValues,\n};\n","module.exports = require(\"@splunk/visualizations-shared/Message\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@splunk/visualizations-shared/colorUtils\");","import * as React from 'react';\nimport styled from 'styled-components';\nimport SizeAwareWrapper from '@splunk/visualizations-shared/SizeAwareWrapper';\nimport { toDimension, toPx } from '@splunk/visualizations-shared/style';\nimport { isColor } from '@splunk/visualizations-shared/colorUtils';\nimport { pick } from 'lodash';\n\ninterface Props {\n    enabled?: boolean;\n    width?: number | string;\n    height?: number | string;\n}\n\ninterface ItemProps {\n    backgroundColor?: string;\n    width?: string | number;\n}\n\nconst Item = styled.div.attrs<ItemProps>(({ width }) => ({\n    style: {\n        width: toPx(width),\n    },\n}))<ItemProps>`\n    position: relative;\n    background-color: ${(props): string =>\n        (isColor(props.backgroundColor) && props.backgroundColor) || props.theme.defaultBackgroundColor}};\n`;\n\ninterface FixSizeItemProps {\n    backgroundColor?: string;\n    height?: string | number;\n    width?: string | number;\n}\n\n// Use `.attrs()` for highly dynamic styles. Ref: https://github.com/styled-components/styled-components/issues/134#issuecomment-312415291\nconst FixSizeItem = styled.div.attrs<FixSizeItemProps>(({ width, height }): {\n    style: { width?: string; height?: string };\n} => ({\n    style: {\n        ...(width && { width: toPx(width) }),\n        ...(height && { height: toPx(height) }),\n    },\n}))<FixSizeItemProps>`\n    position: relative;\n    flex-direction: column;\n    flex: 1;\n    display: flex;\n    background-color: ${(props): string =>\n        (isColor(props.backgroundColor) && props.backgroundColor) || props.theme.defaultBackgroundColor}};\n`;\n\nconst ItemContent = styled.div`\n    position: relative;\n    min-height: 100px;\n    width: 100%;\n`;\n\nconst FixSizeItemContent = styled.div`\n    min-height: 0px;\n    flex: 1;\n    position: relative;\n    box-sizing: border-box;\n`;\n\ninterface HeightAndWidthProps {\n    width?: string | number;\n    height?: string | number;\n    backgroundColor?: string;\n}\n\nconst withFixedSizeContainer = <P extends HeightAndWidthProps>(\n    Viz: React.ComponentType<P>\n): React.ComponentType<P> => {\n    const FixedSizeContainer = (props: P): React.ReactElement => {\n        const { width, height, backgroundColor } = props;\n\n        if (!height) {\n            return (\n                <Item data-test=\"item\" width={width} backgroundColor={backgroundColor}>\n                    <ItemContent>\n                        <Viz {...props} />\n                    </ItemContent>\n                </Item>\n            );\n        }\n        return (\n            <FixSizeItem\n                data-test=\"fix-size-item\"\n                width={width}\n                height={height}\n                backgroundColor={backgroundColor}\n            >\n                <FixSizeItemContent>\n                    <SizeAwareWrapper>\n                        {({ width: newWidth, height: newHeight }): React.ReactElement => (\n                            <Viz {...props} width={newWidth} height={newHeight} />\n                        )}\n                    </SizeAwareWrapper>\n                </FixSizeItemContent>\n            </FixSizeItem>\n        );\n    };\n    FixedSizeContainer.displayName = 'withFixedSizeContainer';\n    return FixedSizeContainer;\n};\n\nexport default withFixedSizeContainer;\n","module.exports = require(\"@splunk/visualizations-shared/style\");","module.exports = require(\"@splunk/visualizations-shared/schemaUtils\");","import { get } from 'lodash';\nimport { isNumerial, formatNumber } from '@splunk/visualizations-shared/numberUtils';\nimport { computeTextSize } from '@splunk/visualizations-shared/domUtils';\nimport { formatColor } from '@splunk/visualizations-shared/propUtils';\nimport { DELTA_GREEN, DELTA_RED } from '@splunk/visualizations-shared/colorConstants';\n\nexport const DEFAULT_FONT = 12;\nexport const DEFAULT_FONT_FAMILY =\n    '\"Splunk Platform Sans\", \"Proxima Nova\", \"Helvetica Neue\", Helvetica, Arial, sans-serif';\n\n/**\n * @method shouldShowTrend\n * @param {String} trendDisplay\n * @returns {Bool}\n */\nexport const shouldShowTrend = trendDisplay => trendDisplay === 'absolute' || trendDisplay === 'percent';\n\n/**\n * @method isLoadingOrNoColumns\n * @param {Object} dataSources\n * @param {Boolean} loading\n * @returns {Boolean} return true if loading or without columns in dataSources\n */\nexport const isLoadingOrNoColumns = (dataSources, loading) => {\n    const data = get(dataSources, 'primary.data.columns[0]', undefined);\n    const noColumns = data === undefined;\n    return loading || noColumns;\n};\n\n/**\n * Retrieve the valid formatted color\n * @method getFormattedColor\n * @param {String} color\n * @param {String} defaultColor\n * @returns {String} the formatted color\n */\nexport const getFormattedColor = (color, defaultColor) => formatColor(color) || formatColor(defaultColor);\n\n/**\n * Determines if there is a background color\n * @method hasBackground\n * @param {String} backgroundColor\n * @returns true for non-transparent background color\n */\nexport const hasBackground = backgroundColor => !!backgroundColor && backgroundColor !== 'transparent';\n\n/**\n * @method isIdenticalColor\n * @param {String} colorA\n * @param {String} colorB\n * @returns {Boolean}\n */\nexport const isIdenticalColor = (colorA, colorB) =>\n    !!colorA && !!colorB && formatColor(colorA.toLowerCase()) === formatColor(colorB.toLowerCase());\n\n/*\n * @method getDefaultColorWithBg\n * @param {Object} props\n * @param {String} props.backgroundColor\n * @param {String} props.defaultFontColor\n * @param {String} props.defaultBlockFontColor\n * @returns {String} defaultColor\n */\nexport const getDefaultColorWithBg = ({ backgroundColor, defaultFontColor, defaultBlockFontColor }) =>\n    isIdenticalColor(backgroundColor, defaultBlockFontColor) ? defaultFontColor : defaultBlockFontColor;\n\n/*\n * @method getMajorColor\n * return formatted majorColor.\n * @param {Object} props\n * @param {String} props.majorColor\n * @param {String} props.backgroundColor\n * @param {String} props.defaultFontColor\n * @param {String} props.defaultBlockFontColor\n * @returns {String} majorColor\n */\nexport const getMajorColor = ({ majorColor, backgroundColor, defaultFontColor, defaultBlockFontColor }) => {\n    // If backgroundColor is set, but no majorColor,\n    // the default majorColor will turn to be defaultBlockFontColor.\n    // eg: major color will turn to be white in enterprise mode.\n    // however, if the bgColor is the same as defaultBlockFontColor, use defaultFontColor.\n    if (hasBackground(backgroundColor) && !majorColor) {\n        return getDefaultColorWithBg({\n            backgroundColor,\n            defaultFontColor,\n            defaultBlockFontColor,\n        });\n    }\n\n    return getFormattedColor(majorColor, defaultFontColor);\n};\n\n/**\n * Get the color for the trend components\n * @method getTrendColor\n * @param {Object} props\n * @param {String} props.trendColor                   The trendColor value determined from encoding\n * @param {Number} props.trendValue\n * @param {Number} props.majorValue\n * @param {String} props.customizedBgColor\n * @param {String} props.trendDisplay  absolute || percent || off\n * @param {Object} defaultColors\n * @returns {String} trendColor\n */\nexport const getTrendColor = ({\n    trendColor,\n    trendValue,\n    majorValue,\n    customizedBgColor,\n    trendDisplay,\n    defaultColors,\n}) => {\n    if (trendColor) {\n        return trendColor;\n    }\n\n    if (Number.isNaN(Number(trendValue))) {\n        return undefined;\n    }\n\n    const { defaultFontColor, defaultBlockFontColor, defaultBackgroundColor } = defaultColors;\n\n    // if user defined a backgroundColor, the default trend color will be defaultBlockFontColor\n    if (\n        hasBackground(customizedBgColor) &&\n        !isIdenticalColor(customizedBgColor, defaultBackgroundColor) &&\n        !isIdenticalColor(customizedBgColor, defaultBlockFontColor)\n    ) {\n        return defaultBlockFontColor;\n    }\n\n    // if trendDisplay is percent, and trendValue === value\n    // the trend percent = trendValue / (value - trendValue) will return Infinity\n    const isInvalidTrend = trendDisplay === 'percent' && trendValue === parseFloat(majorValue);\n\n    if (trendValue === 0 || isInvalidTrend) {\n        return defaultFontColor;\n    }\n\n    return trendValue > 0 ? DELTA_GREEN : DELTA_RED;\n};\n\n/**\n * Computes visualization properties for display component\n * @method computeColors\n * @param {Object} props    all viz props\n * @param {Object} defaultColors    defaultColors from theme\n * @returns {Object} result\n * @returns {Boolean} backgroundEnabled\n * @returns {String} backgroundColor\n * @returns {String} majorColor\n * @returns {String} trendColor\n * @returns {String} underLabelColor\n */\nexport const computeColors = (props, defaultColors) => {\n    const backgroundColor = getFormattedColor(props.backgroundColor, defaultColors.defaultBackgroundColor);\n    const backgroundEnabled = hasBackground(backgroundColor);\n    const majorColor = getMajorColor({\n        majorColor: props.majorColor,\n        backgroundColor,\n        defaultFontColor: defaultColors.defaultFontColor,\n        defaultBlockFontColor: defaultColors.defaultBlockFontColor,\n    });\n    const trendColor = getTrendColor({\n        trendColor: props.trendColor,\n        trendValue: props.trendValue,\n        majorValue: props.majorValue,\n        customizedBgColor: props.backgroundColor,\n        trendDisplay: props.trendDisplay,\n        defaultColors,\n    });\n    // todo: need change it to not depend on majorColor\n    const underLabelColor = backgroundEnabled ? majorColor : defaultColors.defaultFontColor;\n\n    return {\n        backgroundColor,\n        backgroundEnabled,\n        majorColor,\n        trendColor,\n        underLabelColor,\n    };\n};\n\n/**\n * Format and return the value (major/trend)\n * @method computeText\n * @param {Object} props\n * @param {Number} props.value                    // The major/trend value\n * @param {Number} props.numberPrecision\n * @param {Bool} props.shouldUseThousandSeparators\n * @param {Bool} props.shouldAbbreviateTrendValue\n * @returns {Number} major or trend text\n */\nexport const computeText = ({\n    value,\n    numberPrecision,\n    shouldUseThousandSeparators,\n    shouldAbbreviateTrendValue,\n}) => {\n    let text = isNumerial(value)\n        ? formatNumber(value, numberPrecision, {\n              useThousandSeparators: shouldUseThousandSeparators, // todo: need update formatNumber\n              useTrendUnits: shouldAbbreviateTrendValue,\n          })\n        : value;\n    // When text is undefined, return empty string\n    text = text || '';\n    return text;\n};\n\n/*\n * @method getMajorText\n * @param {Object} props\n * @param {Number} props.majorValue\n * @param {Number} props.numberPrecision\n * @param {Bool} props.shouldUseThousandSeparators\n * @returns {String} majorText\n */\nexport const getMajorText = ({ majorValue, numberPrecision, shouldUseThousandSeparators }) =>\n    computeText({\n        value: majorValue === null ? 'N/A' : majorValue, // if majorValue is null, use `N/A`.\n        numberPrecision,\n        shouldUseThousandSeparators,\n        shouldAbbreviateTrendValue: false,\n    });\n\n/*\n * @method getTrendText\n * @param {Object} props\n * @param {Number} props.majorValue\n * @param {Number} props.trendValue\n * @param {String} props.trendDisplay\n * @param {Number} props.numberPrecision\n * @param {Bool} props.shouldUseThousandSeparators\n * @param {Bool} props.shouldAbbreviateTrendValue\n * @returns {String} trendText\n */\nexport const getTrendText = ({\n    majorValue,\n    trendValue,\n    trendDisplay,\n    numberPrecision,\n    shouldUseThousandSeparators,\n    shouldAbbreviateTrendValue,\n}) => {\n    const compute = value =>\n        computeText({\n            value,\n            numberPrecision,\n            shouldUseThousandSeparators,\n            shouldAbbreviateTrendValue,\n        });\n\n    if (trendValue === '' || !isNumerial(trendValue)) {\n        return '';\n    }\n    const showPercent = trendDisplay === 'percent';\n    if (!showPercent) {\n        return compute(trendValue);\n    }\n\n    const diff = Math.abs(trendValue - majorValue);\n    let val = Math.round((trendValue / diff) * 100);\n    if (trendValue === 0 && diff === 0) {\n        val = 0;\n    }\n\n    if (!Number.isFinite(val)) {\n        return 'N/A';\n    }\n    const text = compute(val);\n\n    return `${text}%`;\n};\n\n/**\n * Helper to determine the font size for an element\n * @method computeFontSize\n * @param {String} text                     The string to find a size for\n * @param {Object} dimensions\n * @param {Number} dimensions.width         The width of the container\n * @param {Number} dimensions.height        The height of the container\n * @param {String} [fontFamily='\"Splunk Platform Sans\" ...'] The font being used\n * @param {String} [fontWeight='normal']    Boldness of font\n * @returns {Number} The size to use for fontSize styles\n */\nexport const computeFontSize = (\n    text,\n    { width, height },\n    fontFamily = DEFAULT_FONT_FAMILY,\n    fontWeight = 'normal'\n) => {\n    const widthInDefaultFont = computeTextSize(text, `${fontWeight} ${DEFAULT_FONT}px ${fontFamily}`);\n    const fontSize = Math.min(\n        (width / widthInDefaultFont) * DEFAULT_FONT,\n        (height / DEFAULT_FONT) * DEFAULT_FONT\n    );\n    return parseInt(fontSize, 10);\n};\n\n/*\n * @method getMajorFontSize\n * @param {Object} props\n * @param {Number} props.width\n * @param {Number} props.height\n * @param {String} props.unit\n * @param {String} props.majorText\n * @param {Number} props.spaceRatio\n * @returns {Number} majorFontSize\n */\nexport const getMajorFontSize = ({ width, height, unit, majorText, spaceRatio = 1 }) => {\n    const majorTextCalc = unit ? `${unit}${majorText}` : majorText;\n    return computeFontSize(majorTextCalc, {\n        width: width * spaceRatio,\n        height,\n    });\n};\n\n/*\n * @method getTrendFontSize\n * @param {Object} props\n * @param {Number} props.width\n * @param {Number} props.height\n * @param {String} props.trendText\n * @param {Number} props.spaceRatio\n * @returns {Number} trendFontSize\n */\nexport const getTrendFontSize = ({ width, height, trendText, spaceRatio = 1 }) => {\n    let trendFontSize = 12;\n    if (spaceRatio > 0) {\n        trendFontSize = computeFontSize(trendText, {\n            width: width * spaceRatio,\n            height,\n        });\n        trendFontSize = parseInt(trendFontSize, 10) * spaceRatio;\n    }\n    return trendFontSize;\n};\n\n/*\n * The height of underLabel should no more than 12px\n * @param {Number} height\n * @return {Number} height || DEFAULT_FONT\n */\nexport const getUnderLabelHeight = height => (height > DEFAULT_FONT ? DEFAULT_FONT : height);\n\n/*\n * @param {Object} config\n * @param {String} underLabel\n * @param {Number} width     width of underLabel\n * @param {Number} height    height of underLabel\n * @param {Number} fond size of underLabel\n */\nexport const getUnderLabel = ({ underLabel, width, height }) =>\n    // todo: may need truncate underLabel later\n    computeFontSize(underLabel, {\n        width,\n        height,\n    });\n\n/**\n * Compute value and font size for major and trend\n * @method getMajorAndTrend\n * @param {Object} props\n * @param {Number} props.width                    // Width of the text container\n * @param {Number} props.height                   // Height of the text container\n * @param {Number} props.majorValue               // Major value\n * @param {Number} props.trendValue               // Trend value\n * @param {Number} props.majorFontSize\n * @param {Number} props.trendFontSize\n * @param {String} props.trendDisplay\n * @param {String} props.unit                     // Unit for the value\n * @param {Number} props.numberPrecision\n * @param {Bool} props.shouldUseThousandSeparators\n * @param {Bool} props.shouldAbbreviateTrendValue\n * @returns {Number, Number, Number, Number} Major text, trend text, major text size, trend text size\n */\nexport const getMajorAndTrend = ({\n    width,\n    height,\n    majorValue,\n    trendValue,\n    majorFontSize,\n    trendFontSize,\n    trendDisplay,\n    unit,\n    numberPrecision,\n    shouldUseThousandSeparators,\n    shouldAbbreviateTrendValue,\n}) => {\n    const majorTextSpaceRatio = isNumerial(trendValue) && shouldShowTrend(trendDisplay) ? 0.6 : 1;\n    const textContentWidth = width * 0.9;\n    const textContentHeight = height * 0.9;\n    const majorText = getMajorText({ majorValue, numberPrecision, shouldUseThousandSeparators });\n    const majorTextFontSize =\n        majorFontSize ||\n        getMajorFontSize({\n            width: textContentWidth,\n            height: textContentHeight,\n            unit,\n            majorText,\n            spaceRatio: majorTextSpaceRatio,\n        });\n    const trendText = getTrendText({\n        majorValue,\n        trendValue,\n        trendDisplay,\n        numberPrecision,\n        shouldUseThousandSeparators,\n        shouldAbbreviateTrendValue,\n    });\n    const trendTextFontSize =\n        trendFontSize ||\n        getTrendFontSize({\n            width: textContentWidth,\n            height: textContentHeight,\n            trendText,\n            spaceRatio: 1 - majorTextSpaceRatio,\n        });\n\n    return {\n        majorText,\n        majorTextFontSize,\n        trendText,\n        trendTextFontSize,\n    };\n};\n\n/*\n * @method updateVizInSmallSpace\n * @param {Object} props\n * @param {Number} props.width                    // Width of the text container\n * @param {Number} props.height                   // Height of the text container\n * @param {Object} props.toRemoveList\n * @param {Number} props.majorValue               // Major value\n * @param {Number} props.trendValue               // Trend value\n * @param {Number} props.majorFontSize\n * @param {Number} props.trendFontSize\n * @param {Number} props.majorTextFontSize\n * @param {String} props.unit                     // Unit for the value\n * @param {Number} props.numberPrecision\n * @param {Bool} props.shouldUseThousandSeparators\n * @param {Bool} props.shouldAbbreviateTrendValue\n * @returns {Object} results\n * @returns {Object} results.newMajorAndTrend\n * @returns {Object} results.updatedProps\n */\nexport const updateVizInSmallSpace = ({\n    width,\n    height,\n    toRemoveList,\n    majorValue,\n    trendValue,\n    majorFontSize,\n    trendFontSize,\n    majorTextFontSize,\n    unit,\n    numberPrecision,\n    shouldUseThousandSeparators,\n    shouldAbbreviateTrendValue,\n}) => {\n    let removeIndex = 0;\n    let newProps = {}; // options need to be updated\n    let newMajorAndTrend = {};\n    let newTextSize = majorTextFontSize;\n\n    // remove info on viz to make textFontSize >= 12px;\n    while (newTextSize < 12 && removeIndex < toRemoveList.length) {\n        const toRemove = toRemoveList[removeIndex];\n        newProps = {\n            ...newProps,\n            ...{\n                [toRemove.key]: toRemove.value,\n            },\n        };\n\n        newMajorAndTrend = getMajorAndTrend({\n            majorValue,\n            trendValue,\n            majorFontSize,\n            trendFontSize,\n            width,\n            height,\n            unit,\n            numberPrecision,\n            shouldUseThousandSeparators,\n            shouldAbbreviateTrendValue,\n            ...newProps,\n        });\n\n        newTextSize = newMajorAndTrend.majorTextFontSize;\n        removeIndex += 1;\n    }\n\n    // truncate text if textFontSize is still less than 12\n    if (newTextSize < 12) {\n        const truncateValue = `${majorValue.toString().slice(0, 3)}...`;\n        newMajorAndTrend = getMajorAndTrend({\n            majorValue: truncateValue,\n            trendValue,\n            majorFontSize,\n            trendFontSize,\n            width,\n            height,\n            unit,\n            numberPrecision,\n            shouldUseThousandSeparators,\n            shouldAbbreviateTrendValue,\n            ...newProps,\n        });\n    }\n\n    return { newMajorAndTrend, updatedProps: newProps };\n};\n\n/*\n * @method computeSingleValueContent\n * @param {Object} props\n * @param {Number} props.contentWidth\n * @param {Number} props.contentHeight\n * @param {Number} props.containerWidth\n * @param {Number} props.containerHeight\n * @param {Number} props.majorValue               // Major value\n * @param {Number} props.trendValue               // Trend value\n * @param {Number} props.majorFontSize\n * @param {Number} props.trendFontSize\n * @param {String} props.trendDisplay\n * @param {String} props.unit                     // Unit for the value\n * @param {Number} props.numberPrecision\n * @param {Bool} props.shouldUseThousandSeparators\n * @param {Bool} props.shouldAbbreviateTrendValue\n * @param {Object} props.toRemoveList\n * @returns {Object} results\n * @returns {String} results.majorText\n * @returns {String} results.trendText\n * @returns {Number} results.majorTextFontSize\n * @returns {Number} results.trendTextFontSize\n * @returns {String} results.majorValueTitle\n * @returns {Object} results.smallVizProps\n */\nexport const computeSingleValueContent = ({\n    contentWidth,\n    contentHeight,\n    containerWidth,\n    containerHeight,\n    majorValue,\n    trendValue,\n    majorFontSize,\n    trendFontSize,\n    trendDisplay,\n    unit,\n    numberPrecision,\n    shouldUseThousandSeparators,\n    shouldAbbreviateTrendValue,\n    toRemoveList,\n}) => {\n    let { majorText, trendText, majorTextFontSize, trendTextFontSize } = getMajorAndTrend({\n        majorValue,\n        trendValue,\n        majorFontSize,\n        trendFontSize,\n        trendDisplay,\n        width: contentWidth,\n        height: contentHeight,\n        unit,\n        numberPrecision,\n        shouldUseThousandSeparators,\n        shouldAbbreviateTrendValue,\n    });\n    const majorValueTitle = majorText;\n    let smallVizProps = {};\n\n    // update viz in small space\n    // if textFontSize is less than 12, remove extra info like sparkline, trendvalue, unit\n    // or truncate major value to make the major font size >= 12\n    if (majorTextFontSize < 12) {\n        const { newMajorAndTrend, updatedProps } = updateVizInSmallSpace({\n            width: containerWidth,\n            height: containerHeight,\n            toRemoveList,\n            majorValue,\n            trendValue,\n            majorFontSize,\n            trendFontSize,\n            majorTextFontSize,\n            unit,\n            numberPrecision,\n            shouldUseThousandSeparators,\n            shouldAbbreviateTrendValue,\n        });\n\n        ({ majorText, trendText, majorTextFontSize, trendTextFontSize } = newMajorAndTrend);\n        smallVizProps = updatedProps;\n    }\n    return {\n        majorText,\n        trendText,\n        majorTextFontSize,\n        trendTextFontSize,\n        majorValueTitle,\n        smallVizProps,\n    };\n};\n\n/**\n * Get the colors for a graph\n *\n * @method getGraphColors\n * @param {Object} options\n * @param {Bool} options.backgroundEnabled          // Flag to turn on color mode\n * @param {String} options.backgroundColor          // The current background color, overrides trend background color\n * @param {Object} options.defaultColors            // Default colors by severity\n * @param {Function} options.customColorFormatter   // must return { background, stroke } given a color\n * @returns {Object} { background, stroke } colors\n * @private\n */\nexport const getGraphColors = ({\n    backgroundEnabled,\n    backgroundColor,\n    defaultColors,\n    customColorFormatter,\n}) => {\n    // Only do custom colors in block mode\n    if (backgroundEnabled) {\n        // Check if the user defined colors to use\n        if (backgroundColor && typeof customColorFormatter === 'function') {\n            return customColorFormatter(backgroundColor);\n        }\n    }\n\n    return defaultColors.none;\n};\n\n/**\n * Adjust rgb value if it equals to 0 or 255\n * @method adjustRGB\n * @param {Number} rgb      [0 - 255]\n * @param {Number} delta\n * @returns {Number} adjusted rgb\n * @private\n */\nexport const adjustRGB = (rgb, delta) => {\n    if (rgb === 255) {\n        return rgb - delta;\n    }\n\n    if (rgb === 0) {\n        return rgb + delta;\n    }\n\n    return rgb;\n};\n\n/**\n * Modifies colors by multiplying by a given ratio\n * @method changeColor\n * @param {String} color    // Color to modify\n * @param {Number} ratio    // Float to modify color\n * @returns {String} new color\n * @private\n */\nconst changeColor = (color, ratio) => {\n    const hex = color.replace(/(0x|#)/, '');\n    const r = parseInt(hex.substr(0, 2), 16);\n    const g = parseInt(hex.substr(2, 2), 16);\n    const b = parseInt(hex.substr(4, 2), 16);\n\n    // Multiply by given ratio, make sure is between 0 and 255;\n    let newR = Math.max(Math.min(Math.floor(r * ratio), 255), 0);\n    let newG = Math.max(Math.min(Math.floor(g * ratio), 255), 0);\n    let newB = Math.max(Math.min(Math.floor(b * ratio), 255), 0);\n\n    // If the color is not changed\n    // case 1: the color is (0, 0 0)\n    //         lighten color (80, 80, 80)\n    //         darken color (40, 40, 40)\n    // case 2: the color is (255, 255, 255)\n    //         lighten color (235, 235, 235)\n    //         darken color (175, 175, 175)\n    // case 3: the color is e.g. (0, 255, 0)\n    //         new color (20, 235, 20)\n    if (newR === r && newG === g && newB === b) {\n        if (newR === 0 && newG === 0 && newB === 0) {\n            if (ratio > 1) {\n                newR = adjustRGB(newR, 80);\n                newG = adjustRGB(newG, 80);\n                newB = adjustRGB(newB, 80);\n            } else {\n                newR = adjustRGB(newR, 40);\n                newG = adjustRGB(newG, 40);\n                newB = adjustRGB(newB, 40);\n            }\n        } else if (newR === 255 && newG === 255 && newB === 255) {\n            if (ratio > 1) {\n                newR = adjustRGB(newR, 20);\n                newG = adjustRGB(newG, 20);\n                newB = adjustRGB(newB, 20);\n            } else {\n                newR = adjustRGB(newR, 80);\n                newG = adjustRGB(newG, 80);\n                newB = adjustRGB(newB, 80);\n            }\n        } else {\n            newR = adjustRGB(newR, 20);\n            newG = adjustRGB(newG, 20);\n            newB = adjustRGB(newB, 20);\n        }\n    }\n\n    return (\n        `#${newR.toString(16).padStart(2, 0)}` +\n        `${newG.toString(16).padStart(2, 0)}` +\n        `${newB.toString(16).padStart(2, 0)}`\n    );\n};\n\n/**\n * Lighten a given color\n * @method lighten\n * @param {String} color\n * @returns {String}\n * @private\n */\nexport const lighten = color => changeColor(color, 1.3);\n\n/**\n * Darkens a given color\n * @method darken\n * @param {String} color\n * @returns {String}\n * @private\n */\nexport const darken = color => changeColor(color, 0.5);\n\n/** consistent token structure: handle callback to add value and name in event payload\n * @method handleValueClickCallback\n * @param {Object} ev\n * @param {String | Number} majorValue\n * @param {String} majorValueField\n * @param {Number} trendValue\n * @param {Function} onValueClick\n */\nexport const handleValueClickCallback = (ev, majorValue, majorValueField, trendValue, onValueClick) => {\n    const payload = {\n        trendValue,\n        value: majorValue,\n        name: majorValueField,\n    };\n\n    return onValueClick({ ...ev, payload });\n};\n","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@splunk/visualizations-shared/SizeAwareWrapper\");","module.exports = require(\"@splunk/visualizations-shared/propUtils\");","module.exports = require(\"@splunk/themes/variables\");","module.exports = require(\"@splunk/visualizations-shared/numberUtils\");","module.exports = require(\"@splunk/themes/pick\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","import * as T from 'prop-types';\nimport { has, isFunction } from 'lodash';\nimport { DataSourceMeta, SortDirType, validSortDirs } from '../interfaces/DataSource';\n\nexport interface SortParams {\n    currentSortKey?: undefined | string;\n    currentSortDir?: undefined | SortDirType;\n    onSort?: (e: MouseEvent, { sortKey: string, sortDir: SortDirType }) => void;\n}\n\nexport const SortParamsPropTypes = T.shape({\n    currentSortKey: T.string,\n    currentSortDir: T.oneOf(validSortDirs),\n    onSort: T.func,\n});\n\nexport const getSortingParams = ({ requestParams, onRequestParamsChange }: DataSourceMeta): SortParams => {\n    let currentSortKey;\n    let currentSortDir;\n\n    const nextSortDirMap = {\n        asc: 'desc',\n        desc: 'asc',\n        none: 'asc',\n    };\n\n    let onSort;\n    if (isFunction(onRequestParamsChange)) {\n        if (requestParams && has(requestParams, 'sort')) {\n            currentSortKey = Object.keys(requestParams.sort).shift();\n            currentSortDir = requestParams.sort[currentSortKey];\n        }\n\n        // undid memoization since there is a dependency on requestParams, which is a deeply nested object\n        onSort = (e, { sortKey, sortDir }): void => {\n            if (typeof sortKey === 'string') {\n                const nextSortDir = has(nextSortDirMap, sortDir) ? nextSortDirMap[sortDir] : 'none';\n                onRequestParamsChange({\n                    ...requestParams,\n                    ...{ offset: 0, sort: { [sortKey]: nextSortDir } },\n                });\n            } else {\n                onRequestParamsChange(requestParams);\n            }\n        };\n    }\n\n    return {\n        currentSortKey,\n        currentSortDir,\n        onSort,\n    };\n};\n","import * as T from 'prop-types';\nimport { cloneDeep, isFunction, noop } from 'lodash';\nimport { DataSourceMeta, RequestParams } from '../interfaces/DataSource';\n\nexport interface OnChangeParams {\n    page?: number;\n    count?: number;\n}\nexport interface PaginatorParams {\n    isPaging?: boolean;\n    current?: number;\n    totalPages?: number;\n    onChange?: (e: MouseEvent, x: OnChangeParams) => void;\n}\n\nexport const PaginatorParamsPropTypes = T.shape({\n    isPaging: T.bool,\n    current: T.number,\n    totalPages: T.number,\n    onChange: T.func,\n});\n\nexport const getPaginationParams = ({\n    requestParams,\n    meta,\n    onRequestParamsChange,\n}: DataSourceMeta): PaginatorParams => {\n    const totalCount = (meta && meta.totalCount) || 0;\n    const offset = (requestParams && requestParams.offset) || 0;\n    const count = requestParams && requestParams.count;\n    const totalPages = typeof count === 'number' && count > 0 ? Math.ceil(totalCount / count) : 0;\n    const current = typeof count === 'number' && count > 0 ? Math.floor(offset / count) + 1 : 0;\n    const isPaging = totalPages > 1 && isFunction(onRequestParamsChange);\n\n    const onChangeHandler = (e, { page, count: countArg }: OnChangeParams): void => {\n        const newParams: RequestParams = cloneDeep(requestParams);\n\n        if (typeof countArg === 'number') {\n            newParams.count = countArg;\n            newParams.offset = 0;\n        }\n\n        const pageCount = typeof newParams.count === 'number' ? newParams.count : 10;\n        if (typeof page === 'number' && page > 0) {\n            newParams.count = pageCount;\n            newParams.offset = (page - 1) * pageCount;\n        }\n\n        onRequestParamsChange(newParams);\n    };\n\n    return {\n        isPaging,\n        current,\n        totalPages,\n        onChange: isFunction(onRequestParamsChange) ? onChangeHandler : noop,\n    };\n};\n","import * as React from 'react';\nimport * as T from 'prop-types';\nimport { get } from 'lodash';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport Message from '@splunk/visualizations-shared/Message';\nimport { DataSource } from '../interfaces/DataSource';\nimport withFixedSizeContainer from '../hocs/FixedSizeContainer';\n\n/**\n * @method shouldShowIconPlaceholder\n * @param {object} dataSources\n * @param {boolean} loading\n * @returns {boolean}\n */\nexport const shouldShowIconPlaceholder = (\n    dataSources: { [name: string]: DataSource },\n    loading = false\n): boolean => {\n    const data = get(dataSources, 'primary.data.columns[0]', undefined);\n    const noData = data === undefined;\n    const fields = get(dataSources, 'primary.data.fields[0]', undefined);\n    const noFields = fields === undefined;\n    return loading || noData || noFields;\n};\n\nexport interface IconPlaceholderProps {\n    icon?: React.ComponentClass<any>;\n    width?: string | number;\n    height?: string | number;\n    backgroundColor?: string;\n}\n\nconst propTypes: Record<keyof IconPlaceholderProps, T.Validator<any>> = {\n    icon: T.func,\n    width: T.oneOfType([T.string, T.number]),\n    height: T.oneOfType([T.string, T.number]),\n    backgroundColor: T.string,\n};\n\n/**\n * @method IconPlaceholder\n * @param {IconPlaceholderProps} props\n * @returns {React.ReactElement}\n */\nconst IconPlaceholder = (props: IconPlaceholderProps): React.ReactElement => {\n    const { width, height, icon } = props;\n    if (icon) {\n        return React.createElement(icon, {\n            style: {\n                left: '50%',\n                top: '50%',\n                color: 'grey',\n                position: 'absolute',\n                transform: 'translate(-50%, -50%)',\n            },\n            width: '50%',\n            height: '50%',\n        });\n    }\n\n    return <Message width={width} height={height} level=\"warning\" message={_('No DataSource Connected')} />;\n};\n\nIconPlaceholder.propTypes = propTypes;\nIconPlaceholder.defaultProps = {\n    width: '100%',\n    height: 250,\n};\n\nexport default withFixedSizeContainer(IconPlaceholder);\n","export enum VizCategory {\n    SINGLE_VALUE = 'Single Value',\n    TRENDS = 'Trends',\n    COMPARISONS = 'Comparisons',\n    TABLE = 'Table',\n    GAUGE = 'Gauge',\n    DISTRIBUTIONS = 'Distributions',\n    CHOROPLETH = 'Choropleth Maps',\n    SHAPES = 'Shapes',\n    MISC = 'misc',\n    FLOW = 'Flow',\n    CORRELATION = 'Correlation',\n    SPATIAL = 'Spatial',\n}\n","import * as React from 'react';\nimport { camelCase, has, get, defaultsDeep } from 'lodash';\nimport getSettingsFromThemedProps from '@splunk/themes/getSettingsFromThemedProps';\nimport { Options as Opts } from '@splunk/visualization-encoding/Options';\nimport { withSanitizedProps } from '@splunk/visualizations-shared/SanitizeProps';\n\nimport { withTheme } from 'styled-components';\nimport SplunkVisualization from './SplunkVisualization';\nimport { DashboardVizProps } from './interfaces/DashboardVizProps';\nimport { VizConfig } from './interfaces/VizConfig';\nimport { VizProps } from './interfaces/VizProps';\nimport { VizBehavior } from './interfaces/VizBehavior';\nimport { DataSource } from './interfaces/DataSource';\nimport { getSortingParams } from './hooks/getSorting';\nimport { getPaginationParams } from './hooks/getPagination';\nimport { useDeepMemo } from './hooks/useDeepMemo';\nimport { pickFieldFromJSONSchema } from './utils/JSONSchemaUtils';\nimport MissingPropsMessage, { missingKeys } from './components/MissingPropsMessage';\nimport withEditModeCover from './hocs/withEditModeCover';\nimport withPlaceholder from './hocs/withPlaceholder';\nimport { ChartingProps } from './Charting';\nimport { deepMergeWithArrayOverrides } from './utils/hocUtils';\n\ntype HOC = (props: DashboardVizProps) => React.ReactElement<DashboardVizProps>;\nexport interface DashboardVizOpts {\n    ReactViz: React.ComponentType<ChartingProps | VizProps>; // we will wrap this in DashboardViz (see const DashboardViz = ...)\n    vizConfig: VizConfig;\n    computeVizProps?: (props) => any;\n    useIconPlaceholder?: (\n        dataSources: { [name: string]: DataSource },\n        loading: boolean,\n        options: Record<string, unknown>\n    ) => boolean;\n}\n\n/**\n * hoc that wraps a pure react visualization in a Dashboard visualization\n * @param {DashboardVizOpts} opts\n * @returns {HOC}\n */\nconst withDashboardViz = (opts: DashboardVizOpts): HOC => {\n    const { ReactViz, vizConfig, computeVizProps = () => {}, useIconPlaceholder } = opts;\n\n    // sanitizing props before sending them to reactviz.\n    const SanitizedReactViz = withSanitizedProps(ReactViz);\n    const defaultOptions = pickFieldFromJSONSchema(vizConfig.optionsSchema, 'default');\n\n    const DashboardViz = (props: DashboardVizProps): React.ReactElement<DashboardVizProps> => {\n        const {\n            mode,\n            hasEventHandlers,\n            dataSources, // type of { [key: string]: DataSource }\n            options,\n            context = {},\n            width,\n            height,\n            onComputedProps,\n            onEventTrigger,\n            theme,\n            onRequestParamsChange,\n        } = props;\n\n        const themeFunc = themeVar => vizConfig.themes[themeVar]?.(props);\n        const bgColorFromTheme = themeFunc('defaultBackgroundColor');\n        const {\n            family: currentThemeFamily,\n            colorScheme: currentThemeColorScheme,\n            density: currentThemeDensity,\n        } = getSettingsFromThemedProps({ theme });\n\n        let evaluatedOptions: Opts = {}; // evaluatedOptions need to be initialized as an empty object\n        evaluatedOptions = useDeepMemo((): Record<string, unknown> => {\n            try {\n                return Opts.evaluate(\n                    {\n                        context: defaultsDeep({}, context, vizConfig.defaultContext),\n                        options: deepMergeWithArrayOverrides({}, options, defaultOptions),\n                    },\n                    dataSources,\n                    themeFunc\n                );\n            } catch (e) {\n                console.error(`unexpected error evaluating options:  + ${e.message}`);\n                return {};\n            }\n        }, [currentThemeFamily, currentThemeColorScheme, currentThemeDensity, options, context, dataSources]);\n\n        // useEffect hook needs to be initialized before any early returns\n        // this is in accordance with the order of hook calls being the same on each render https://reactjs.org/docs/hooks-rules.html#explanation\n        React.useEffect((): void => {\n            onComputedProps(evaluatedOptions);\n        });\n\n        // present warning message if any required props are missing\n        const { requiredProps = [], supports } = vizConfig;\n        const missing = missingKeys(requiredProps, evaluatedOptions);\n        if (missing.length > 0 && supports.includes(VizBehavior.PLACEHOLDER)) {\n            return (\n                <MissingPropsMessage\n                    data-test=\"missing-props-message\"\n                    width={width}\n                    height={height}\n                    missingProps={missing}\n                    backgroundColor={bgColorFromTheme}\n                />\n            );\n        }\n\n        // events\n        const eventCallbackProps = {};\n        if (hasEventHandlers && mode === 'view' && vizConfig.supports.indexOf(VizBehavior.EVENTS) > -1) {\n            const supportedEvents = vizConfig.events;\n            Object.keys(supportedEvents).forEach((eventName): void => {\n                const eventCallbackPropName = camelCase(`on.${eventName}`);\n                eventCallbackProps[eventCallbackPropName] = null;\n                // todo: refactor single value and single value icon to send payload from viz\n                // then remove these lines\n                const { payloadKeys } = supportedEvents[eventName];\n                let payload = {};\n                if (Array.isArray(payloadKeys) && payloadKeys.length) {\n                    payloadKeys.forEach(p => (payload[p] = evaluatedOptions[p]));\n                }\n\n                eventCallbackProps[eventCallbackPropName] = (ev): Record<string, unknown> => {\n                    if (ev && ev.payload) {\n                        payload = ev.payload;\n                    }\n\n                    return onEventTrigger({ originalEvent: ev, payload, type: eventName });\n                };\n            });\n        }\n        // compute pure viz props which are not from options\n        const computedVizProps = computeVizProps({\n            ...props,\n            ...evaluatedOptions,\n            ...eventCallbackProps,\n            themeFunc,\n        });\n\n        /**\n         * PAGE_AND_SORT behavior\n         *\n         * Some visualizations, like table, requires metadata about the datasource,\n         * like total number of results, current count, offset, and sort, for rendering\n         * paginator and sorting direction. In this approach, the visualization\n         * allow users to set 'paginateDataSourceKey' to select which datasource\n         * should the visualization extract the metadata from. It defaults to 'primary' datasource.\n         * The visualization config should set the PAGE_AND_SORT behavior to receive\n         * 'requestParams', 'meta' and onRequestParams callback as props.\n         *\n         * In future, we could automatically detect which all datasources are being used\n         * and bind those magically to pagination/sorting behavior.\n         */\n        let dataSourceMetadata = {};\n        const OptionKey = 'paginateDataSourceKey';\n        const paginateDataSourceKey =\n            (has(evaluatedOptions, OptionKey) && evaluatedOptions[OptionKey]) || 'primary';\n        if (\n            vizConfig.supports.indexOf(VizBehavior.PAGE_AND_SORT) > -1 &&\n            has(dataSources, paginateDataSourceKey)\n        ) {\n            const requestParams = get(dataSources, [paginateDataSourceKey, 'requestParams'], {});\n            const meta = get(dataSources, [paginateDataSourceKey, 'meta'], {});\n            const handleRequestParamsChange = (payload: Record<string, unknown>): void =>\n                onRequestParamsChange(paginateDataSourceKey, payload);\n\n            const sortParams = getSortingParams({\n                requestParams,\n                meta,\n                onRequestParamsChange: handleRequestParamsChange,\n            });\n\n            const paginatorParams = getPaginationParams({\n                requestParams,\n                meta,\n                onRequestParamsChange: handleRequestParamsChange,\n            });\n\n            dataSourceMetadata = {\n                sortParams,\n                paginatorParams,\n            };\n        }\n\n        return (\n            <SanitizedReactViz\n                mode={mode}\n                width={width}\n                height={height}\n                {...evaluatedOptions}\n                {...computedVizProps}\n                {...eventCallbackProps}\n                {...dataSourceMetadata}\n            />\n        );\n    };\n\n    DashboardViz.propTypes = {\n        ...SplunkVisualization.propTypes,\n        ...ReactViz.propTypes,\n    };\n\n    DashboardViz.defaultProps = {\n        ...SplunkVisualization.defaultProps,\n        ...ReactViz.defaultProps,\n        // using withTheme requires component to receive theme prop. In case the consumer did not provide ThemeProvider, a default empty object will prevent warnings.\n        theme: {},\n    };\n    // attach viz config\n    DashboardViz.config = vizConfig;\n\n    // @ts-ignore: TODO fix sc upgrade TS issues\n    return withTheme(withPlaceholder(withEditModeCover(DashboardViz), useIconPlaceholder));\n};\n\nexport default withDashboardViz;\n","module.exports = require(\"@splunk/themes/getSettingsFromThemedProps\");","module.exports = require(\"@splunk/visualization-encoding/Options\");","module.exports = require(\"@splunk/visualizations-shared/SanitizeProps\");","/* eslint-disable react/no-unused-prop-types,react/prefer-stateless-function */\nimport * as T from 'prop-types';\nimport { noop } from 'lodash';\nimport { DashboardVizProps } from './interfaces/DashboardVizProps';\nimport { DefaultVizActionHandler } from './interfaces/VizActionHandler';\n\n// this is identical to the initial height and width we use in BaseVisualization in dashboard-visualizations\nexport const INITIAL_WIDTH = 250;\nexport const INITIAL_HEIGHT = 250;\n\n/**\n * A Splunk visualization\n */\nclass SplunkVisualization {\n    static propTypes: Record<keyof DashboardVizProps, T.Validator<any>> = {\n        /**\n         * display mode\n         */\n        mode: T.oneOf(['view', 'edit', 'export']).isRequired,\n        /**\n         * width in pixel or string, defaults to 100%\n         */\n        width: T.oneOfType([T.string, T.number]).isRequired,\n        /**\n         * height in pixel or string\n         */\n        height: T.oneOfType([T.string, T.number]).isRequired,\n        /**\n         * visualization context used for dynamic option evaluation\n         */\n        context: T.object,\n        /**\n         * visualization formatting options\n         */\n        options: T.object,\n        /**\n         * A callback to update formatting options\n         */\n        onOptionsChange: T.func,\n        /**\n         * datasource state which include data and request params, object key indicate the datasource type.\n         */\n        dataSources: T.objectOf(\n            T.shape({\n                /**\n                 * current request params\n                 */\n                requestParams: T.object,\n                /**\n                 * current dataset\n                 */\n                data: T.shape({\n                    fields: T.array,\n                    columns: T.array,\n                }),\n                /**\n                 * error\n                 */\n                error: T.shape({\n                    level: T.string,\n                    message: T.string,\n                }),\n                /**\n                 * meta data that came with the dataset\n                 */\n                meta: T.object,\n            })\n        ),\n        /**\n         * A callback to trigger event\n         */\n        onEventTrigger: T.func,\n        /**\n         * Inform viz if there are handlers listening to events\n         */\n        hasEventHandlers: T.bool,\n        /**\n         * A callback to communicate computed props to a consumer\n         */\n        onComputedProps: T.func,\n        /**\n         * A callback to obtain visualization api\n         */\n        vizActionHandlerRef: T.func,\n\n        loading: T.bool,\n        theme: T.object,\n        /**\n         * A callback to request new data with updated request params\n         */\n        onRequestParamsChange: T.func,\n    };\n    /**\n     *\n     */\n    static defaultProps: DashboardVizProps = {\n        // BaseVisualization in dashboard-visualizations uses 100% for width but 250 for height\n        width: '100%',\n        height: INITIAL_HEIGHT,\n        dataSources: {},\n        onEventTrigger: (): Record<string, unknown> => ({}),\n        mode: 'view',\n        hasEventHandlers: false,\n        options: {},\n        context: {},\n        onOptionsChange: (): Record<string, unknown> => ({}),\n        vizActionHandlerRef: (): DefaultVizActionHandler => new DefaultVizActionHandler(),\n        onComputedProps: (): Record<string, unknown> => ({}),\n        loading: false,\n        onRequestParamsChange: noop,\n    };\n}\n\nexport default SplunkVisualization;\n","export interface VizActionHandler {\n    /**\n     * put focus on the visualization\n     */\n    focus(): void;\n\n    /**\n     * compute snapshot of this visualization\n     */\n    snapshot(): Record<string, unknown>; //(This is for pdf export)\n}\n\nexport class DefaultVizActionHandler {\n    focus(): void {\n        //noop\n    }\n\n    snapshot(): Record<string, unknown> {\n        return null; //noop\n    }\n}\n","/**\n * represents the data in a raw columnar format, resulting from a splunk\n * query request.\n */\ninterface FieldEntry {\n    name: string;\n}\n\nexport interface JsonColumnData {\n    fields: FieldEntry[] | string[];\n    columns: string[][];\n}\nexport interface Meta {\n    totalCount: number;\n}\n\nexport const validSortDirs = ['asc', 'desc', 'none'] as const;\nexport type SortDirType = typeof validSortDirs[number];\n\nexport interface RequestParams {\n    count?: number;\n    offset?: number;\n    sort?: {\n        [sortKey: string]: SortDirType;\n    };\n}\n\nexport interface DataSource {\n    requestParams: Partial<RequestParams>;\n    onRequestParamsChange?: (p: Record<string, unknown>) => void;\n    data: JsonColumnData;\n    error?: { level: string; message: string };\n    meta: Partial<Meta>;\n}\n\nexport interface DataSourceMeta {\n    requestParams: Partial<RequestParams>;\n    meta: Partial<Meta>;\n    onRequestParamsChange: (payload: RequestParams) => void;\n}\n","import { useRef } from 'react';\nimport { isEqual } from 'lodash';\n\n/**\n * This hook evaluates and stores the result of a passed function and only\n * re-evaluates the function when passed dependencies change.\n *\n * It is different from the internal React useMemo in the following aspects:\n * - it only stores the last evaluated result\n * - it uses a deep equality check to determine if dependencies have changed\n *\n * Inspired by apollo-client's useDeepMemo\n *\n * @param fn the function to be executed and\n * @param dependencies an array of dependencies\n */\nexport const useDeepMemo = <FnReturnType, DepType>(\n    fn: () => FnReturnType,\n    dependencies: DepType\n): FnReturnType => {\n    const ref = useRef<{ dependencies: DepType; value: FnReturnType }>();\n    if (!ref.current || !isEqual(dependencies, ref.current.dependencies)) {\n        ref.current = {\n            dependencies,\n            value: fn(),\n        };\n    }\n    return ref.current.value;\n};\n","import type { JSONSchema7Definition } from 'json-schema';\nimport { has, isEmpty, get } from 'lodash';\nimport { KV } from '../interfaces/Object';\nimport { OptionsSchema } from '../interfaces/OptionsSchema';\n\nexport const pickFieldFromJSONSchema = (\n    optionsSchema: OptionsSchema | JSONSchema7Definition,\n    fieldName = 'default'\n): KV =>\n    Object.keys(optionsSchema).reduce((accum: Record<string, unknown>, k): Record<string, unknown> => {\n        if (has(optionsSchema[k], fieldName)) {\n            accum[k] = optionsSchema[k][fieldName];\n        } else if (get(optionsSchema, [k, 'type']) === 'object' && has(optionsSchema[k], 'properties')) {\n            const nestedSchema = pickFieldFromJSONSchema(optionsSchema[k].properties, fieldName);\n            if (!isEmpty(nestedSchema)) {\n                accum[k] = nestedSchema;\n            }\n        }\n        return accum;\n    }, {});\n","import * as React from 'react';\nimport * as T from 'prop-types';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport Message from '@splunk/visualizations-shared/Message';\nimport withFixedSizeContainer from '../hocs/FixedSizeContainer';\n\n/**\n * @method isMissing\n * @param {any} v\n * @returns {boolean} true if the input value === null or undefined\n */\nexport const isMissing = (v): boolean => {\n    return v === null || v === undefined;\n};\n\n/**\n * @method misskingKeys\n * @param {string[]} keys\n * @param {object} target\n * @returns {string[]} the keys of missing required props\n */\nexport const missingKeys = (keys: string[], target: Record<string, unknown>): string[] =>\n    keys.filter(k => isMissing(target[k]));\n\nexport interface MissingPropsProps {\n    width?: string | number;\n    height?: string | number;\n    missingProps: string[];\n    backgroundColor?: string;\n}\n\nconst propTypes: Record<keyof MissingPropsProps, T.Validator<any>> = {\n    width: T.oneOfType([T.string, T.number]),\n    height: T.oneOfType([T.string, T.number]),\n    backgroundColor: T.string,\n    missingProps: T.arrayOf(T.string),\n};\n\n/**\n * @method MissingPropsMessage\n * @param {MissingPropsProps} props\n * @returns {React.ReactElement}\n */\nexport const MissingPropsMessage = (props: MissingPropsProps): React.ReactElement => {\n    const { width, height, missingProps } = props;\n    return (\n        <Message\n            data-test=\"message\"\n            width={width}\n            height={height}\n            message={_(`Missing property: ${missingProps.join(', ')}`)}\n        />\n    );\n};\n\nMissingPropsMessage.propTypes = propTypes;\nMissingPropsMessage.defaultProps = {\n    width: '100%',\n    height: 250,\n};\nexport default withFixedSizeContainer(MissingPropsMessage);\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { DashboardVizProps } from '../interfaces/DashboardVizProps';\nimport { ExtendedDashViz } from '../interfaces/ExtendedDashViz';\nimport { extendStaticWrapperProps } from '../utils/hocUtils';\n\nconst Cover = styled.div`\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n`;\n\nconst Blocker = styled.div`\n    position: relative;\n    width: 100%;\n    height: 100%;\n`;\n\n/**\n * HOC that renders a cover layer in edit mode\n * @method withEditModeCover\n * @param {ExtendedDashViz} Visualization\n * @returns {ExtendedDashViz} Wrapper\n */\nconst withEditModeCover = (Visualization: ExtendedDashViz): ExtendedDashViz => {\n    const Wrapper = (props: DashboardVizProps): React.ReactElement<DashboardVizProps> => {\n        const { mode } = props;\n        return (\n            <Blocker>\n                <Visualization {...props} />\n                {mode === 'edit' && <Cover data-test=\"edit-mode-cover\" />}\n            </Blocker>\n        );\n    };\n    extendStaticWrapperProps({ Wrapper, Visualization });\n    return Wrapper as ExtendedDashViz;\n};\n\nexport default withEditModeCover;\n","import * as React from 'react';\nimport { isColor } from '@splunk/visualizations-shared/colorUtils';\nimport IconPlaceholder, { shouldShowIconPlaceholder } from '../components/IconPlaceholder';\nimport { VizBehavior } from '../interfaces/VizBehavior';\nimport { DashboardVizProps } from '../interfaces/DashboardVizProps';\nimport { DataSource } from '../interfaces/DataSource';\nimport { ExtendedDashViz } from '../interfaces/ExtendedDashViz';\nimport { extendStaticWrapperProps } from '../utils/hocUtils';\n\ntype useIconPlaceholder = (\n    dataSources: { [name: string]: DataSource },\n    loading: boolean,\n    options: Record<string, unknown>\n) => boolean;\n\nconst withPlaceholder = (\n    Visualization: ExtendedDashViz,\n    useIconPlaceholder: useIconPlaceholder = shouldShowIconPlaceholder\n): ExtendedDashViz => {\n    const { config } = Visualization;\n    const { themes } = config;\n\n    const Wrapper = (props: DashboardVizProps): React.ReactElement<DashboardVizProps> => {\n        const { dataSources, loading, options, height, width } = props;\n\n        const showPlaceholder = useIconPlaceholder(dataSources, loading, options);\n        const bgColorFromTheme = isColor(options?.backgroundColor)\n            ? options?.backgroundColor\n            : themes?.defaultBackgroundColor?.(props);\n\n        if (config.supports.includes(VizBehavior.PLACEHOLDER) && showPlaceholder) {\n            return (\n                <IconPlaceholder\n                    data-test=\"icon-placeholder\"\n                    icon={config.icon}\n                    width={width}\n                    height={height}\n                    backgroundColor={bgColorFromTheme}\n                />\n            );\n        }\n\n        return <Visualization {...props} />;\n    };\n    extendStaticWrapperProps({ Wrapper, Visualization });\n    return Wrapper as ExtendedDashViz;\n};\n\nexport default withPlaceholder;\n","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"@splunk/visualizations-shared/colorConstants\");","module.exports = require(\"@babel/runtime/helpers/extends\");","module.exports = require(\"@splunk/visualizations-shared/domUtils\");","module.exports = require(\"@splunk/visualization-color-palettes/editors/PresetPalettes\");","import styled from 'styled-components';\n\nconst VizStyleWrapper = styled.div.attrs(({ dataTestKey }) => ({\n    'data-test': dataTestKey,\n}))`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n    background-color: ${props => props.backgroundColor};\n`;\n\nVizStyleWrapper.displayName = 'VizStyleWrapper';\n\nexport default VizStyleWrapper;\n","module.exports = require(\"lodash/pick\");","module.exports = require(\"lodash/isEmpty\");","import { _ } from '@splunk/ui-utils/i18n';\nimport { isDynamicOption } from '../utils/configUtils';\n\nconst StaticBackgroundColorEditor = {\n    label: _('Static Background'),\n    option: 'backgroundColor',\n    editor: 'editor.color',\n    showEditor: ({ options }) => !isDynamicOption(options.backgroundColor),\n};\n\nexport default StaticBackgroundColorEditor;\n","import { DefaultContext } from '../interfaces/DefaultContext';\n\nexport const defaultContext: DefaultContext = {\n    trendColorConfig: [\n        {\n            to: 0,\n            value: '#9E2520',\n        },\n        {\n            from: 0,\n            value: '#1C6B2D',\n        },\n    ],\n    majorColorConfig: [\n        { to: 20, value: '#D41F1F' },\n        { from: 20, to: 40, value: '#D94E17' },\n        { from: 40, to: 60, value: '#CBA700' },\n        { from: 60, to: 80, value: '#669922' },\n        { from: 80, value: '#118832' },\n    ],\n};\n","import { _ } from '@splunk/ui-utils/i18n';\nimport { isDynamicOption } from '../utils/configUtils';\n\nexport const getDynamicMajorColorEditor = ({ defaultContext, defaultPalettesConfig }) => ({\n    label: _('Dynamic Major Value'),\n    option: 'majorColor',\n    context: 'majorColorEditorConfig',\n    editor: 'editor.dynamicColor',\n    showEditor: ({ options }) => isDynamicOption(options.majorColor),\n    editorProps: {\n        labelPosition: 'left',\n        flyoutTitle: _('Dynamic Coloring: Major Value'),\n        formatters: [\n            {\n                label: _('Ranges'),\n                value: 'rangeValue',\n                defaults: {\n                    majorValue: defaultContext.majorColorConfig,\n                },\n            },\n            // TODO(fkurniawan): add back in when FormatterEditor supports full MatchValue editor\n            // {\n            //     label: _('Matches'),\n            //     value: 'matchValue',\n            //     defaults: {\n            //         majorValue: [{ match: 'foo', value: '#f00' }],\n            //     },\n            // },\n        ],\n        dataSelectors: [\n            {\n                label: _('Major Value'),\n                value: 'majorValue',\n            },\n        ],\n        defaultPalettesConfig,\n    },\n});\n","import { _ } from '@splunk/ui-utils/i18n';\nimport { isDynamicOption } from '../utils/configUtils';\n\nexport const getDynamicTrendColorEditor = ({ defaultContext, defaultPalettesConfig }) => ({\n    label: _('Dynamic Trend'),\n    option: 'trendColor',\n    context: 'trendColorEditorConfig',\n    editor: 'editor.dynamicColor',\n    showEditor: ({ options }) => isDynamicOption(options.trendColor),\n    editorProps: {\n        labelPosition: 'left',\n        flyoutTitle: _('Dynamic Coloring: Trend'),\n        formatters: [\n            {\n                label: _('Ranges'),\n                value: 'rangeValue',\n                defaults: {\n                    trendValue: defaultContext.trendColorConfig,\n                },\n            },\n        ],\n        dataSelectors: [\n            {\n                label: _('Trend'),\n                value: 'trendValue',\n            },\n        ],\n        defaultPalettesConfig,\n    },\n});\n","import { _ } from '@splunk/ui-utils/i18n';\nimport { isDynamicOption } from '../utils/configUtils';\n\nexport const getDynamicBackgroundColorEditor = ({ defaultContext, defaultPalettesConfig }) => ({\n    label: _('Dynamic Background'),\n    option: 'backgroundColor',\n    context: 'backgroundColorEditorConfig',\n    editor: 'editor.dynamicColor',\n    showEditor: ({ options }) => isDynamicOption(options.backgroundColor),\n    editorProps: {\n        labelPosition: 'left',\n        flyoutTitle: _('Dynamic Coloring: Background'),\n        formatters: [\n            {\n                label: _('Ranges'),\n                value: 'rangeValue',\n                defaults: {\n                    majorValue: defaultContext.majorColorConfig,\n                    trendValue: defaultContext.trendColorConfig,\n                },\n            },\n            // TODO(fkurniawan): add back in when FormatterEditor supports full MatchValue editor\n            // {\n            //     label: _('Matches'),\n            //     value: 'matchValue',\n            //     defaults: {\n            //         majorValue: [{ match: 'foo', value: '#f00' }],\n            //     },\n            // },\n        ],\n        dataSelectors: [\n            {\n                label: _('Major Value'),\n                value: 'majorValue',\n            },\n            {\n                label: _('Trend'),\n                value: 'trendValue',\n            },\n        ],\n        defaultPalettesConfig,\n    },\n});\n","import { _ } from '@splunk/ui-utils/i18n';\n\nconst StaticMajorAndTrendLayout = [\n    [\n        {\n            label: 'Unit Position', // todo: we need a new editor combining unit and position\n            option: 'unitPosition',\n            editor: 'editor.select',\n            editorProps: {\n                values: [\n                    { label: _('Before'), value: 'before' },\n                    { label: _('After'), value: 'after' },\n                ],\n            },\n            showEditor: ({ options }) => options.showValue || options.showValue === undefined,\n        },\n        {\n            label: _('Unit Label'),\n            option: 'unit',\n            editor: 'editor.text',\n            showEditor: ({ options }) => options.showValue || options.showValue === undefined,\n        },\n    ],\n    [\n        {\n            label: _('Precision'),\n            option: 'numberPrecision',\n            editor: 'editor.number',\n            editorProps: {\n                min: 0,\n                max: 20,\n            },\n            showEditor: ({ options }) => options.showValue || options.showValue === undefined,\n        },\n        {\n            label: _('Major Value Size (px)'),\n            option: 'majorFontSize',\n            editor: 'editor.number',\n            editorProps: {\n                min: 1,\n            },\n            placeholder: _('Auto'),\n            showEditor: ({ options }) => options.showValue || options.showValue === undefined,\n        },\n    ],\n    [\n        {\n            label: _('Trend Display'),\n            option: 'trendDisplay',\n            editor: 'editor.select',\n            editorProps: {\n                values: [\n                    { label: _('Percent'), value: 'percent' },\n                    { label: _('Absolute'), value: 'absolute' },\n                    { label: _('Off'), value: 'off' },\n                ],\n            },\n            showEditor: ({ options }) => options.showValue || options.showValue === undefined,\n        },\n        {\n            label: _('Trend Size (px)'),\n            option: 'trendFontSize',\n            editor: 'editor.number',\n            editorProps: {\n                min: 1,\n            },\n            placeholder: _('Auto'),\n            showEditor: ({ options }) => options.showValue || options.showValue === undefined,\n            isDisabled: ({ options }) => options.trendDisplay === 'off',\n        },\n    ],\n];\n\nexport default StaticMajorAndTrendLayout;\n","import { _ } from '@splunk/ui-utils/i18n';\nimport { isDynamicOption } from '../utils/configUtils';\n\nconst StaticMajorColorEditor = {\n    label: _('Static Major Value'),\n    option: 'majorColor',\n    editor: 'editor.color',\n    showEditor: ({ options }) => !isDynamicOption(options.majorColor),\n};\n\nexport default StaticMajorColorEditor;\n","import { _ } from '@splunk/ui-utils/i18n';\nimport { isDynamicOption } from '../utils/configUtils';\n\nconst StaticTrendColorEditor = {\n    label: _('Static Trend'),\n    option: 'trendColor',\n    editor: 'editor.color',\n    showEditor: ({ options }) => !isDynamicOption(options.trendColor),\n    isDisabled: ({ options }) => options.trendDisplay === 'off',\n};\n\nexport default StaticTrendColorEditor;\n","module.exports = require(\"@splunk/visualizations/SingleValueBasic\");","module.exports = require(\"@splunk/react-icons/Activity\");","module.exports = require(\"@splunk/react-icons/Clock\");","module.exports = require(\"@splunk/react-icons/Pencil\");","module.exports = require(\"@splunk/react-icons/Star\");","module.exports = require(\"@splunk/react-icons/Question\");","import * as React from 'react';\nimport RemoteIcon from '@splunk/visualizations-shared/RemoteIcon';\nimport { isRemoteIcon, isDataURI } from '@splunk/visualizations-shared/iconUtils';\nimport SingleValueIcon from './PureSingleValueIcon/SingleValueIcon';\nimport withDashboardViz from '../common/withDashboardViz';\nimport vizConfig from './config';\n\nexport const config = vizConfig;\nexport const PureSingleValueIcon = SingleValueIcon;\n\ninterface ComputeVizPropsInput {\n    hasEventHandlers: boolean;\n    mode: string;\n    icon: string;\n    onValueClick: (...args: any[]) => any;\n    IconComponent?;\n    themeFunc: (any) => any;\n}\n\ninterface ComputeVizPropsOutput {\n    IconComponent: null | React.Component<any, any>; // todo: should have RemoteIconProps and RemoteIconState generics\n    defaultFontColor: string;\n    defaultBlockFontColor: string;\n}\nexport const computeVizProps = ({\n    hasEventHandlers,\n    mode,\n    icon,\n    onValueClick,\n    IconComponent = null,\n    themeFunc,\n}: ComputeVizPropsInput): ComputeVizPropsOutput => {\n    // Click handler\n    if (icon && (isRemoteIcon(icon) || isDataURI(icon))) {\n        const onIconClick = hasEventHandlers && mode === 'view' ? onValueClick : null;\n        IconComponent = <RemoteIcon iconURL={icon} onIconClick={onIconClick} />;\n    }\n\n    return {\n        IconComponent,\n        defaultFontColor: themeFunc('defaultFontColor'),\n        defaultBlockFontColor: themeFunc('defaultBlockFontColor'),\n    };\n};\n\nconst viz = withDashboardViz({ ReactViz: SingleValueIcon, vizConfig, computeVizProps });\nexport const themes = vizConfig.themes;\nexport default viz;\n","module.exports = require(\"@splunk/visualizations-shared/RemoteIcon\");","module.exports = require(\"@splunk/visualizations-shared/iconUtils\");","import { _ } from '@splunk/ui-utils/i18n';\nimport { COLOR_OR_TOKEN_PATTERN, getPattern } from '@splunk/visualizations-shared/schemaUtils';\nimport { defaultPalettesConfig } from '@splunk/visualization-color-palettes/editors/PresetPalettes';\nimport pick from '@splunk/themes/pick';\nimport variables from '@splunk/themes/variables';\nimport { VizConfig } from '../common/interfaces/VizConfig';\nimport { DataContract } from '../common/interfaces/DataContract';\nimport { VizSize } from '../common/interfaces/VizSize';\nimport { defaultContext } from '../common/configContext/singleValueContext';\nimport StaticMajorAndTrendLayout from '../common/editorConfig/StaticMajorAndTrendLayout';\nimport StaticBackgroundColorEditor from '../common/editorConfig/StaticBackgroundColorEditor';\nimport StaticIconColorEditor from '../common/editorConfig/StaticIconColorEditor';\nimport StaticMajorColorEditor from '../common/editorConfig/StaticMajorColorEditor';\nimport StaticTrendColorEditor from '../common/editorConfig/StaticTrendColorEditor';\nimport { getDynamicMajorColorEditor } from '../common/editorConfig/DynamicMajorColorEditor';\nimport { getDynamicTrendColorEditor } from '../common/editorConfig/DynamicTrendColorEditor';\nimport { getDynamicBackgroundColorEditor } from '../common/editorConfig/DynamicBackgroundColorEditor';\nimport { OptionsSchema } from '../common/interfaces/OptionsSchema';\nimport { EditorConfig } from '../common/interfaces/Editor';\nimport { VizBehavior } from '../common/interfaces/VizBehavior';\nimport { PresetEntry, enhanceConfig, getInitialPreset, isDynamicOption } from '../common/utils/configUtils';\nimport { VizCategory } from '../common/interfaces/VizCategory';\n\nconst dataContract: DataContract = {\n    requiredDataSources: [\n        {\n            name: 'primary',\n            description: 'DataSource that powers the visualization',\n        },\n    ],\n    optionalDataSources: [],\n    initialRequestParams: {\n        primary: { offset: 0, count: 10000 },\n    },\n};\n\nconst size: VizSize = {\n    initialWidth: 250,\n    initialHeight: 250,\n};\n\nconst optionsSchema: OptionsSchema = {\n    backgroundColor: {\n        default: 'transparent',\n        description:\n            'Specify the color for the background. You may use a dataSource to apply the color. The hex value format should be “#FFFFFF”.',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    icon: { default: 'default', description: 'Specify an icon.', type: 'string' },\n    iconColor: {\n        default: null,\n        description:\n            'Specify the color for the icon. You may use a dataSource to apply the color. The hex value format should be “#FFFFFF”. The default for enterprise light is \"#000000\". The default for enterprise dark is \"#ffffff\". The default for prisma dark is \"rgba(255, 255, 255, 0.98)\".',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    iconOpacity: {\n        default: 1,\n        description: 'Specify the opacity for the icon using a number between 0 and 1 (inclusive).',\n        type: 'number',\n    },\n    iconPosition: {\n        default: 'before',\n        description: 'Specify where to display the icon in relation to the major value.',\n        type: 'string',\n    },\n    majorColor: {\n        default: '> themes.defaultFontColor',\n        description:\n            'Specify the color for the major value.  You may use a dataSource to apply the color. The hex value format should be “#FFFFFF”. The default for enterprise light is \"#000000\". The default for enterprise dark is \"#ffffff\". The default for prisma dark is \"rgba(255, 255, 255, 0.98)\".',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    majorFontSize: {\n        description:\n            'Specify the font size (px) for the major value. By default the major value font size is calculated dynamically based on the available space.',\n        type: 'number',\n    },\n    majorValue: {\n        default: '> primary|seriesByPrioritizedTypes(\"number\", \"string\", \"time\")|lastPoint()',\n        description: 'The major value to display in the visualization.',\n        type: ['string', 'number'],\n    },\n    majorValueField: {\n        default: '> majorValue | getField()',\n        description: 'The field name of major value.',\n        type: 'string',\n    },\n    numberPrecision: {\n        default: 0,\n        maximum: 20,\n        minimum: 0,\n        description:\n            'Specify the number of decimal places to display. For example, to display 3 decimal places, use a value of 3. The maximum value is 20.',\n        type: 'number',\n    },\n    shouldAbbreviateTrendValue: {\n        default: false,\n        description:\n            'Specify whether to abbreviate the trend value to 2 decimal points. A magnitude unit will be displayed.',\n        type: 'boolean',\n    },\n    shouldUseThousandSeparators: {\n        default: true,\n        description: 'Specify whether numeric values use commas as thousandths separators.',\n        type: 'boolean',\n    },\n    showValue: {\n        default: true,\n        description: 'Specify whether to enable or disable the value and trend indicator displays.',\n        type: 'boolean',\n    },\n    trendColor: {\n        default: '> themes.defaultFontColor',\n        description:\n            'Specify the color for the trend value. You may use a dataSource to apply the color. The hex value format should be “#FFFFFF”. The default for enterprise light is \"#000000\". The default for enterprise dark is \"#ffffff\". The default for prisma dark is \"rgba(255, 255, 255, 0.98)\".',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    trendDisplay: {\n        default: 'absolute',\n        description: 'Specify whether the trend value is displayed as a percentage or an absolute count.',\n        pattern: getPattern(['off', 'percent', 'absolute']),\n        type: 'string',\n    },\n    trendFontSize: {\n        description:\n            'Specify the font size (px) for the trend value. By default the trend value font size is calculated dynamically based on the available space.',\n        type: 'number',\n    },\n    trendValue: {\n        default: '> primary|seriesByPrioritizedTypes(\"number\", \"string\", \"time\")|delta(-2)', // todo: may need update delta method\n        description: 'The trend value to display in the visualization.',\n        type: 'number',\n    },\n    underLabel: { description: 'Specify the text that appears below the major value.', type: 'string' },\n    unit: {\n        description: 'Specify text to show next to the major value.',\n        type: 'string',\n    },\n    unitPosition: {\n        default: 'after',\n        description: 'Specify whether the unit text should appear before or after the major value.',\n        pattern: getPattern(['before', 'after']),\n        type: 'string',\n    },\n};\n\nconst basePresetContext = {\n    iconColorEditorConfig: undefined,\n    majorColorEditorConfig: undefined,\n    trendColorEditorConfig: undefined,\n    backgroundColorEditorConfig: undefined,\n};\n\nconst basePresetOptions = {\n    iconColor: undefined,\n    majorColor: undefined,\n    trendColor: undefined,\n    backgroundColor: undefined,\n};\n\nconst presets: PresetEntry[] = [\n    {\n        // dummy context variables to allow for resetting of unused context states\n        label: _('None'),\n        name: 'singleValueIcon.none',\n        value: {\n            context: { ...basePresetContext },\n            options: { ...basePresetOptions },\n        },\n    },\n    {\n        label: _('Icon'),\n        name: 'singleValueIcon.icon',\n        value: {\n            context: {\n                ...basePresetContext,\n                iconColorEditorConfig: defaultContext.majorColorConfig,\n            },\n            options: {\n                ...basePresetOptions,\n                iconColor: '> majorValue | rangeValue(iconColorEditorConfig)',\n            },\n        },\n    },\n    {\n        label: _('Major Value'),\n        name: 'singleValueIcon.majorValue',\n        value: {\n            context: {\n                ...basePresetContext,\n                majorColorEditorConfig: defaultContext.majorColorConfig,\n            },\n            options: {\n                ...basePresetOptions,\n                majorColor: '> majorValue | rangeValue(majorColorEditorConfig)',\n            },\n        },\n    },\n    {\n        label: _('Trend'),\n        name: 'singleValueIcon.trend',\n        value: {\n            context: {\n                ...basePresetContext,\n                trendColorEditorConfig: defaultContext.trendColorConfig,\n            },\n            options: {\n                ...basePresetOptions,\n                trendColor: '> trendValue | rangeValue(trendColorEditorConfig)',\n            },\n        },\n    },\n    {\n        label: _('Icon & Major Value'),\n        name: 'singleValueIcon.iconAndMajorValue',\n        value: {\n            context: {\n                ...basePresetContext,\n                iconColorEditorConfig: defaultContext.majorColorConfig,\n                majorColorEditorConfig: defaultContext.majorColorConfig,\n            },\n            options: {\n                ...basePresetOptions,\n                iconColor: '> majorValue | rangeValue(iconColorEditorConfig)',\n                majorColor: '> majorValue | rangeValue(majorColorEditorConfig)',\n            },\n        },\n    },\n    {\n        label: _('Background'),\n        name: 'singleValueIcon.background',\n        value: {\n            context: {\n                ...basePresetContext,\n                backgroundColorEditorConfig: defaultContext.majorColorConfig,\n            },\n            options: {\n                ...basePresetOptions,\n                backgroundColor: '> majorValue | rangeValue(backgroundColorEditorConfig)',\n            },\n        },\n    },\n];\n\n/**\n * TODO\n * common theme variables such as enterprise.defaultFontColor\n * that are repeated in multiple viz config themes should be DRYd up.\n */\nconst themes = {\n    defaultFontColor: props =>\n        pick({\n            enterprise: {\n                dark: variables.textColor(props),\n                light: variables.gray20(props),\n            },\n            prisma: variables.contentColorActive(props),\n        })(props),\n    defaultBlockFontColor: props =>\n        pick({\n            enterprise: variables.white(props),\n            prisma: variables.contentColorActive(props),\n        })(props),\n};\n\nconst editorConfig: EditorConfig[] = [\n    {\n        label: _('Major Value & Trend'),\n        layout: [\n            [\n                {\n                    label: _('Enable'),\n                    option: 'showValue',\n                    editor: 'editor.toggle',\n                },\n            ],\n            ...StaticMajorAndTrendLayout,\n        ],\n    },\n    {\n        label: _('Coloring'),\n        layout: [\n            [\n                {\n                    label: 'Dynamic Elements',\n                    key: 'presetSelector',\n                    editor: 'editor.presetSelector',\n                    editorProps: {\n                        presets,\n                        value: ({ context, options }) => {\n                            const initialPreset = getInitialPreset(context, options, presets);\n                            return (initialPreset && initialPreset.label) || null;\n                        },\n                    },\n                },\n            ],\n            StaticIconColorEditor,\n            [\n                {\n                    label: _('Dynamic Icon'),\n                    option: 'iconColor',\n                    context: 'iconColorEditorConfig',\n                    editor: 'editor.dynamicColor',\n                    showEditor: ({ options }) => isDynamicOption(options.iconColor),\n                    editorProps: {\n                        labelPosition: 'left',\n                        flyoutTitle: 'Dynamic Coloring: Icon',\n                        formatters: [\n                            {\n                                label: _('Ranges'),\n                                value: 'rangeValue',\n                                defaults: {\n                                    trendValue: defaultContext.trendColorConfig,\n                                    majorValue: defaultContext.majorColorConfig,\n                                },\n                            },\n                            // TODO(fkurniawan): add back in when FormatterEditor supports full MatchValue editor\n                            // {\n                            //     label: _('Matches'),\n                            //     value: 'matchValue',\n                            //     defaults: {\n                            //         majorValue: [{ match: 'foo', value: '#f00' }],\n                            //     },\n                            // },\n                        ],\n                        dataSelectors: [\n                            {\n                                label: _('Major Value'),\n                                value: 'majorValue',\n                            },\n                            {\n                                label: _('Trend'),\n                                value: 'trendValue',\n                            },\n                        ],\n                        defaultPalettesConfig: defaultPalettesConfig,\n                    },\n                },\n            ],\n            [\n                {\n                    ...StaticMajorColorEditor,\n                    editorProps: {\n                        labelPosition: 'left',\n                        themes,\n                    },\n                },\n            ],\n            [getDynamicMajorColorEditor({ defaultContext, defaultPalettesConfig })],\n            [\n                {\n                    ...StaticTrendColorEditor,\n                    editorProps: {\n                        labelPosition: 'left',\n                        themes,\n                    },\n                },\n            ],\n            [getDynamicTrendColorEditor({ defaultContext, defaultPalettesConfig })],\n            [\n                {\n                    ...StaticBackgroundColorEditor,\n                    editorProps: {\n                        labelPosition: 'left',\n                        themes,\n                    },\n                },\n            ],\n            [getDynamicBackgroundColorEditor({ defaultContext, defaultPalettesConfig })],\n        ],\n    },\n];\n\n/**\n * visualization configuration\n */\nconst config: VizConfig = {\n    /**\n     * unique viz key\n     */\n    key: 'splunk.singlevalueicon',\n    /**\n     * viz name\n     */\n    name: 'Single Value Icon',\n    category: VizCategory.SINGLE_VALUE,\n    /**\n     * viz icon\n     */\n    icon: null,\n    dataContract,\n    size,\n    defaultContext,\n    optionsSchema,\n    editorConfig,\n    events: {\n        'value.click': {\n            description: 'trigger when user clicks major value or icon',\n            payloadKeys: ['majorValue', 'trendValue', 'icon'],\n        },\n    },\n    supports: [VizBehavior.DYNAMIC_OPTIONS, VizBehavior.EVENTS],\n    themes,\n};\n\nexport default enhanceConfig(config);\n","import { _ } from '@splunk/ui-utils/i18n';\nimport { COLOR_EDITOR_PALETTE } from '@splunk/visualizations-shared/colorConstants';\nimport { isDynamicOption } from '../utils/configUtils';\n\nconst StaticIconColorEditor = [\n    {\n        label: _('Static Icon'),\n        option: 'iconColor',\n        editor: 'editor.color',\n        showEditor: ({ options }) => !isDynamicOption(options.iconColor),\n        editorProps: {\n            labelPosition: 'left',\n            value: null,\n            palette: [null, ...COLOR_EDITOR_PALETTE],\n        },\n    },\n];\n\nexport default StaticIconColorEditor;\n","// Todo: this will be replaced by IconLibrary.Registry\nimport Activity from '@splunk/react-icons/Activity';\nimport Clock from '@splunk/react-icons/Clock';\nimport Pencil from '@splunk/react-icons/Pencil';\nimport Star from '@splunk/react-icons/Star';\nimport Question from '@splunk/react-icons/Question';\nimport {\n    hasBackground,\n    getDefaultColorWithBg,\n    getFormattedColor,\n} from '../../../common/utils/singleValueUtils';\n\nexport const ICON_POSITIONS = ['before', 'after', 'top', 'below'];\nexport const ICON_HORIZONTAL_RATIO = 0.4;\nexport const ICON_VERTICAL_RATIO = 0.2;\nexport const iconMap = {\n    activity: Activity,\n    clock: Clock,\n    pencil: Pencil,\n    star: Star,\n    default: Question,\n};\n\n/*\n * get icon from icon map\n * @param {String} key\n * @return {Icon} icon component from icon map\n */\nexport const getIcon = key => iconMap[key.toLowerCase()] || iconMap.default;\n\n/*\n * @method isValidPosition\n * @param {String} iconPosition\n * @returns {Bool}\n */\nexport const isValidPosition = iconPosition => ICON_POSITIONS.indexOf(iconPosition) > -1;\n\n/*\n * @method isHorizontal\n * @param {String} iconPosition\n * @returns {Bool}\n */\nexport const isHorizontal = iconPosition => iconPosition === 'before' || iconPosition === 'after';\n\n/*\n * @method getIconWidth\n * @param {Object} props\n * @param {Bool} props.showHorizontal\n * @param {Number} props.width\n * @returns {Number} iconWidth\n */\nexport const getIconWidth = ({ showHorizontal, width }) =>\n    showHorizontal ? width * ICON_HORIZONTAL_RATIO : width * ICON_VERTICAL_RATIO;\n\n/*\n * @method getIconHeight\n * @param {Object} props\n * @param {Bool} props.showHorizontal\n * @param {Number} props.height\n * @returns {Number} iconHeight\n */\nexport const getIconHeight = ({ showHorizontal, height }) => (showHorizontal ? height : height * 0.25);\n\n/*\n * @method getIconFontSize\n * @param {Object} props\n * @param {Bool} props.showValue\n * @param {Number} props.majorTextFontSize\n * @param {Number} props.iconWidth\n * @returns {Number} iconFontSize\n */\nexport const getIconFontSize = ({ showValue, majorTextFontSize, iconWidth }) =>\n    showValue ? majorTextFontSize * 0.5 : iconWidth;\n\n/*\n * @method getSVGDimension\n * @param {Object} props\n * @param {Bool} props.showValue\n * @param {Number} props.containerDimension\n * @param {Number} props.iconDimension\n * @param {Number} props.ratio\n * @returns {Number} svg icon dimension\n */\nexport const getSVGDimension = ({ showValue, containerDimension, iconDimension, ratio }) =>\n    showValue ? iconDimension * ratio : containerDimension;\n\n/*\n * @method getValuesWidth\n * @param {Object} props\n * @param {Bool} props.showHorizontal\n * @param {Number} props.width\n * @returns {Number} valuesWidth\n */\nexport const getValuesWidth = ({ showHorizontal, width }) =>\n    showHorizontal ? width * (1 - ICON_HORIZONTAL_RATIO) : width;\n\n/*\n * @method getValuesHeight\n * @param {Object} props\n * @param {Bool} props.showHorizontal\n * @param {Number} props.height\n * @param {Number} props.iconHeight\n * @returns {Number} valuesHeight\n */\nexport const getValuesHeight = ({ showHorizontal, height, iconHeight }) =>\n    showHorizontal ? height : height - iconHeight;\n\n/*\n * getIconColor\n * @param {Object} props\n * @param {String} props.iconColor\n * @param {String} props.backgroundColor\n * @param {String} props.defaultFontColor\n * @param {String} props.defaultBlockFontColor\n * @returns {String} icon color\n */\nexport const getIconColor = ({ iconColor, backgroundColor, defaultFontColor, defaultBlockFontColor }) => {\n    if (hasBackground(backgroundColor) && !iconColor) {\n        return getDefaultColorWithBg({\n            backgroundColor,\n            defaultFontColor,\n            defaultBlockFontColor,\n        });\n    }\n\n    return getFormattedColor(iconColor, defaultFontColor);\n};\n","import React from 'react';\nimport T from 'prop-types';\nimport styled from 'styled-components';\nimport { getIcon } from './utils/iconUtils';\n\nconst StyledIconContainer = styled.div.attrs(() => ({\n    'data-test': 'single-value-icon-container',\n}))`\n    margin: 0 3%;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    font-size: ${props => props.fontSize}px;\n    height: ${props => props.height}px;\n    color: ${props => props.color};\n    opacity: ${props => props.opacity || 1.0};\n    cursor: ${props => (props.onClick ? 'pointer' : 'inherit')};\n`;\n\nconst IconContainer = ({ width, height, fontSize, color, opacity, icon, IconComponent, onIconClick }) => {\n    const onClick = typeof onIconClick === 'function' ? onIconClick : undefined;\n    if (IconComponent) {\n        return (\n            <StyledIconContainer width={width} height={height} onClick={onClick}>\n                {IconComponent}\n            </StyledIconContainer>\n        );\n    }\n\n    // todo: remove it after we have proper icon provider\n    const Icon = getIcon(icon);\n    return (\n        <StyledIconContainer\n            width={width}\n            height={height}\n            fontSize={fontSize}\n            color={color}\n            opacity={opacity}\n            onClick={onClick}\n        >\n            <Icon />\n        </StyledIconContainer>\n    );\n};\n\nIconContainer.propTypes = {\n    width: T.number.isRequired,\n    height: T.number.isRequired,\n    fontSize: T.number.isRequired,\n    icon: T.string.isRequired,\n    IconComponent: T.node,\n    color: T.string,\n    opacity: T.number,\n    onIconClick: T.func,\n};\n\nexport default IconContainer;\n","import React from 'react';\nimport T from 'prop-types';\nimport styled from 'styled-components';\nimport SingleValueBasic from '@splunk/visualizations/SingleValueBasic';\nimport IconContainer from './IconContainer';\nimport { isHorizontal } from './utils/iconUtils';\n\nconst Column = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    height: 100%;\n    width: 100%;\n`;\n\nconst IconRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    height: 100%;\n`;\n\nconst IconColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    height: 100%;\n`;\n\nconst SingleValueIconLayout = ({ ...props }) => {\n    const {\n        majorColor,\n        majorText,\n        majorTextFontSize,\n        majorValueTitle,\n        trendColor,\n        trendText,\n        trendTextFontSize,\n        showTrendIndicator,\n        unit,\n        unitPosition,\n        underLabel,\n        underLabelFontSize,\n        underLabelColor,\n        onValueClick,\n        iconWidth,\n        iconHeight,\n        icon,\n        iconColor,\n        iconOpacity,\n        iconPosition,\n        iconFontSize,\n        showValue,\n        svgIconComponent,\n    } = props;\n\n    const iconContainer = (\n        <IconContainer\n            width={iconWidth}\n            height={iconHeight}\n            fontSize={iconFontSize}\n            color={iconColor}\n            opacity={iconOpacity}\n            icon={icon}\n            IconComponent={svgIconComponent}\n            onIconClick={onValueClick}\n        />\n    );\n\n    const singleValueBasic = showValue ? (\n        <SingleValueBasic\n            majorColor={majorColor}\n            majorText={majorText}\n            majorTextFontSize={majorTextFontSize}\n            majorValueTitle={majorValueTitle}\n            trendColor={trendColor}\n            trendText={trendText}\n            trendTextFontSize={trendTextFontSize}\n            showTrendIndicator={showTrendIndicator}\n            unit={unit}\n            unitPosition={unitPosition}\n            underLabel={underLabel}\n            underLabelFontSize={underLabelFontSize}\n            underLabelColor={underLabelColor}\n            onValueClick={onValueClick}\n        />\n    ) : null;\n\n    let iconLayout = null;\n    const showHorizontal = isHorizontal(iconPosition);\n    if (showHorizontal) {\n        iconLayout = (\n            <IconRow>\n                {iconPosition === 'before' && iconContainer}\n                {singleValueBasic}\n                {iconPosition === 'after' && iconContainer}\n            </IconRow>\n        );\n    } else {\n        iconLayout = (\n            <IconColumn>\n                {iconPosition === 'top' && iconContainer}\n                {singleValueBasic}\n                {iconPosition === 'below' && iconContainer}\n            </IconColumn>\n        );\n    }\n\n    return <Column>{iconLayout}</Column>;\n};\n\nSingleValueIconLayout.propTypes = {\n    ...SingleValueBasic.propTypes,\n    iconWidth: T.number,\n    iconHeight: T.number,\n    icon: T.string,\n    iconPosition: T.oneOf(['before', 'after', 'top', 'below']),\n    iconColor: T.string,\n    iconOpacity: T.number,\n    iconFontSize: T.number,\n    showValue: T.bool,\n    svgIconComponent: T.element,\n};\n\nexport default SingleValueIconLayout;\n","import React, { useCallback } from 'react';\nimport T from 'prop-types';\nimport styled from 'styled-components';\nimport pick from 'lodash/pick';\nimport isEmpty from 'lodash/isEmpty';\nimport { toDimension } from '@splunk/visualizations-shared/style';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport SizeAwareWrapper from '@splunk/visualizations-shared/SizeAwareWrapper';\nimport Message from '@splunk/visualizations-shared/Message';\nimport VizStyleWrapper from '../../common/components/VizStyleWrapper';\nimport SingleValueIconLayout from './SingleValueIconLayout';\nimport {\n    computeColors,\n    computeSingleValueContent,\n    getUnderLabel,\n    getUnderLabelHeight,\n    shouldShowTrend,\n    handleValueClickCallback,\n} from '../../common/utils/singleValueUtils';\nimport {\n    isValidPosition,\n    isHorizontal,\n    getIconWidth,\n    getIconHeight,\n    getIconFontSize,\n    getSVGDimension,\n    getValuesWidth,\n    getValuesHeight,\n    getIconColor,\n} from './utils/iconUtils';\n\nconst Container = styled.div`\n    overflow: hidden;\n    ${props => toDimension(pick(props, ['width', 'height']))};\n`;\n\nconst SingleValueIcon = ({ ...props }) => {\n    const {\n        width,\n        height = 250,\n        style,\n        majorFontSize,\n        majorValue,\n        majorValueField,\n        trendValue,\n        trendFontSize,\n        unitPosition,\n        numberPrecision,\n        shouldUseThousandSeparators,\n        shouldAbbreviateTrendValue,\n        icon,\n        iconOpacity,\n        IconComponent,\n        noDataSources,\n        noResult,\n        onValueClick,\n        defaultFontColor,\n        defaultBlockFontColor,\n    } = props;\n\n    const defaultColors = { defaultBlockFontColor, defaultFontColor };\n    const { backgroundColor, majorColor, trendColor, underLabelColor } = computeColors(props, defaultColors);\n    const iconColor = getIconColor({\n        iconColor: props.iconColor,\n        backgroundColor,\n        defaultFontColor: defaultColors.defaultFontColor,\n        defaultBlockFontColor: defaultColors.defaultBlockFontColor,\n    });\n\n    const handleValueClick = useCallback(\n        ev => handleValueClickCallback(ev, majorValue, majorValueField, trendValue, onValueClick),\n        [onValueClick, majorValue, majorValueField, trendValue]\n    );\n\n    const renderVisualization = ({ width: containerWidth, height: containerHeight }) => {\n        if ((noDataSources || noResult) && !IconComponent) {\n            return (\n                <Message\n                    width={containerWidth}\n                    height={containerHeight}\n                    message={_('No Icon')}\n                    level=\"warning\"\n                />\n            );\n        }\n\n        let IconLayout = null;\n        if ((noDataSources || noResult) && IconComponent) {\n            IconLayout = React.cloneElement(IconComponent, {\n                width: containerWidth,\n                height: containerHeight,\n                color: props.iconColor,\n                opacity: iconOpacity,\n            });\n        } else {\n            // will update later based on text size\n            let { showValue = true, trendDisplay, unit, underLabel, iconPosition } = props;\n\n            if (!isValidPosition(iconPosition)) {\n                iconPosition = 'before';\n            }\n            const showHorizontal = isHorizontal(iconPosition);\n            const iconWidth = getIconWidth({ showHorizontal, width: containerWidth });\n            const iconHeight = getIconHeight({ showHorizontal, height: containerHeight });\n\n            let svgIconComponent = null;\n            if (IconComponent) {\n                svgIconComponent = React.cloneElement(IconComponent, {\n                    width: getSVGDimension({\n                        showValue,\n                        containerDimension: containerWidth,\n                        iconDimension: iconWidth,\n                        ratio: 0.25,\n                    }),\n                    height: getSVGDimension({\n                        showValue,\n                        containerDimension: containerHeight,\n                        iconDimension: iconHeight,\n                        ratio: 0.25,\n                    }),\n                    color: props.iconColor,\n                    opacity: iconOpacity,\n                });\n            }\n\n            // claculate major and trend text and font size\n            const contentWidth = getValuesWidth({ showHorizontal, width: containerWidth });\n            const contentHeight = getValuesHeight({ showHorizontal, height: containerHeight, iconHeight });\n            const toRemoveList = [\n                { key: 'underLabel', value: '' },\n                { key: 'trendDisplay', value: 'off' },\n                { key: 'unit', value: '' },\n                { key: 'showValue', value: false },\n            ];\n            const {\n                majorText,\n                trendText,\n                majorTextFontSize,\n                trendTextFontSize,\n                majorValueTitle,\n                smallVizProps,\n            } = computeSingleValueContent({\n                majorValue,\n                trendValue,\n                majorFontSize,\n                trendFontSize,\n                trendDisplay,\n                contentWidth,\n                contentHeight,\n                containerWidth,\n                containerHeight,\n                unit,\n                numberPrecision,\n                shouldUseThousandSeparators,\n                shouldAbbreviateTrendValue,\n                toRemoveList,\n            });\n            if (!isEmpty(smallVizProps)) {\n                ({ showValue, trendDisplay, underLabel, unit } = smallVizProps);\n            }\n\n            const iconFontSize = getIconFontSize({ showValue, majorTextFontSize, iconWidth });\n\n            // calculate underlabel size\n            const underLabelHeight = getUnderLabelHeight(containerHeight * 0.1);\n            const underLabelFontSize = getUnderLabel({\n                underLabel,\n                width: contentWidth,\n                height: underLabelHeight,\n            });\n            IconLayout = (\n                <SingleValueIconLayout\n                    data-test=\"SingleValueIconLayout\"\n                    majorColor={majorColor}\n                    majorText={majorText}\n                    majorTextFontSize={majorTextFontSize}\n                    majorValueTitle={majorValueTitle}\n                    trendColor={trendColor}\n                    trendText={trendText}\n                    trendTextFontSize={trendTextFontSize}\n                    showTrendIndicator={shouldShowTrend(trendDisplay)}\n                    unit={unit}\n                    unitPosition={unitPosition}\n                    underLabel={underLabel}\n                    underLabelFontSize={underLabelFontSize}\n                    underLabelColor={underLabelColor}\n                    showValue={showValue}\n                    iconWidth={iconWidth}\n                    iconHeight={iconHeight}\n                    iconFontSize={iconFontSize}\n                    iconColor={iconColor}\n                    iconOpacity={iconOpacity}\n                    iconPosition={iconPosition}\n                    icon={icon}\n                    svgIconComponent={svgIconComponent}\n                    onValueClick={handleValueClick}\n                />\n            );\n        }\n\n        return (\n            <VizStyleWrapper\n                backgroundColor={backgroundColor}\n                style={style}\n                dataTestKey=\"SingleValueIconWrapper\"\n            >\n                {IconLayout}\n            </VizStyleWrapper>\n        );\n    };\n\n    return (\n        <Container width={width} height={height}>\n            <SizeAwareWrapper>\n                {containerDimension => renderVisualization(containerDimension)}\n            </SizeAwareWrapper>\n        </Container>\n    );\n};\n\nSingleValueIcon.propTypes = {\n    width: T.oneOfType([T.string, T.number]),\n    height: T.oneOfType([T.string, T.number]),\n    style: T.object,\n    majorValue: T.oneOfType([T.string, T.number]),\n    majorValueField: T.string,\n    majorColor: T.string,\n    majorFontSize: T.number,\n    trendColor: T.string,\n    trendValue: T.oneOfType([T.string, T.number]),\n    trendFontSize: T.number,\n    trendDisplay: T.oneOf(['absolute', 'percent', 'off']),\n    shouldAbbreviateTrendValue: T.bool,\n    backgroundColor: T.string,\n    unit: T.string,\n    unitPosition: T.string,\n    underLabel: T.string,\n    numberPrecision: T.number,\n    shouldUseThousandSeparators: T.bool,\n    icon: T.string,\n    iconPosition: T.oneOf(['before', 'after', 'top', 'below']),\n    iconColor: T.string,\n    iconOpacity: T.number,\n    showValue: T.bool,\n    IconComponent: T.element,\n    noDataSources: T.bool,\n    noResult: T.bool,\n    onValueClick: T.func,\n    defaultFontColor: T.string,\n    defaultBlockFontColor: T.string,\n};\n\nSingleValueIcon.defaultProps = {\n    width: '100%',\n    height: 250,\n    majorValue: 'N/A',\n    majorValueField: '',\n    trendDisplay: 'absolute',\n    shouldAbbreviateTrendValue: false,\n    numberPrecision: 0,\n    shouldUseThousandSeparators: true,\n    unitPosition: 'after',\n    icon: 'default',\n    iconPosition: 'before',\n    iconOpacity: 1,\n    showValue: true,\n    noDataSources: false,\n    noResult: false,\n    onValueClick: () => {},\n};\n\nexport default SingleValueIcon;\n"],"sourceRoot":""}