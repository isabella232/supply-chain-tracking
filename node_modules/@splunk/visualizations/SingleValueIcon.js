/*!
 * Copyright © 2018 Splunk Inc.
 * SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or
 * in part without a valid written license from Splunk Inc. is PROHIBITED.
 */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 233);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = require("prop-types");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = require("lodash");

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = require("@splunk/ui-utils/i18n");

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = require("styled-components");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VizBehavior = void 0;
var VizBehavior;

(function (VizBehavior) {
  /**
   * Dynamic Options Behavior.
   * This allows visualization options to be powered by data
   *
   * **Example**
   *
   * sparklineValues: ">primary|seriesByIndex(0)"
   * would configure sparklineValues with an array of data points
   * coming from the first series in the primary datasource
   *
   */
  VizBehavior["DYNAMIC_OPTIONS"] = "dynamic-options";
  VizBehavior["EVENTS"] = "events";
  /**
   * Placeholder behavior: visualization will display a placeholder rather than fail if any of the `requiredProps` is
   * missing.
   * @type {string}
   */

  VizBehavior["PLACEHOLDER"] = "placeholder";
  VizBehavior["PAGE_AND_SORT"] = "page-and-sort";
})(VizBehavior = exports.VizBehavior || (exports.VizBehavior = {}));

/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/defineProperty");

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof = __webpack_require__(22);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deepMergeWithArrayOverrides = exports.extendStaticWrapperProps = void 0;

var lodash_1 = __webpack_require__(2);
/**
 * @method extendStaticWrapperProps
 * @param {Object} props
 * @param {DashboardVizType} props.Wrapper
 * @param {DashboardVizType} props.Visualization
 */


var extendStaticWrapperProps = function extendStaticWrapperProps(_ref) {
  var Wrapper = _ref.Wrapper,
      Visualization = _ref.Visualization;
  var extendProperties = ['propTypes', 'defaultProps', 'config'];
  extendProperties.forEach(function (prop) {
    if (Visualization[prop]) {
      Wrapper[prop] = Visualization[prop];
    }
  });
};

exports.extendStaticWrapperProps = extendStaticWrapperProps;
/**
 * helper to deeply merge objects while preserving arrays in earlier source objects
 * deeply nested primitive keys are merged similarly to lodash's defaultsDeep, while keys with arrays will be preserved if already present in the resultant merged object
 * this prevents default arrays from appending values to user-defined arrays (this occurs if the default array is longer than the user-defined one)
 *
 * @method deepMergeWithArrayOverrides
 * @param {Object} initial - target object to merge values into
 * @param {Object[]} sources - other default options to be merged into the resultant object if no explicit value is provided, with earlier args taking precedence over later ones
 *
 * @returns {Object}
 */

var deepMergeWithArrayOverrides = function deepMergeWithArrayOverrides(initial) {
  var clone = lodash_1.cloneDeep(initial);

  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    sources[_key - 1] = arguments[_key];
  }

  sources.forEach(function (sourceToApply) {
    Object.keys(sourceToApply).forEach(function (sourceKey) {
      if (!clone.hasOwnProperty(sourceKey)) {
        clone[sourceKey] = lodash_1.cloneDeep(sourceToApply[sourceKey]);
      } // object merging excluding arrays


      if (clone[sourceKey] && _typeof(clone[sourceKey]) === 'object' && !Array.isArray(clone[sourceKey]) && _typeof(sourceToApply[sourceKey]) === 'object') {
        clone[sourceKey] = exports.deepMergeWithArrayOverrides(clone[sourceKey], sourceToApply[sourceKey]);
      }
    });
  });
  return clone;
};

exports.deepMergeWithArrayOverrides = deepMergeWithArrayOverrides;

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _defineProperty = __webpack_require__(6);

var __rest = this && this.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generatePrecisionValues = exports.getInitialPreset = exports.isDynamicOption = exports.enhanceOptionsSchemaWithDynamicOptions = exports.enhanceConfig = void 0;

var lodash_1 = __webpack_require__(2);

var schemaUtils_1 = __webpack_require__(14);

var VizBehavior_1 = __webpack_require__(5);

var dynamicOptionsDSLType = {
  type: 'string',
  pattern: schemaUtils_1.DYNAMIC_OPTIONS_DSL_PATTERN
};
/**
 * Helper function to extend an options schema with dynamic options DSL
 * @param optionsSchema a visualization's options schema
 * @returns an updated options schema that additionally allows strings starting with > for each option
 */

function enhanceOptionsSchemaWithDynamicOptions(optionsSchema) {
  var enhancedOptionsSchema = {};
  Object.keys(optionsSchema).forEach(function (key) {
    var _a = optionsSchema[key],
        title = _a.title,
        description = _a.description,
        readOnly = _a.readOnly,
        writeOnly = _a.writeOnly,
        examples = _a.examples,
        defaultValue = _a.default,
        type = _a.type,
        properties = _a.properties,
        patternProperties = _a.patternProperties,
        remainingSchemaEntry = __rest(_a, ["title", "description", "readOnly", "writeOnly", "examples", "default", "type", "properties", "patternProperties"]);

    var annotations = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, title !== undefined && {
      title: title
    }), description !== undefined && {
      description: description
    }), readOnly !== undefined && {
      readOnly: readOnly
    }), writeOnly !== undefined && {
      writeOnly: writeOnly
    }), examples !== undefined && {
      examples: examples
    }), defaultValue !== undefined && {
      default: defaultValue
    });

    if (type === 'object') {
      enhancedOptionsSchema[key] = Object.assign(Object.assign(Object.assign(Object.assign({}, remainingSchemaEntry), annotations), {
        type: type
      }), properties && {
        properties: enhanceOptionsSchemaWithDynamicOptions(properties)
      });

      if (patternProperties) {
        var enhancedPatternProperties = {};
        Object.keys(patternProperties).forEach(function (key) {
          enhancedPatternProperties = Object.assign(Object.assign({}, enhancedPatternProperties), enhanceOptionsSchemaWithDynamicOptions(_defineProperty({}, key, patternProperties[key])));
        });
        enhancedOptionsSchema[key].patternProperties = enhancedPatternProperties;
      }
    } else {
      enhancedOptionsSchema[key] = Object.assign(Object.assign({}, annotations), {
        anyOf: [Object.assign(Object.assign({}, type !== undefined && {
          type: type
        }), remainingSchemaEntry), dynamicOptionsDSLType]
      });
    }
  });
  return enhancedOptionsSchema;
}

exports.enhanceOptionsSchemaWithDynamicOptions = enhanceOptionsSchemaWithDynamicOptions;
/**
 * Helper function to enhance a Visualization Config as needed based on behaviors specified in supports block
 * @param vizConfig a Visualization Config
 * @returns an enhanced Visualization Config containing updated config entries based on behaviors it supports
 */

function enhanceConfig(vizConfig) {
  var enhancedConfig = vizConfig;

  if (vizConfig.supports.indexOf(VizBehavior_1.VizBehavior.DYNAMIC_OPTIONS) !== -1) {
    enhancedConfig.optionsSchema = enhanceOptionsSchemaWithDynamicOptions(vizConfig.optionsSchema);
  }

  return enhancedConfig;
}

exports.enhanceConfig = enhanceConfig;

function isDynamicOption(option) {
  return option && typeof option === 'string' && option.trim().startsWith('>') || false;
}

exports.isDynamicOption = isDynamicOption; // private helpers to improve readability of getInitialPreset
// this shouldn't be tested since this util isn't something that we expect to use outside of getInitialPreset

/**
 * this checks to make sure that all values within vizContext are compatible with the given preset's context to determine the initialPreset
 * if a preset has explicitly specified a key as being undefined, the vizContext must also has that key as undefined, or else this CANNOT be the initialPreset
 * the inverse is true; if a preset has key is NOT undefined, it must also be NOT undefined in the corresponding vizContext
 * the internal config contents are irrelevant (as the user could customize them in source), just as long as the presence of `undefined`s match up
 *
 * Since the presetConfigs have explicit undefined keys to override the existing config, we need to explicitly check the undefined values
 */

function hasCompatibleContexts(vizContext, presetContext) {
  var presetContextKeys = Object.keys(presetContext);
  return presetContextKeys.every(function (contextKey) {
    return presetContext[contextKey] === undefined && vizContext[contextKey] === undefined || presetContext[contextKey] !== undefined && vizContext[contextKey] !== undefined;
  });
}
/**
 * Checks to make sure that dynamic (non-dynamic) options in a given preset are also dynamic (non-dynamic) in the vizOptions
 */


function hasCompatibleOptions(vizOptions, presetOptions) {
  var presetOptionKeys = Object.keys(presetOptions);
  return presetOptionKeys.every(function (optionKey) {
    return isDynamicOption(presetOptions[optionKey]) === isDynamicOption(vizOptions[optionKey]);
  });
}
/**
 * Evaluates whether there is an initialPreset that fits the current state of vizContext + vizOptions
 * This function ignores extraneous vizOptions or vizContext keys, as they could be outside the scope of what the preset is intended to configure
 *
 * @param {Object} vizContext - the current vizContext definition
 * @param {Object} vizOptions - the current vizOptions definition
 * @param {PresetEntry[]} presets - the list of presets, one of which can be considered an initialPreset
 */


function getInitialPreset(vizContext, vizOptions, presets) {
  return presets.find(function (preset) {
    var presetContext = lodash_1.get(preset, ['value', 'context'], {});
    var presetOptions = lodash_1.get(preset, ['value', 'options'], {});
    var presetContextKeys = Object.keys(presetContext);
    var presetOptionKeys = Object.keys(presetOptions); // all presets have to explicitly specify which options to reset (i.e. need explicitly undefined keys)
    // if not, then the preset is invalid in config.ts

    if (presetContextKeys.length === 0 || presetOptionKeys.length === 0) return false;
    return hasCompatibleContexts(vizContext, presetContext) && hasCompatibleOptions(vizOptions, presetOptions);
  });
}

exports.getInitialPreset = getInitialPreset;
/**
 * generates number precision values for a Select editor
 *
 * @param {Number} numPrecisionValues - number of integer precision values to generate
 * @returns {{ label: string; value; string  }[]} array of { label, value } tuples
 */

function generatePrecisionValues(numPrecisionValues) {
  return lodash_1.range(0, numPrecisionValues + 1).map(function (i) {
    return {
      label: "".concat(i, " (0").concat(i > 0 ? '.' : '').concat('0'.repeat(i), ")"),
      value: i
    };
  });
}

exports.generatePrecisionValues = generatePrecisionValues;

/***/ }),
/* 9 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/Message");

/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/classCallCheck");

/***/ }),
/* 11 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/colorUtils");

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __webpack_require__(1);

var styled_components_1 = __webpack_require__(4);

var SizeAwareWrapper_1 = __webpack_require__(17);

var style_1 = __webpack_require__(13);

var colorUtils_1 = __webpack_require__(11);

var Item = styled_components_1.default.div.attrs(function (_ref) {
  var width = _ref.width;
  return {
    style: {
      width: style_1.toPx(width)
    }
  };
}).withConfig({
  displayName: "FixedSizeContainer__Item",
  componentId: "sc-1yhgpod-0"
})(["position:relative;background-color:", "};"], function (props) {
  return colorUtils_1.isColor(props.backgroundColor) && props.backgroundColor || props.theme.defaultBackgroundColor;
}); // Use `.attrs()` for highly dynamic styles. Ref: https://github.com/styled-components/styled-components/issues/134#issuecomment-312415291

var FixSizeItem = styled_components_1.default.div.attrs(function (_ref2) {
  var width = _ref2.width,
      height = _ref2.height;
  return {
    style: Object.assign(Object.assign({}, width && {
      width: style_1.toPx(width)
    }), height && {
      height: style_1.toPx(height)
    })
  };
}).withConfig({
  displayName: "FixedSizeContainer__FixSizeItem",
  componentId: "sc-1yhgpod-1"
})(["position:relative;flex-direction:column;flex:1;display:flex;background-color:", "};"], function (props) {
  return colorUtils_1.isColor(props.backgroundColor) && props.backgroundColor || props.theme.defaultBackgroundColor;
});
var ItemContent = styled_components_1.default.div.withConfig({
  displayName: "FixedSizeContainer__ItemContent",
  componentId: "sc-1yhgpod-2"
})(["position:relative;min-height:100px;width:100%;"]);
var FixSizeItemContent = styled_components_1.default.div.withConfig({
  displayName: "FixedSizeContainer__FixSizeItemContent",
  componentId: "sc-1yhgpod-3"
})(["min-height:0px;flex:1;position:relative;box-sizing:border-box;"]);

var withFixedSizeContainer = function withFixedSizeContainer(Viz) {
  var FixedSizeContainer = function FixedSizeContainer(props) {
    var width = props.width,
        height = props.height,
        backgroundColor = props.backgroundColor;

    if (!height) {
      return React.createElement(Item, {
        "data-test": "item",
        width: width,
        backgroundColor: backgroundColor
      }, React.createElement(ItemContent, null, React.createElement(Viz, Object.assign({}, props))));
    }

    return React.createElement(FixSizeItem, {
      "data-test": "fix-size-item",
      width: width,
      height: height,
      backgroundColor: backgroundColor
    }, React.createElement(FixSizeItemContent, null, React.createElement(SizeAwareWrapper_1.default, null, function (_ref3) {
      var newWidth = _ref3.width,
          newHeight = _ref3.height;
      return React.createElement(Viz, Object.assign({}, props, {
        width: newWidth,
        height: newHeight
      }));
    })));
  };

  FixedSizeContainer.displayName = 'withFixedSizeContainer';
  return FixedSizeContainer;
};

exports.default = withFixedSizeContainer;

/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/style");

/***/ }),
/* 14 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/schemaUtils");

/***/ }),
/* 15 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_FONT", function() { return DEFAULT_FONT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_FONT_FAMILY", function() { return DEFAULT_FONT_FAMILY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shouldShowTrend", function() { return shouldShowTrend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLoadingOrNoColumns", function() { return isLoadingOrNoColumns; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFormattedColor", function() { return getFormattedColor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasBackground", function() { return hasBackground; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isIdenticalColor", function() { return isIdenticalColor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDefaultColorWithBg", function() { return getDefaultColorWithBg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMajorColor", function() { return getMajorColor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTrendColor", function() { return getTrendColor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "computeColors", function() { return computeColors; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "computeText", function() { return computeText; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMajorText", function() { return getMajorText; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTrendText", function() { return getTrendText; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "computeFontSize", function() { return computeFontSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMajorFontSize", function() { return getMajorFontSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTrendFontSize", function() { return getTrendFontSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getUnderLabelHeight", function() { return getUnderLabelHeight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getUnderLabel", function() { return getUnderLabel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMajorAndTrend", function() { return getMajorAndTrend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateVizInSmallSpace", function() { return updateVizInSmallSpace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "computeSingleValueContent", function() { return computeSingleValueContent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getGraphColors", function() { return getGraphColors; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "adjustRGB", function() { return adjustRGB; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lighten", function() { return lighten; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "darken", function() { return darken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "handleValueClickCallback", function() { return handleValueClickCallback; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _splunk_visualizations_shared_numberUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var _splunk_visualizations_shared_numberUtils__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_splunk_visualizations_shared_numberUtils__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _splunk_visualizations_shared_domUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(47);
/* harmony import */ var _splunk_visualizations_shared_domUtils__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_splunk_visualizations_shared_domUtils__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _splunk_visualizations_shared_propUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(18);
/* harmony import */ var _splunk_visualizations_shared_propUtils__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_splunk_visualizations_shared_propUtils__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _splunk_visualizations_shared_colorConstants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(40);
/* harmony import */ var _splunk_visualizations_shared_colorConstants__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_splunk_visualizations_shared_colorConstants__WEBPACK_IMPORTED_MODULE_5__);


function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}






var DEFAULT_FONT = 12;
var DEFAULT_FONT_FAMILY = '"Splunk Platform Sans", "Proxima Nova", "Helvetica Neue", Helvetica, Arial, sans-serif';
/**
 * @method shouldShowTrend
 * @param {String} trendDisplay
 * @returns {Bool}
 */

var shouldShowTrend = function shouldShowTrend(trendDisplay) {
  return trendDisplay === 'absolute' || trendDisplay === 'percent';
};
/**
 * @method isLoadingOrNoColumns
 * @param {Object} dataSources
 * @param {Boolean} loading
 * @returns {Boolean} return true if loading or without columns in dataSources
 */

var isLoadingOrNoColumns = function isLoadingOrNoColumns(dataSources, loading) {
  var data = Object(lodash__WEBPACK_IMPORTED_MODULE_1__["get"])(dataSources, 'primary.data.columns[0]', undefined);
  var noColumns = data === undefined;
  return loading || noColumns;
};
/**
 * Retrieve the valid formatted color
 * @method getFormattedColor
 * @param {String} color
 * @param {String} defaultColor
 * @returns {String} the formatted color
 */

var getFormattedColor = function getFormattedColor(color, defaultColor) {
  return Object(_splunk_visualizations_shared_propUtils__WEBPACK_IMPORTED_MODULE_4__["formatColor"])(color) || Object(_splunk_visualizations_shared_propUtils__WEBPACK_IMPORTED_MODULE_4__["formatColor"])(defaultColor);
};
/**
 * Determines if there is a background color
 * @method hasBackground
 * @param {String} backgroundColor
 * @returns true for non-transparent background color
 */

var hasBackground = function hasBackground(backgroundColor) {
  return !!backgroundColor && backgroundColor !== 'transparent';
};
/**
 * @method isIdenticalColor
 * @param {String} colorA
 * @param {String} colorB
 * @returns {Boolean}
 */

var isIdenticalColor = function isIdenticalColor(colorA, colorB) {
  return !!colorA && !!colorB && Object(_splunk_visualizations_shared_propUtils__WEBPACK_IMPORTED_MODULE_4__["formatColor"])(colorA.toLowerCase()) === Object(_splunk_visualizations_shared_propUtils__WEBPACK_IMPORTED_MODULE_4__["formatColor"])(colorB.toLowerCase());
};
/*
 * @method getDefaultColorWithBg
 * @param {Object} props
 * @param {String} props.backgroundColor
 * @param {String} props.defaultFontColor
 * @param {String} props.defaultBlockFontColor
 * @returns {String} defaultColor
 */

var getDefaultColorWithBg = function getDefaultColorWithBg(_ref) {
  var backgroundColor = _ref.backgroundColor,
      defaultFontColor = _ref.defaultFontColor,
      defaultBlockFontColor = _ref.defaultBlockFontColor;
  return isIdenticalColor(backgroundColor, defaultBlockFontColor) ? defaultFontColor : defaultBlockFontColor;
};
/*
 * @method getMajorColor
 * return formatted majorColor.
 * @param {Object} props
 * @param {String} props.majorColor
 * @param {String} props.backgroundColor
 * @param {String} props.defaultFontColor
 * @param {String} props.defaultBlockFontColor
 * @returns {String} majorColor
 */

var getMajorColor = function getMajorColor(_ref2) {
  var majorColor = _ref2.majorColor,
      backgroundColor = _ref2.backgroundColor,
      defaultFontColor = _ref2.defaultFontColor,
      defaultBlockFontColor = _ref2.defaultBlockFontColor; // If backgroundColor is set, but no majorColor,
  // the default majorColor will turn to be defaultBlockFontColor.
  // eg: major color will turn to be white in enterprise mode.
  // however, if the bgColor is the same as defaultBlockFontColor, use defaultFontColor.

  if (hasBackground(backgroundColor) && !majorColor) {
    return getDefaultColorWithBg({
      backgroundColor: backgroundColor,
      defaultFontColor: defaultFontColor,
      defaultBlockFontColor: defaultBlockFontColor
    });
  }

  return getFormattedColor(majorColor, defaultFontColor);
};
/**
 * Get the color for the trend components
 * @method getTrendColor
 * @param {Object} props
 * @param {String} props.trendColor                   The trendColor value determined from encoding
 * @param {Number} props.trendValue
 * @param {Number} props.majorValue
 * @param {String} props.customizedBgColor
 * @param {String} props.trendDisplay  absolute || percent || off
 * @param {Object} defaultColors
 * @returns {String} trendColor
 */

var getTrendColor = function getTrendColor(_ref3) {
  var trendColor = _ref3.trendColor,
      trendValue = _ref3.trendValue,
      majorValue = _ref3.majorValue,
      customizedBgColor = _ref3.customizedBgColor,
      trendDisplay = _ref3.trendDisplay,
      defaultColors = _ref3.defaultColors;

  if (trendColor) {
    return trendColor;
  }

  if (Number.isNaN(Number(trendValue))) {
    return undefined;
  }

  var defaultFontColor = defaultColors.defaultFontColor,
      defaultBlockFontColor = defaultColors.defaultBlockFontColor,
      defaultBackgroundColor = defaultColors.defaultBackgroundColor; // if user defined a backgroundColor, the default trend color will be defaultBlockFontColor

  if (hasBackground(customizedBgColor) && !isIdenticalColor(customizedBgColor, defaultBackgroundColor) && !isIdenticalColor(customizedBgColor, defaultBlockFontColor)) {
    return defaultBlockFontColor;
  } // if trendDisplay is percent, and trendValue === value
  // the trend percent = trendValue / (value - trendValue) will return Infinity


  var isInvalidTrend = trendDisplay === 'percent' && trendValue === parseFloat(majorValue);

  if (trendValue === 0 || isInvalidTrend) {
    return defaultFontColor;
  }

  return trendValue > 0 ? _splunk_visualizations_shared_colorConstants__WEBPACK_IMPORTED_MODULE_5__["DELTA_GREEN"] : _splunk_visualizations_shared_colorConstants__WEBPACK_IMPORTED_MODULE_5__["DELTA_RED"];
};
/**
 * Computes visualization properties for display component
 * @method computeColors
 * @param {Object} props    all viz props
 * @param {Object} defaultColors    defaultColors from theme
 * @returns {Object} result
 * @returns {Boolean} backgroundEnabled
 * @returns {String} backgroundColor
 * @returns {String} majorColor
 * @returns {String} trendColor
 * @returns {String} underLabelColor
 */

var computeColors = function computeColors(props, defaultColors) {
  var backgroundColor = getFormattedColor(props.backgroundColor, defaultColors.defaultBackgroundColor);
  var backgroundEnabled = hasBackground(backgroundColor);
  var majorColor = getMajorColor({
    majorColor: props.majorColor,
    backgroundColor: backgroundColor,
    defaultFontColor: defaultColors.defaultFontColor,
    defaultBlockFontColor: defaultColors.defaultBlockFontColor
  });
  var trendColor = getTrendColor({
    trendColor: props.trendColor,
    trendValue: props.trendValue,
    majorValue: props.majorValue,
    customizedBgColor: props.backgroundColor,
    trendDisplay: props.trendDisplay,
    defaultColors: defaultColors
  }); // todo: need change it to not depend on majorColor

  var underLabelColor = backgroundEnabled ? majorColor : defaultColors.defaultFontColor;
  return {
    backgroundColor: backgroundColor,
    backgroundEnabled: backgroundEnabled,
    majorColor: majorColor,
    trendColor: trendColor,
    underLabelColor: underLabelColor
  };
};
/**
 * Format and return the value (major/trend)
 * @method computeText
 * @param {Object} props
 * @param {Number} props.value                    // The major/trend value
 * @param {Number} props.numberPrecision
 * @param {Bool} props.shouldUseThousandSeparators
 * @param {Bool} props.shouldAbbreviateTrendValue
 * @returns {Number} major or trend text
 */

var computeText = function computeText(_ref4) {
  var value = _ref4.value,
      numberPrecision = _ref4.numberPrecision,
      shouldUseThousandSeparators = _ref4.shouldUseThousandSeparators,
      shouldAbbreviateTrendValue = _ref4.shouldAbbreviateTrendValue;
  var text = Object(_splunk_visualizations_shared_numberUtils__WEBPACK_IMPORTED_MODULE_2__["isNumerial"])(value) ? Object(_splunk_visualizations_shared_numberUtils__WEBPACK_IMPORTED_MODULE_2__["formatNumber"])(value, numberPrecision, {
    useThousandSeparators: shouldUseThousandSeparators,
    // todo: need update formatNumber
    useTrendUnits: shouldAbbreviateTrendValue
  }) : value; // When text is undefined, return empty string

  text = text || '';
  return text;
};
/*
 * @method getMajorText
 * @param {Object} props
 * @param {Number} props.majorValue
 * @param {Number} props.numberPrecision
 * @param {Bool} props.shouldUseThousandSeparators
 * @returns {String} majorText
 */

var getMajorText = function getMajorText(_ref5) {
  var majorValue = _ref5.majorValue,
      numberPrecision = _ref5.numberPrecision,
      shouldUseThousandSeparators = _ref5.shouldUseThousandSeparators;
  return computeText({
    value: majorValue === null ? 'N/A' : majorValue,
    // if majorValue is null, use `N/A`.
    numberPrecision: numberPrecision,
    shouldUseThousandSeparators: shouldUseThousandSeparators,
    shouldAbbreviateTrendValue: false
  });
};
/*
 * @method getTrendText
 * @param {Object} props
 * @param {Number} props.majorValue
 * @param {Number} props.trendValue
 * @param {String} props.trendDisplay
 * @param {Number} props.numberPrecision
 * @param {Bool} props.shouldUseThousandSeparators
 * @param {Bool} props.shouldAbbreviateTrendValue
 * @returns {String} trendText
 */

var getTrendText = function getTrendText(_ref6) {
  var majorValue = _ref6.majorValue,
      trendValue = _ref6.trendValue,
      trendDisplay = _ref6.trendDisplay,
      numberPrecision = _ref6.numberPrecision,
      shouldUseThousandSeparators = _ref6.shouldUseThousandSeparators,
      shouldAbbreviateTrendValue = _ref6.shouldAbbreviateTrendValue;

  var compute = function compute(value) {
    return computeText({
      value: value,
      numberPrecision: numberPrecision,
      shouldUseThousandSeparators: shouldUseThousandSeparators,
      shouldAbbreviateTrendValue: shouldAbbreviateTrendValue
    });
  };

  if (trendValue === '' || !Object(_splunk_visualizations_shared_numberUtils__WEBPACK_IMPORTED_MODULE_2__["isNumerial"])(trendValue)) {
    return '';
  }

  var showPercent = trendDisplay === 'percent';

  if (!showPercent) {
    return compute(trendValue);
  }

  var diff = Math.abs(trendValue - majorValue);
  var val = Math.round(trendValue / diff * 100);

  if (trendValue === 0 && diff === 0) {
    val = 0;
  }

  if (!Number.isFinite(val)) {
    return 'N/A';
  }

  var text = compute(val);
  return "".concat(text, "%");
};
/**
 * Helper to determine the font size for an element
 * @method computeFontSize
 * @param {String} text                     The string to find a size for
 * @param {Object} dimensions
 * @param {Number} dimensions.width         The width of the container
 * @param {Number} dimensions.height        The height of the container
 * @param {String} [fontFamily='"Splunk Platform Sans" ...'] The font being used
 * @param {String} [fontWeight='normal']    Boldness of font
 * @returns {Number} The size to use for fontSize styles
 */

var computeFontSize = function computeFontSize(text, _ref7) {
  var width = _ref7.width,
      height = _ref7.height;
  var fontFamily = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_FONT_FAMILY;
  var fontWeight = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'normal';
  var widthInDefaultFont = Object(_splunk_visualizations_shared_domUtils__WEBPACK_IMPORTED_MODULE_3__["computeTextSize"])(text, "".concat(fontWeight, " ").concat(DEFAULT_FONT, "px ").concat(fontFamily));
  var fontSize = Math.min(width / widthInDefaultFont * DEFAULT_FONT, height / DEFAULT_FONT * DEFAULT_FONT);
  return parseInt(fontSize, 10);
};
/*
 * @method getMajorFontSize
 * @param {Object} props
 * @param {Number} props.width
 * @param {Number} props.height
 * @param {String} props.unit
 * @param {String} props.majorText
 * @param {Number} props.spaceRatio
 * @returns {Number} majorFontSize
 */

var getMajorFontSize = function getMajorFontSize(_ref8) {
  var width = _ref8.width,
      height = _ref8.height,
      unit = _ref8.unit,
      majorText = _ref8.majorText,
      _ref8$spaceRatio = _ref8.spaceRatio,
      spaceRatio = _ref8$spaceRatio === void 0 ? 1 : _ref8$spaceRatio;
  var majorTextCalc = unit ? "".concat(unit).concat(majorText) : majorText;
  return computeFontSize(majorTextCalc, {
    width: width * spaceRatio,
    height: height
  });
};
/*
 * @method getTrendFontSize
 * @param {Object} props
 * @param {Number} props.width
 * @param {Number} props.height
 * @param {String} props.trendText
 * @param {Number} props.spaceRatio
 * @returns {Number} trendFontSize
 */

var getTrendFontSize = function getTrendFontSize(_ref9) {
  var width = _ref9.width,
      height = _ref9.height,
      trendText = _ref9.trendText,
      _ref9$spaceRatio = _ref9.spaceRatio,
      spaceRatio = _ref9$spaceRatio === void 0 ? 1 : _ref9$spaceRatio;
  var trendFontSize = 12;

  if (spaceRatio > 0) {
    trendFontSize = computeFontSize(trendText, {
      width: width * spaceRatio,
      height: height
    });
    trendFontSize = parseInt(trendFontSize, 10) * spaceRatio;
  }

  return trendFontSize;
};
/*
 * The height of underLabel should no more than 12px
 * @param {Number} height
 * @return {Number} height || DEFAULT_FONT
 */

var getUnderLabelHeight = function getUnderLabelHeight(height) {
  return height > DEFAULT_FONT ? DEFAULT_FONT : height;
};
/*
 * @param {Object} config
 * @param {String} underLabel
 * @param {Number} width     width of underLabel
 * @param {Number} height    height of underLabel
 * @param {Number} fond size of underLabel
 */

var getUnderLabel = function getUnderLabel(_ref10) {
  var underLabel = _ref10.underLabel,
      width = _ref10.width,
      height = _ref10.height;
  return (// todo: may need truncate underLabel later
    computeFontSize(underLabel, {
      width: width,
      height: height
    })
  );
};
/**
 * Compute value and font size for major and trend
 * @method getMajorAndTrend
 * @param {Object} props
 * @param {Number} props.width                    // Width of the text container
 * @param {Number} props.height                   // Height of the text container
 * @param {Number} props.majorValue               // Major value
 * @param {Number} props.trendValue               // Trend value
 * @param {Number} props.majorFontSize
 * @param {Number} props.trendFontSize
 * @param {String} props.trendDisplay
 * @param {String} props.unit                     // Unit for the value
 * @param {Number} props.numberPrecision
 * @param {Bool} props.shouldUseThousandSeparators
 * @param {Bool} props.shouldAbbreviateTrendValue
 * @returns {Number, Number, Number, Number} Major text, trend text, major text size, trend text size
 */

var getMajorAndTrend = function getMajorAndTrend(_ref11) {
  var width = _ref11.width,
      height = _ref11.height,
      majorValue = _ref11.majorValue,
      trendValue = _ref11.trendValue,
      majorFontSize = _ref11.majorFontSize,
      trendFontSize = _ref11.trendFontSize,
      trendDisplay = _ref11.trendDisplay,
      unit = _ref11.unit,
      numberPrecision = _ref11.numberPrecision,
      shouldUseThousandSeparators = _ref11.shouldUseThousandSeparators,
      shouldAbbreviateTrendValue = _ref11.shouldAbbreviateTrendValue;
  var majorTextSpaceRatio = Object(_splunk_visualizations_shared_numberUtils__WEBPACK_IMPORTED_MODULE_2__["isNumerial"])(trendValue) && shouldShowTrend(trendDisplay) ? 0.6 : 1;
  var textContentWidth = width * 0.9;
  var textContentHeight = height * 0.9;
  var majorText = getMajorText({
    majorValue: majorValue,
    numberPrecision: numberPrecision,
    shouldUseThousandSeparators: shouldUseThousandSeparators
  });
  var majorTextFontSize = majorFontSize || getMajorFontSize({
    width: textContentWidth,
    height: textContentHeight,
    unit: unit,
    majorText: majorText,
    spaceRatio: majorTextSpaceRatio
  });
  var trendText = getTrendText({
    majorValue: majorValue,
    trendValue: trendValue,
    trendDisplay: trendDisplay,
    numberPrecision: numberPrecision,
    shouldUseThousandSeparators: shouldUseThousandSeparators,
    shouldAbbreviateTrendValue: shouldAbbreviateTrendValue
  });
  var trendTextFontSize = trendFontSize || getTrendFontSize({
    width: textContentWidth,
    height: textContentHeight,
    trendText: trendText,
    spaceRatio: 1 - majorTextSpaceRatio
  });
  return {
    majorText: majorText,
    majorTextFontSize: majorTextFontSize,
    trendText: trendText,
    trendTextFontSize: trendTextFontSize
  };
};
/*
 * @method updateVizInSmallSpace
 * @param {Object} props
 * @param {Number} props.width                    // Width of the text container
 * @param {Number} props.height                   // Height of the text container
 * @param {Object} props.toRemoveList
 * @param {Number} props.majorValue               // Major value
 * @param {Number} props.trendValue               // Trend value
 * @param {Number} props.majorFontSize
 * @param {Number} props.trendFontSize
 * @param {Number} props.majorTextFontSize
 * @param {String} props.unit                     // Unit for the value
 * @param {Number} props.numberPrecision
 * @param {Bool} props.shouldUseThousandSeparators
 * @param {Bool} props.shouldAbbreviateTrendValue
 * @returns {Object} results
 * @returns {Object} results.newMajorAndTrend
 * @returns {Object} results.updatedProps
 */

var updateVizInSmallSpace = function updateVizInSmallSpace(_ref12) {
  var width = _ref12.width,
      height = _ref12.height,
      toRemoveList = _ref12.toRemoveList,
      majorValue = _ref12.majorValue,
      trendValue = _ref12.trendValue,
      majorFontSize = _ref12.majorFontSize,
      trendFontSize = _ref12.trendFontSize,
      majorTextFontSize = _ref12.majorTextFontSize,
      unit = _ref12.unit,
      numberPrecision = _ref12.numberPrecision,
      shouldUseThousandSeparators = _ref12.shouldUseThousandSeparators,
      shouldAbbreviateTrendValue = _ref12.shouldAbbreviateTrendValue;
  var removeIndex = 0;
  var newProps = {}; // options need to be updated

  var newMajorAndTrend = {};
  var newTextSize = majorTextFontSize; // remove info on viz to make textFontSize >= 12px;

  while (newTextSize < 12 && removeIndex < toRemoveList.length) {
    var toRemove = toRemoveList[removeIndex];
    newProps = _objectSpread(_objectSpread({}, newProps), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()({}, toRemove.key, toRemove.value));
    newMajorAndTrend = getMajorAndTrend(_objectSpread({
      majorValue: majorValue,
      trendValue: trendValue,
      majorFontSize: majorFontSize,
      trendFontSize: trendFontSize,
      width: width,
      height: height,
      unit: unit,
      numberPrecision: numberPrecision,
      shouldUseThousandSeparators: shouldUseThousandSeparators,
      shouldAbbreviateTrendValue: shouldAbbreviateTrendValue
    }, newProps));
    newTextSize = newMajorAndTrend.majorTextFontSize;
    removeIndex += 1;
  } // truncate text if textFontSize is still less than 12


  if (newTextSize < 12) {
    var truncateValue = "".concat(majorValue.toString().slice(0, 3), "...");
    newMajorAndTrend = getMajorAndTrend(_objectSpread({
      majorValue: truncateValue,
      trendValue: trendValue,
      majorFontSize: majorFontSize,
      trendFontSize: trendFontSize,
      width: width,
      height: height,
      unit: unit,
      numberPrecision: numberPrecision,
      shouldUseThousandSeparators: shouldUseThousandSeparators,
      shouldAbbreviateTrendValue: shouldAbbreviateTrendValue
    }, newProps));
  }

  return {
    newMajorAndTrend: newMajorAndTrend,
    updatedProps: newProps
  };
};
/*
 * @method computeSingleValueContent
 * @param {Object} props
 * @param {Number} props.contentWidth
 * @param {Number} props.contentHeight
 * @param {Number} props.containerWidth
 * @param {Number} props.containerHeight
 * @param {Number} props.majorValue               // Major value
 * @param {Number} props.trendValue               // Trend value
 * @param {Number} props.majorFontSize
 * @param {Number} props.trendFontSize
 * @param {String} props.trendDisplay
 * @param {String} props.unit                     // Unit for the value
 * @param {Number} props.numberPrecision
 * @param {Bool} props.shouldUseThousandSeparators
 * @param {Bool} props.shouldAbbreviateTrendValue
 * @param {Object} props.toRemoveList
 * @returns {Object} results
 * @returns {String} results.majorText
 * @returns {String} results.trendText
 * @returns {Number} results.majorTextFontSize
 * @returns {Number} results.trendTextFontSize
 * @returns {String} results.majorValueTitle
 * @returns {Object} results.smallVizProps
 */

var computeSingleValueContent = function computeSingleValueContent(_ref13) {
  var contentWidth = _ref13.contentWidth,
      contentHeight = _ref13.contentHeight,
      containerWidth = _ref13.containerWidth,
      containerHeight = _ref13.containerHeight,
      majorValue = _ref13.majorValue,
      trendValue = _ref13.trendValue,
      majorFontSize = _ref13.majorFontSize,
      trendFontSize = _ref13.trendFontSize,
      trendDisplay = _ref13.trendDisplay,
      unit = _ref13.unit,
      numberPrecision = _ref13.numberPrecision,
      shouldUseThousandSeparators = _ref13.shouldUseThousandSeparators,
      shouldAbbreviateTrendValue = _ref13.shouldAbbreviateTrendValue,
      toRemoveList = _ref13.toRemoveList;

  var _getMajorAndTrend = getMajorAndTrend({
    majorValue: majorValue,
    trendValue: trendValue,
    majorFontSize: majorFontSize,
    trendFontSize: trendFontSize,
    trendDisplay: trendDisplay,
    width: contentWidth,
    height: contentHeight,
    unit: unit,
    numberPrecision: numberPrecision,
    shouldUseThousandSeparators: shouldUseThousandSeparators,
    shouldAbbreviateTrendValue: shouldAbbreviateTrendValue
  }),
      majorText = _getMajorAndTrend.majorText,
      trendText = _getMajorAndTrend.trendText,
      majorTextFontSize = _getMajorAndTrend.majorTextFontSize,
      trendTextFontSize = _getMajorAndTrend.trendTextFontSize;

  var majorValueTitle = majorText;
  var smallVizProps = {}; // update viz in small space
  // if textFontSize is less than 12, remove extra info like sparkline, trendvalue, unit
  // or truncate major value to make the major font size >= 12

  if (majorTextFontSize < 12) {
    var _updateVizInSmallSpac = updateVizInSmallSpace({
      width: containerWidth,
      height: containerHeight,
      toRemoveList: toRemoveList,
      majorValue: majorValue,
      trendValue: trendValue,
      majorFontSize: majorFontSize,
      trendFontSize: trendFontSize,
      majorTextFontSize: majorTextFontSize,
      unit: unit,
      numberPrecision: numberPrecision,
      shouldUseThousandSeparators: shouldUseThousandSeparators,
      shouldAbbreviateTrendValue: shouldAbbreviateTrendValue
    }),
        newMajorAndTrend = _updateVizInSmallSpac.newMajorAndTrend,
        updatedProps = _updateVizInSmallSpac.updatedProps;

    majorText = newMajorAndTrend.majorText;
    trendText = newMajorAndTrend.trendText;
    majorTextFontSize = newMajorAndTrend.majorTextFontSize;
    trendTextFontSize = newMajorAndTrend.trendTextFontSize;
    smallVizProps = updatedProps;
  }

  return {
    majorText: majorText,
    trendText: trendText,
    majorTextFontSize: majorTextFontSize,
    trendTextFontSize: trendTextFontSize,
    majorValueTitle: majorValueTitle,
    smallVizProps: smallVizProps
  };
};
/**
 * Get the colors for a graph
 *
 * @method getGraphColors
 * @param {Object} options
 * @param {Bool} options.backgroundEnabled          // Flag to turn on color mode
 * @param {String} options.backgroundColor          // The current background color, overrides trend background color
 * @param {Object} options.defaultColors            // Default colors by severity
 * @param {Function} options.customColorFormatter   // must return { background, stroke } given a color
 * @returns {Object} { background, stroke } colors
 * @private
 */

var getGraphColors = function getGraphColors(_ref14) {
  var backgroundEnabled = _ref14.backgroundEnabled,
      backgroundColor = _ref14.backgroundColor,
      defaultColors = _ref14.defaultColors,
      customColorFormatter = _ref14.customColorFormatter; // Only do custom colors in block mode

  if (backgroundEnabled) {
    // Check if the user defined colors to use
    if (backgroundColor && typeof customColorFormatter === 'function') {
      return customColorFormatter(backgroundColor);
    }
  }

  return defaultColors.none;
};
/**
 * Adjust rgb value if it equals to 0 or 255
 * @method adjustRGB
 * @param {Number} rgb      [0 - 255]
 * @param {Number} delta
 * @returns {Number} adjusted rgb
 * @private
 */

var adjustRGB = function adjustRGB(rgb, delta) {
  if (rgb === 255) {
    return rgb - delta;
  }

  if (rgb === 0) {
    return rgb + delta;
  }

  return rgb;
};
/**
 * Modifies colors by multiplying by a given ratio
 * @method changeColor
 * @param {String} color    // Color to modify
 * @param {Number} ratio    // Float to modify color
 * @returns {String} new color
 * @private
 */

var changeColor = function changeColor(color, ratio) {
  var hex = color.replace(/(0x|#)/, '');
  var r = parseInt(hex.substr(0, 2), 16);
  var g = parseInt(hex.substr(2, 2), 16);
  var b = parseInt(hex.substr(4, 2), 16); // Multiply by given ratio, make sure is between 0 and 255;

  var newR = Math.max(Math.min(Math.floor(r * ratio), 255), 0);
  var newG = Math.max(Math.min(Math.floor(g * ratio), 255), 0);
  var newB = Math.max(Math.min(Math.floor(b * ratio), 255), 0); // If the color is not changed
  // case 1: the color is (0, 0 0)
  //         lighten color (80, 80, 80)
  //         darken color (40, 40, 40)
  // case 2: the color is (255, 255, 255)
  //         lighten color (235, 235, 235)
  //         darken color (175, 175, 175)
  // case 3: the color is e.g. (0, 255, 0)
  //         new color (20, 235, 20)

  if (newR === r && newG === g && newB === b) {
    if (newR === 0 && newG === 0 && newB === 0) {
      if (ratio > 1) {
        newR = adjustRGB(newR, 80);
        newG = adjustRGB(newG, 80);
        newB = adjustRGB(newB, 80);
      } else {
        newR = adjustRGB(newR, 40);
        newG = adjustRGB(newG, 40);
        newB = adjustRGB(newB, 40);
      }
    } else if (newR === 255 && newG === 255 && newB === 255) {
      if (ratio > 1) {
        newR = adjustRGB(newR, 20);
        newG = adjustRGB(newG, 20);
        newB = adjustRGB(newB, 20);
      } else {
        newR = adjustRGB(newR, 80);
        newG = adjustRGB(newG, 80);
        newB = adjustRGB(newB, 80);
      }
    } else {
      newR = adjustRGB(newR, 20);
      newG = adjustRGB(newG, 20);
      newB = adjustRGB(newB, 20);
    }
  }

  return "#".concat(newR.toString(16).padStart(2, 0)) + "".concat(newG.toString(16).padStart(2, 0)) + "".concat(newB.toString(16).padStart(2, 0));
};
/**
 * Lighten a given color
 * @method lighten
 * @param {String} color
 * @returns {String}
 * @private
 */


var lighten = function lighten(color) {
  return changeColor(color, 1.3);
};
/**
 * Darkens a given color
 * @method darken
 * @param {String} color
 * @returns {String}
 * @private
 */

var darken = function darken(color) {
  return changeColor(color, 0.5);
};
/** consistent token structure: handle callback to add value and name in event payload
 * @method handleValueClickCallback
 * @param {Object} ev
 * @param {String | Number} majorValue
 * @param {String} majorValueField
 * @param {Number} trendValue
 * @param {Function} onValueClick
 */

var handleValueClickCallback = function handleValueClickCallback(ev, majorValue, majorValueField, trendValue, onValueClick) {
  var payload = {
    trendValue: trendValue,
    value: majorValue,
    name: majorValueField
  };
  return onValueClick(_objectSpread(_objectSpread({}, ev), {}, {
    payload: payload
  }));
};

/***/ }),
/* 16 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/createClass");

/***/ }),
/* 17 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/SizeAwareWrapper");

/***/ }),
/* 18 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/propUtils");

/***/ }),
/* 19 */
/***/ (function(module, exports) {

module.exports = require("@splunk/themes/variables");

/***/ }),
/* 20 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/numberUtils");

/***/ }),
/* 21 */
/***/ (function(module, exports) {

module.exports = require("@splunk/themes/pick");

/***/ }),
/* 22 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/typeof");

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _defineProperty = __webpack_require__(6);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getSortingParams = exports.SortParamsPropTypes = void 0;

var T = __webpack_require__(0);

var lodash_1 = __webpack_require__(2);

var DataSource_1 = __webpack_require__(33);

exports.SortParamsPropTypes = T.shape({
  currentSortKey: T.string,
  currentSortDir: T.oneOf(DataSource_1.validSortDirs),
  onSort: T.func
});

var getSortingParams = function getSortingParams(_ref) {
  var requestParams = _ref.requestParams,
      onRequestParamsChange = _ref.onRequestParamsChange;
  var currentSortKey;
  var currentSortDir;
  var nextSortDirMap = {
    asc: 'desc',
    desc: 'asc',
    none: 'asc'
  };
  var onSort;

  if (lodash_1.isFunction(onRequestParamsChange)) {
    if (requestParams && lodash_1.has(requestParams, 'sort')) {
      currentSortKey = Object.keys(requestParams.sort).shift();
      currentSortDir = requestParams.sort[currentSortKey];
    } // undid memoization since there is a dependency on requestParams, which is a deeply nested object


    onSort = function onSort(e, _ref2) {
      var sortKey = _ref2.sortKey,
          sortDir = _ref2.sortDir;

      if (typeof sortKey === 'string') {
        var nextSortDir = lodash_1.has(nextSortDirMap, sortDir) ? nextSortDirMap[sortDir] : 'none';
        onRequestParamsChange(Object.assign(Object.assign({}, requestParams), {
          offset: 0,
          sort: _defineProperty({}, sortKey, nextSortDir)
        }));
      } else {
        onRequestParamsChange(requestParams);
      }
    };
  }

  return {
    currentSortKey: currentSortKey,
    currentSortDir: currentSortDir,
    onSort: onSort
  };
};

exports.getSortingParams = getSortingParams;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getPaginationParams = exports.PaginatorParamsPropTypes = void 0;

var T = __webpack_require__(0);

var lodash_1 = __webpack_require__(2);

exports.PaginatorParamsPropTypes = T.shape({
  isPaging: T.bool,
  current: T.number,
  totalPages: T.number,
  onChange: T.func
});

var getPaginationParams = function getPaginationParams(_ref) {
  var requestParams = _ref.requestParams,
      meta = _ref.meta,
      onRequestParamsChange = _ref.onRequestParamsChange;
  var totalCount = meta && meta.totalCount || 0;
  var offset = requestParams && requestParams.offset || 0;
  var count = requestParams && requestParams.count;
  var totalPages = typeof count === 'number' && count > 0 ? Math.ceil(totalCount / count) : 0;
  var current = typeof count === 'number' && count > 0 ? Math.floor(offset / count) + 1 : 0;
  var isPaging = totalPages > 1 && lodash_1.isFunction(onRequestParamsChange);

  var onChangeHandler = function onChangeHandler(e, _ref2) {
    var page = _ref2.page,
        countArg = _ref2.count;
    var newParams = lodash_1.cloneDeep(requestParams);

    if (typeof countArg === 'number') {
      newParams.count = countArg;
      newParams.offset = 0;
    }

    var pageCount = typeof newParams.count === 'number' ? newParams.count : 10;

    if (typeof page === 'number' && page > 0) {
      newParams.count = pageCount;
      newParams.offset = (page - 1) * pageCount;
    }

    onRequestParamsChange(newParams);
  };

  return {
    isPaging: isPaging,
    current: current,
    totalPages: totalPages,
    onChange: lodash_1.isFunction(onRequestParamsChange) ? onChangeHandler : lodash_1.noop
  };
};

exports.getPaginationParams = getPaginationParams;

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shouldShowIconPlaceholder = void 0;

var React = __webpack_require__(1);

var T = __webpack_require__(0);

var lodash_1 = __webpack_require__(2);

var i18n_1 = __webpack_require__(3);

var Message_1 = __webpack_require__(9);

var FixedSizeContainer_1 = __webpack_require__(12);
/**
 * @method shouldShowIconPlaceholder
 * @param {object} dataSources
 * @param {boolean} loading
 * @returns {boolean}
 */


var shouldShowIconPlaceholder = function shouldShowIconPlaceholder(dataSources) {
  var loading = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var data = lodash_1.get(dataSources, 'primary.data.columns[0]', undefined);
  var noData = data === undefined;
  var fields = lodash_1.get(dataSources, 'primary.data.fields[0]', undefined);
  var noFields = fields === undefined;
  return loading || noData || noFields;
};

exports.shouldShowIconPlaceholder = shouldShowIconPlaceholder;
var propTypes = {
  icon: T.func,
  width: T.oneOfType([T.string, T.number]),
  height: T.oneOfType([T.string, T.number]),
  backgroundColor: T.string
};
/**
 * @method IconPlaceholder
 * @param {IconPlaceholderProps} props
 * @returns {React.ReactElement}
 */

var IconPlaceholder = function IconPlaceholder(props) {
  var width = props.width,
      height = props.height,
      icon = props.icon;

  if (icon) {
    return React.createElement(icon, {
      style: {
        left: '50%',
        top: '50%',
        color: 'grey',
        position: 'absolute',
        transform: 'translate(-50%, -50%)'
      },
      width: '50%',
      height: '50%'
    });
  }

  return React.createElement(Message_1.default, {
    width: width,
    height: height,
    level: "warning",
    message: i18n_1._('No DataSource Connected')
  });
};

IconPlaceholder.propTypes = propTypes;
IconPlaceholder.defaultProps = {
  width: '100%',
  height: 250
};
exports.default = FixedSizeContainer_1.default(IconPlaceholder);

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VizCategory = void 0;
var VizCategory;

(function (VizCategory) {
  VizCategory["SINGLE_VALUE"] = "Single Value";
  VizCategory["TRENDS"] = "Trends";
  VizCategory["COMPARISONS"] = "Comparisons";
  VizCategory["TABLE"] = "Table";
  VizCategory["GAUGE"] = "Gauge";
  VizCategory["DISTRIBUTIONS"] = "Distributions";
  VizCategory["CHOROPLETH"] = "Choropleth Maps";
  VizCategory["SHAPES"] = "Shapes";
  VizCategory["MISC"] = "misc";
  VizCategory["FLOW"] = "Flow";
  VizCategory["CORRELATION"] = "Correlation";
  VizCategory["SPATIAL"] = "Spatial";
})(VizCategory = exports.VizCategory || (exports.VizCategory = {}));

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __webpack_require__(1);

var lodash_1 = __webpack_require__(2);

var getSettingsFromThemedProps_1 = __webpack_require__(28);

var Options_1 = __webpack_require__(29);

var SanitizeProps_1 = __webpack_require__(30);

var styled_components_1 = __webpack_require__(4);

var SplunkVisualization_1 = __webpack_require__(31);

var VizBehavior_1 = __webpack_require__(5);

var getSorting_1 = __webpack_require__(23);

var getPagination_1 = __webpack_require__(24);

var useDeepMemo_1 = __webpack_require__(34);

var JSONSchemaUtils_1 = __webpack_require__(35);

var MissingPropsMessage_1 = __webpack_require__(36);

var withEditModeCover_1 = __webpack_require__(37);

var withPlaceholder_1 = __webpack_require__(38);

var hocUtils_1 = __webpack_require__(7);
/**
 * hoc that wraps a pure react visualization in a Dashboard visualization
 * @param {DashboardVizOpts} opts
 * @returns {HOC}
 */


var withDashboardViz = function withDashboardViz(opts) {
  var ReactViz = opts.ReactViz,
      vizConfig = opts.vizConfig,
      _opts$computeVizProps = opts.computeVizProps,
      computeVizProps = _opts$computeVizProps === void 0 ? function () {} : _opts$computeVizProps,
      useIconPlaceholder = opts.useIconPlaceholder; // sanitizing props before sending them to reactviz.

  var SanitizedReactViz = SanitizeProps_1.withSanitizedProps(ReactViz);
  var defaultOptions = JSONSchemaUtils_1.pickFieldFromJSONSchema(vizConfig.optionsSchema, 'default');

  var DashboardViz = function DashboardViz(props) {
    var mode = props.mode,
        hasEventHandlers = props.hasEventHandlers,
        dataSources = props.dataSources,
        options = props.options,
        _props$context = props.context,
        context = _props$context === void 0 ? {} : _props$context,
        width = props.width,
        height = props.height,
        onComputedProps = props.onComputedProps,
        onEventTrigger = props.onEventTrigger,
        theme = props.theme,
        onRequestParamsChange = props.onRequestParamsChange;

    var themeFunc = function themeFunc(themeVar) {
      var _a, _b;

      return (_b = (_a = vizConfig.themes)[themeVar]) === null || _b === void 0 ? void 0 : _b.call(_a, props);
    };

    var bgColorFromTheme = themeFunc('defaultBackgroundColor');

    var _getSettingsFromTheme = getSettingsFromThemedProps_1.default({
      theme: theme
    }),
        currentThemeFamily = _getSettingsFromTheme.family,
        currentThemeColorScheme = _getSettingsFromTheme.colorScheme,
        currentThemeDensity = _getSettingsFromTheme.density;

    var evaluatedOptions = {}; // evaluatedOptions need to be initialized as an empty object

    evaluatedOptions = useDeepMemo_1.useDeepMemo(function () {
      try {
        return Options_1.Options.evaluate({
          context: lodash_1.defaultsDeep({}, context, vizConfig.defaultContext),
          options: hocUtils_1.deepMergeWithArrayOverrides({}, options, defaultOptions)
        }, dataSources, themeFunc);
      } catch (e) {
        console.error("unexpected error evaluating options:  + ".concat(e.message));
        return {};
      }
    }, [currentThemeFamily, currentThemeColorScheme, currentThemeDensity, options, context, dataSources]); // useEffect hook needs to be initialized before any early returns
    // this is in accordance with the order of hook calls being the same on each render https://reactjs.org/docs/hooks-rules.html#explanation

    React.useEffect(function () {
      onComputedProps(evaluatedOptions);
    }); // present warning message if any required props are missing

    var _vizConfig$requiredPr = vizConfig.requiredProps,
        requiredProps = _vizConfig$requiredPr === void 0 ? [] : _vizConfig$requiredPr,
        supports = vizConfig.supports;
    var missing = MissingPropsMessage_1.missingKeys(requiredProps, evaluatedOptions);

    if (missing.length > 0 && supports.includes(VizBehavior_1.VizBehavior.PLACEHOLDER)) {
      return React.createElement(MissingPropsMessage_1.default, {
        "data-test": "missing-props-message",
        width: width,
        height: height,
        missingProps: missing,
        backgroundColor: bgColorFromTheme
      });
    } // events


    var eventCallbackProps = {};

    if (hasEventHandlers && mode === 'view' && vizConfig.supports.indexOf(VizBehavior_1.VizBehavior.EVENTS) > -1) {
      var supportedEvents = vizConfig.events;
      Object.keys(supportedEvents).forEach(function (eventName) {
        var eventCallbackPropName = lodash_1.camelCase("on.".concat(eventName));
        eventCallbackProps[eventCallbackPropName] = null; // todo: refactor single value and single value icon to send payload from viz
        // then remove these lines

        var payloadKeys = supportedEvents[eventName].payloadKeys;
        var payload = {};

        if (Array.isArray(payloadKeys) && payloadKeys.length) {
          payloadKeys.forEach(function (p) {
            return payload[p] = evaluatedOptions[p];
          });
        }

        eventCallbackProps[eventCallbackPropName] = function (ev) {
          if (ev && ev.payload) {
            payload = ev.payload;
          }

          return onEventTrigger({
            originalEvent: ev,
            payload: payload,
            type: eventName
          });
        };
      });
    } // compute pure viz props which are not from options


    var computedVizProps = computeVizProps(Object.assign(Object.assign(Object.assign(Object.assign({}, props), evaluatedOptions), eventCallbackProps), {
      themeFunc: themeFunc
    }));
    /**
     * PAGE_AND_SORT behavior
     *
     * Some visualizations, like table, requires metadata about the datasource,
     * like total number of results, current count, offset, and sort, for rendering
     * paginator and sorting direction. In this approach, the visualization
     * allow users to set 'paginateDataSourceKey' to select which datasource
     * should the visualization extract the metadata from. It defaults to 'primary' datasource.
     * The visualization config should set the PAGE_AND_SORT behavior to receive
     * 'requestParams', 'meta' and onRequestParams callback as props.
     *
     * In future, we could automatically detect which all datasources are being used
     * and bind those magically to pagination/sorting behavior.
     */

    var dataSourceMetadata = {};
    var OptionKey = 'paginateDataSourceKey';
    var paginateDataSourceKey = lodash_1.has(evaluatedOptions, OptionKey) && evaluatedOptions[OptionKey] || 'primary';

    if (vizConfig.supports.indexOf(VizBehavior_1.VizBehavior.PAGE_AND_SORT) > -1 && lodash_1.has(dataSources, paginateDataSourceKey)) {
      var requestParams = lodash_1.get(dataSources, [paginateDataSourceKey, 'requestParams'], {});
      var meta = lodash_1.get(dataSources, [paginateDataSourceKey, 'meta'], {});

      var handleRequestParamsChange = function handleRequestParamsChange(payload) {
        return onRequestParamsChange(paginateDataSourceKey, payload);
      };

      var sortParams = getSorting_1.getSortingParams({
        requestParams: requestParams,
        meta: meta,
        onRequestParamsChange: handleRequestParamsChange
      });
      var paginatorParams = getPagination_1.getPaginationParams({
        requestParams: requestParams,
        meta: meta,
        onRequestParamsChange: handleRequestParamsChange
      });
      dataSourceMetadata = {
        sortParams: sortParams,
        paginatorParams: paginatorParams
      };
    }

    return React.createElement(SanitizedReactViz, Object.assign({
      mode: mode,
      width: width,
      height: height
    }, evaluatedOptions, computedVizProps, eventCallbackProps, dataSourceMetadata));
  };

  DashboardViz.propTypes = Object.assign(Object.assign({}, SplunkVisualization_1.default.propTypes), ReactViz.propTypes);
  DashboardViz.defaultProps = Object.assign(Object.assign(Object.assign({}, SplunkVisualization_1.default.defaultProps), ReactViz.defaultProps), {
    // using withTheme requires component to receive theme prop. In case the consumer did not provide ThemeProvider, a default empty object will prevent warnings.
    theme: {}
  }); // attach viz config

  DashboardViz.config = vizConfig; // @ts-ignore: TODO fix sc upgrade TS issues

  return styled_components_1.withTheme(withPlaceholder_1.default(withEditModeCover_1.default(DashboardViz), useIconPlaceholder));
};

exports.default = withDashboardViz;

/***/ }),
/* 28 */
/***/ (function(module, exports) {

module.exports = require("@splunk/themes/getSettingsFromThemedProps");

/***/ }),
/* 29 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualization-encoding/Options");

/***/ }),
/* 30 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/SanitizeProps");

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _classCallCheck = __webpack_require__(10);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.INITIAL_HEIGHT = exports.INITIAL_WIDTH = void 0;
/* eslint-disable react/no-unused-prop-types,react/prefer-stateless-function */

var T = __webpack_require__(0);

var lodash_1 = __webpack_require__(2);

var VizActionHandler_1 = __webpack_require__(32); // this is identical to the initial height and width we use in BaseVisualization in dashboard-visualizations


exports.INITIAL_WIDTH = 250;
exports.INITIAL_HEIGHT = 250;
/**
 * A Splunk visualization
 */

var SplunkVisualization = function SplunkVisualization() {
  _classCallCheck(this, SplunkVisualization);
};

SplunkVisualization.propTypes = {
  /**
   * display mode
   */
  mode: T.oneOf(['view', 'edit', 'export']).isRequired,

  /**
   * width in pixel or string, defaults to 100%
   */
  width: T.oneOfType([T.string, T.number]).isRequired,

  /**
   * height in pixel or string
   */
  height: T.oneOfType([T.string, T.number]).isRequired,

  /**
   * visualization context used for dynamic option evaluation
   */
  context: T.object,

  /**
   * visualization formatting options
   */
  options: T.object,

  /**
   * A callback to update formatting options
   */
  onOptionsChange: T.func,

  /**
   * datasource state which include data and request params, object key indicate the datasource type.
   */
  dataSources: T.objectOf(T.shape({
    /**
     * current request params
     */
    requestParams: T.object,

    /**
     * current dataset
     */
    data: T.shape({
      fields: T.array,
      columns: T.array
    }),

    /**
     * error
     */
    error: T.shape({
      level: T.string,
      message: T.string
    }),

    /**
     * meta data that came with the dataset
     */
    meta: T.object
  })),

  /**
   * A callback to trigger event
   */
  onEventTrigger: T.func,

  /**
   * Inform viz if there are handlers listening to events
   */
  hasEventHandlers: T.bool,

  /**
   * A callback to communicate computed props to a consumer
   */
  onComputedProps: T.func,

  /**
   * A callback to obtain visualization api
   */
  vizActionHandlerRef: T.func,
  loading: T.bool,
  theme: T.object,

  /**
   * A callback to request new data with updated request params
   */
  onRequestParamsChange: T.func
};
/**
 *
 */

SplunkVisualization.defaultProps = {
  // BaseVisualization in dashboard-visualizations uses 100% for width but 250 for height
  width: '100%',
  height: exports.INITIAL_HEIGHT,
  dataSources: {},
  onEventTrigger: function onEventTrigger() {
    return {};
  },
  mode: 'view',
  hasEventHandlers: false,
  options: {},
  context: {},
  onOptionsChange: function onOptionsChange() {
    return {};
  },
  vizActionHandlerRef: function vizActionHandlerRef() {
    return new VizActionHandler_1.DefaultVizActionHandler();
  },
  onComputedProps: function onComputedProps() {
    return {};
  },
  loading: false,
  onRequestParamsChange: lodash_1.noop
};
exports.default = SplunkVisualization;

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _classCallCheck = __webpack_require__(10);

var _createClass = __webpack_require__(16);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DefaultVizActionHandler = void 0;

var DefaultVizActionHandler = /*#__PURE__*/function () {
  function DefaultVizActionHandler() {
    _classCallCheck(this, DefaultVizActionHandler);
  }

  _createClass(DefaultVizActionHandler, [{
    key: "focus",
    value: function focus() {//noop
    }
  }, {
    key: "snapshot",
    value: function snapshot() {
      return null; //noop
    }
  }]);

  return DefaultVizActionHandler;
}();

exports.DefaultVizActionHandler = DefaultVizActionHandler;

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.validSortDirs = void 0;
exports.validSortDirs = ['asc', 'desc', 'none'];

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useDeepMemo = void 0;

var react_1 = __webpack_require__(1);

var lodash_1 = __webpack_require__(2);
/**
 * This hook evaluates and stores the result of a passed function and only
 * re-evaluates the function when passed dependencies change.
 *
 * It is different from the internal React useMemo in the following aspects:
 * - it only stores the last evaluated result
 * - it uses a deep equality check to determine if dependencies have changed
 *
 * Inspired by apollo-client's useDeepMemo
 *
 * @param fn the function to be executed and
 * @param dependencies an array of dependencies
 */


var useDeepMemo = function useDeepMemo(fn, dependencies) {
  var ref = react_1.useRef();

  if (!ref.current || !lodash_1.isEqual(dependencies, ref.current.dependencies)) {
    ref.current = {
      dependencies: dependencies,
      value: fn()
    };
  }

  return ref.current.value;
};

exports.useDeepMemo = useDeepMemo;

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pickFieldFromJSONSchema = void 0;

var lodash_1 = __webpack_require__(2);

var pickFieldFromJSONSchema = function pickFieldFromJSONSchema(optionsSchema) {
  var fieldName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';
  return Object.keys(optionsSchema).reduce(function (accum, k) {
    if (lodash_1.has(optionsSchema[k], fieldName)) {
      accum[k] = optionsSchema[k][fieldName];
    } else if (lodash_1.get(optionsSchema, [k, 'type']) === 'object' && lodash_1.has(optionsSchema[k], 'properties')) {
      var nestedSchema = exports.pickFieldFromJSONSchema(optionsSchema[k].properties, fieldName);

      if (!lodash_1.isEmpty(nestedSchema)) {
        accum[k] = nestedSchema;
      }
    }

    return accum;
  }, {});
};

exports.pickFieldFromJSONSchema = pickFieldFromJSONSchema;

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MissingPropsMessage = exports.missingKeys = exports.isMissing = void 0;

var React = __webpack_require__(1);

var T = __webpack_require__(0);

var i18n_1 = __webpack_require__(3);

var Message_1 = __webpack_require__(9);

var FixedSizeContainer_1 = __webpack_require__(12);
/**
 * @method isMissing
 * @param {any} v
 * @returns {boolean} true if the input value === null or undefined
 */


var isMissing = function isMissing(v) {
  return v === null || v === undefined;
};

exports.isMissing = isMissing;
/**
 * @method misskingKeys
 * @param {string[]} keys
 * @param {object} target
 * @returns {string[]} the keys of missing required props
 */

var missingKeys = function missingKeys(keys, target) {
  return keys.filter(function (k) {
    return exports.isMissing(target[k]);
  });
};

exports.missingKeys = missingKeys;
var propTypes = {
  width: T.oneOfType([T.string, T.number]),
  height: T.oneOfType([T.string, T.number]),
  backgroundColor: T.string,
  missingProps: T.arrayOf(T.string)
};
/**
 * @method MissingPropsMessage
 * @param {MissingPropsProps} props
 * @returns {React.ReactElement}
 */

var MissingPropsMessage = function MissingPropsMessage(props) {
  var width = props.width,
      height = props.height,
      missingProps = props.missingProps;
  return React.createElement(Message_1.default, {
    "data-test": "message",
    width: width,
    height: height,
    message: i18n_1._("Missing property: ".concat(missingProps.join(', ')))
  });
};

exports.MissingPropsMessage = MissingPropsMessage;
exports.MissingPropsMessage.propTypes = propTypes;
exports.MissingPropsMessage.defaultProps = {
  width: '100%',
  height: 250
};
exports.default = FixedSizeContainer_1.default(exports.MissingPropsMessage);

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __webpack_require__(1);

var styled_components_1 = __webpack_require__(4);

var hocUtils_1 = __webpack_require__(7);

var Cover = styled_components_1.default.div.withConfig({
  displayName: "withEditModeCover__Cover",
  componentId: "sc-1gsbnxb-0"
})(["position:absolute;left:0;right:0;top:0;bottom:0;"]);
var Blocker = styled_components_1.default.div.withConfig({
  displayName: "withEditModeCover__Blocker",
  componentId: "sc-1gsbnxb-1"
})(["position:relative;width:100%;height:100%;"]);
/**
 * HOC that renders a cover layer in edit mode
 * @method withEditModeCover
 * @param {ExtendedDashViz} Visualization
 * @returns {ExtendedDashViz} Wrapper
 */

var withEditModeCover = function withEditModeCover(Visualization) {
  var Wrapper = function Wrapper(props) {
    var mode = props.mode;
    return React.createElement(Blocker, null, React.createElement(Visualization, Object.assign({}, props)), mode === 'edit' && React.createElement(Cover, {
      "data-test": "edit-mode-cover"
    }));
  };

  hocUtils_1.extendStaticWrapperProps({
    Wrapper: Wrapper,
    Visualization: Visualization
  });
  return Wrapper;
};

exports.default = withEditModeCover;

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __webpack_require__(1);

var colorUtils_1 = __webpack_require__(11);

var IconPlaceholder_1 = __webpack_require__(25);

var VizBehavior_1 = __webpack_require__(5);

var hocUtils_1 = __webpack_require__(7);

var withPlaceholder = function withPlaceholder(Visualization) {
  var useIconPlaceholder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : IconPlaceholder_1.shouldShowIconPlaceholder;
  var config = Visualization.config;
  var themes = config.themes;

  var Wrapper = function Wrapper(props) {
    var _a;

    var dataSources = props.dataSources,
        loading = props.loading,
        options = props.options,
        height = props.height,
        width = props.width;
    var showPlaceholder = useIconPlaceholder(dataSources, loading, options);
    var bgColorFromTheme = colorUtils_1.isColor(options === null || options === void 0 ? void 0 : options.backgroundColor) ? options === null || options === void 0 ? void 0 : options.backgroundColor : (_a = themes === null || themes === void 0 ? void 0 : themes.defaultBackgroundColor) === null || _a === void 0 ? void 0 : _a.call(themes, props);

    if (config.supports.includes(VizBehavior_1.VizBehavior.PLACEHOLDER) && showPlaceholder) {
      return React.createElement(IconPlaceholder_1.default, {
        "data-test": "icon-placeholder",
        icon: config.icon,
        width: width,
        height: height,
        backgroundColor: bgColorFromTheme
      });
    }

    return React.createElement(Visualization, Object.assign({}, props));
  };

  hocUtils_1.extendStaticWrapperProps({
    Wrapper: Wrapper,
    Visualization: Visualization
  });
  return Wrapper;
};

exports.default = withPlaceholder;

/***/ }),
/* 39 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/toConsumableArray");

/***/ }),
/* 40 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/colorConstants");

/***/ }),
/* 41 */,
/* 42 */,
/* 43 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/extends");

/***/ }),
/* 44 */,
/* 45 */,
/* 46 */,
/* 47 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/domUtils");

/***/ }),
/* 48 */,
/* 49 */,
/* 50 */,
/* 51 */,
/* 52 */,
/* 53 */,
/* 54 */,
/* 55 */,
/* 56 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualization-color-palettes/editors/PresetPalettes");

/***/ }),
/* 57 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(styled_components__WEBPACK_IMPORTED_MODULE_0__);

var VizStyleWrapper = styled_components__WEBPACK_IMPORTED_MODULE_0___default.a.div.attrs(function (_ref) {
  var dataTestKey = _ref.dataTestKey;
  return {
    'data-test': dataTestKey
  };
}).withConfig({
  displayName: "VizStyleWrapper",
  componentId: "sc-6rw6wv-0"
})(["display:flex;justify-content:center;flex-direction:column;width:100%;height:100%;background-color:", ";"], function (props) {
  return props.backgroundColor;
});
VizStyleWrapper.displayName = 'VizStyleWrapper';
/* harmony default export */ __webpack_exports__["default"] = (VizStyleWrapper);

/***/ }),
/* 58 */,
/* 59 */,
/* 60 */,
/* 61 */,
/* 62 */
/***/ (function(module, exports) {

module.exports = require("lodash/pick");

/***/ }),
/* 63 */
/***/ (function(module, exports) {

module.exports = require("lodash/isEmpty");

/***/ }),
/* 64 */,
/* 65 */,
/* 66 */,
/* 67 */,
/* 68 */,
/* 69 */,
/* 70 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_configUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var _utils_configUtils__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_utils_configUtils__WEBPACK_IMPORTED_MODULE_1__);


var StaticBackgroundColorEditor = {
  label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Static Background'),
  option: 'backgroundColor',
  editor: 'editor.color',
  showEditor: function showEditor(_ref) {
    var options = _ref.options;
    return !Object(_utils_configUtils__WEBPACK_IMPORTED_MODULE_1__["isDynamicOption"])(options.backgroundColor);
  }
};
/* harmony default export */ __webpack_exports__["default"] = (StaticBackgroundColorEditor);

/***/ }),
/* 71 */,
/* 72 */,
/* 73 */,
/* 74 */,
/* 75 */,
/* 76 */,
/* 77 */,
/* 78 */,
/* 79 */,
/* 80 */,
/* 81 */,
/* 82 */,
/* 83 */,
/* 84 */,
/* 85 */,
/* 86 */,
/* 87 */,
/* 88 */,
/* 89 */,
/* 90 */,
/* 91 */,
/* 92 */,
/* 93 */,
/* 94 */,
/* 95 */,
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultContext = void 0;
exports.defaultContext = {
  trendColorConfig: [{
    to: 0,
    value: '#9E2520'
  }, {
    from: 0,
    value: '#1C6B2D'
  }],
  majorColorConfig: [{
    to: 20,
    value: '#D41F1F'
  }, {
    from: 20,
    to: 40,
    value: '#D94E17'
  }, {
    from: 40,
    to: 60,
    value: '#CBA700'
  }, {
    from: 60,
    to: 80,
    value: '#669922'
  }, {
    from: 80,
    value: '#118832'
  }]
};

/***/ }),
/* 97 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDynamicMajorColorEditor", function() { return getDynamicMajorColorEditor; });
/* harmony import */ var _splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_configUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var _utils_configUtils__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_utils_configUtils__WEBPACK_IMPORTED_MODULE_1__);


var getDynamicMajorColorEditor = function getDynamicMajorColorEditor(_ref) {
  var defaultContext = _ref.defaultContext,
      defaultPalettesConfig = _ref.defaultPalettesConfig;
  return {
    label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Dynamic Major Value'),
    option: 'majorColor',
    context: 'majorColorEditorConfig',
    editor: 'editor.dynamicColor',
    showEditor: function showEditor(_ref2) {
      var options = _ref2.options;
      return Object(_utils_configUtils__WEBPACK_IMPORTED_MODULE_1__["isDynamicOption"])(options.majorColor);
    },
    editorProps: {
      labelPosition: 'left',
      flyoutTitle: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Dynamic Coloring: Major Value'),
      formatters: [{
        label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Ranges'),
        value: 'rangeValue',
        defaults: {
          majorValue: defaultContext.majorColorConfig
        }
      } // TODO(fkurniawan): add back in when FormatterEditor supports full MatchValue editor
      // {
      //     label: _('Matches'),
      //     value: 'matchValue',
      //     defaults: {
      //         majorValue: [{ match: 'foo', value: '#f00' }],
      //     },
      // },
      ],
      dataSelectors: [{
        label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Major Value'),
        value: 'majorValue'
      }],
      defaultPalettesConfig: defaultPalettesConfig
    }
  };
};

/***/ }),
/* 98 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDynamicTrendColorEditor", function() { return getDynamicTrendColorEditor; });
/* harmony import */ var _splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_configUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var _utils_configUtils__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_utils_configUtils__WEBPACK_IMPORTED_MODULE_1__);


var getDynamicTrendColorEditor = function getDynamicTrendColorEditor(_ref) {
  var defaultContext = _ref.defaultContext,
      defaultPalettesConfig = _ref.defaultPalettesConfig;
  return {
    label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Dynamic Trend'),
    option: 'trendColor',
    context: 'trendColorEditorConfig',
    editor: 'editor.dynamicColor',
    showEditor: function showEditor(_ref2) {
      var options = _ref2.options;
      return Object(_utils_configUtils__WEBPACK_IMPORTED_MODULE_1__["isDynamicOption"])(options.trendColor);
    },
    editorProps: {
      labelPosition: 'left',
      flyoutTitle: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Dynamic Coloring: Trend'),
      formatters: [{
        label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Ranges'),
        value: 'rangeValue',
        defaults: {
          trendValue: defaultContext.trendColorConfig
        }
      }],
      dataSelectors: [{
        label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Trend'),
        value: 'trendValue'
      }],
      defaultPalettesConfig: defaultPalettesConfig
    }
  };
};

/***/ }),
/* 99 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDynamicBackgroundColorEditor", function() { return getDynamicBackgroundColorEditor; });
/* harmony import */ var _splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_configUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var _utils_configUtils__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_utils_configUtils__WEBPACK_IMPORTED_MODULE_1__);


var getDynamicBackgroundColorEditor = function getDynamicBackgroundColorEditor(_ref) {
  var defaultContext = _ref.defaultContext,
      defaultPalettesConfig = _ref.defaultPalettesConfig;
  return {
    label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Dynamic Background'),
    option: 'backgroundColor',
    context: 'backgroundColorEditorConfig',
    editor: 'editor.dynamicColor',
    showEditor: function showEditor(_ref2) {
      var options = _ref2.options;
      return Object(_utils_configUtils__WEBPACK_IMPORTED_MODULE_1__["isDynamicOption"])(options.backgroundColor);
    },
    editorProps: {
      labelPosition: 'left',
      flyoutTitle: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Dynamic Coloring: Background'),
      formatters: [{
        label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Ranges'),
        value: 'rangeValue',
        defaults: {
          majorValue: defaultContext.majorColorConfig,
          trendValue: defaultContext.trendColorConfig
        }
      } // TODO(fkurniawan): add back in when FormatterEditor supports full MatchValue editor
      // {
      //     label: _('Matches'),
      //     value: 'matchValue',
      //     defaults: {
      //         majorValue: [{ match: 'foo', value: '#f00' }],
      //     },
      // },
      ],
      dataSelectors: [{
        label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Major Value'),
        value: 'majorValue'
      }, {
        label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Trend'),
        value: 'trendValue'
      }],
      defaultPalettesConfig: defaultPalettesConfig
    }
  };
};

/***/ }),
/* 100 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__);

var StaticMajorAndTrendLayout = [[{
  label: 'Unit Position',
  // todo: we need a new editor combining unit and position
  option: 'unitPosition',
  editor: 'editor.select',
  editorProps: {
    values: [{
      label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Before'),
      value: 'before'
    }, {
      label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('After'),
      value: 'after'
    }]
  },
  showEditor: function showEditor(_ref) {
    var options = _ref.options;
    return options.showValue || options.showValue === undefined;
  }
}, {
  label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Unit Label'),
  option: 'unit',
  editor: 'editor.text',
  showEditor: function showEditor(_ref2) {
    var options = _ref2.options;
    return options.showValue || options.showValue === undefined;
  }
}], [{
  label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Precision'),
  option: 'numberPrecision',
  editor: 'editor.number',
  editorProps: {
    min: 0,
    max: 20
  },
  showEditor: function showEditor(_ref3) {
    var options = _ref3.options;
    return options.showValue || options.showValue === undefined;
  }
}, {
  label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Major Value Size (px)'),
  option: 'majorFontSize',
  editor: 'editor.number',
  editorProps: {
    min: 1
  },
  placeholder: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Auto'),
  showEditor: function showEditor(_ref4) {
    var options = _ref4.options;
    return options.showValue || options.showValue === undefined;
  }
}], [{
  label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Trend Display'),
  option: 'trendDisplay',
  editor: 'editor.select',
  editorProps: {
    values: [{
      label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Percent'),
      value: 'percent'
    }, {
      label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Absolute'),
      value: 'absolute'
    }, {
      label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Off'),
      value: 'off'
    }]
  },
  showEditor: function showEditor(_ref5) {
    var options = _ref5.options;
    return options.showValue || options.showValue === undefined;
  }
}, {
  label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Trend Size (px)'),
  option: 'trendFontSize',
  editor: 'editor.number',
  editorProps: {
    min: 1
  },
  placeholder: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Auto'),
  showEditor: function showEditor(_ref6) {
    var options = _ref6.options;
    return options.showValue || options.showValue === undefined;
  },
  isDisabled: function isDisabled(_ref7) {
    var options = _ref7.options;
    return options.trendDisplay === 'off';
  }
}]];
/* harmony default export */ __webpack_exports__["default"] = (StaticMajorAndTrendLayout);

/***/ }),
/* 101 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_configUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var _utils_configUtils__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_utils_configUtils__WEBPACK_IMPORTED_MODULE_1__);


var StaticMajorColorEditor = {
  label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Static Major Value'),
  option: 'majorColor',
  editor: 'editor.color',
  showEditor: function showEditor(_ref) {
    var options = _ref.options;
    return !Object(_utils_configUtils__WEBPACK_IMPORTED_MODULE_1__["isDynamicOption"])(options.majorColor);
  }
};
/* harmony default export */ __webpack_exports__["default"] = (StaticMajorColorEditor);

/***/ }),
/* 102 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_configUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var _utils_configUtils__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_utils_configUtils__WEBPACK_IMPORTED_MODULE_1__);


var StaticTrendColorEditor = {
  label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_0__["_"])('Static Trend'),
  option: 'trendColor',
  editor: 'editor.color',
  showEditor: function showEditor(_ref) {
    var options = _ref.options;
    return !Object(_utils_configUtils__WEBPACK_IMPORTED_MODULE_1__["isDynamicOption"])(options.trendColor);
  },
  isDisabled: function isDisabled(_ref2) {
    var options = _ref2.options;
    return options.trendDisplay === 'off';
  }
};
/* harmony default export */ __webpack_exports__["default"] = (StaticTrendColorEditor);

/***/ }),
/* 103 */,
/* 104 */,
/* 105 */,
/* 106 */,
/* 107 */,
/* 108 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations/SingleValueBasic");

/***/ }),
/* 109 */,
/* 110 */,
/* 111 */,
/* 112 */,
/* 113 */,
/* 114 */,
/* 115 */,
/* 116 */,
/* 117 */,
/* 118 */,
/* 119 */,
/* 120 */,
/* 121 */,
/* 122 */,
/* 123 */,
/* 124 */,
/* 125 */,
/* 126 */,
/* 127 */,
/* 128 */,
/* 129 */,
/* 130 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-icons/Activity");

/***/ }),
/* 131 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-icons/Clock");

/***/ }),
/* 132 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-icons/Pencil");

/***/ }),
/* 133 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-icons/Star");

/***/ }),
/* 134 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-icons/Question");

/***/ }),
/* 135 */,
/* 136 */,
/* 137 */,
/* 138 */,
/* 139 */,
/* 140 */,
/* 141 */,
/* 142 */,
/* 143 */,
/* 144 */,
/* 145 */,
/* 146 */,
/* 147 */,
/* 148 */,
/* 149 */,
/* 150 */,
/* 151 */,
/* 152 */,
/* 153 */,
/* 154 */,
/* 155 */,
/* 156 */,
/* 157 */,
/* 158 */,
/* 159 */,
/* 160 */,
/* 161 */,
/* 162 */,
/* 163 */,
/* 164 */,
/* 165 */,
/* 166 */,
/* 167 */,
/* 168 */,
/* 169 */,
/* 170 */,
/* 171 */,
/* 172 */,
/* 173 */,
/* 174 */,
/* 175 */,
/* 176 */,
/* 177 */,
/* 178 */,
/* 179 */,
/* 180 */,
/* 181 */,
/* 182 */,
/* 183 */,
/* 184 */,
/* 185 */,
/* 186 */,
/* 187 */,
/* 188 */,
/* 189 */,
/* 190 */,
/* 191 */,
/* 192 */,
/* 193 */,
/* 194 */,
/* 195 */,
/* 196 */,
/* 197 */,
/* 198 */,
/* 199 */,
/* 200 */,
/* 201 */,
/* 202 */,
/* 203 */,
/* 204 */,
/* 205 */,
/* 206 */,
/* 207 */,
/* 208 */,
/* 209 */,
/* 210 */,
/* 211 */,
/* 212 */,
/* 213 */,
/* 214 */,
/* 215 */,
/* 216 */,
/* 217 */,
/* 218 */,
/* 219 */,
/* 220 */,
/* 221 */,
/* 222 */,
/* 223 */,
/* 224 */,
/* 225 */,
/* 226 */,
/* 227 */,
/* 228 */,
/* 229 */,
/* 230 */,
/* 231 */,
/* 232 */,
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.themes = exports.computeVizProps = exports.PureSingleValueIcon = exports.config = void 0;

var React = __webpack_require__(1);

var RemoteIcon_1 = __webpack_require__(234);

var iconUtils_1 = __webpack_require__(235);

var SingleValueIcon_1 = __webpack_require__(254);

var withDashboardViz_1 = __webpack_require__(27);

var config_1 = __webpack_require__(236);

exports.config = config_1.default;
exports.PureSingleValueIcon = SingleValueIcon_1.default;

var computeVizProps = function computeVizProps(_ref) {
  var hasEventHandlers = _ref.hasEventHandlers,
      mode = _ref.mode,
      icon = _ref.icon,
      onValueClick = _ref.onValueClick,
      _ref$IconComponent = _ref.IconComponent,
      IconComponent = _ref$IconComponent === void 0 ? null : _ref$IconComponent,
      themeFunc = _ref.themeFunc;

  // Click handler
  if (icon && (iconUtils_1.isRemoteIcon(icon) || iconUtils_1.isDataURI(icon))) {
    var onIconClick = hasEventHandlers && mode === 'view' ? onValueClick : null;
    IconComponent = React.createElement(RemoteIcon_1.default, {
      iconURL: icon,
      onIconClick: onIconClick
    });
  }

  return {
    IconComponent: IconComponent,
    defaultFontColor: themeFunc('defaultFontColor'),
    defaultBlockFontColor: themeFunc('defaultBlockFontColor')
  };
};

exports.computeVizProps = computeVizProps;
var viz = withDashboardViz_1.default({
  ReactViz: SingleValueIcon_1.default,
  vizConfig: config_1.default,
  computeVizProps: exports.computeVizProps
});
exports.themes = config_1.default.themes;
exports.default = viz;

/***/ }),
/* 234 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/RemoteIcon");

/***/ }),
/* 235 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/iconUtils");

/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _toConsumableArray = __webpack_require__(39);

Object.defineProperty(exports, "__esModule", {
  value: true
});

var i18n_1 = __webpack_require__(3);

var schemaUtils_1 = __webpack_require__(14);

var PresetPalettes_1 = __webpack_require__(56);

var pick_1 = __webpack_require__(21);

var variables_1 = __webpack_require__(19);

var singleValueContext_1 = __webpack_require__(96);

var StaticMajorAndTrendLayout_1 = __webpack_require__(100);

var StaticBackgroundColorEditor_1 = __webpack_require__(70);

var StaticIconColorEditor_1 = __webpack_require__(237);

var StaticMajorColorEditor_1 = __webpack_require__(101);

var StaticTrendColorEditor_1 = __webpack_require__(102);

var DynamicMajorColorEditor_1 = __webpack_require__(97);

var DynamicTrendColorEditor_1 = __webpack_require__(98);

var DynamicBackgroundColorEditor_1 = __webpack_require__(99);

var VizBehavior_1 = __webpack_require__(5);

var configUtils_1 = __webpack_require__(8);

var VizCategory_1 = __webpack_require__(26);

var dataContract = {
  requiredDataSources: [{
    name: 'primary',
    description: 'DataSource that powers the visualization'
  }],
  optionalDataSources: [],
  initialRequestParams: {
    primary: {
      offset: 0,
      count: 10000
    }
  }
};
var size = {
  initialWidth: 250,
  initialHeight: 250
};
var optionsSchema = {
  backgroundColor: {
    default: 'transparent',
    description: 'Specify the color for the background. You may use a dataSource to apply the color. The hex value format should be “#FFFFFF”.',
    pattern: schemaUtils_1.COLOR_OR_TOKEN_PATTERN,
    type: 'string'
  },
  icon: {
    default: 'default',
    description: 'Specify an icon.',
    type: 'string'
  },
  iconColor: {
    default: null,
    description: 'Specify the color for the icon. You may use a dataSource to apply the color. The hex value format should be “#FFFFFF”. The default for enterprise light is "#000000". The default for enterprise dark is "#ffffff". The default for prisma dark is "rgba(255, 255, 255, 0.98)".',
    pattern: schemaUtils_1.COLOR_OR_TOKEN_PATTERN,
    type: 'string'
  },
  iconOpacity: {
    default: 1,
    description: 'Specify the opacity for the icon using a number between 0 and 1 (inclusive).',
    type: 'number'
  },
  iconPosition: {
    default: 'before',
    description: 'Specify where to display the icon in relation to the major value.',
    type: 'string'
  },
  majorColor: {
    default: '> themes.defaultFontColor',
    description: 'Specify the color for the major value.  You may use a dataSource to apply the color. The hex value format should be “#FFFFFF”. The default for enterprise light is "#000000". The default for enterprise dark is "#ffffff". The default for prisma dark is "rgba(255, 255, 255, 0.98)".',
    pattern: schemaUtils_1.COLOR_OR_TOKEN_PATTERN,
    type: 'string'
  },
  majorFontSize: {
    description: 'Specify the font size (px) for the major value. By default the major value font size is calculated dynamically based on the available space.',
    type: 'number'
  },
  majorValue: {
    default: '> primary|seriesByPrioritizedTypes("number", "string", "time")|lastPoint()',
    description: 'The major value to display in the visualization.',
    type: ['string', 'number']
  },
  majorValueField: {
    default: '> majorValue | getField()',
    description: 'The field name of major value.',
    type: 'string'
  },
  numberPrecision: {
    default: 0,
    maximum: 20,
    minimum: 0,
    description: 'Specify the number of decimal places to display. For example, to display 3 decimal places, use a value of 3. The maximum value is 20.',
    type: 'number'
  },
  shouldAbbreviateTrendValue: {
    default: false,
    description: 'Specify whether to abbreviate the trend value to 2 decimal points. A magnitude unit will be displayed.',
    type: 'boolean'
  },
  shouldUseThousandSeparators: {
    default: true,
    description: 'Specify whether numeric values use commas as thousandths separators.',
    type: 'boolean'
  },
  showValue: {
    default: true,
    description: 'Specify whether to enable or disable the value and trend indicator displays.',
    type: 'boolean'
  },
  trendColor: {
    default: '> themes.defaultFontColor',
    description: 'Specify the color for the trend value. You may use a dataSource to apply the color. The hex value format should be “#FFFFFF”. The default for enterprise light is "#000000". The default for enterprise dark is "#ffffff". The default for prisma dark is "rgba(255, 255, 255, 0.98)".',
    pattern: schemaUtils_1.COLOR_OR_TOKEN_PATTERN,
    type: 'string'
  },
  trendDisplay: {
    default: 'absolute',
    description: 'Specify whether the trend value is displayed as a percentage or an absolute count.',
    pattern: schemaUtils_1.getPattern(['off', 'percent', 'absolute']),
    type: 'string'
  },
  trendFontSize: {
    description: 'Specify the font size (px) for the trend value. By default the trend value font size is calculated dynamically based on the available space.',
    type: 'number'
  },
  trendValue: {
    default: '> primary|seriesByPrioritizedTypes("number", "string", "time")|delta(-2)',
    description: 'The trend value to display in the visualization.',
    type: 'number'
  },
  underLabel: {
    description: 'Specify the text that appears below the major value.',
    type: 'string'
  },
  unit: {
    description: 'Specify text to show next to the major value.',
    type: 'string'
  },
  unitPosition: {
    default: 'after',
    description: 'Specify whether the unit text should appear before or after the major value.',
    pattern: schemaUtils_1.getPattern(['before', 'after']),
    type: 'string'
  }
};
var basePresetContext = {
  iconColorEditorConfig: undefined,
  majorColorEditorConfig: undefined,
  trendColorEditorConfig: undefined,
  backgroundColorEditorConfig: undefined
};
var basePresetOptions = {
  iconColor: undefined,
  majorColor: undefined,
  trendColor: undefined,
  backgroundColor: undefined
};
var presets = [{
  // dummy context variables to allow for resetting of unused context states
  label: i18n_1._('None'),
  name: 'singleValueIcon.none',
  value: {
    context: Object.assign({}, basePresetContext),
    options: Object.assign({}, basePresetOptions)
  }
}, {
  label: i18n_1._('Icon'),
  name: 'singleValueIcon.icon',
  value: {
    context: Object.assign(Object.assign({}, basePresetContext), {
      iconColorEditorConfig: singleValueContext_1.defaultContext.majorColorConfig
    }),
    options: Object.assign(Object.assign({}, basePresetOptions), {
      iconColor: '> majorValue | rangeValue(iconColorEditorConfig)'
    })
  }
}, {
  label: i18n_1._('Major Value'),
  name: 'singleValueIcon.majorValue',
  value: {
    context: Object.assign(Object.assign({}, basePresetContext), {
      majorColorEditorConfig: singleValueContext_1.defaultContext.majorColorConfig
    }),
    options: Object.assign(Object.assign({}, basePresetOptions), {
      majorColor: '> majorValue | rangeValue(majorColorEditorConfig)'
    })
  }
}, {
  label: i18n_1._('Trend'),
  name: 'singleValueIcon.trend',
  value: {
    context: Object.assign(Object.assign({}, basePresetContext), {
      trendColorEditorConfig: singleValueContext_1.defaultContext.trendColorConfig
    }),
    options: Object.assign(Object.assign({}, basePresetOptions), {
      trendColor: '> trendValue | rangeValue(trendColorEditorConfig)'
    })
  }
}, {
  label: i18n_1._('Icon & Major Value'),
  name: 'singleValueIcon.iconAndMajorValue',
  value: {
    context: Object.assign(Object.assign({}, basePresetContext), {
      iconColorEditorConfig: singleValueContext_1.defaultContext.majorColorConfig,
      majorColorEditorConfig: singleValueContext_1.defaultContext.majorColorConfig
    }),
    options: Object.assign(Object.assign({}, basePresetOptions), {
      iconColor: '> majorValue | rangeValue(iconColorEditorConfig)',
      majorColor: '> majorValue | rangeValue(majorColorEditorConfig)'
    })
  }
}, {
  label: i18n_1._('Background'),
  name: 'singleValueIcon.background',
  value: {
    context: Object.assign(Object.assign({}, basePresetContext), {
      backgroundColorEditorConfig: singleValueContext_1.defaultContext.majorColorConfig
    }),
    options: Object.assign(Object.assign({}, basePresetOptions), {
      backgroundColor: '> majorValue | rangeValue(backgroundColorEditorConfig)'
    })
  }
}];
/**
 * TODO
 * common theme variables such as enterprise.defaultFontColor
 * that are repeated in multiple viz config themes should be DRYd up.
 */

var themes = {
  defaultFontColor: function defaultFontColor(props) {
    return pick_1.default({
      enterprise: {
        dark: variables_1.default.textColor(props),
        light: variables_1.default.gray20(props)
      },
      prisma: variables_1.default.contentColorActive(props)
    })(props);
  },
  defaultBlockFontColor: function defaultBlockFontColor(props) {
    return pick_1.default({
      enterprise: variables_1.default.white(props),
      prisma: variables_1.default.contentColorActive(props)
    })(props);
  }
};
var editorConfig = [{
  label: i18n_1._('Major Value & Trend'),
  layout: [[{
    label: i18n_1._('Enable'),
    option: 'showValue',
    editor: 'editor.toggle'
  }]].concat(_toConsumableArray(StaticMajorAndTrendLayout_1.default))
}, {
  label: i18n_1._('Coloring'),
  layout: [[{
    label: 'Dynamic Elements',
    key: 'presetSelector',
    editor: 'editor.presetSelector',
    editorProps: {
      presets: presets,
      value: function value(_ref) {
        var context = _ref.context,
            options = _ref.options;
        var initialPreset = configUtils_1.getInitialPreset(context, options, presets);
        return initialPreset && initialPreset.label || null;
      }
    }
  }], StaticIconColorEditor_1.default, [{
    label: i18n_1._('Dynamic Icon'),
    option: 'iconColor',
    context: 'iconColorEditorConfig',
    editor: 'editor.dynamicColor',
    showEditor: function showEditor(_ref2) {
      var options = _ref2.options;
      return configUtils_1.isDynamicOption(options.iconColor);
    },
    editorProps: {
      labelPosition: 'left',
      flyoutTitle: 'Dynamic Coloring: Icon',
      formatters: [{
        label: i18n_1._('Ranges'),
        value: 'rangeValue',
        defaults: {
          trendValue: singleValueContext_1.defaultContext.trendColorConfig,
          majorValue: singleValueContext_1.defaultContext.majorColorConfig
        }
      } // TODO(fkurniawan): add back in when FormatterEditor supports full MatchValue editor
      // {
      //     label: _('Matches'),
      //     value: 'matchValue',
      //     defaults: {
      //         majorValue: [{ match: 'foo', value: '#f00' }],
      //     },
      // },
      ],
      dataSelectors: [{
        label: i18n_1._('Major Value'),
        value: 'majorValue'
      }, {
        label: i18n_1._('Trend'),
        value: 'trendValue'
      }],
      defaultPalettesConfig: PresetPalettes_1.defaultPalettesConfig
    }
  }], [Object.assign(Object.assign({}, StaticMajorColorEditor_1.default), {
    editorProps: {
      labelPosition: 'left',
      themes: themes
    }
  })], [DynamicMajorColorEditor_1.getDynamicMajorColorEditor({
    defaultContext: singleValueContext_1.defaultContext,
    defaultPalettesConfig: PresetPalettes_1.defaultPalettesConfig
  })], [Object.assign(Object.assign({}, StaticTrendColorEditor_1.default), {
    editorProps: {
      labelPosition: 'left',
      themes: themes
    }
  })], [DynamicTrendColorEditor_1.getDynamicTrendColorEditor({
    defaultContext: singleValueContext_1.defaultContext,
    defaultPalettesConfig: PresetPalettes_1.defaultPalettesConfig
  })], [Object.assign(Object.assign({}, StaticBackgroundColorEditor_1.default), {
    editorProps: {
      labelPosition: 'left',
      themes: themes
    }
  })], [DynamicBackgroundColorEditor_1.getDynamicBackgroundColorEditor({
    defaultContext: singleValueContext_1.defaultContext,
    defaultPalettesConfig: PresetPalettes_1.defaultPalettesConfig
  })]]
}];
/**
 * visualization configuration
 */

var config = {
  /**
   * unique viz key
   */
  key: 'splunk.singlevalueicon',

  /**
   * viz name
   */
  name: 'Single Value Icon',
  category: VizCategory_1.VizCategory.SINGLE_VALUE,

  /**
   * viz icon
   */
  icon: null,
  dataContract: dataContract,
  size: size,
  defaultContext: singleValueContext_1.defaultContext,
  optionsSchema: optionsSchema,
  editorConfig: editorConfig,
  events: {
    'value.click': {
      description: 'trigger when user clicks major value or icon',
      payloadKeys: ['majorValue', 'trendValue', 'icon']
    }
  },
  supports: [VizBehavior_1.VizBehavior.DYNAMIC_OPTIONS, VizBehavior_1.VizBehavior.EVENTS],
  themes: themes
};
exports.default = configUtils_1.enhanceConfig(config);

/***/ }),
/* 237 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(39);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var _splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _splunk_visualizations_shared_colorConstants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(40);
/* harmony import */ var _splunk_visualizations_shared_colorConstants__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_splunk_visualizations_shared_colorConstants__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _utils_configUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8);
/* harmony import */ var _utils_configUtils__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_utils_configUtils__WEBPACK_IMPORTED_MODULE_3__);




var StaticIconColorEditor = [{
  label: Object(_splunk_ui_utils_i18n__WEBPACK_IMPORTED_MODULE_1__["_"])('Static Icon'),
  option: 'iconColor',
  editor: 'editor.color',
  showEditor: function showEditor(_ref) {
    var options = _ref.options;
    return !Object(_utils_configUtils__WEBPACK_IMPORTED_MODULE_3__["isDynamicOption"])(options.iconColor);
  },
  editorProps: {
    labelPosition: 'left',
    value: null,
    palette: [null].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(_splunk_visualizations_shared_colorConstants__WEBPACK_IMPORTED_MODULE_2__["COLOR_EDITOR_PALETTE"]))
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (StaticIconColorEditor);

/***/ }),
/* 238 */,
/* 239 */,
/* 240 */,
/* 241 */,
/* 242 */,
/* 243 */,
/* 244 */,
/* 245 */,
/* 246 */,
/* 247 */,
/* 248 */,
/* 249 */,
/* 250 */,
/* 251 */,
/* 252 */,
/* 253 */,
/* 254 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: external "@babel/runtime/helpers/extends"
var extends_ = __webpack_require__(43);
var extends_default = /*#__PURE__*/__webpack_require__.n(extends_);

// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(1);
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);

// EXTERNAL MODULE: external "prop-types"
var external_prop_types_ = __webpack_require__(0);
var external_prop_types_default = /*#__PURE__*/__webpack_require__.n(external_prop_types_);

// EXTERNAL MODULE: external "styled-components"
var external_styled_components_ = __webpack_require__(4);
var external_styled_components_default = /*#__PURE__*/__webpack_require__.n(external_styled_components_);

// EXTERNAL MODULE: external "lodash/pick"
var pick_ = __webpack_require__(62);
var pick_default = /*#__PURE__*/__webpack_require__.n(pick_);

// EXTERNAL MODULE: external "lodash/isEmpty"
var isEmpty_ = __webpack_require__(63);
var isEmpty_default = /*#__PURE__*/__webpack_require__.n(isEmpty_);

// EXTERNAL MODULE: external "@splunk/visualizations-shared/style"
var style_ = __webpack_require__(13);

// EXTERNAL MODULE: external "@splunk/ui-utils/i18n"
var i18n_ = __webpack_require__(3);

// EXTERNAL MODULE: external "@splunk/visualizations-shared/SizeAwareWrapper"
var SizeAwareWrapper_ = __webpack_require__(17);
var SizeAwareWrapper_default = /*#__PURE__*/__webpack_require__.n(SizeAwareWrapper_);

// EXTERNAL MODULE: external "@splunk/visualizations-shared/Message"
var Message_ = __webpack_require__(9);
var Message_default = /*#__PURE__*/__webpack_require__.n(Message_);

// EXTERNAL MODULE: ./src/common/components/VizStyleWrapper.jsx
var VizStyleWrapper = __webpack_require__(57);

// EXTERNAL MODULE: external "@babel/runtime/helpers/defineProperty"
var defineProperty_ = __webpack_require__(6);
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty_);

// EXTERNAL MODULE: external "@splunk/visualizations/SingleValueBasic"
var SingleValueBasic_ = __webpack_require__(108);
var SingleValueBasic_default = /*#__PURE__*/__webpack_require__.n(SingleValueBasic_);

// EXTERNAL MODULE: external "@splunk/react-icons/Activity"
var Activity_ = __webpack_require__(130);
var Activity_default = /*#__PURE__*/__webpack_require__.n(Activity_);

// EXTERNAL MODULE: external "@splunk/react-icons/Clock"
var Clock_ = __webpack_require__(131);
var Clock_default = /*#__PURE__*/__webpack_require__.n(Clock_);

// EXTERNAL MODULE: external "@splunk/react-icons/Pencil"
var Pencil_ = __webpack_require__(132);
var Pencil_default = /*#__PURE__*/__webpack_require__.n(Pencil_);

// EXTERNAL MODULE: external "@splunk/react-icons/Star"
var Star_ = __webpack_require__(133);
var Star_default = /*#__PURE__*/__webpack_require__.n(Star_);

// EXTERNAL MODULE: external "@splunk/react-icons/Question"
var Question_ = __webpack_require__(134);
var Question_default = /*#__PURE__*/__webpack_require__.n(Question_);

// EXTERNAL MODULE: ./src/common/utils/singleValueUtils.js
var singleValueUtils = __webpack_require__(15);

// CONCATENATED MODULE: ./src/SingleValueIcon/PureSingleValueIcon/utils/iconUtils.js
// Todo: this will be replaced by IconLibrary.Registry






var ICON_POSITIONS = ['before', 'after', 'top', 'below'];
var ICON_HORIZONTAL_RATIO = 0.4;
var ICON_VERTICAL_RATIO = 0.2;
var iconMap = {
  activity: Activity_default.a,
  clock: Clock_default.a,
  pencil: Pencil_default.a,
  star: Star_default.a,
  default: Question_default.a
};
/*
 * get icon from icon map
 * @param {String} key
 * @return {Icon} icon component from icon map
 */

var getIcon = function getIcon(key) {
  return iconMap[key.toLowerCase()] || iconMap.default;
};
/*
 * @method isValidPosition
 * @param {String} iconPosition
 * @returns {Bool}
 */

var isValidPosition = function isValidPosition(iconPosition) {
  return ICON_POSITIONS.indexOf(iconPosition) > -1;
};
/*
 * @method isHorizontal
 * @param {String} iconPosition
 * @returns {Bool}
 */

var isHorizontal = function isHorizontal(iconPosition) {
  return iconPosition === 'before' || iconPosition === 'after';
};
/*
 * @method getIconWidth
 * @param {Object} props
 * @param {Bool} props.showHorizontal
 * @param {Number} props.width
 * @returns {Number} iconWidth
 */

var getIconWidth = function getIconWidth(_ref) {
  var showHorizontal = _ref.showHorizontal,
      width = _ref.width;
  return showHorizontal ? width * ICON_HORIZONTAL_RATIO : width * ICON_VERTICAL_RATIO;
};
/*
 * @method getIconHeight
 * @param {Object} props
 * @param {Bool} props.showHorizontal
 * @param {Number} props.height
 * @returns {Number} iconHeight
 */

var getIconHeight = function getIconHeight(_ref2) {
  var showHorizontal = _ref2.showHorizontal,
      height = _ref2.height;
  return showHorizontal ? height : height * 0.25;
};
/*
 * @method getIconFontSize
 * @param {Object} props
 * @param {Bool} props.showValue
 * @param {Number} props.majorTextFontSize
 * @param {Number} props.iconWidth
 * @returns {Number} iconFontSize
 */

var getIconFontSize = function getIconFontSize(_ref3) {
  var showValue = _ref3.showValue,
      majorTextFontSize = _ref3.majorTextFontSize,
      iconWidth = _ref3.iconWidth;
  return showValue ? majorTextFontSize * 0.5 : iconWidth;
};
/*
 * @method getSVGDimension
 * @param {Object} props
 * @param {Bool} props.showValue
 * @param {Number} props.containerDimension
 * @param {Number} props.iconDimension
 * @param {Number} props.ratio
 * @returns {Number} svg icon dimension
 */

var getSVGDimension = function getSVGDimension(_ref4) {
  var showValue = _ref4.showValue,
      containerDimension = _ref4.containerDimension,
      iconDimension = _ref4.iconDimension,
      ratio = _ref4.ratio;
  return showValue ? iconDimension * ratio : containerDimension;
};
/*
 * @method getValuesWidth
 * @param {Object} props
 * @param {Bool} props.showHorizontal
 * @param {Number} props.width
 * @returns {Number} valuesWidth
 */

var getValuesWidth = function getValuesWidth(_ref5) {
  var showHorizontal = _ref5.showHorizontal,
      width = _ref5.width;
  return showHorizontal ? width * (1 - ICON_HORIZONTAL_RATIO) : width;
};
/*
 * @method getValuesHeight
 * @param {Object} props
 * @param {Bool} props.showHorizontal
 * @param {Number} props.height
 * @param {Number} props.iconHeight
 * @returns {Number} valuesHeight
 */

var getValuesHeight = function getValuesHeight(_ref6) {
  var showHorizontal = _ref6.showHorizontal,
      height = _ref6.height,
      iconHeight = _ref6.iconHeight;
  return showHorizontal ? height : height - iconHeight;
};
/*
 * getIconColor
 * @param {Object} props
 * @param {String} props.iconColor
 * @param {String} props.backgroundColor
 * @param {String} props.defaultFontColor
 * @param {String} props.defaultBlockFontColor
 * @returns {String} icon color
 */

var iconUtils_getIconColor = function getIconColor(_ref7) {
  var iconColor = _ref7.iconColor,
      backgroundColor = _ref7.backgroundColor,
      defaultFontColor = _ref7.defaultFontColor,
      defaultBlockFontColor = _ref7.defaultBlockFontColor;

  if (Object(singleValueUtils["hasBackground"])(backgroundColor) && !iconColor) {
    return Object(singleValueUtils["getDefaultColorWithBg"])({
      backgroundColor: backgroundColor,
      defaultFontColor: defaultFontColor,
      defaultBlockFontColor: defaultBlockFontColor
    });
  }

  return Object(singleValueUtils["getFormattedColor"])(iconColor, defaultFontColor);
};
// CONCATENATED MODULE: ./src/SingleValueIcon/PureSingleValueIcon/IconContainer.jsx




var StyledIconContainer = external_styled_components_default.a.div.attrs(function () {
  return {
    'data-test': 'single-value-icon-container'
  };
}).withConfig({
  displayName: "IconContainer__StyledIconContainer",
  componentId: "veyyld-0"
})(["margin:0 3%;display:flex;flex-direction:row;align-items:center;justify-content:center;font-size:", "px;height:", "px;color:", ";opacity:", ";cursor:", ";"], function (props) {
  return props.fontSize;
}, function (props) {
  return props.height;
}, function (props) {
  return props.color;
}, function (props) {
  return props.opacity || 1.0;
}, function (props) {
  return props.onClick ? 'pointer' : 'inherit';
});

var IconContainer_IconContainer = function IconContainer(_ref) {
  var width = _ref.width,
      height = _ref.height,
      fontSize = _ref.fontSize,
      color = _ref.color,
      opacity = _ref.opacity,
      icon = _ref.icon,
      IconComponent = _ref.IconComponent,
      onIconClick = _ref.onIconClick;
  var onClick = typeof onIconClick === 'function' ? onIconClick : undefined;

  if (IconComponent) {
    return /*#__PURE__*/external_react_default.a.createElement(StyledIconContainer, {
      width: width,
      height: height,
      onClick: onClick
    }, IconComponent);
  } // todo: remove it after we have proper icon provider


  var Icon = getIcon(icon);
  return /*#__PURE__*/external_react_default.a.createElement(StyledIconContainer, {
    width: width,
    height: height,
    fontSize: fontSize,
    color: color,
    opacity: opacity,
    onClick: onClick
  }, /*#__PURE__*/external_react_default.a.createElement(Icon, null));
};

IconContainer_IconContainer.propTypes = {
  width: external_prop_types_default.a.number.isRequired,
  height: external_prop_types_default.a.number.isRequired,
  fontSize: external_prop_types_default.a.number.isRequired,
  icon: external_prop_types_default.a.string.isRequired,
  IconComponent: external_prop_types_default.a.node,
  color: external_prop_types_default.a.string,
  opacity: external_prop_types_default.a.number,
  onIconClick: external_prop_types_default.a.func
};
/* harmony default export */ var PureSingleValueIcon_IconContainer = (IconContainer_IconContainer);
// CONCATENATED MODULE: ./src/SingleValueIcon/PureSingleValueIcon/SingleValueIconLayout.jsx



function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        defineProperty_default()(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}







var Column = external_styled_components_default.a.div.withConfig({
  displayName: "SingleValueIconLayout__Column",
  componentId: "c8okr6-0"
})(["display:flex;flex-direction:column;justify-content:center;height:100%;width:100%;"]);
var IconRow = external_styled_components_default.a.div.withConfig({
  displayName: "SingleValueIconLayout__IconRow",
  componentId: "c8okr6-1"
})(["display:flex;flex-direction:row;justify-content:center;height:100%;"]);
var IconColumn = external_styled_components_default.a.div.withConfig({
  displayName: "SingleValueIconLayout__IconColumn",
  componentId: "c8okr6-2"
})(["display:flex;flex-direction:column;justify-content:center;height:100%;"]);

var SingleValueIconLayout_SingleValueIconLayout = function SingleValueIconLayout(_ref) {
  var props = extends_default()({}, _ref);

  var majorColor = props.majorColor,
      majorText = props.majorText,
      majorTextFontSize = props.majorTextFontSize,
      majorValueTitle = props.majorValueTitle,
      trendColor = props.trendColor,
      trendText = props.trendText,
      trendTextFontSize = props.trendTextFontSize,
      showTrendIndicator = props.showTrendIndicator,
      unit = props.unit,
      unitPosition = props.unitPosition,
      underLabel = props.underLabel,
      underLabelFontSize = props.underLabelFontSize,
      underLabelColor = props.underLabelColor,
      onValueClick = props.onValueClick,
      iconWidth = props.iconWidth,
      iconHeight = props.iconHeight,
      icon = props.icon,
      iconColor = props.iconColor,
      iconOpacity = props.iconOpacity,
      iconPosition = props.iconPosition,
      iconFontSize = props.iconFontSize,
      showValue = props.showValue,
      svgIconComponent = props.svgIconComponent;
  var iconContainer = /*#__PURE__*/external_react_default.a.createElement(PureSingleValueIcon_IconContainer, {
    width: iconWidth,
    height: iconHeight,
    fontSize: iconFontSize,
    color: iconColor,
    opacity: iconOpacity,
    icon: icon,
    IconComponent: svgIconComponent,
    onIconClick: onValueClick
  });
  var singleValueBasic = showValue ? /*#__PURE__*/external_react_default.a.createElement(SingleValueBasic_default.a, {
    majorColor: majorColor,
    majorText: majorText,
    majorTextFontSize: majorTextFontSize,
    majorValueTitle: majorValueTitle,
    trendColor: trendColor,
    trendText: trendText,
    trendTextFontSize: trendTextFontSize,
    showTrendIndicator: showTrendIndicator,
    unit: unit,
    unitPosition: unitPosition,
    underLabel: underLabel,
    underLabelFontSize: underLabelFontSize,
    underLabelColor: underLabelColor,
    onValueClick: onValueClick
  }) : null;
  var iconLayout = null;
  var showHorizontal = isHorizontal(iconPosition);

  if (showHorizontal) {
    iconLayout = /*#__PURE__*/external_react_default.a.createElement(IconRow, null, iconPosition === 'before' && iconContainer, singleValueBasic, iconPosition === 'after' && iconContainer);
  } else {
    iconLayout = /*#__PURE__*/external_react_default.a.createElement(IconColumn, null, iconPosition === 'top' && iconContainer, singleValueBasic, iconPosition === 'below' && iconContainer);
  }

  return /*#__PURE__*/external_react_default.a.createElement(Column, null, iconLayout);
};

SingleValueIconLayout_SingleValueIconLayout.propTypes = _objectSpread(_objectSpread({}, SingleValueBasic_default.a.propTypes), {}, {
  iconWidth: external_prop_types_default.a.number,
  iconHeight: external_prop_types_default.a.number,
  icon: external_prop_types_default.a.string,
  iconPosition: external_prop_types_default.a.oneOf(['before', 'after', 'top', 'below']),
  iconColor: external_prop_types_default.a.string,
  iconOpacity: external_prop_types_default.a.number,
  iconFontSize: external_prop_types_default.a.number,
  showValue: external_prop_types_default.a.bool,
  svgIconComponent: external_prop_types_default.a.element
});
/* harmony default export */ var PureSingleValueIcon_SingleValueIconLayout = (SingleValueIconLayout_SingleValueIconLayout);
// CONCATENATED MODULE: ./src/SingleValueIcon/PureSingleValueIcon/SingleValueIcon.jsx














var Container = external_styled_components_default.a.div.withConfig({
  displayName: "SingleValueIcon__Container",
  componentId: "y660ip-0"
})(["overflow:hidden;", ";"], function (props) {
  return Object(style_["toDimension"])(pick_default()(props, ['width', 'height']));
});

var SingleValueIcon_SingleValueIcon = function SingleValueIcon(_ref) {
  var props = extends_default()({}, _ref);

  var width = props.width,
      _props$height = props.height,
      height = _props$height === void 0 ? 250 : _props$height,
      style = props.style,
      majorFontSize = props.majorFontSize,
      majorValue = props.majorValue,
      majorValueField = props.majorValueField,
      trendValue = props.trendValue,
      trendFontSize = props.trendFontSize,
      unitPosition = props.unitPosition,
      numberPrecision = props.numberPrecision,
      shouldUseThousandSeparators = props.shouldUseThousandSeparators,
      shouldAbbreviateTrendValue = props.shouldAbbreviateTrendValue,
      icon = props.icon,
      iconOpacity = props.iconOpacity,
      IconComponent = props.IconComponent,
      noDataSources = props.noDataSources,
      noResult = props.noResult,
      onValueClick = props.onValueClick,
      defaultFontColor = props.defaultFontColor,
      defaultBlockFontColor = props.defaultBlockFontColor;
  var defaultColors = {
    defaultBlockFontColor: defaultBlockFontColor,
    defaultFontColor: defaultFontColor
  };

  var _computeColors = Object(singleValueUtils["computeColors"])(props, defaultColors),
      backgroundColor = _computeColors.backgroundColor,
      majorColor = _computeColors.majorColor,
      trendColor = _computeColors.trendColor,
      underLabelColor = _computeColors.underLabelColor;

  var iconColor = iconUtils_getIconColor({
    iconColor: props.iconColor,
    backgroundColor: backgroundColor,
    defaultFontColor: defaultColors.defaultFontColor,
    defaultBlockFontColor: defaultColors.defaultBlockFontColor
  });
  var handleValueClick = Object(external_react_["useCallback"])(function (ev) {
    return Object(singleValueUtils["handleValueClickCallback"])(ev, majorValue, majorValueField, trendValue, onValueClick);
  }, [onValueClick, majorValue, majorValueField, trendValue]);

  var renderVisualization = function renderVisualization(_ref2) {
    var containerWidth = _ref2.width,
        containerHeight = _ref2.height;

    if ((noDataSources || noResult) && !IconComponent) {
      return /*#__PURE__*/external_react_default.a.createElement(Message_default.a, {
        width: containerWidth,
        height: containerHeight,
        message: Object(i18n_["_"])('No Icon'),
        level: "warning"
      });
    }

    var IconLayout = null;

    if ((noDataSources || noResult) && IconComponent) {
      IconLayout = /*#__PURE__*/external_react_default.a.cloneElement(IconComponent, {
        width: containerWidth,
        height: containerHeight,
        color: props.iconColor,
        opacity: iconOpacity
      });
    } else {
      // will update later based on text size
      var _props$showValue = props.showValue,
          showValue = _props$showValue === void 0 ? true : _props$showValue,
          trendDisplay = props.trendDisplay,
          unit = props.unit,
          underLabel = props.underLabel,
          iconPosition = props.iconPosition;

      if (!isValidPosition(iconPosition)) {
        iconPosition = 'before';
      }

      var showHorizontal = isHorizontal(iconPosition);
      var iconWidth = getIconWidth({
        showHorizontal: showHorizontal,
        width: containerWidth
      });
      var iconHeight = getIconHeight({
        showHorizontal: showHorizontal,
        height: containerHeight
      });
      var svgIconComponent = null;

      if (IconComponent) {
        svgIconComponent = /*#__PURE__*/external_react_default.a.cloneElement(IconComponent, {
          width: getSVGDimension({
            showValue: showValue,
            containerDimension: containerWidth,
            iconDimension: iconWidth,
            ratio: 0.25
          }),
          height: getSVGDimension({
            showValue: showValue,
            containerDimension: containerHeight,
            iconDimension: iconHeight,
            ratio: 0.25
          }),
          color: props.iconColor,
          opacity: iconOpacity
        });
      } // claculate major and trend text and font size


      var contentWidth = getValuesWidth({
        showHorizontal: showHorizontal,
        width: containerWidth
      });
      var contentHeight = getValuesHeight({
        showHorizontal: showHorizontal,
        height: containerHeight,
        iconHeight: iconHeight
      });
      var toRemoveList = [{
        key: 'underLabel',
        value: ''
      }, {
        key: 'trendDisplay',
        value: 'off'
      }, {
        key: 'unit',
        value: ''
      }, {
        key: 'showValue',
        value: false
      }];

      var _computeSingleValueCo = Object(singleValueUtils["computeSingleValueContent"])({
        majorValue: majorValue,
        trendValue: trendValue,
        majorFontSize: majorFontSize,
        trendFontSize: trendFontSize,
        trendDisplay: trendDisplay,
        contentWidth: contentWidth,
        contentHeight: contentHeight,
        containerWidth: containerWidth,
        containerHeight: containerHeight,
        unit: unit,
        numberPrecision: numberPrecision,
        shouldUseThousandSeparators: shouldUseThousandSeparators,
        shouldAbbreviateTrendValue: shouldAbbreviateTrendValue,
        toRemoveList: toRemoveList
      }),
          majorText = _computeSingleValueCo.majorText,
          trendText = _computeSingleValueCo.trendText,
          majorTextFontSize = _computeSingleValueCo.majorTextFontSize,
          trendTextFontSize = _computeSingleValueCo.trendTextFontSize,
          majorValueTitle = _computeSingleValueCo.majorValueTitle,
          smallVizProps = _computeSingleValueCo.smallVizProps;

      if (!isEmpty_default()(smallVizProps)) {
        showValue = smallVizProps.showValue;
        trendDisplay = smallVizProps.trendDisplay;
        underLabel = smallVizProps.underLabel;
        unit = smallVizProps.unit;
      }

      var iconFontSize = getIconFontSize({
        showValue: showValue,
        majorTextFontSize: majorTextFontSize,
        iconWidth: iconWidth
      }); // calculate underlabel size

      var underLabelHeight = Object(singleValueUtils["getUnderLabelHeight"])(containerHeight * 0.1);
      var underLabelFontSize = Object(singleValueUtils["getUnderLabel"])({
        underLabel: underLabel,
        width: contentWidth,
        height: underLabelHeight
      });
      IconLayout = /*#__PURE__*/external_react_default.a.createElement(PureSingleValueIcon_SingleValueIconLayout, {
        "data-test": "SingleValueIconLayout",
        majorColor: majorColor,
        majorText: majorText,
        majorTextFontSize: majorTextFontSize,
        majorValueTitle: majorValueTitle,
        trendColor: trendColor,
        trendText: trendText,
        trendTextFontSize: trendTextFontSize,
        showTrendIndicator: Object(singleValueUtils["shouldShowTrend"])(trendDisplay),
        unit: unit,
        unitPosition: unitPosition,
        underLabel: underLabel,
        underLabelFontSize: underLabelFontSize,
        underLabelColor: underLabelColor,
        showValue: showValue,
        iconWidth: iconWidth,
        iconHeight: iconHeight,
        iconFontSize: iconFontSize,
        iconColor: iconColor,
        iconOpacity: iconOpacity,
        iconPosition: iconPosition,
        icon: icon,
        svgIconComponent: svgIconComponent,
        onValueClick: handleValueClick
      });
    }

    return /*#__PURE__*/external_react_default.a.createElement(VizStyleWrapper["default"], {
      backgroundColor: backgroundColor,
      style: style,
      dataTestKey: "SingleValueIconWrapper"
    }, IconLayout);
  };

  return /*#__PURE__*/external_react_default.a.createElement(Container, {
    width: width,
    height: height
  }, /*#__PURE__*/external_react_default.a.createElement(SizeAwareWrapper_default.a, null, function (containerDimension) {
    return renderVisualization(containerDimension);
  }));
};

SingleValueIcon_SingleValueIcon.propTypes = {
  width: external_prop_types_default.a.oneOfType([external_prop_types_default.a.string, external_prop_types_default.a.number]),
  height: external_prop_types_default.a.oneOfType([external_prop_types_default.a.string, external_prop_types_default.a.number]),
  style: external_prop_types_default.a.object,
  majorValue: external_prop_types_default.a.oneOfType([external_prop_types_default.a.string, external_prop_types_default.a.number]),
  majorValueField: external_prop_types_default.a.string,
  majorColor: external_prop_types_default.a.string,
  majorFontSize: external_prop_types_default.a.number,
  trendColor: external_prop_types_default.a.string,
  trendValue: external_prop_types_default.a.oneOfType([external_prop_types_default.a.string, external_prop_types_default.a.number]),
  trendFontSize: external_prop_types_default.a.number,
  trendDisplay: external_prop_types_default.a.oneOf(['absolute', 'percent', 'off']),
  shouldAbbreviateTrendValue: external_prop_types_default.a.bool,
  backgroundColor: external_prop_types_default.a.string,
  unit: external_prop_types_default.a.string,
  unitPosition: external_prop_types_default.a.string,
  underLabel: external_prop_types_default.a.string,
  numberPrecision: external_prop_types_default.a.number,
  shouldUseThousandSeparators: external_prop_types_default.a.bool,
  icon: external_prop_types_default.a.string,
  iconPosition: external_prop_types_default.a.oneOf(['before', 'after', 'top', 'below']),
  iconColor: external_prop_types_default.a.string,
  iconOpacity: external_prop_types_default.a.number,
  showValue: external_prop_types_default.a.bool,
  IconComponent: external_prop_types_default.a.element,
  noDataSources: external_prop_types_default.a.bool,
  noResult: external_prop_types_default.a.bool,
  onValueClick: external_prop_types_default.a.func,
  defaultFontColor: external_prop_types_default.a.string,
  defaultBlockFontColor: external_prop_types_default.a.string
};
SingleValueIcon_SingleValueIcon.defaultProps = {
  width: '100%',
  height: 250,
  majorValue: 'N/A',
  majorValueField: '',
  trendDisplay: 'absolute',
  shouldAbbreviateTrendValue: false,
  numberPrecision: 0,
  shouldUseThousandSeparators: true,
  unitPosition: 'after',
  icon: 'default',
  iconPosition: 'before',
  iconOpacity: 1,
  showValue: true,
  noDataSources: false,
  noResult: false,
  onValueClick: function onValueClick() {}
};
/* harmony default export */ var PureSingleValueIcon_SingleValueIcon = __webpack_exports__["default"] = (SingleValueIcon_SingleValueIcon);

/***/ })
/******/ ]);
//# sourceMappingURL=SingleValueIcon.js.map