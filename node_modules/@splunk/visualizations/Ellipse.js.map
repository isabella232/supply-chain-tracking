{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"lodash\"","webpack:///external \"@splunk/ui-utils/i18n\"","webpack:///external \"styled-components\"","webpack:///./src/common/interfaces/VizBehavior.ts","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///./src/common/utils/hocUtils.ts","webpack:///./src/common/utils/configUtils.ts","webpack:///external \"@splunk/visualizations-shared/Message\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"@splunk/visualizations-shared/colorUtils\"","webpack:///./src/common/hocs/FixedSizeContainer.tsx","webpack:///external \"@splunk/visualizations-shared/style\"","webpack:///external \"@splunk/visualizations-shared/schemaUtils\"","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"@splunk/visualizations-shared/SizeAwareWrapper\"","webpack:///external \"@splunk/visualizations-shared/propUtils\"","webpack:///external \"@splunk/themes/variables\"","webpack:///external \"@splunk/themes/pick\"","webpack:///external \"@babel/runtime/helpers/typeof\"","webpack:///./src/common/hooks/getSorting.ts","webpack:///./src/common/hooks/getPagination.ts","webpack:///./src/common/components/IconPlaceholder.tsx","webpack:///./src/common/interfaces/VizCategory.ts","webpack:///./src/common/withDashboardViz.tsx","webpack:///external \"@splunk/themes/getSettingsFromThemedProps\"","webpack:///external \"@splunk/visualization-encoding/Options\"","webpack:///external \"@splunk/visualizations-shared/SanitizeProps\"","webpack:///./src/common/SplunkVisualization.tsx","webpack:///./src/common/interfaces/VizActionHandler.ts","webpack:///./src/common/interfaces/DataSource.ts","webpack:///./src/common/hooks/useDeepMemo.ts","webpack:///./src/common/utils/JSONSchemaUtils.ts","webpack:///./src/common/components/MissingPropsMessage.tsx","webpack:///./src/common/hocs/withEditModeCover.tsx","webpack:///./src/common/hocs/withPlaceholder.tsx","webpack:///external \"@splunk/visualization-color-palettes/editors/PresetPalettes\"","webpack:///./src/common/editorConfig/DynamicFillColorEditor.ts","webpack:///./src/common/editorConfig/DynamicStrokeColorEditor.ts","webpack:///./src/common/editorConfig/StaticFillColorEditor.ts","webpack:///./src/common/editorConfig/StaticStrokeColorEditor.ts","webpack:///./src/common/shapeUtils.ts","webpack:///./src/Ellipse/Ellipse.tsx","webpack:///./src/Ellipse/index.ts","webpack:///./src/Ellipse/config.ts"],"names":[],"mappings":"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","file":"Ellipse.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 158);\n","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"lodash\");","module.exports = require(\"@splunk/ui-utils/i18n\");","module.exports = require(\"styled-components\");","export enum VizBehavior {\n    /**\n     * Dynamic Options Behavior.\n     * This allows visualization options to be powered by data\n     *\n     * **Example**\n     *\n     * sparklineValues: \">primary|seriesByIndex(0)\"\n     * would configure sparklineValues with an array of data points\n     * coming from the first series in the primary datasource\n     *\n     */\n    DYNAMIC_OPTIONS = 'dynamic-options',\n    EVENTS = 'events',\n    /**\n     * Placeholder behavior: visualization will display a placeholder rather than fail if any of the `requiredProps` is\n     * missing.\n     * @type {string}\n     */\n    PLACEHOLDER = 'placeholder',\n    PAGE_AND_SORT = 'page-and-sort',\n}\n","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","import { cloneDeep } from 'lodash';\nimport { DashboardVizProps } from '../interfaces/DashboardVizProps';\n\nexport type DashboardVizType = React.ComponentType<DashboardVizProps>;\n\n/**\n * @method extendStaticWrapperProps\n * @param {Object} props\n * @param {DashboardVizType} props.Wrapper\n * @param {DashboardVizType} props.Visualization\n */\nexport const extendStaticWrapperProps = ({\n    Wrapper,\n    Visualization,\n}: {\n    [key: string]: DashboardVizType;\n}): void => {\n    const extendProperties = ['propTypes', 'defaultProps', 'config'];\n    extendProperties.forEach((prop: string): void => {\n        if (Visualization[prop]) {\n            Wrapper[prop] = Visualization[prop];\n        }\n    });\n};\n\n/**\n * helper to deeply merge objects while preserving arrays in earlier source objects\n * deeply nested primitive keys are merged similarly to lodash's defaultsDeep, while keys with arrays will be preserved if already present in the resultant merged object\n * this prevents default arrays from appending values to user-defined arrays (this occurs if the default array is longer than the user-defined one)\n *\n * @method deepMergeWithArrayOverrides\n * @param {Object} initial - target object to merge values into\n * @param {Object[]} sources - other default options to be merged into the resultant object if no explicit value is provided, with earlier args taking precedence over later ones\n *\n * @returns {Object}\n */\nexport const deepMergeWithArrayOverrides = (initial, ...sources) => {\n    const clone = cloneDeep(initial);\n    sources.forEach(sourceToApply => {\n        Object.keys(sourceToApply).forEach(sourceKey => {\n            if (!clone.hasOwnProperty(sourceKey)) {\n                clone[sourceKey] = cloneDeep(sourceToApply[sourceKey]);\n            }\n            // object merging excluding arrays\n            if (\n                clone[sourceKey] &&\n                typeof clone[sourceKey] === 'object' &&\n                !Array.isArray(clone[sourceKey]) &&\n                typeof sourceToApply[sourceKey] === 'object'\n            ) {\n                clone[sourceKey] = deepMergeWithArrayOverrides(clone[sourceKey], sourceToApply[sourceKey]);\n            }\n        });\n    });\n    return clone;\n};\n","import { get, range } from 'lodash';\nimport { DYNAMIC_OPTIONS_DSL_PATTERN } from '@splunk/visualizations-shared/schemaUtils';\nimport { VizBehavior } from '../interfaces/VizBehavior';\nimport { VizConfig } from '../interfaces/VizConfig';\nimport { OptionsSchema } from '../interfaces/OptionsSchema';\nimport type { JSONSchema7Definition } from 'json-schema';\n\nexport interface PresetEntry {\n    name: string;\n    value: any;\n    label: string;\n}\n\nconst dynamicOptionsDSLType = {\n    type: 'string',\n    pattern: DYNAMIC_OPTIONS_DSL_PATTERN,\n} as const;\n\n/**\n * Helper function to extend an options schema with dynamic options DSL\n * @param optionsSchema a visualization's options schema\n * @returns an updated options schema that additionally allows strings starting with > for each option\n */\nfunction enhanceOptionsSchemaWithDynamicOptions(\n    optionsSchema: OptionsSchema | JSONSchema7Definition\n): OptionsSchema {\n    const enhancedOptionsSchema: OptionsSchema = {};\n    Object.keys(optionsSchema).forEach((key): void => {\n        const {\n            // The next a few are schema annotations, we should leave them as is.\n            // Note: in reality we don't use `readOnly`, `writeOnly` or `examples`, but they are listed here for completeness.\n            // Ref: https://datatracker.ietf.org/doc/html/draft-handrews-json-schema-validation-01\n            title,\n            description,\n            readOnly,\n            writeOnly,\n            examples,\n            default: defaultValue,\n            // The next a few need special care\n            type,\n            properties,\n            patternProperties,\n            // The rest should be handled together\n            ...remainingSchemaEntry\n        } = optionsSchema[key];\n\n        const annotations = {\n            ...(title !== undefined && { title }),\n            ...(description !== undefined && { description }),\n            ...(readOnly !== undefined && { readOnly }),\n            ...(writeOnly !== undefined && { writeOnly }),\n            ...(examples !== undefined && { examples }),\n            ...(defaultValue !== undefined && { default: defaultValue }),\n        };\n\n        if (type === 'object') {\n            enhancedOptionsSchema[key] = {\n                ...remainingSchemaEntry,\n                ...annotations,\n                type,\n                ...(properties && { properties: enhanceOptionsSchemaWithDynamicOptions(properties) }),\n            };\n            if (patternProperties) {\n                let enhancedPatternProperties = {};\n                Object.keys(patternProperties).forEach((key): void => {\n                    enhancedPatternProperties = {\n                        ...enhancedPatternProperties,\n                        ...enhanceOptionsSchemaWithDynamicOptions({ [key]: patternProperties[key] }),\n                    };\n                });\n                enhancedOptionsSchema[key].patternProperties = enhancedPatternProperties;\n            }\n        } else {\n            enhancedOptionsSchema[key] = {\n                ...annotations,\n                anyOf: [\n                    // we can't assume `type` is always there because there are `enum` and `const`.\n                    { ...(type !== undefined && { type }), ...remainingSchemaEntry },\n                    dynamicOptionsDSLType,\n                ],\n            };\n        }\n    });\n    return enhancedOptionsSchema;\n}\n\n/**\n * Helper function to enhance a Visualization Config as needed based on behaviors specified in supports block\n * @param vizConfig a Visualization Config\n * @returns an enhanced Visualization Config containing updated config entries based on behaviors it supports\n */\nfunction enhanceConfig(vizConfig: VizConfig): VizConfig {\n    const enhancedConfig: VizConfig = vizConfig;\n    if (vizConfig.supports.indexOf(VizBehavior.DYNAMIC_OPTIONS) !== -1) {\n        enhancedConfig.optionsSchema = enhanceOptionsSchemaWithDynamicOptions(vizConfig.optionsSchema);\n    }\n    return enhancedConfig;\n}\n\nfunction isDynamicOption(option?: string): boolean {\n    return (option && typeof option === 'string' && option.trim().startsWith('>')) || false;\n}\n\n// private helpers to improve readability of getInitialPreset\n// this shouldn't be tested since this util isn't something that we expect to use outside of getInitialPreset\n\n/**\n * this checks to make sure that all values within vizContext are compatible with the given preset's context to determine the initialPreset\n * if a preset has explicitly specified a key as being undefined, the vizContext must also has that key as undefined, or else this CANNOT be the initialPreset\n * the inverse is true; if a preset has key is NOT undefined, it must also be NOT undefined in the corresponding vizContext\n * the internal config contents are irrelevant (as the user could customize them in source), just as long as the presence of `undefined`s match up\n *\n * Since the presetConfigs have explicit undefined keys to override the existing config, we need to explicitly check the undefined values\n */\nfunction hasCompatibleContexts(\n    vizContext: { [configKey: string]: any },\n    presetContext: { [configKey: string]: any }\n): boolean {\n    const presetContextKeys = Object.keys(presetContext);\n    return presetContextKeys.every(\n        (contextKey): boolean =>\n            (presetContext[contextKey] === undefined && vizContext[contextKey] === undefined) ||\n            (presetContext[contextKey] !== undefined && vizContext[contextKey] !== undefined)\n    );\n}\n\n/**\n * Checks to make sure that dynamic (non-dynamic) options in a given preset are also dynamic (non-dynamic) in the vizOptions\n */\nfunction hasCompatibleOptions(\n    vizOptions: { [configKey: string]: any },\n    presetOptions: { [configKey: string]: any }\n): boolean {\n    const presetOptionKeys = Object.keys(presetOptions);\n    return presetOptionKeys.every(\n        (optionKey): boolean =>\n            isDynamicOption(presetOptions[optionKey]) === isDynamicOption(vizOptions[optionKey])\n    );\n}\n\n/**\n * Evaluates whether there is an initialPreset that fits the current state of vizContext + vizOptions\n * This function ignores extraneous vizOptions or vizContext keys, as they could be outside the scope of what the preset is intended to configure\n *\n * @param {Object} vizContext - the current vizContext definition\n * @param {Object} vizOptions - the current vizOptions definition\n * @param {PresetEntry[]} presets - the list of presets, one of which can be considered an initialPreset\n */\nfunction getInitialPreset(\n    vizContext: { [configKey: string]: any },\n    vizOptions: { [configKey: string]: any },\n    presets: PresetEntry[]\n): PresetEntry | null {\n    return presets.find((preset): boolean => {\n        const presetContext = get(preset, ['value', 'context'], {});\n        const presetOptions = get(preset, ['value', 'options'], {});\n        const presetContextKeys = Object.keys(presetContext);\n        const presetOptionKeys = Object.keys(presetOptions);\n\n        // all presets have to explicitly specify which options to reset (i.e. need explicitly undefined keys)\n        // if not, then the preset is invalid in config.ts\n        if (presetContextKeys.length === 0 || presetOptionKeys.length === 0) return false;\n\n        return (\n            hasCompatibleContexts(vizContext, presetContext) &&\n            hasCompatibleOptions(vizOptions, presetOptions)\n        );\n    });\n}\n\ninterface PrecisionOption {\n    label: string;\n    value: number;\n}\n\n/**\n * generates number precision values for a Select editor\n *\n * @param {Number} numPrecisionValues - number of integer precision values to generate\n * @returns {{ label: string; value; string  }[]} array of { label, value } tuples\n */\nfunction generatePrecisionValues(numPrecisionValues: number): PrecisionOption[] {\n    return range(0, numPrecisionValues + 1).map(\n        (i): PrecisionOption => ({\n            label: `${i} (0${i > 0 ? '.' : ''}${'0'.repeat(i)})`, // e.g. 0.000 for numPrecisionValues = 3\n            value: i,\n        })\n    );\n}\n\nexport {\n    enhanceConfig,\n    enhanceOptionsSchemaWithDynamicOptions,\n    isDynamicOption,\n    getInitialPreset,\n    generatePrecisionValues,\n};\n","module.exports = require(\"@splunk/visualizations-shared/Message\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@splunk/visualizations-shared/colorUtils\");","import * as React from 'react';\nimport styled from 'styled-components';\nimport SizeAwareWrapper from '@splunk/visualizations-shared/SizeAwareWrapper';\nimport { toDimension, toPx } from '@splunk/visualizations-shared/style';\nimport { isColor } from '@splunk/visualizations-shared/colorUtils';\nimport { pick } from 'lodash';\n\ninterface Props {\n    enabled?: boolean;\n    width?: number | string;\n    height?: number | string;\n}\n\ninterface ItemProps {\n    backgroundColor?: string;\n    width?: string | number;\n}\n\nconst Item = styled.div.attrs<ItemProps>(({ width }) => ({\n    style: {\n        width: toPx(width),\n    },\n}))<ItemProps>`\n    position: relative;\n    background-color: ${(props): string =>\n        (isColor(props.backgroundColor) && props.backgroundColor) || props.theme.defaultBackgroundColor}};\n`;\n\ninterface FixSizeItemProps {\n    backgroundColor?: string;\n    height?: string | number;\n    width?: string | number;\n}\n\n// Use `.attrs()` for highly dynamic styles. Ref: https://github.com/styled-components/styled-components/issues/134#issuecomment-312415291\nconst FixSizeItem = styled.div.attrs<FixSizeItemProps>(({ width, height }): {\n    style: { width?: string; height?: string };\n} => ({\n    style: {\n        ...(width && { width: toPx(width) }),\n        ...(height && { height: toPx(height) }),\n    },\n}))<FixSizeItemProps>`\n    position: relative;\n    flex-direction: column;\n    flex: 1;\n    display: flex;\n    background-color: ${(props): string =>\n        (isColor(props.backgroundColor) && props.backgroundColor) || props.theme.defaultBackgroundColor}};\n`;\n\nconst ItemContent = styled.div`\n    position: relative;\n    min-height: 100px;\n    width: 100%;\n`;\n\nconst FixSizeItemContent = styled.div`\n    min-height: 0px;\n    flex: 1;\n    position: relative;\n    box-sizing: border-box;\n`;\n\ninterface HeightAndWidthProps {\n    width?: string | number;\n    height?: string | number;\n    backgroundColor?: string;\n}\n\nconst withFixedSizeContainer = <P extends HeightAndWidthProps>(\n    Viz: React.ComponentType<P>\n): React.ComponentType<P> => {\n    const FixedSizeContainer = (props: P): React.ReactElement => {\n        const { width, height, backgroundColor } = props;\n\n        if (!height) {\n            return (\n                <Item data-test=\"item\" width={width} backgroundColor={backgroundColor}>\n                    <ItemContent>\n                        <Viz {...props} />\n                    </ItemContent>\n                </Item>\n            );\n        }\n        return (\n            <FixSizeItem\n                data-test=\"fix-size-item\"\n                width={width}\n                height={height}\n                backgroundColor={backgroundColor}\n            >\n                <FixSizeItemContent>\n                    <SizeAwareWrapper>\n                        {({ width: newWidth, height: newHeight }): React.ReactElement => (\n                            <Viz {...props} width={newWidth} height={newHeight} />\n                        )}\n                    </SizeAwareWrapper>\n                </FixSizeItemContent>\n            </FixSizeItem>\n        );\n    };\n    FixedSizeContainer.displayName = 'withFixedSizeContainer';\n    return FixedSizeContainer;\n};\n\nexport default withFixedSizeContainer;\n","module.exports = require(\"@splunk/visualizations-shared/style\");","module.exports = require(\"@splunk/visualizations-shared/schemaUtils\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@splunk/visualizations-shared/SizeAwareWrapper\");","module.exports = require(\"@splunk/visualizations-shared/propUtils\");","module.exports = require(\"@splunk/themes/variables\");","module.exports = require(\"@splunk/themes/pick\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","import * as T from 'prop-types';\nimport { has, isFunction } from 'lodash';\nimport { DataSourceMeta, SortDirType, validSortDirs } from '../interfaces/DataSource';\n\nexport interface SortParams {\n    currentSortKey?: undefined | string;\n    currentSortDir?: undefined | SortDirType;\n    onSort?: (e: MouseEvent, { sortKey: string, sortDir: SortDirType }) => void;\n}\n\nexport const SortParamsPropTypes = T.shape({\n    currentSortKey: T.string,\n    currentSortDir: T.oneOf(validSortDirs),\n    onSort: T.func,\n});\n\nexport const getSortingParams = ({ requestParams, onRequestParamsChange }: DataSourceMeta): SortParams => {\n    let currentSortKey;\n    let currentSortDir;\n\n    const nextSortDirMap = {\n        asc: 'desc',\n        desc: 'asc',\n        none: 'asc',\n    };\n\n    let onSort;\n    if (isFunction(onRequestParamsChange)) {\n        if (requestParams && has(requestParams, 'sort')) {\n            currentSortKey = Object.keys(requestParams.sort).shift();\n            currentSortDir = requestParams.sort[currentSortKey];\n        }\n\n        // undid memoization since there is a dependency on requestParams, which is a deeply nested object\n        onSort = (e, { sortKey, sortDir }): void => {\n            if (typeof sortKey === 'string') {\n                const nextSortDir = has(nextSortDirMap, sortDir) ? nextSortDirMap[sortDir] : 'none';\n                onRequestParamsChange({\n                    ...requestParams,\n                    ...{ offset: 0, sort: { [sortKey]: nextSortDir } },\n                });\n            } else {\n                onRequestParamsChange(requestParams);\n            }\n        };\n    }\n\n    return {\n        currentSortKey,\n        currentSortDir,\n        onSort,\n    };\n};\n","import * as T from 'prop-types';\nimport { cloneDeep, isFunction, noop } from 'lodash';\nimport { DataSourceMeta, RequestParams } from '../interfaces/DataSource';\n\nexport interface OnChangeParams {\n    page?: number;\n    count?: number;\n}\nexport interface PaginatorParams {\n    isPaging?: boolean;\n    current?: number;\n    totalPages?: number;\n    onChange?: (e: MouseEvent, x: OnChangeParams) => void;\n}\n\nexport const PaginatorParamsPropTypes = T.shape({\n    isPaging: T.bool,\n    current: T.number,\n    totalPages: T.number,\n    onChange: T.func,\n});\n\nexport const getPaginationParams = ({\n    requestParams,\n    meta,\n    onRequestParamsChange,\n}: DataSourceMeta): PaginatorParams => {\n    const totalCount = (meta && meta.totalCount) || 0;\n    const offset = (requestParams && requestParams.offset) || 0;\n    const count = requestParams && requestParams.count;\n    const totalPages = typeof count === 'number' && count > 0 ? Math.ceil(totalCount / count) : 0;\n    const current = typeof count === 'number' && count > 0 ? Math.floor(offset / count) + 1 : 0;\n    const isPaging = totalPages > 1 && isFunction(onRequestParamsChange);\n\n    const onChangeHandler = (e, { page, count: countArg }: OnChangeParams): void => {\n        const newParams: RequestParams = cloneDeep(requestParams);\n\n        if (typeof countArg === 'number') {\n            newParams.count = countArg;\n            newParams.offset = 0;\n        }\n\n        const pageCount = typeof newParams.count === 'number' ? newParams.count : 10;\n        if (typeof page === 'number' && page > 0) {\n            newParams.count = pageCount;\n            newParams.offset = (page - 1) * pageCount;\n        }\n\n        onRequestParamsChange(newParams);\n    };\n\n    return {\n        isPaging,\n        current,\n        totalPages,\n        onChange: isFunction(onRequestParamsChange) ? onChangeHandler : noop,\n    };\n};\n","import * as React from 'react';\nimport * as T from 'prop-types';\nimport { get } from 'lodash';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport Message from '@splunk/visualizations-shared/Message';\nimport { DataSource } from '../interfaces/DataSource';\nimport withFixedSizeContainer from '../hocs/FixedSizeContainer';\n\n/**\n * @method shouldShowIconPlaceholder\n * @param {object} dataSources\n * @param {boolean} loading\n * @returns {boolean}\n */\nexport const shouldShowIconPlaceholder = (\n    dataSources: { [name: string]: DataSource },\n    loading = false\n): boolean => {\n    const data = get(dataSources, 'primary.data.columns[0]', undefined);\n    const noData = data === undefined;\n    const fields = get(dataSources, 'primary.data.fields[0]', undefined);\n    const noFields = fields === undefined;\n    return loading || noData || noFields;\n};\n\nexport interface IconPlaceholderProps {\n    icon?: React.ComponentClass<any>;\n    width?: string | number;\n    height?: string | number;\n    backgroundColor?: string;\n}\n\nconst propTypes: Record<keyof IconPlaceholderProps, T.Validator<any>> = {\n    icon: T.func,\n    width: T.oneOfType([T.string, T.number]),\n    height: T.oneOfType([T.string, T.number]),\n    backgroundColor: T.string,\n};\n\n/**\n * @method IconPlaceholder\n * @param {IconPlaceholderProps} props\n * @returns {React.ReactElement}\n */\nconst IconPlaceholder = (props: IconPlaceholderProps): React.ReactElement => {\n    const { width, height, icon } = props;\n    if (icon) {\n        return React.createElement(icon, {\n            style: {\n                left: '50%',\n                top: '50%',\n                color: 'grey',\n                position: 'absolute',\n                transform: 'translate(-50%, -50%)',\n            },\n            width: '50%',\n            height: '50%',\n        });\n    }\n\n    return <Message width={width} height={height} level=\"warning\" message={_('No DataSource Connected')} />;\n};\n\nIconPlaceholder.propTypes = propTypes;\nIconPlaceholder.defaultProps = {\n    width: '100%',\n    height: 250,\n};\n\nexport default withFixedSizeContainer(IconPlaceholder);\n","export enum VizCategory {\n    SINGLE_VALUE = 'Single Value',\n    TRENDS = 'Trends',\n    COMPARISONS = 'Comparisons',\n    TABLE = 'Table',\n    GAUGE = 'Gauge',\n    DISTRIBUTIONS = 'Distributions',\n    CHOROPLETH = 'Choropleth Maps',\n    SHAPES = 'Shapes',\n    MISC = 'misc',\n    FLOW = 'Flow',\n    CORRELATION = 'Correlation',\n    SPATIAL = 'Spatial',\n}\n","import * as React from 'react';\nimport { camelCase, has, get, defaultsDeep } from 'lodash';\nimport getSettingsFromThemedProps from '@splunk/themes/getSettingsFromThemedProps';\nimport { Options as Opts } from '@splunk/visualization-encoding/Options';\nimport { withSanitizedProps } from '@splunk/visualizations-shared/SanitizeProps';\n\nimport { withTheme } from 'styled-components';\nimport SplunkVisualization from './SplunkVisualization';\nimport { DashboardVizProps } from './interfaces/DashboardVizProps';\nimport { VizConfig } from './interfaces/VizConfig';\nimport { VizProps } from './interfaces/VizProps';\nimport { VizBehavior } from './interfaces/VizBehavior';\nimport { DataSource } from './interfaces/DataSource';\nimport { getSortingParams } from './hooks/getSorting';\nimport { getPaginationParams } from './hooks/getPagination';\nimport { useDeepMemo } from './hooks/useDeepMemo';\nimport { pickFieldFromJSONSchema } from './utils/JSONSchemaUtils';\nimport MissingPropsMessage, { missingKeys } from './components/MissingPropsMessage';\nimport withEditModeCover from './hocs/withEditModeCover';\nimport withPlaceholder from './hocs/withPlaceholder';\nimport { ChartingProps } from './Charting';\nimport { deepMergeWithArrayOverrides } from './utils/hocUtils';\n\ntype HOC = (props: DashboardVizProps) => React.ReactElement<DashboardVizProps>;\nexport interface DashboardVizOpts {\n    ReactViz: React.ComponentType<ChartingProps | VizProps>; // we will wrap this in DashboardViz (see const DashboardViz = ...)\n    vizConfig: VizConfig;\n    computeVizProps?: (props) => any;\n    useIconPlaceholder?: (\n        dataSources: { [name: string]: DataSource },\n        loading: boolean,\n        options: Record<string, unknown>\n    ) => boolean;\n}\n\n/**\n * hoc that wraps a pure react visualization in a Dashboard visualization\n * @param {DashboardVizOpts} opts\n * @returns {HOC}\n */\nconst withDashboardViz = (opts: DashboardVizOpts): HOC => {\n    const { ReactViz, vizConfig, computeVizProps = () => {}, useIconPlaceholder } = opts;\n\n    // sanitizing props before sending them to reactviz.\n    const SanitizedReactViz = withSanitizedProps(ReactViz);\n    const defaultOptions = pickFieldFromJSONSchema(vizConfig.optionsSchema, 'default');\n\n    const DashboardViz = (props: DashboardVizProps): React.ReactElement<DashboardVizProps> => {\n        const {\n            mode,\n            hasEventHandlers,\n            dataSources, // type of { [key: string]: DataSource }\n            options,\n            context = {},\n            width,\n            height,\n            onComputedProps,\n            onEventTrigger,\n            theme,\n            onRequestParamsChange,\n        } = props;\n\n        const themeFunc = themeVar => vizConfig.themes[themeVar]?.(props);\n        const bgColorFromTheme = themeFunc('defaultBackgroundColor');\n        const {\n            family: currentThemeFamily,\n            colorScheme: currentThemeColorScheme,\n            density: currentThemeDensity,\n        } = getSettingsFromThemedProps({ theme });\n\n        let evaluatedOptions: Opts = {}; // evaluatedOptions need to be initialized as an empty object\n        evaluatedOptions = useDeepMemo((): Record<string, unknown> => {\n            try {\n                return Opts.evaluate(\n                    {\n                        context: defaultsDeep({}, context, vizConfig.defaultContext),\n                        options: deepMergeWithArrayOverrides({}, options, defaultOptions),\n                    },\n                    dataSources,\n                    themeFunc\n                );\n            } catch (e) {\n                console.error(`unexpected error evaluating options:  + ${e.message}`);\n                return {};\n            }\n        }, [currentThemeFamily, currentThemeColorScheme, currentThemeDensity, options, context, dataSources]);\n\n        // useEffect hook needs to be initialized before any early returns\n        // this is in accordance with the order of hook calls being the same on each render https://reactjs.org/docs/hooks-rules.html#explanation\n        React.useEffect((): void => {\n            onComputedProps(evaluatedOptions);\n        });\n\n        // present warning message if any required props are missing\n        const { requiredProps = [], supports } = vizConfig;\n        const missing = missingKeys(requiredProps, evaluatedOptions);\n        if (missing.length > 0 && supports.includes(VizBehavior.PLACEHOLDER)) {\n            return (\n                <MissingPropsMessage\n                    data-test=\"missing-props-message\"\n                    width={width}\n                    height={height}\n                    missingProps={missing}\n                    backgroundColor={bgColorFromTheme}\n                />\n            );\n        }\n\n        // events\n        const eventCallbackProps = {};\n        if (hasEventHandlers && mode === 'view' && vizConfig.supports.indexOf(VizBehavior.EVENTS) > -1) {\n            const supportedEvents = vizConfig.events;\n            Object.keys(supportedEvents).forEach((eventName): void => {\n                const eventCallbackPropName = camelCase(`on.${eventName}`);\n                eventCallbackProps[eventCallbackPropName] = null;\n                // todo: refactor single value and single value icon to send payload from viz\n                // then remove these lines\n                const { payloadKeys } = supportedEvents[eventName];\n                let payload = {};\n                if (Array.isArray(payloadKeys) && payloadKeys.length) {\n                    payloadKeys.forEach(p => (payload[p] = evaluatedOptions[p]));\n                }\n\n                eventCallbackProps[eventCallbackPropName] = (ev): Record<string, unknown> => {\n                    if (ev && ev.payload) {\n                        payload = ev.payload;\n                    }\n\n                    return onEventTrigger({ originalEvent: ev, payload, type: eventName });\n                };\n            });\n        }\n        // compute pure viz props which are not from options\n        const computedVizProps = computeVizProps({\n            ...props,\n            ...evaluatedOptions,\n            ...eventCallbackProps,\n            themeFunc,\n        });\n\n        /**\n         * PAGE_AND_SORT behavior\n         *\n         * Some visualizations, like table, requires metadata about the datasource,\n         * like total number of results, current count, offset, and sort, for rendering\n         * paginator and sorting direction. In this approach, the visualization\n         * allow users to set 'paginateDataSourceKey' to select which datasource\n         * should the visualization extract the metadata from. It defaults to 'primary' datasource.\n         * The visualization config should set the PAGE_AND_SORT behavior to receive\n         * 'requestParams', 'meta' and onRequestParams callback as props.\n         *\n         * In future, we could automatically detect which all datasources are being used\n         * and bind those magically to pagination/sorting behavior.\n         */\n        let dataSourceMetadata = {};\n        const OptionKey = 'paginateDataSourceKey';\n        const paginateDataSourceKey =\n            (has(evaluatedOptions, OptionKey) && evaluatedOptions[OptionKey]) || 'primary';\n        if (\n            vizConfig.supports.indexOf(VizBehavior.PAGE_AND_SORT) > -1 &&\n            has(dataSources, paginateDataSourceKey)\n        ) {\n            const requestParams = get(dataSources, [paginateDataSourceKey, 'requestParams'], {});\n            const meta = get(dataSources, [paginateDataSourceKey, 'meta'], {});\n            const handleRequestParamsChange = (payload: Record<string, unknown>): void =>\n                onRequestParamsChange(paginateDataSourceKey, payload);\n\n            const sortParams = getSortingParams({\n                requestParams,\n                meta,\n                onRequestParamsChange: handleRequestParamsChange,\n            });\n\n            const paginatorParams = getPaginationParams({\n                requestParams,\n                meta,\n                onRequestParamsChange: handleRequestParamsChange,\n            });\n\n            dataSourceMetadata = {\n                sortParams,\n                paginatorParams,\n            };\n        }\n\n        return (\n            <SanitizedReactViz\n                mode={mode}\n                width={width}\n                height={height}\n                {...evaluatedOptions}\n                {...computedVizProps}\n                {...eventCallbackProps}\n                {...dataSourceMetadata}\n            />\n        );\n    };\n\n    DashboardViz.propTypes = {\n        ...SplunkVisualization.propTypes,\n        ...ReactViz.propTypes,\n    };\n\n    DashboardViz.defaultProps = {\n        ...SplunkVisualization.defaultProps,\n        ...ReactViz.defaultProps,\n        // using withTheme requires component to receive theme prop. In case the consumer did not provide ThemeProvider, a default empty object will prevent warnings.\n        theme: {},\n    };\n    // attach viz config\n    DashboardViz.config = vizConfig;\n\n    // @ts-ignore: TODO fix sc upgrade TS issues\n    return withTheme(withPlaceholder(withEditModeCover(DashboardViz), useIconPlaceholder));\n};\n\nexport default withDashboardViz;\n","module.exports = require(\"@splunk/themes/getSettingsFromThemedProps\");","module.exports = require(\"@splunk/visualization-encoding/Options\");","module.exports = require(\"@splunk/visualizations-shared/SanitizeProps\");","/* eslint-disable react/no-unused-prop-types,react/prefer-stateless-function */\nimport * as T from 'prop-types';\nimport { noop } from 'lodash';\nimport { DashboardVizProps } from './interfaces/DashboardVizProps';\nimport { DefaultVizActionHandler } from './interfaces/VizActionHandler';\n\n// this is identical to the initial height and width we use in BaseVisualization in dashboard-visualizations\nexport const INITIAL_WIDTH = 250;\nexport const INITIAL_HEIGHT = 250;\n\n/**\n * A Splunk visualization\n */\nclass SplunkVisualization {\n    static propTypes: Record<keyof DashboardVizProps, T.Validator<any>> = {\n        /**\n         * display mode\n         */\n        mode: T.oneOf(['view', 'edit', 'export']).isRequired,\n        /**\n         * width in pixel or string, defaults to 100%\n         */\n        width: T.oneOfType([T.string, T.number]).isRequired,\n        /**\n         * height in pixel or string\n         */\n        height: T.oneOfType([T.string, T.number]).isRequired,\n        /**\n         * visualization context used for dynamic option evaluation\n         */\n        context: T.object,\n        /**\n         * visualization formatting options\n         */\n        options: T.object,\n        /**\n         * A callback to update formatting options\n         */\n        onOptionsChange: T.func,\n        /**\n         * datasource state which include data and request params, object key indicate the datasource type.\n         */\n        dataSources: T.objectOf(\n            T.shape({\n                /**\n                 * current request params\n                 */\n                requestParams: T.object,\n                /**\n                 * current dataset\n                 */\n                data: T.shape({\n                    fields: T.array,\n                    columns: T.array,\n                }),\n                /**\n                 * error\n                 */\n                error: T.shape({\n                    level: T.string,\n                    message: T.string,\n                }),\n                /**\n                 * meta data that came with the dataset\n                 */\n                meta: T.object,\n            })\n        ),\n        /**\n         * A callback to trigger event\n         */\n        onEventTrigger: T.func,\n        /**\n         * Inform viz if there are handlers listening to events\n         */\n        hasEventHandlers: T.bool,\n        /**\n         * A callback to communicate computed props to a consumer\n         */\n        onComputedProps: T.func,\n        /**\n         * A callback to obtain visualization api\n         */\n        vizActionHandlerRef: T.func,\n\n        loading: T.bool,\n        theme: T.object,\n        /**\n         * A callback to request new data with updated request params\n         */\n        onRequestParamsChange: T.func,\n    };\n    /**\n     *\n     */\n    static defaultProps: DashboardVizProps = {\n        // BaseVisualization in dashboard-visualizations uses 100% for width but 250 for height\n        width: '100%',\n        height: INITIAL_HEIGHT,\n        dataSources: {},\n        onEventTrigger: (): Record<string, unknown> => ({}),\n        mode: 'view',\n        hasEventHandlers: false,\n        options: {},\n        context: {},\n        onOptionsChange: (): Record<string, unknown> => ({}),\n        vizActionHandlerRef: (): DefaultVizActionHandler => new DefaultVizActionHandler(),\n        onComputedProps: (): Record<string, unknown> => ({}),\n        loading: false,\n        onRequestParamsChange: noop,\n    };\n}\n\nexport default SplunkVisualization;\n","export interface VizActionHandler {\n    /**\n     * put focus on the visualization\n     */\n    focus(): void;\n\n    /**\n     * compute snapshot of this visualization\n     */\n    snapshot(): Record<string, unknown>; //(This is for pdf export)\n}\n\nexport class DefaultVizActionHandler {\n    focus(): void {\n        //noop\n    }\n\n    snapshot(): Record<string, unknown> {\n        return null; //noop\n    }\n}\n","/**\n * represents the data in a raw columnar format, resulting from a splunk\n * query request.\n */\ninterface FieldEntry {\n    name: string;\n}\n\nexport interface JsonColumnData {\n    fields: FieldEntry[] | string[];\n    columns: string[][];\n}\nexport interface Meta {\n    totalCount: number;\n}\n\nexport const validSortDirs = ['asc', 'desc', 'none'] as const;\nexport type SortDirType = typeof validSortDirs[number];\n\nexport interface RequestParams {\n    count?: number;\n    offset?: number;\n    sort?: {\n        [sortKey: string]: SortDirType;\n    };\n}\n\nexport interface DataSource {\n    requestParams: Partial<RequestParams>;\n    onRequestParamsChange?: (p: Record<string, unknown>) => void;\n    data: JsonColumnData;\n    error?: { level: string; message: string };\n    meta: Partial<Meta>;\n}\n\nexport interface DataSourceMeta {\n    requestParams: Partial<RequestParams>;\n    meta: Partial<Meta>;\n    onRequestParamsChange: (payload: RequestParams) => void;\n}\n","import { useRef } from 'react';\nimport { isEqual } from 'lodash';\n\n/**\n * This hook evaluates and stores the result of a passed function and only\n * re-evaluates the function when passed dependencies change.\n *\n * It is different from the internal React useMemo in the following aspects:\n * - it only stores the last evaluated result\n * - it uses a deep equality check to determine if dependencies have changed\n *\n * Inspired by apollo-client's useDeepMemo\n *\n * @param fn the function to be executed and\n * @param dependencies an array of dependencies\n */\nexport const useDeepMemo = <FnReturnType, DepType>(\n    fn: () => FnReturnType,\n    dependencies: DepType\n): FnReturnType => {\n    const ref = useRef<{ dependencies: DepType; value: FnReturnType }>();\n    if (!ref.current || !isEqual(dependencies, ref.current.dependencies)) {\n        ref.current = {\n            dependencies,\n            value: fn(),\n        };\n    }\n    return ref.current.value;\n};\n","import type { JSONSchema7Definition } from 'json-schema';\nimport { has, isEmpty, get } from 'lodash';\nimport { KV } from '../interfaces/Object';\nimport { OptionsSchema } from '../interfaces/OptionsSchema';\n\nexport const pickFieldFromJSONSchema = (\n    optionsSchema: OptionsSchema | JSONSchema7Definition,\n    fieldName = 'default'\n): KV =>\n    Object.keys(optionsSchema).reduce((accum: Record<string, unknown>, k): Record<string, unknown> => {\n        if (has(optionsSchema[k], fieldName)) {\n            accum[k] = optionsSchema[k][fieldName];\n        } else if (get(optionsSchema, [k, 'type']) === 'object' && has(optionsSchema[k], 'properties')) {\n            const nestedSchema = pickFieldFromJSONSchema(optionsSchema[k].properties, fieldName);\n            if (!isEmpty(nestedSchema)) {\n                accum[k] = nestedSchema;\n            }\n        }\n        return accum;\n    }, {});\n","import * as React from 'react';\nimport * as T from 'prop-types';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport Message from '@splunk/visualizations-shared/Message';\nimport withFixedSizeContainer from '../hocs/FixedSizeContainer';\n\n/**\n * @method isMissing\n * @param {any} v\n * @returns {boolean} true if the input value === null or undefined\n */\nexport const isMissing = (v): boolean => {\n    return v === null || v === undefined;\n};\n\n/**\n * @method misskingKeys\n * @param {string[]} keys\n * @param {object} target\n * @returns {string[]} the keys of missing required props\n */\nexport const missingKeys = (keys: string[], target: Record<string, unknown>): string[] =>\n    keys.filter(k => isMissing(target[k]));\n\nexport interface MissingPropsProps {\n    width?: string | number;\n    height?: string | number;\n    missingProps: string[];\n    backgroundColor?: string;\n}\n\nconst propTypes: Record<keyof MissingPropsProps, T.Validator<any>> = {\n    width: T.oneOfType([T.string, T.number]),\n    height: T.oneOfType([T.string, T.number]),\n    backgroundColor: T.string,\n    missingProps: T.arrayOf(T.string),\n};\n\n/**\n * @method MissingPropsMessage\n * @param {MissingPropsProps} props\n * @returns {React.ReactElement}\n */\nexport const MissingPropsMessage = (props: MissingPropsProps): React.ReactElement => {\n    const { width, height, missingProps } = props;\n    return (\n        <Message\n            data-test=\"message\"\n            width={width}\n            height={height}\n            message={_(`Missing property: ${missingProps.join(', ')}`)}\n        />\n    );\n};\n\nMissingPropsMessage.propTypes = propTypes;\nMissingPropsMessage.defaultProps = {\n    width: '100%',\n    height: 250,\n};\nexport default withFixedSizeContainer(MissingPropsMessage);\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { DashboardVizProps } from '../interfaces/DashboardVizProps';\nimport { ExtendedDashViz } from '../interfaces/ExtendedDashViz';\nimport { extendStaticWrapperProps } from '../utils/hocUtils';\n\nconst Cover = styled.div`\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n`;\n\nconst Blocker = styled.div`\n    position: relative;\n    width: 100%;\n    height: 100%;\n`;\n\n/**\n * HOC that renders a cover layer in edit mode\n * @method withEditModeCover\n * @param {ExtendedDashViz} Visualization\n * @returns {ExtendedDashViz} Wrapper\n */\nconst withEditModeCover = (Visualization: ExtendedDashViz): ExtendedDashViz => {\n    const Wrapper = (props: DashboardVizProps): React.ReactElement<DashboardVizProps> => {\n        const { mode } = props;\n        return (\n            <Blocker>\n                <Visualization {...props} />\n                {mode === 'edit' && <Cover data-test=\"edit-mode-cover\" />}\n            </Blocker>\n        );\n    };\n    extendStaticWrapperProps({ Wrapper, Visualization });\n    return Wrapper as ExtendedDashViz;\n};\n\nexport default withEditModeCover;\n","import * as React from 'react';\nimport { isColor } from '@splunk/visualizations-shared/colorUtils';\nimport IconPlaceholder, { shouldShowIconPlaceholder } from '../components/IconPlaceholder';\nimport { VizBehavior } from '../interfaces/VizBehavior';\nimport { DashboardVizProps } from '../interfaces/DashboardVizProps';\nimport { DataSource } from '../interfaces/DataSource';\nimport { ExtendedDashViz } from '../interfaces/ExtendedDashViz';\nimport { extendStaticWrapperProps } from '../utils/hocUtils';\n\ntype useIconPlaceholder = (\n    dataSources: { [name: string]: DataSource },\n    loading: boolean,\n    options: Record<string, unknown>\n) => boolean;\n\nconst withPlaceholder = (\n    Visualization: ExtendedDashViz,\n    useIconPlaceholder: useIconPlaceholder = shouldShowIconPlaceholder\n): ExtendedDashViz => {\n    const { config } = Visualization;\n    const { themes } = config;\n\n    const Wrapper = (props: DashboardVizProps): React.ReactElement<DashboardVizProps> => {\n        const { dataSources, loading, options, height, width } = props;\n\n        const showPlaceholder = useIconPlaceholder(dataSources, loading, options);\n        const bgColorFromTheme = isColor(options?.backgroundColor)\n            ? options?.backgroundColor\n            : themes?.defaultBackgroundColor?.(props);\n\n        if (config.supports.includes(VizBehavior.PLACEHOLDER) && showPlaceholder) {\n            return (\n                <IconPlaceholder\n                    data-test=\"icon-placeholder\"\n                    icon={config.icon}\n                    width={width}\n                    height={height}\n                    backgroundColor={bgColorFromTheme}\n                />\n            );\n        }\n\n        return <Visualization {...props} />;\n    };\n    extendStaticWrapperProps({ Wrapper, Visualization });\n    return Wrapper as ExtendedDashViz;\n};\n\nexport default withPlaceholder;\n","module.exports = require(\"@splunk/visualization-color-palettes/editors/PresetPalettes\");","import { _ } from '@splunk/ui-utils/i18n';\nimport { isDynamicOption } from '../utils/configUtils';\n\nexport const getDynamicFillColorEditor = ({ defaultContext, defaultPalettesConfig }) => ({\n    label: _('Dynamic Fill'),\n    option: 'fillColor',\n    context: 'fillColorEditorConfig',\n    editor: 'editor.dynamicColor',\n    showEditor: ({ options }) => isDynamicOption(options.fillColor),\n    editorProps: {\n        labelPosition: 'left',\n        flyoutTitle: _('Dynamic Coloring: Fill Color'),\n        formatters: [\n            {\n                label: _('Ranges'),\n                value: 'rangeValue',\n                defaults: {\n                    fillColor: defaultContext.fillColorConfig,\n                },\n            },\n        ],\n        dataSelectors: [\n            {\n                label: _('Fill Color'),\n                value: 'fillDataValue',\n            },\n        ],\n        defaultPalettesConfig,\n    },\n});\n","import { _ } from '@splunk/ui-utils/i18n';\nimport { isDynamicOption } from '../utils/configUtils';\n\nexport const getDynamicStrokeColorEditor = ({ defaultContext, defaultPalettesConfig }) => ({\n    label: _('Dynamic Stroke'),\n    option: 'strokeColor',\n    context: 'strokeColorEditorConfig',\n    editor: 'editor.dynamicColor',\n    showEditor: ({ options }) => isDynamicOption(options.strokeColor),\n    editorProps: {\n        labelPosition: 'left',\n        flyoutTitle: _('Dynamic Coloring: Stroke Color'),\n        formatters: [\n            {\n                label: _('Ranges'),\n                value: 'rangeValue',\n                defaults: {\n                    strokeColor: defaultContext.strokeColorConfig,\n                },\n            },\n        ],\n        dataSelectors: [\n            {\n                label: _('Stroke Color'),\n                value: 'strokeDataValue',\n            },\n        ],\n        defaultPalettesConfig,\n    },\n});\n","import { _ } from '@splunk/ui-utils/i18n';\nimport { isDynamicOption } from '../utils/configUtils';\n\nconst StaticFillColorEditor = {\n    label: _('Static Fill'),\n    option: 'fillColor',\n    editor: 'editor.color',\n    showEditor: ({ options }) => !isDynamicOption(options.fillColor),\n};\n\nexport default StaticFillColorEditor;\n","import { _ } from '@splunk/ui-utils/i18n';\nimport { isDynamicOption } from '../utils/configUtils';\n\nconst StaticStrokeColorEditor = {\n    label: _('Static Stroke'),\n    option: 'strokeColor',\n    editor: 'editor.color',\n    showEditor: ({ options }) => !isDynamicOption(options.strokeColor),\n};\n\nexport default StaticStrokeColorEditor;\n","import { mapKeys } from 'lodash';\nimport styled from 'styled-components';\nimport pick from '@splunk/themes/pick';\nimport variables from '@splunk/themes/variables';\nimport { formatColor } from '@splunk/visualizations-shared/propUtils';\n\ninterface ShapeOptions {\n    [key: string]: any;\n}\n\n// map for new options names to old option names\nconst shapeOptionsMapping = {\n    fillColor: 'fill',\n    strokeColor: 'stroke',\n    strokeDashStyle: 'strokeDasharray',\n    strokeJoinStyle: 'strokeLinejoin',\n};\n\n/**\n * Helper method to update the option names to old option names\n * @method mapToOldKey\n * @param {Object} options\n * @returns {Object}\n */\nexport const mapToOldKey = (options: ShapeOptions): ShapeOptions =>\n    mapKeys(options, (val, key) => (shapeOptionsMapping[key] ? shapeOptionsMapping[key] : key));\n\ntype Shape = 'ellipse' | 'rect';\n\n/**\n * Helper method to get styled component for ellipse or rectangle\n * @method mapToOldKey\n * @param {Shape} shape\n */\nexport const getStyledShape = (shape: Shape) => styled(shape)`\n    fill: ${props =>\n        (props.fill && formatColor(props.fill)) ||\n        pick({\n            enterprise: {\n                light: variables.gray80,\n                dark: variables.gray25,\n            },\n            prisma: variables.backgroundColorSidebar,\n        })(props)};\n    stroke: ${props =>\n        (props.stroke && formatColor(props.stroke)) ||\n        pick({\n            enterprise: {\n                dark: variables.gray80,\n                light: variables.textColor,\n            },\n            prisma: variables.neutral500,\n        })(props)};\n    cursor: ${props => (props.onClick ? 'pointer' : 'inherit')};\n`;\n","import * as React from 'react';\nimport { chain, noop } from 'lodash';\nimport styled from 'styled-components';\nimport * as T from 'prop-types';\nimport config from './config';\nimport withDashboardViz from '../common/withDashboardViz';\nimport { mapToOldKey, getStyledShape } from '../common/shapeUtils';\n\nconst validOptions = Object.keys(config.optionsSchema);\n\nconst SVGContainer = styled.svg<{\n    height: string | number;\n    width: string | number;\n}>`\n    width: ${props => props.width}px;\n    height: ${props => props.height}px;\n`;\n\nconst EllipseShape = getStyledShape('ellipse');\ninterface EllipseProps {\n    // width in pixel or string, defaults to 100%\n    width: string | number;\n    // height in pixel or string\n    height: string | number;\n    options?: Record<string, any>;\n    onEllipseClick: (...args: any[]) => void;\n}\n\nconst EllipseVisualization = ({\n    height,\n    width,\n    onEllipseClick,\n    options,\n}: EllipseProps): React.ReactElement => {\n    return (\n        <SVGContainer width={width} height={height}>\n            <EllipseShape\n                cx=\"50%\"\n                cy=\"50%\"\n                rx={`${Number(width) / 2 - options['strokeWidth'] / 2}px`}\n                ry={`${Number(height) / 2 - options['strokeWidth'] / 2}px`}\n                {...options}\n                vectorEffect=\"non-scaling-stroke\"\n                onClick={onEllipseClick}\n            />\n        </SVGContainer>\n    );\n};\n\ntype computeVizPropsFn = (options: Record<string, any>) => Partial<EllipseProps>;\nconst computeVizProps: computeVizPropsFn = ({ width, height, ...options }): Partial<EllipseProps> => {\n    const computedProps: Record<string, any> = { width, height };\n    computedProps.options = chain(options).pick(validOptions).thru(mapToOldKey).value();\n    return computedProps;\n};\n\nconst propTypes: Record<keyof EllipseProps, T.Validator<any>> = {\n    width: T.oneOfType([T.string, T.number]),\n    height: T.oneOfType([T.string, T.number]),\n    options: T.object,\n    onEllipseClick: T.func,\n};\n\nconst defaultProps: Record<keyof EllipseProps, any> = {\n    height: 250,\n    width: 350,\n    options: {},\n    onEllipseClick: noop,\n};\n\nEllipseVisualization.propTypes = propTypes;\nEllipseVisualization.defaultProps = defaultProps;\n\nconst Ellipse = withDashboardViz({\n    ReactViz: EllipseVisualization as any,\n    computeVizProps,\n    vizConfig: config,\n});\nconst themes = null;\n\nexport { themes, config };\nexport default Ellipse;\n","export * from './Ellipse';\nexport { default } from './Ellipse';\n","import { _ } from '@splunk/ui-utils/i18n';\nimport { defaultPalettesConfig } from '@splunk/visualization-color-palettes/editors/PresetPalettes';\nimport pick from '@splunk/themes/pick';\nimport variables from '@splunk/themes/variables';\nimport { DataContract } from '../common/interfaces/DataContract';\nimport { DefaultContext } from '../common/interfaces/DefaultContext';\nimport { EditorConfig } from '../common/interfaces/Editor';\nimport { OptionsSchema } from '../common/interfaces/OptionsSchema';\nimport { ThemedDefaults } from '../common/interfaces/ThemedDefaults';\nimport { VizBehavior } from '../common/interfaces/VizBehavior';\nimport { VizCategory } from '../common/interfaces/VizCategory';\nimport { VizConfig } from '../common/interfaces/VizConfig';\nimport { VizSize } from '../common/interfaces/VizSize';\nimport { PresetEntry, enhanceConfig, getInitialPreset } from '../common/utils/configUtils';\nimport { getDynamicFillColorEditor } from '../common/editorConfig/DynamicFillColorEditor';\nimport { getDynamicStrokeColorEditor } from '../common/editorConfig/DynamicStrokeColorEditor';\nimport StaticFillColorEditor from '../common/editorConfig/StaticFillColorEditor';\nimport StaticStrokeColorEditor from '../common/editorConfig/StaticStrokeColorEditor';\n\nconst dataContract: DataContract = {\n    requiredDataSources: [],\n    optionalDataSources: [\n        {\n            name: 'primary',\n            description: 'DataSource that powers the visualization',\n        },\n    ],\n    initialRequestParams: {\n        primary: { offset: 0, count: 10000 },\n        annotation: { offset: 0, count: 10000 },\n    },\n};\n\nconst size: VizSize = {\n    initialWidth: 300,\n    initialHeight: 300,\n};\n\nconst defaultContext: DefaultContext = {\n    fillColorConfig: [\n        {\n            from: 100,\n            value: '#118832',\n        },\n        {\n            from: 80,\n            to: 100,\n            value: '#669922',\n        },\n        {\n            from: 60,\n            to: 80,\n            value: '#9D9F0D',\n        },\n        {\n            from: 40,\n            to: 60,\n            value: '#CBA700',\n        },\n        {\n            from: 20,\n            to: 40,\n            value: '#D97A0D',\n        },\n        {\n            from: 0,\n            to: 20,\n            value: '#D94E17',\n        },\n        {\n            to: 0,\n            value: '#D41F1F',\n        },\n    ],\n    strokeColorConfig: [\n        {\n            from: 100,\n            value: '#118832',\n        },\n        {\n            from: 80,\n            to: 100,\n            value: '#669922',\n        },\n        {\n            from: 60,\n            to: 80,\n            value: '#9D9F0D',\n        },\n        {\n            from: 40,\n            to: 60,\n            value: '#CBA700',\n        },\n        {\n            from: 20,\n            to: 40,\n            value: '#D97A0D',\n        },\n        {\n            from: 0,\n            to: 20,\n            value: '#D94E17',\n        },\n        {\n            to: 0,\n            value: '#D41F1F',\n        },\n    ],\n};\n\nconst optionsSchema: OptionsSchema = {\n    fillColor: {\n        default: '> themes.defaultFillColor',\n        description:\n            'Specify the fill color. You may use a dataSource to apply the color. The hex value format should be \"#FFFFFF\". The default for enterprise light is \"#C3CBD4\". The default for enterprise dark is \"#31373E\". The default for prisma dark is \"#0B0C0E\".',\n        type: 'string',\n    },\n    fillOpacity: {\n        default: 1,\n        description:\n            'Specify the opacity of the fill. Choose a number in the range of 0 - 1 (inclusive). You can also express the value as a percentage. For example, \"0.80\" in source or \"80%\" in UI.',\n        type: 'number',\n    },\n    strokeColor: {\n        default: '> themes.defaultStrokeColor',\n        description:\n            'Specify the stroke color. You may use a dataSource to apply the color. The hex value format should be \"#FFFFFF\". The default for enterprise light is \"#3C444D\". The default for enterprise dark is \"#C3CBD4\". The default for prisma dark is \"#ACACAD\".',\n        type: 'string',\n    },\n    strokeDashStyle: {\n        default: 0,\n        description:\n            'Specify the size, in pixels, of dashes and spaces used to create a custom stitched outline. The value you specify applies to both the dashes and the spaces between them.',\n        type: 'number',\n    },\n    strokeOpacity: {\n        default: 1,\n        description:\n            'Specify the opacity of the stroke. Choose a number in the range of 0 - 1 (inclusive). You can also express the value as a percentage. For example, \"0.80\" in source or \"80%\" in UI.',\n        type: 'number',\n    },\n    strokeWidth: {\n        default: 1,\n        description: 'Specify the width of the stroke, in pixels, in the range of 1 - 25 (inclusive).',\n        type: 'number',\n    },\n};\n\nconst themes: ThemedDefaults = {\n    defaultFillColor: props =>\n        pick({\n            enterprise: {\n                dark: variables.gray25(props),\n                light: variables.gray80(props),\n            },\n            prisma: variables.backgroundColorSidebar(props),\n        })(props),\n    defaultStrokeColor: props =>\n        pick({\n            enterprise: {\n                dark: variables.gray80(props),\n                light: variables.gray30(props),\n            },\n            prisma: variables.neutral500(props),\n        })(props),\n};\n\nconst basePresetContext = {\n    fillColorEditorConfig: undefined,\n    strokeColorEditorConfig: undefined,\n};\n\nconst basePresetOptions = {\n    fillColor: undefined,\n    strokeColor: undefined,\n};\n\nconst presets: PresetEntry[] = [\n    {\n        // dummy context variables to allow for resetting of unused context states\n        label: _('None'),\n        name: 'ellipse.none',\n        value: {\n            context: { ...basePresetContext },\n            options: { ...basePresetOptions },\n        },\n    },\n    {\n        label: _('Fill'),\n        name: 'ellipse.fill',\n        value: {\n            context: {\n                ...basePresetContext,\n                fillDataValue: '> primary | seriesByType(\"number\") | lastPoint()',\n                fillColorEditorConfig: defaultContext.fillColorConfig,\n            },\n            options: {\n                ...basePresetOptions,\n                fillColor: '> fillDataValue | rangeValue(fillColorEditorConfig)',\n            },\n        },\n    },\n    {\n        label: _('Stroke'),\n        name: 'ellipse.stroke',\n        value: {\n            context: {\n                ...basePresetContext,\n                strokeDataValue: '> primary | seriesByType(\"number\") | lastPoint()',\n                strokeColorEditorConfig: defaultContext.strokeColorConfig,\n            },\n            options: {\n                ...basePresetOptions,\n                strokeColor: '> strokeDataValue | rangeValue(strokeColorEditorConfig)',\n            },\n        },\n    },\n    {\n        label: _('Fill & Stroke'),\n        name: 'ellipse.fillAndStroke',\n        value: {\n            context: {\n                ...basePresetContext,\n                fillDataValue: '> primary | seriesByType(\"number\") | lastPoint()',\n                strokeDataValue: '> primary | seriesByType(\"number\") | lastPoint()',\n                fillColorEditorConfig: defaultContext.fillColorConfig,\n                strokeColorEditorConfig: defaultContext.strokeColorConfig,\n            },\n            options: {\n                ...basePresetOptions,\n                fillColor: '> fillDataValue | rangeValue(fillColorEditorConfig)',\n                strokeColor: '> strokeDataValue | rangeValue(strokeColorEditorConfig)',\n            },\n        },\n    },\n];\n\nconst editorConfig: EditorConfig[] = [\n    {\n        label: _('General'),\n        layout: [\n            [\n                {\n                    label: _('Fill Opacity (%)'),\n                    option: 'fillOpacity',\n                    editor: 'editor.percent',\n                    editorProps: {\n                        min: 0,\n                    },\n                },\n                {\n                    label: _('Stroke Opacity (%)'),\n                    option: 'strokeOpacity',\n                    editor: 'editor.percent',\n                    editorProps: {\n                        min: 0,\n                    },\n                },\n            ],\n            [\n                {\n                    label: _('Stroke Width'),\n                    option: 'strokeWidth',\n                    editor: 'editor.number',\n                    editorProps: {\n                        min: 0,\n                    },\n                },\n                {\n                    label: _('Stroke Dash Style'),\n                    option: 'strokeDashStyle',\n                    editor: 'editor.number',\n                    editorProps: {\n                        min: 0,\n                    },\n                },\n            ],\n        ],\n    },\n    {\n        label: _('Coloring'),\n        layout: [\n            [\n                {\n                    label: 'Dynamic Elements',\n                    key: 'presetSelector',\n                    editor: 'editor.presetSelector',\n                    editorProps: {\n                        presets,\n                        value: ({ context, options }) => {\n                            const initialPreset = getInitialPreset(context, options, presets);\n                            return (initialPreset && initialPreset.label) || null;\n                        },\n                    },\n                },\n            ],\n            [\n                {\n                    ...StaticFillColorEditor,\n                    editorProps: {\n                        labelPosition: 'left',\n                        themes,\n                    },\n                },\n            ],\n            [getDynamicFillColorEditor({ defaultContext, defaultPalettesConfig })],\n            [\n                {\n                    ...StaticStrokeColorEditor,\n                    editorProps: {\n                        labelPosition: 'left',\n                        themes,\n                    },\n                },\n            ],\n            [getDynamicStrokeColorEditor({ defaultContext, defaultPalettesConfig })],\n        ],\n    },\n];\n\n/**\n * visualization configuration\n */\nconst config: VizConfig = {\n    /**\n     * unique viz key\n     */\n    key: 'splunk.ellipse',\n    /**\n     * viz name\n     */\n    name: 'Ellipse',\n    category: VizCategory.SHAPES,\n    /**\n     * viz icon\n     */\n    icon: null,\n    dataContract,\n    size,\n    defaultContext,\n    optionsSchema,\n    editorConfig,\n    events: {\n        'ellipse.click': {\n            description: 'triggered when user clicks ellipse',\n            payloadKeys: ['strokeColor', 'fillColor'],\n        },\n    },\n    supports: [VizBehavior.DYNAMIC_OPTIONS, VizBehavior.EVENTS],\n    themes,\n};\n\nexport default enhanceConfig(config);\n"],"sourceRoot":""}