{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///./src/Table/consts.ts","webpack:///external \"@splunk/visualizations-shared/colorUtils\"","webpack:///./src/common/hocs/FixedSizeContainer.tsx","webpack:///./src/Table/Table.tsx","webpack:///external \"@splunk/visualizations-shared/style\"","webpack:///external \"@splunk/visualizations-shared/schemaUtils\"","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"@splunk/visualizations-shared/SizeAwareWrapper\"","webpack:///external \"@splunk/themes/variables\"","webpack:///external \"lodash\"","webpack:///external \"@splunk/themes/pick\"","webpack:///external \"@babel/runtime/helpers/typeof\"","webpack:///./src/common/hooks/getSorting.ts","webpack:///./src/common/hooks/getPagination.ts","webpack:///./src/Table/index.ts","webpack:///./src/Table/config.ts","webpack:///./src/Table/PureTable.tsx","webpack:///external \"lodash/debounce\"","webpack:///external \"@splunk/react-ui/Paginator\"","webpack:///external \"@splunk/react-ui/Message\"","webpack:///./src/Table/hooks.tsx","webpack:///./src/Table/cells/index.ts","webpack:///./src/Table/cells/SwitchTableCell.tsx","webpack:///./src/common/components/IconPlaceholder.tsx","webpack:///./src/Table/cells/TextCell.tsx","webpack:///./src/Table/cells/ArrayCell.tsx","webpack:///./src/Table/cells/SparklineCell.tsx","webpack:///./src/common/interfaces/VizCategory.ts","webpack:///./src/common/withDashboardViz.tsx","webpack:///external \"@splunk/themes/getSettingsFromThemedProps\"","webpack:///external \"@splunk/visualization-encoding/Options\"","webpack:///external \"@splunk/ui-utils/i18n\"","webpack:///external \"@splunk/visualizations-shared/SanitizeProps\"","webpack:///./src/common/SplunkVisualization.tsx","webpack:///./src/common/interfaces/VizActionHandler.ts","webpack:///./src/common/interfaces/DataSource.ts","webpack:///./src/common/hooks/useDeepMemo.ts","webpack:///./src/common/utils/JSONSchemaUtils.ts","webpack:///./src/common/components/MissingPropsMessage.tsx","webpack:///./src/common/hocs/withEditModeCover.tsx","webpack:///./src/common/hocs/withPlaceholder.tsx","webpack:///external \"@babel/runtime/helpers/toConsumableArray\"","webpack:///external \"styled-components\"","webpack:///external \"@splunk/visualizations-shared/colorConstants\"","webpack:///external \"@splunk/visualization-icons\"","webpack:///./src/common/interfaces/VizBehavior.ts","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"@babel/runtime/helpers/slicedToArray\"","webpack:///./src/common/utils/hocUtils.ts","webpack:///external \"@splunk/react-ui/Table\"","webpack:///external \"@splunk/react-sparkline/Line\"","webpack:///./src/common/utils/configUtils.ts","webpack:///external \"@splunk/visualizations-shared/Message\"","webpack:///external \"@babel/runtime/helpers/taggedTemplateLiteral\""],"names":[],"mappings":"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","file":"Table.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 241);\n","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","export const validCellRenderers = ['TextCell', 'ArrayCell', 'SparklineCell'] as const;\nexport type CellRenderers = typeof validCellRenderers[number];\nexport const validSparklineTypes = ['line', 'area'] as const;\nexport type SparklineType = typeof validSparklineTypes[number];\nexport const validHeaderVisibilities = ['none', 'fixed', 'inline'] as const;\nexport type TableHeaderVisibility = typeof validHeaderVisibilities[number];\nexport const validAlignments = ['left', 'center', 'right'] as const;\nexport type TableAlignment = typeof validAlignments[number];\nexport const validTextOverflows = ['anywhere', 'break-word', 'ellipsis'] as const;\nexport type TextOverflow = typeof validTextOverflows[number];\n","module.exports = require(\"@splunk/visualizations-shared/colorUtils\");","import * as React from 'react';\nimport styled from 'styled-components';\nimport SizeAwareWrapper from '@splunk/visualizations-shared/SizeAwareWrapper';\nimport { toDimension, toPx } from '@splunk/visualizations-shared/style';\nimport { isColor } from '@splunk/visualizations-shared/colorUtils';\nimport { pick } from 'lodash';\n\ninterface Props {\n    enabled?: boolean;\n    width?: number | string;\n    height?: number | string;\n}\n\ninterface ItemProps {\n    backgroundColor?: string;\n    width?: string | number;\n}\n\nconst Item = styled.div.attrs<ItemProps>(({ width }) => ({\n    style: {\n        width: toPx(width),\n    },\n}))<ItemProps>`\n    position: relative;\n    background-color: ${(props): string =>\n        (isColor(props.backgroundColor) && props.backgroundColor) || props.theme.defaultBackgroundColor}};\n`;\n\ninterface FixSizeItemProps {\n    backgroundColor?: string;\n    height?: string | number;\n    width?: string | number;\n}\n\n// Use `.attrs()` for highly dynamic styles. Ref: https://github.com/styled-components/styled-components/issues/134#issuecomment-312415291\nconst FixSizeItem = styled.div.attrs<FixSizeItemProps>(({ width, height }): {\n    style: { width?: string; height?: string };\n} => ({\n    style: {\n        ...(width && { width: toPx(width) }),\n        ...(height && { height: toPx(height) }),\n    },\n}))<FixSizeItemProps>`\n    position: relative;\n    flex-direction: column;\n    flex: 1;\n    display: flex;\n    background-color: ${(props): string =>\n        (isColor(props.backgroundColor) && props.backgroundColor) || props.theme.defaultBackgroundColor}};\n`;\n\nconst ItemContent = styled.div`\n    position: relative;\n    min-height: 100px;\n    width: 100%;\n`;\n\nconst FixSizeItemContent = styled.div`\n    min-height: 0px;\n    flex: 1;\n    position: relative;\n    box-sizing: border-box;\n`;\n\ninterface HeightAndWidthProps {\n    width?: string | number;\n    height?: string | number;\n    backgroundColor?: string;\n}\n\nconst withFixedSizeContainer = <P extends HeightAndWidthProps>(\n    Viz: React.ComponentType<P>\n): React.ComponentType<P> => {\n    const FixedSizeContainer = (props: P): React.ReactElement => {\n        const { width, height, backgroundColor } = props;\n\n        if (!height) {\n            return (\n                <Item data-test=\"item\" width={width} backgroundColor={backgroundColor}>\n                    <ItemContent>\n                        <Viz {...props} />\n                    </ItemContent>\n                </Item>\n            );\n        }\n        return (\n            <FixSizeItem\n                data-test=\"fix-size-item\"\n                width={width}\n                height={height}\n                backgroundColor={backgroundColor}\n            >\n                <FixSizeItemContent>\n                    <SizeAwareWrapper>\n                        {({ width: newWidth, height: newHeight }): React.ReactElement => (\n                            <Viz {...props} width={newWidth} height={newHeight} />\n                        )}\n                    </SizeAwareWrapper>\n                </FixSizeItemContent>\n            </FixSizeItem>\n        );\n    };\n    FixedSizeContainer.displayName = 'withFixedSizeContainer';\n    return FixedSizeContainer;\n};\n\nexport default withFixedSizeContainer;\n","import config from './config';\nimport withDashboardViz, { DashboardVizOpts } from '../common/withDashboardViz';\nimport PureTable from './PureTable';\n\nexport const computeVizProps = ({ themeFunc, ...props }) => {\n    if (!props.showInternalFields) {\n        const filteredFields = [];\n        const filteredTable = [];\n        const filteredIndexes = [];\n        props.headers.forEach((fieldIn, index) => {\n            const field = fieldIn.name ?? fieldIn;\n            if (field.charAt(0) !== '_' || field === '_time') {\n                filteredFields.push(field);\n                filteredTable.push(props.table[index]);\n                filteredIndexes.push(index);\n            }\n        });\n        let filteredTableFormat = null;\n        if (props.tableFormat) {\n            filteredTableFormat = {};\n            Object.keys(props.tableFormat).forEach((tableFormatKey, index) => {\n                if (Array.isArray(props.tableFormat[tableFormatKey])) {\n                    filteredTableFormat[tableFormatKey] = props.tableFormat[tableFormatKey].filter(\n                        (tableFormatItem, tableFormatItemIndex) =>\n                            filteredIndexes.indexOf(tableFormatItemIndex) !== -1\n                    );\n                } else {\n                    filteredTableFormat[tableFormatKey] = props.tableFormat[tableFormatKey];\n                }\n            });\n        }\n\n        return { ...props, headers: filteredFields, table: filteredTable, tableFormat: filteredTableFormat };\n    }\n    return props;\n};\n\nconst Table = withDashboardViz({\n    ReactViz: PureTable,\n    vizConfig: config,\n    computeVizProps,\n} as DashboardVizOpts);\nconst themes = Table['themes'];\n\nexport { themes, PureTable, config };\nexport default Table;\n","module.exports = require(\"@splunk/visualizations-shared/style\");","module.exports = require(\"@splunk/visualizations-shared/schemaUtils\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@splunk/visualizations-shared/SizeAwareWrapper\");","module.exports = require(\"@splunk/themes/variables\");","module.exports = require(\"lodash\");","module.exports = require(\"@splunk/themes/pick\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","import * as T from 'prop-types';\nimport { has, isFunction } from 'lodash';\nimport { DataSourceMeta, SortDirType, validSortDirs } from '../interfaces/DataSource';\n\nexport interface SortParams {\n    currentSortKey?: undefined | string;\n    currentSortDir?: undefined | SortDirType;\n    onSort?: (e: MouseEvent, { sortKey: string, sortDir: SortDirType }) => void;\n}\n\nexport const SortParamsPropTypes = T.shape({\n    currentSortKey: T.string,\n    currentSortDir: T.oneOf(validSortDirs),\n    onSort: T.func,\n});\n\nexport const getSortingParams = ({ requestParams, onRequestParamsChange }: DataSourceMeta): SortParams => {\n    let currentSortKey;\n    let currentSortDir;\n\n    const nextSortDirMap = {\n        asc: 'desc',\n        desc: 'asc',\n        none: 'asc',\n    };\n\n    let onSort;\n    if (isFunction(onRequestParamsChange)) {\n        if (requestParams && has(requestParams, 'sort')) {\n            currentSortKey = Object.keys(requestParams.sort).shift();\n            currentSortDir = requestParams.sort[currentSortKey];\n        }\n\n        // undid memoization since there is a dependency on requestParams, which is a deeply nested object\n        onSort = (e, { sortKey, sortDir }): void => {\n            if (typeof sortKey === 'string') {\n                const nextSortDir = has(nextSortDirMap, sortDir) ? nextSortDirMap[sortDir] : 'none';\n                onRequestParamsChange({\n                    ...requestParams,\n                    ...{ offset: 0, sort: { [sortKey]: nextSortDir } },\n                });\n            } else {\n                onRequestParamsChange(requestParams);\n            }\n        };\n    }\n\n    return {\n        currentSortKey,\n        currentSortDir,\n        onSort,\n    };\n};\n","import * as T from 'prop-types';\nimport { cloneDeep, isFunction, noop } from 'lodash';\nimport { DataSourceMeta, RequestParams } from '../interfaces/DataSource';\n\nexport interface OnChangeParams {\n    page?: number;\n    count?: number;\n}\nexport interface PaginatorParams {\n    isPaging?: boolean;\n    current?: number;\n    totalPages?: number;\n    onChange?: (e: MouseEvent, x: OnChangeParams) => void;\n}\n\nexport const PaginatorParamsPropTypes = T.shape({\n    isPaging: T.bool,\n    current: T.number,\n    totalPages: T.number,\n    onChange: T.func,\n});\n\nexport const getPaginationParams = ({\n    requestParams,\n    meta,\n    onRequestParamsChange,\n}: DataSourceMeta): PaginatorParams => {\n    const totalCount = (meta && meta.totalCount) || 0;\n    const offset = (requestParams && requestParams.offset) || 0;\n    const count = requestParams && requestParams.count;\n    const totalPages = typeof count === 'number' && count > 0 ? Math.ceil(totalCount / count) : 0;\n    const current = typeof count === 'number' && count > 0 ? Math.floor(offset / count) + 1 : 0;\n    const isPaging = totalPages > 1 && isFunction(onRequestParamsChange);\n\n    const onChangeHandler = (e, { page, count: countArg }: OnChangeParams): void => {\n        const newParams: RequestParams = cloneDeep(requestParams);\n\n        if (typeof countArg === 'number') {\n            newParams.count = countArg;\n            newParams.offset = 0;\n        }\n\n        const pageCount = typeof newParams.count === 'number' ? newParams.count : 10;\n        if (typeof page === 'number' && page > 0) {\n            newParams.count = pageCount;\n            newParams.offset = (page - 1) * pageCount;\n        }\n\n        onRequestParamsChange(newParams);\n    };\n\n    return {\n        isPaging,\n        current,\n        totalPages,\n        onChange: isFunction(onRequestParamsChange) ? onChangeHandler : noop,\n    };\n};\n","// NOTE: wildcard syntax only works for named exports\n// for some reason, omitting the default export worked before TS v4\n// see: https://stackoverflow.com/a/34445175\nexport * from './Table';\nexport { default } from './Table';\n","import { _ } from '@splunk/ui-utils/i18n';\nimport { map, get } from 'lodash';\nimport {\n    COLOR_OR_TOKEN_PATTERN,\n    COLOR_OR_TOKEN_PATTERN_WITH_RGBA,\n    getPattern,\n} from '@splunk/visualizations-shared/schemaUtils';\nimport { COLOR_EDITOR_PALETTE } from '@splunk/visualizations-shared/colorConstants';\nimport { Table as TableIcon } from '@splunk/visualization-icons';\nimport variables from '@splunk/themes/variables';\nimport pick from '@splunk/themes/pick';\nimport { enhanceConfig, generatePrecisionValues } from '../common/utils/configUtils';\nimport { VizConfig } from '../common/interfaces/VizConfig';\nimport { DataContract } from '../common/interfaces/DataContract';\nimport { VizSize } from '../common/interfaces/VizSize';\nimport { DefaultContext } from '../common/interfaces/DefaultContext';\nimport { OptionsSchema } from '../common/interfaces/OptionsSchema';\nimport { EditorConfig } from '../common/interfaces/Editor';\nimport { VizBehavior } from '../common/interfaces/VizBehavior';\nimport { ThemedDefaults } from '../common/interfaces/ThemedDefaults';\nimport {\n    validHeaderVisibilities,\n    validAlignments,\n    validTextOverflows,\n    validCellRenderers,\n    validSparklineTypes,\n} from './consts';\nimport { VizCategory } from '../common/interfaces/VizCategory';\n\nconst dataContract: DataContract = {\n    requiredDataSources: [\n        {\n            name: 'primary',\n            description: 'DataSource that powers the visualization',\n        },\n    ],\n    optionalDataSources: [],\n    initialRequestParams: {\n        primary: (options: { count?: number } = {}): Record<string, unknown> => ({\n            offset: 0,\n            count: options.count ? options.count : 10,\n            requestTotalCount: true,\n        }),\n    },\n};\n\nconst size: VizSize = {\n    initialWidth: 300,\n    initialHeight: 300,\n};\n\nconst defaultContext: DefaultContext = {\n    tableAlignByType: [\n        { match: 'string', value: 'left' },\n        { match: 'number', value: 'right' },\n        { match: 'time', value: 'left' },\n        { match: 'color', value: 'left' },\n        { match: 'array', value: 'left' },\n        { match: 'sparkline', value: 'center' },\n        { match: 'unknown', value: 'left' },\n    ],\n    tableCellTypeByType: [\n        { match: 'string', value: 'TextCell' },\n        { match: 'number', value: 'TextCell' },\n        { match: 'time', value: 'TextCell' },\n        { match: 'color', value: 'TextCell' },\n        { match: 'array', value: 'ArrayCell' },\n        { match: 'sparkline', value: 'SparklineCell' },\n        { match: 'unknown', value: 'TextCell' },\n    ],\n\n    // NOTE: These contexts are used by the table background color editor.\n    // Please be careful removing/renaming/altering them.\n    // There are unit tests and visual test that will capture breakages.\n    tableRowColorMaxContrast: {\n        colors: ['> themes.textColor', '> themes.inverseTextColor'],\n        default: '> themes.textColor',\n    },\n    tableRowBackgroundColorEvenConfig: {\n        channel: 'hsv.v',\n        value: '*0.96',\n    },\n    tableHeaderBackgroundColorConfig: {\n        channel: 'hsv.v',\n        value: '*0.9',\n    },\n    tableRowBackgroundColorsByTheme: ['> themes.rowBackgroundColorOdd'],\n    tableAltRowBackgroundColorsByTheme: ['> themes.rowBackgroundColorOdd', '> themes.rowBackgroundColorEven'],\n    tableRowBackgroundColorsByBackgroundColor: ['> backgroundColor'],\n    tableAltRowBackgroundColorsByBackgroundColor: [\n        '> backgroundColor',\n        '> backgroundColor | setColorChannel(tableRowBackgroundColorEvenConfig)',\n    ],\n};\n\nconst unitPositionConfig = {\n    label: _('Units Position'),\n    editor: 'editor.select',\n    option: 'unitPosition',\n    editorProps: {\n        values: [\n            { label: _('Before'), value: 'before' },\n            { label: _('After'), value: 'after' },\n        ],\n    },\n};\n\nconst unitLabelConfig = {\n    label: _('Unit Label'),\n    option: 'unit',\n    editor: 'editor.text',\n};\n\nconst sequentialColorConfig = [\n    { to: 20, value: '#D41F1F' },\n    { from: 20, to: 40, value: '#D94E17' },\n    { from: 40, to: 60, value: '#CBA700' },\n    { from: 60, to: 80, value: '#669922' },\n    { from: 80, value: '#118832' },\n];\n\nconst optionsSchema: OptionsSchema = {\n    backgroundColor: {\n        default: '> themes.defaultBackgroundColor',\n        description:\n            'Specify the color for the background. You may use a dataSource to apply the color. The default for enterprise light is \"#ffffff\". The default for enterprise dark is \"#000000\". The default for prisma dark is \"#0b0c0e\".',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    columnFormat: {\n        description: 'Allows users to set column formatting for individual columns.',\n        type: 'object',\n        patternProperties: {\n            '.*': {\n                description: 'Customization for column property',\n                type: 'object',\n                properties: {\n                    align: {\n                        description:\n                            'Alignment for each cell in the column. Valid alignments include \"left\", \"center\", and \"right\".',\n                        type: 'array',\n                        items: {\n                            type: 'string',\n                            enum: validAlignments.concat(),\n                        },\n                    },\n                    cellTypes: {\n                        description:\n                            'Cell renderer for each cell in the column. Valid cell renders include \"TextCell\", \"ArrayCell\", \"SparklineCell\".',\n                        type: 'array',\n                        items: {\n                            type: 'string',\n                            enum: validCellRenderers.concat(),\n                        },\n                    },\n                    data: {\n                        description: 'Array of datapoint to be displayed in the column rows.',\n                        type: 'array',\n                        items: {\n                            oneOf: [\n                                { type: 'string' },\n                                { type: 'number' },\n                                { type: 'array', items: { type: ['string', 'number'] } },\n                            ],\n                        },\n                    },\n                    rowBackgroundColors: {\n                        description:\n                            'Array of colors for background color of each row of the column of the table.',\n                        type: 'array',\n                        items: {\n                            type: 'string',\n                            pattern: COLOR_OR_TOKEN_PATTERN,\n                        },\n                    },\n                    rowColors: {\n                        description: 'Array of colors for text color of each row of the column of the table.',\n                        type: 'array',\n                        items: {\n                            type: 'string',\n                            pattern: COLOR_OR_TOKEN_PATTERN,\n                        },\n                    },\n                    sparklineAreaColors: {\n                        description:\n                            'Array of colors for sparkline area color of each row of the column of the table.',\n                        type: 'array',\n                        items: {\n                            type: 'string',\n                            pattern: COLOR_OR_TOKEN_PATTERN,\n                        },\n                    },\n                    sparklineColors: {\n                        description:\n                            'Array of colors for sparkline line color of each row of the column of the table.',\n                        type: 'array',\n                        items: {\n                            type: 'string',\n                            pattern: COLOR_OR_TOKEN_PATTERN,\n                        },\n                    },\n                    sparklineTypes: {\n                        description: 'Area or Line Sparkline. Valid sparkline types include \"line\", \"area\".',\n                        type: 'array',\n                        items: {\n                            type: 'string',\n                            enum: validSparklineTypes.concat(),\n                        },\n                    },\n                    textOverflow: {\n                        description:\n                            'Controls how the text should be truncated within a particular column. Valid types include \"anywhere\", \"break-word\", \"ellipsis\". Defaults width for ellipsis is 100px.',\n                        type: 'string',\n                        pattern: getPattern(validTextOverflows),\n                        enum: validTextOverflows.concat(),\n                    },\n                    width: {\n                        description:\n                            'Controls how wide in pixels (where 1px = 1/96th of 1in) the column should be displayed.',\n                        type: 'number',\n                    },\n                },\n            },\n        },\n    },\n    count: {\n        description: 'Specify the maximum number of rows to display.',\n        type: 'number',\n        default: 10,\n    },\n    headers: {\n        default: '> table | getField()',\n        description: 'Array of headers to display on the table.',\n        type: 'array',\n        items: {\n            type: 'string',\n        },\n    },\n    headerVisibility: {\n        default: 'inline',\n        description: 'Header visibility can be none, fixed (docked) or inline.',\n        pattern: getPattern(validHeaderVisibilities),\n        enum: validHeaderVisibilities.concat(),\n        type: 'string',\n    },\n    paginateDataSourceKey: {\n        default: 'primary',\n        description: 'Use the specified datasource key for pagination and sorting.',\n        type: 'string',\n    },\n    showRowNumbers: {\n        default: false,\n        description: 'Show row numbers in the first column.',\n        type: 'boolean',\n    },\n    showInternalFields: {\n        default: true,\n        description:\n            'Specify whether to show internal fields that start with an underscore. The _time field will still be shown if false.',\n        type: 'boolean',\n    },\n    table: {\n        default: '> primary',\n        description: 'Two dimensional array of data to be displayed in the table.',\n        type: 'array',\n        items: {\n            type: 'array',\n            items: {\n                oneOf: [\n                    { type: 'string' },\n                    { type: 'number' },\n                    { type: 'array', items: { type: ['string', 'number'] } },\n                ],\n            },\n        },\n    },\n    tableFormat: {\n        description: 'Allows users to set table wide options.',\n        type: 'object',\n        properties: {\n            align: {\n                default: '> table | type() | matchValue(tableAlignByType)',\n                description:\n                    'Alignment for each cell in the table. Valid alignments include \"left\", \"center\", and \"right\".',\n                type: 'array',\n                items: {\n                    type: 'array',\n                    items: {\n                        type: 'string',\n                        enum: validAlignments.concat(),\n                    },\n                },\n            },\n            cellTypes: {\n                default: '> table | type() | matchValue(tableCellTypeByType)',\n                description:\n                    'Render the data in one of the supported cell type. Valid cell renders include \"TextCell\", \"ArrayCell\", \"SparklineCell\".',\n                type: 'array',\n                items: {\n                    type: 'array',\n                    items: {\n                        type: 'string',\n                        enum: validCellRenderers.concat(),\n                    },\n                },\n            },\n            data: {\n                description:\n                    'Two dimensional data to be displayed in the table. This is usually formatted data instead of raw data from search.',\n                type: 'array',\n                items: {\n                    type: 'array',\n                    items: {\n                        oneOf: [\n                            { type: 'string' },\n                            { type: 'number' },\n                            { type: 'array', items: { type: ['string', 'number'] } },\n                        ],\n                    },\n                },\n            },\n            headerBackgroundColor: {\n                default: '> themes.defaultHeaderBackgroundColor',\n                description: 'Background color of table header.',\n                pattern: COLOR_OR_TOKEN_PATTERN,\n                type: 'string',\n            },\n            headerColor: {\n                description: 'Text color of the table header.',\n                pattern: COLOR_OR_TOKEN_PATTERN,\n                type: 'string',\n            },\n            rowBackgroundColors: {\n                default: '> table | seriesByIndex(0) | pick(tableAltRowBackgroundColorsByTheme)',\n                description: 'Array of colors for background color of each row of the table.',\n                type: 'array',\n                items: {\n                    type: 'array',\n                    items: {\n                        type: 'string',\n                        pattern: COLOR_OR_TOKEN_PATTERN,\n                    },\n                },\n            },\n            rowColors: {\n                description: 'Array of colors for text color of each row of the table.',\n                type: 'array',\n                items: {\n                    type: 'array',\n                    items: {\n                        type: 'string',\n                        pattern: COLOR_OR_TOKEN_PATTERN_WITH_RGBA,\n                    },\n                },\n            },\n            sparklineAreaColors: {\n                description: 'Array of colors for sparkline area of each row of the table.',\n                type: 'array',\n                items: {\n                    type: 'array',\n                    items: {\n                        type: 'string',\n                        pattern: COLOR_OR_TOKEN_PATTERN,\n                    },\n                },\n            },\n            sparklineColors: {\n                description: 'Array of colors for sparkline line of each row of the table.',\n                type: 'array',\n                items: {\n                    type: 'array',\n                    items: {\n                        type: 'string',\n                        pattern: COLOR_OR_TOKEN_PATTERN,\n                    },\n                },\n            },\n            sparklineTypes: {\n                description: 'Area or Line Sparkline. Valid sparkline types include \"line\", \"area\".',\n                type: 'array',\n                items: {\n                    type: 'array',\n                    items: {\n                        type: 'string',\n                        enum: validSparklineTypes.concat(),\n                    },\n                },\n            },\n        },\n    },\n};\n\nconst themes: ThemedDefaults = {\n    defaultBackgroundColor: props =>\n        pick({\n            enterprise: {\n                dark: variables.black(props),\n                light: variables.backgroundColor(props),\n            },\n            prisma: variables.backgroundColorSidebar(props),\n        })(props),\n    defaultHeaderBackgroundColor: props =>\n        pick({\n            enterprise: {\n                dark: variables.gray20(props),\n                light: variables.gray92(props),\n            },\n            prisma: variables.backgroundColor(props),\n        })(props),\n    rowBackgroundColorEven: props =>\n        pick({\n            enterprise: {\n                dark: variables.black(props),\n                light: variables.gray96(props),\n            },\n            prisma: variables.backgroundColorPage(props),\n        })(props),\n    rowBackgroundColorOdd: props =>\n        pick({\n            enterprise: {\n                dark: '#0D1012',\n                light: variables.backgroundColor(props),\n            },\n            prisma: variables.backgroundColorSidebar(props),\n        })(props),\n    textColor: props =>\n        pick({\n            enterprise: variables.textColor(props),\n            prisma: variables.contentColorDefault(props),\n        })(props),\n    inverseTextColor: props =>\n        pick({\n            enterprise: {\n                dark: variables.contentColorInverted(props), // equal to textColor in enterprise\n                light: variables.white(props), // equal to textColor in enterpriseDark\n            },\n            prisma: variables.contentColorInverted(props),\n        })(props),\n};\n\nconst backgroundColorPaletteSet = new Set([\n    ...COLOR_EDITOR_PALETTE,\n    ...map(themes, (t): string => get(t, 'defaultBackgroundColor')),\n]);\nconst EDITOR_LABEL_WIDTH = 100;\nconst editorConfig: EditorConfig[] = [\n    {\n        label: _('Global Formatting'),\n        layout: [\n            [\n                {\n                    label: _('Rows Displayed'),\n                    option: 'count',\n                    editor: 'editor.number',\n                    editorProps: {\n                        labelPosition: 'left',\n                        min: 0,\n                        labelWidth: EDITOR_LABEL_WIDTH,\n                    },\n                },\n            ],\n            [\n                {\n                    label: _('Row Numbers'),\n                    option: 'showRowNumbers',\n                    editor: 'editor.toggle',\n                    editorProps: {\n                        labelPosition: 'left',\n                        labelWidth: EDITOR_LABEL_WIDTH,\n                    },\n                },\n            ],\n            [\n                {\n                    label: _('Internal Fields'),\n                    option: 'showInternalFields',\n                    editor: 'editor.toggle',\n                    editorProps: {\n                        labelPosition: 'left',\n                        labelWidth: EDITOR_LABEL_WIDTH,\n                    },\n                },\n            ],\n            [\n                {\n                    label: _('Header Row'),\n                    option: 'headerVisibility',\n                    editor: 'editor.radioBar',\n                    editorProps: {\n                        values: [\n                            { label: _('Inline'), value: 'inline' },\n                            { label: _('Fixed'), value: 'fixed' },\n                            { label: _('Hidden'), value: 'none' },\n                        ],\n                        labelPosition: 'left',\n                        labelWidth: EDITOR_LABEL_WIDTH,\n                    },\n                },\n            ],\n            [\n                {\n                    key: 'backgroundColor',\n                    editor: 'editor.tableBackgroundColor',\n                    editorProps: {\n                        themes,\n                        labelPosition: 'left',\n                        labelWidth: EDITOR_LABEL_WIDTH,\n                        palette: [...backgroundColorPaletteSet],\n                    },\n                },\n            ],\n        ],\n    },\n    {\n        label: _('Column Formatting'),\n        layout: [\n            [\n                {\n                    label: _(''),\n                    editor: 'editor.tableColumnFormatter',\n                    editorProps: {\n                        // Table column coloring does not adhere to same DSL structure as other dynamically colored options\n                        // we use the FormatterEditor directly and not the DynamicColorEditor's provided DSL builders\n                        columnColoringConfig: {\n                            coloringTypes: [\n                                {\n                                    label: _('Text'),\n                                    value: 'rowColors',\n                                },\n                                {\n                                    label: _('Background'),\n                                    value: 'rowBackgroundColors',\n                                },\n                            ],\n                            formatters: [\n                                {\n                                    label: _('Ranges'),\n                                    value: 'rangeValue',\n                                    defaults: {\n                                        rowBackgroundColors: sequentialColorConfig,\n                                        rowColors: sequentialColorConfig,\n                                    },\n                                },\n                            ],\n                            themes,\n                        },\n                        defaultOptionsByType: {\n                            number: {\n                                thousandSeparated: false,\n                                unitPosition: 'after',\n                            },\n                            string: {\n                                unitPosition: 'after',\n                            },\n                        },\n                        flyoutConfig: {\n                            number: [\n                                [\n                                    {\n                                        ...unitPositionConfig,\n                                    },\n                                    {\n                                        ...unitLabelConfig,\n                                    },\n                                ],\n                                [\n                                    {\n                                        label: _('Precision'),\n                                        option: 'precision',\n                                        editor: 'editor.select',\n                                        editorProps: {\n                                            values: generatePrecisionValues(20),\n                                        },\n                                    },\n                                    {\n                                        label: _('Thousand Separators'),\n                                        option: 'thousandSeparated',\n                                        editor: 'editor.radioBar',\n                                        editorProps: {\n                                            values: [\n                                                { label: _('Off'), value: false },\n                                                { label: _('On'), value: true },\n                                            ],\n                                        },\n                                    },\n                                ],\n                            ],\n                            // TODO(fkurniawan): fill in with proper editor components\n                            sparkline: [],\n                            string: [\n                                [\n                                    {\n                                        ...unitPositionConfig,\n                                    },\n                                    {\n                                        ...unitLabelConfig,\n                                    },\n                                ],\n                            ],\n                            time: [],\n                        },\n                        value: ({ context, options }) => {\n                            return {\n                                context,\n                                columnFormat: options.columnFormat,\n                                tableFormat: options.tableFormat,\n                            };\n                        },\n                    },\n                    key: 'TableColumnFormatterEditor',\n                },\n            ],\n        ],\n    },\n];\n\n/**\n * visualization configuration\n */\nconst config: VizConfig = {\n    /**\n     * unique viz key\n     */\n    key: 'splunk.table',\n    /**\n     * viz name\n     */\n    name: 'Table',\n    category: VizCategory.TABLE,\n    /**\n     * viz icon\n     */\n    icon: TableIcon,\n    dataContract,\n    size,\n    defaultContext,\n    optionsSchema,\n    editorConfig,\n    events: {\n        'cell.click': {\n            description: 'triggered when user clicks a table cell',\n        },\n    },\n    supports: [\n        VizBehavior.DYNAMIC_OPTIONS,\n        VizBehavior.EVENTS,\n        VizBehavior.PAGE_AND_SORT,\n        VizBehavior.PLACEHOLDER,\n    ],\n    themes,\n};\n\nexport default enhanceConfig(config);\n","import * as React from 'react';\nimport * as T from 'prop-types';\nimport { noop, isFunction } from 'lodash';\nimport debounce = require('lodash/debounce');\n\nimport styled, { css } from 'styled-components';\n\nimport { _ } from '@splunk/ui-utils/i18n';\nimport SUITable from '@splunk/react-ui/Table';\nimport Paginator from '@splunk/react-ui/Paginator';\nimport Message from '@splunk/react-ui/Message';\nimport { isColor } from '@splunk/visualizations-shared/colorUtils';\nimport { toDimension } from '@splunk/visualizations-shared/style';\nimport pick from '@splunk/themes/pick';\nimport variables from '@splunk/themes/variables';\n\nimport { PaginatorParamsPropTypes, PaginatorParams } from '../common/hooks/getPagination';\nimport { SortParamsPropTypes, SortParams } from '../common/hooks/getSorting';\nimport withFixedSizeContainer from '../common/hocs/FixedSizeContainer';\n\nimport {\n    TableCellValueType,\n    TableRowCell,\n    useTable,\n    TableHeaderStyle,\n    TableBody,\n    TableHeader,\n    TableFormat,\n    ColumnFormat,\n} from './hooks';\n\nimport {\n    validAlignments,\n    TableHeaderVisibility,\n    validHeaderVisibilities,\n    validCellRenderers,\n    validSparklineTypes,\n} from './consts';\n\nimport { SwitchTableCell, TextCell, ArrayCell, SparklineCell } from './cells';\n\ninterface TableCellClickPayload {\n    /* user should be able to use value to drilldown */\n    value: string | number;\n    // other details user can use to for building complex drilldown/tokens\n\n    /* nth - column. starts at 0. row number column is ignored */\n    cellIndex: number;\n\n    /* nth - row */\n    rowIndex: number;\n\n    /* field name from the table header*/\n    fieldValue: string;\n    name: string;\n\n    /* displayed table cell value. This could be formatted data */\n    cellValue: TableCellValueType;\n\n    /* Raw unformatted data */\n    cellRawValue: TableCellValueType;\n\n    /* cell values of all cells of clicked row with the field and value - in shape row.<field>.value */\n    [key: string]: TableCellValueType | TableCellValueType[];\n}\n\nexport interface PureTableProps {\n    backgroundColor?: string;\n    count?: number;\n    mode?: string;\n    width?: number;\n    height?: number;\n    headers?: string[];\n    table?: TableCellValueType[][];\n    headerVisibility?: TableHeaderVisibility;\n    showRowNumbers?: boolean;\n    tableBody?: TableBody;\n    tableHeader?: TableHeader;\n    tableFormat?: Partial<TableFormat>;\n    columnFormat?: Partial<ColumnFormat>;\n    sortParams?: SortParams;\n    paginatorParams?: PaginatorParams;\n    onCellClick?: ({ e: Event, payload: TableCellClickPayload }) => void;\n}\n\nconst NonVisibleTableHead = styled(SUITable.Head)`\n    display: none;\n`;\n\nconst VizTableContainer = styled.div<{ backgroundColor: string }>`\n    box-sizing: border-box;\n    padding: ${pick({\n        enterprise: variables.spacingHalf,\n        prisma: variables.spacingSmall,\n    })};\n    background-color: ${(props): string =>\n        (isColor(props.backgroundColor) && props.backgroundColor) || props.theme.defaultBackgroundColor};\n    display: flex;\n    flex-flow: column nowrap;\n    overflow: hidden;\n`;\nVizTableContainer.displayName = 'VizTableContainer';\n\nconst PAGINATOR_CONTAINER_HEIGHT = 38;\nconst PAGINATOR_SPACING = 5;\nconst SUITableContainer = styled.div<{\n    headerStyle?: TableHeaderStyle;\n    width: string | number;\n    height: string | number;\n    isPaging: boolean;\n}>`\n    box-sizing: border-box;\n    flex-grow: 1;\n    overflow: hidden;\n    ${({ width, height, isPaging, theme }: any): string => {\n        const padding = pick({\n            enterprise: variables.spacingHalf({ theme }),\n            prisma: variables.spacingSmall({ theme }),\n        })({ theme }) as string;\n        const paddingOffset = parseInt(padding, 10) * 2;\n        return toDimension({\n            width: width - paddingOffset,\n            height: isPaging\n                ? height - PAGINATOR_CONTAINER_HEIGHT - PAGINATOR_SPACING - paddingOffset\n                : height - paddingOffset,\n        });\n    }};\n\n    ${({ isPaging }): string =>\n        isPaging &&\n        `\n        margin-bottom: ${PAGINATOR_SPACING}px;\n    `};\n\n    /* TODO: Replace unsupported hacky style overrides */\n    ${({ headerStyle }) =>\n        headerStyle &&\n        headerStyle.backgroundColor &&\n        css`\n            & [data-test='head-cell'] {\n                background-color: ${headerStyle.backgroundColor};\n            }\n        `}\n\n    ${({ headerStyle }) =>\n        headerStyle &&\n        headerStyle.color &&\n        css`\n            & [data-test='head-cell'] > div > span {\n                color: ${headerStyle.color};\n            }\n        `}\n` as any;\nSUITableContainer.displayName = 'SUITableContainer';\n\nconst PaginatorContainer = styled.div`\n    position: relative;\n    text-align: right;\n    height: ${PAGINATOR_CONTAINER_HEIGHT}px;\n`;\nPaginatorContainer.displayName = 'PaginatorContainer';\n\n// allow for early return in case of empty tableBody while still following hook rules\nconst withEmptyTableMessage = (Viz): React.FunctionComponent<PureTableProps> => {\n    // TODO(fkurniawan): add omit type to differentiate WrapperProps from PureTableProps\n    const Wrapper = (props: PureTableProps): React.ReactElement => {\n        const { headers, table, headerVisibility, showRowNumbers, tableFormat, columnFormat } = props;\n        const { tableHeader, tableBody } = useTable({\n            headers,\n            table,\n            headerVisibility,\n            showRowNumbers,\n            tableFormat,\n            columnFormat,\n        });\n\n        if (tableBody.rows.length === 0) {\n            return <Message type=\"warning\">{_('No data!')}</Message>;\n        }\n\n        return <Viz {...props} tableHeader={tableHeader} tableBody={tableBody} />;\n    };\n\n    Wrapper.displayName = 'PureTableWrapper';\n    return Wrapper;\n};\n\nconst PureTable = (props: PureTableProps): React.ReactElement => {\n    const {\n        count,\n        width,\n        height,\n        backgroundColor,\n        tableHeader,\n        tableBody,\n        showRowNumbers,\n        sortParams: { currentSortKey, currentSortDir, onSort },\n        paginatorParams: { isPaging, ...paginatorProps },\n        onCellClick,\n    } = props;\n\n    const firstRenderCount = React.useRef(count);\n    React.useEffect((): void => {\n        if (firstRenderCount.current !== count) {\n            firstRenderCount.current = count;\n            paginatorProps.onChange(null, { count });\n        }\n    }, [count, paginatorProps]);\n\n    const TableHead = tableHeader.visibility === 'none' ? NonVisibleTableHead : SUITable.Head;\n\n    const debouncedDrilldown = debounce((e: Event, payload: TableCellClickPayload): void => {\n        if (window.getSelection().toString() === '') {\n            isFunction(onCellClick) && onCellClick({ e, payload });\n        }\n    }, 200);\n\n    const drilldownHandler = React.useCallback(\n        (e: React.SyntheticEvent): void => {\n            const element = e.target as HTMLElement;\n            const row = element.getAttribute('data-row-index');\n            const col = element.getAttribute('data-col-index');\n            const arrayIndex = element.getAttribute('data-array-index') || -1;\n            if (row && col) {\n                const cellRefIndex = +col;\n                let cellIndex = cellRefIndex;\n                const rowIndex = +row;\n                const fieldValue = tableHeader.cells[cellRefIndex].value;\n                const cellValue = tableBody.rows[rowIndex].cells[cellRefIndex].value;\n                const cellRawValue = tableBody.rows[rowIndex].cells[cellRefIndex].value;\n\n                const value = arrayIndex === -1 ? cellValue : cellRawValue[+arrayIndex];\n\n                // Wish we did not have these if statements for\n                // showRowNumbers\n                if (showRowNumbers === true) {\n                    if (cellIndex === 0) {\n                        // no click event for row numbers\n                        return;\n                    }\n                    cellIndex--;\n                }\n\n                const payload = {\n                    cellIndex,\n                    rowIndex,\n                    fieldValue,\n                    cellValue,\n                    cellRawValue,\n                    value,\n                    name: fieldValue,\n                };\n\n                tableBody.rows[rowIndex].cells.forEach((c: TableRowCell, index: number) => {\n                    const rowToken = 'row.' + tableHeader.cells[index].value + '.value';\n                    payload[rowToken] = c.value;\n                });\n\n                debouncedDrilldown(e.nativeEvent, payload);\n            }\n        },\n        [onCellClick, showRowNumbers, tableHeader, tableBody]\n    );\n\n    return (\n        <VizTableContainer backgroundColor={backgroundColor}>\n            <SUITableContainer\n                width={width}\n                height={height}\n                isPaging={isPaging}\n                headerStyle={tableHeader.style}\n            >\n                <SUITable\n                    headType={tableHeader.visibility !== 'none' ? tableHeader.visibility : undefined}\n                    innerStyle={{ height: '100%' }}\n                    outerStyle={{ height: '100%', cursor: onCellClick ? 'pointer' : 'unset' }}\n                    onClick={onCellClick ? drilldownHandler : noop}\n                >\n                    <TableHead>\n                        {tableHeader.cells.map(\n                            ({ key, value, sortKey, ...rest }): React.ReactElement => (\n                                <SUITable.HeadCell\n                                    key={key}\n                                    sortDir={sortKey === currentSortKey ? currentSortDir : 'none'}\n                                    {...{ sortKey, onSort, ...rest }}\n                                >\n                                    {value}\n                                </SUITable.HeadCell>\n                            )\n                        )}\n                    </TableHead>\n                    <SUITable.Body>\n                        {tableBody.rows.map(\n                            (row): React.ReactElement => (\n                                <SUITable.Row key={row.key}>\n                                    {row.cells.map(\n                                        (cell): React.ReactElement => (\n                                            <SwitchTableCell key={cell.key} type={cell.cellType}>\n                                                <TextCell cell={cell} useMouseOverEffect={!!onCellClick} />\n                                                <SparklineCell\n                                                    cell={cell}\n                                                    useMouseOverEffect={!!onCellClick}\n                                                />\n                                                <ArrayCell cell={cell} useMouseOverEffect={!!onCellClick} />\n                                            </SwitchTableCell>\n                                        )\n                                    )}\n                                </SUITable.Row>\n                            )\n                        )}\n                    </SUITable.Body>\n                </SUITable>\n            </SUITableContainer>\n            {isPaging ? (\n                <PaginatorContainer>\n                    <Paginator {...paginatorProps} />\n                </PaginatorContainer>\n            ) : null}\n        </VizTableContainer>\n    );\n};\n\nconst cellDataType = T.oneOfType([T.string, T.number, T.arrayOf(T.oneOfType([T.string, T.number]))]);\n\nPureTable.propTypes = {\n    backgroundColor: T.string,\n    count: T.number,\n    columnFormat: T.objectOf(\n        T.shape({\n            align: T.arrayOf(T.oneOf(validAlignments)),\n            cellTypes: T.arrayOf(T.oneOf(validCellRenderers)),\n            data: T.arrayOf(cellDataType),\n            rowBackgroundColors: T.arrayOf(T.string),\n            rowColors: T.arrayOf(T.string),\n            sparklineAreaColors: T.arrayOf(T.string),\n            sparklineColors: T.arrayOf(T.string),\n            sparklineTypes: T.arrayOf(T.oneOf(validSparklineTypes)),\n        })\n    ),\n    headers: T.arrayOf(T.string),\n    headerVisibility: T.oneOf(validHeaderVisibilities),\n    height: T.oneOfType([T.number]),\n    mode: T.string,\n    onCellClick: T.func,\n    paginatorParams: PaginatorParamsPropTypes,\n    showRowNumbers: T.bool,\n    sortParams: SortParamsPropTypes,\n    table: T.arrayOf(T.arrayOf(cellDataType)),\n    tableFormat: T.shape({\n        align: T.arrayOf(T.arrayOf(T.oneOf(validAlignments))),\n        cellTypes: T.arrayOf(T.arrayOf(T.oneOf(validCellRenderers))),\n        data: T.arrayOf(T.arrayOf(cellDataType)),\n        headerBackgroundColor: T.string,\n        headerColor: T.string,\n        rowBackgroundColors: T.oneOfType([T.arrayOf(T.string), T.arrayOf(T.arrayOf(T.string))]),\n        rowColors: T.oneOfType([T.arrayOf(T.string), T.arrayOf(T.arrayOf(T.string))]),\n        sparklineAreaColors: T.arrayOf(T.arrayOf(T.string)),\n        sparklineColors: T.arrayOf(T.arrayOf(T.string)),\n        sparklineTypes: T.arrayOf(T.arrayOf(T.oneOf(validSparklineTypes))),\n    }),\n    width: T.oneOfType([T.number]),\n};\n\nPureTable.defaultProps = {\n    columnFormat: {},\n    headers: [],\n    headerVisibility: 'inline' as const,\n    height: 300,\n    mode: 'view',\n    onCellClick: null,\n    paginatorParams: {\n        isPaging: false,\n        onChange: noop,\n    },\n    showRowNumbers: false,\n    sortParams: {\n        onSort: noop,\n    },\n    table: [],\n    tableFormat: {},\n    theme: {},\n    width: 300,\n};\nPureTable.displayName = 'VizTable';\n\nexport default withEmptyTableMessage(withFixedSizeContainer(PureTable)) as any;\n","module.exports = require(\"lodash/debounce\");","module.exports = require(\"@splunk/react-ui/Paginator\");","module.exports = require(\"@splunk/react-ui/Message\");","import { has, includes, get, isNumber } from 'lodash';\nimport { isColor } from '@splunk/visualizations-shared/colorUtils';\nimport { toPx } from '@splunk/visualizations-shared/style';\nimport {\n    validHeaderVisibilities,\n    validAlignments,\n    TextOverflow,\n    TableHeaderVisibility,\n    TableAlignment,\n    CellRenderers,\n    validCellRenderers,\n    SparklineType,\n    validSparklineTypes,\n} from './consts';\n\nconst isArray = (v: any): boolean => Array.isArray(v);\n\ninterface TextOverFlowStyles {\n    maxWidth?: string;\n    overflow?: string;\n    overflowWrap?: string;\n    textOverflow?: string;\n    whiteSpace?: string;\n    wordBreak?: string;\n    wordWrap?: string;\n}\ninterface TableHeaderCell {\n    /* unique key for the table header cell */\n    key: string;\n    /* value to be displayed in the table header cell */\n    value: string;\n    /* key that will be used for sorting */\n    sortKey: string;\n    truncate?: boolean;\n    width?: number;\n    style?: TextOverFlowStyles;\n}\nexport interface TableHeaderStyle extends TextOverFlowStyles {\n    backgroundColor?: string;\n    color?: string;\n}\nexport interface TableHeader {\n    /* header visiibility control */\n    visibility: TableHeaderVisibility;\n    /* array containing table header cells */\n    cells: TableHeaderCell[];\n    /* styles to be applied to table */\n    style: TableHeaderStyle;\n}\n\nexport type TableCellValueType = string | number | (string | number)[];\n\ninterface TableRowStyles extends TextOverFlowStyles {\n    backgroundColor?: string;\n    color?: string;\n    width?: number;\n}\nexport interface TableRowCell {\n    /* unique key for the row cell */\n    key: string;\n    /* value to be displayed in the row cell. This is a layered value columnFormat.[FieldName].data > tableFormat.data > table  options */\n    value: TableCellValueType;\n    /* always the value from table options */\n    rawValue: TableCellValueType;\n    align: TableAlignment;\n    cellType: CellRenderers;\n    columnIndex: number;\n    rowIndex: number;\n    sparklineAreaColor?: string;\n    sparklineColor?: string;\n    sparklineType: SparklineType;\n    style: TableRowStyles;\n}\n\ninterface TableRow {\n    /* unique key for each row */\n    key: string;\n    /* row index */\n    index: number;\n    /* array of table cells to be displayed in the row */\n    cells: TableRowCell[];\n}\n\nexport interface TableBody {\n    /* collection of table rows */\n    rows: TableRow[];\n}\n\nexport interface TableStructure {\n    tableHeader: TableHeader;\n    tableBody: TableBody;\n}\n\nexport interface TableFormat {\n    align: TableAlignment[][];\n    cellTypes: CellRenderers[][];\n    data: TableCellValueType[][];\n    /* header background color. NOTE: react table does not support background color for individual column headers */\n    headerBackgroundColor: string;\n    /* header text color. NOTE: react table does not support text color for individual column headers */\n    headerColor: string;\n    /* array of colors for the background color of each table row */\n    rowBackgroundColors: string[] | string[][];\n    /* array of colors for the text color of each table row */\n    rowColors: string[] | string[][];\n    sparklineAreaColors: string[][];\n    sparklineColors: string[][];\n    sparklineTypes: SparklineType[][];\n}\n\ninterface ColumnFormatter {\n    align: TableAlignment[];\n    cellTypes: CellRenderers[];\n    data: TableCellValueType[];\n    rowBackgroundColors: string[];\n    rowColors: string[];\n    sparklineAreaColors: string[];\n    sparklineColors: string[];\n    sparklineTypes: SparklineType[];\n    width: number;\n    textOverflow: TextOverflow;\n}\nexport interface ColumnFormat {\n    [k: string]: Partial<ColumnFormatter>;\n}\n\nexport interface UseTableArgs {\n    /* array of headers to be displayed */\n    headers?: string[];\n    /* 2 dimensional array of table data to be displayed */\n    table?: TableCellValueType[][];\n    /* header visibility control */\n    headerVisibility?: TableHeaderVisibility;\n    /* adds row number column */\n    showRowNumbers?: boolean;\n    /* table wide formatting options */\n    tableFormat?: Partial<TableFormat>;\n    /* column format for individual columns */\n    columnFormat?: Partial<ColumnFormat>;\n}\n\ninterface GetOverflowStylesArgs {\n    textOverflow: TextOverflow;\n    variables?: {\n        width: number;\n    };\n}\n\nexport const getOverflowStyles = ({ textOverflow, variables }: GetOverflowStylesArgs): TextOverFlowStyles => {\n    const styles = {\n        anywhere: {\n            wordBreak: 'break-all',\n        },\n        'break-word': {\n            wordBreak: 'break-word',\n            wordWrap: 'break-word',\n            overflowWrap: 'break-word',\n        },\n        ellipsis: {\n            maxWidth: toPx((variables && variables.width) || 100),\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n        },\n    };\n    return styles[textOverflow] || {};\n};\n\nconst generateKey = (value = '', i: string | number): string => `${i}-${value}`;\n\nexport const getTextOverflowType = (\n    columnFormat: Partial<ColumnFormat>,\n    currentColumn: string,\n    defaultTextOverflow: TextOverflow\n): string => (get(columnFormat, `${currentColumn}.textOverflow`) as string) || defaultTextOverflow;\n\nconst generateHeader = (value: string, i: number, columnFormat: Partial<ColumnFormat>): TableHeaderCell => {\n    const ret = {\n        key: generateKey(value, i),\n        value,\n        sortKey: value,\n    };\n    const columnWidth = get(columnFormat, `${value}.width`);\n    if (isNumber(columnWidth)) {\n        const textOverflowType = getTextOverflowType({}, value, 'ellipsis');\n        const textOverflowStyle = getOverflowStyles({\n            textOverflow: textOverflowType as TextOverflow,\n            variables: { width: columnWidth },\n        });\n        ret['width'] = columnWidth;\n        ret['truncate'] = true;\n        ret['style'] = textOverflowStyle;\n    }\n\n    return ret;\n};\n\nconst getColumnFormatAlign = (\n    columnFormat: ColumnFormat,\n    currentColumn: TableHeaderCell,\n    currentRow: number\n): TableAlignment | undefined => {\n    const alignOption = get(columnFormat, [currentColumn.value, 'align']);\n    let align;\n    if (isArray(alignOption) && includes(validAlignments, alignOption[currentRow])) {\n        align = alignOption[currentRow];\n    } else if (typeof alignOption !== 'undefined') {\n        console.warn(\n            `columnFormat.${currentColumn.value}.align should be an array containing (${validAlignments.join(\n                ' | '\n            )}). ${JSON.stringify(alignOption)} provided`\n        );\n    }\n    return align;\n};\n\nconst getColumnFormatCellType = (\n    columnFormat: ColumnFormat,\n    currentColumn: TableHeaderCell,\n    currentRow: number\n): CellRenderers | undefined => {\n    const cellTypes = get(columnFormat, [currentColumn.value, 'cellTypes']);\n    let cellType;\n    if (isArray(cellTypes) && includes(validCellRenderers, cellTypes[currentRow])) {\n        cellType = cellTypes[currentRow];\n    } else if (typeof cellTypes !== 'undefined') {\n        console.warn(\n            `columnFormat.${\n                currentColumn.value\n            }.cellType should be an array containing (${validCellRenderers.join(' | ')}). ${JSON.stringify(\n                cellTypes\n            )} provided`\n        );\n    }\n    return cellType;\n};\n\nconst getColumnFormatSparklineType = (\n    columnFormat: ColumnFormat,\n    currentColumn: TableHeaderCell,\n    currentRow: number\n): SparklineType | undefined => {\n    const types = get(columnFormat, [currentColumn.value, 'sparklineTypes']);\n    let sparklineType;\n    if (isArray(types) && includes(validSparklineTypes, types[currentRow])) {\n        sparklineType = types[currentRow];\n    } else if (typeof types !== 'undefined') {\n        console.warn(\n            `columnFormat.${currentColumn.value}.sparklineTypes should be one of (${validSparklineTypes.join(\n                ' | '\n            )}). ${JSON.stringify(types)} provided`\n        );\n    }\n    return sparklineType;\n};\n\nconst getColumnFormatData = (\n    columnFormat: ColumnFormat,\n    currentColumn: TableHeaderCell,\n    currentRow: number\n): string | undefined => {\n    const data = get(columnFormat, [currentColumn.value, 'data']);\n    let datum;\n    if (isArray(data)) {\n        datum = data[currentRow];\n    } else if (typeof data !== 'undefined') {\n        console.warn(\n            `columnFormat.${\n                currentColumn.value\n            }.data should be an array containing formatted data. ${typeof data} provided`\n        );\n    }\n    return datum;\n};\n\nconst getColumnFormatColor = (\n    columnFormat: ColumnFormat,\n    currentColumn: TableHeaderCell,\n    currentRow: number,\n    field: string\n): string | undefined => {\n    const colors = get(columnFormat, [currentColumn.value, field]);\n    let color;\n    if (isArray(colors) && isColor(colors[currentRow])) {\n        color = colors[currentRow];\n    } else if (typeof colors !== 'undefined') {\n        console.warn(\n            `columnFormat.${\n                currentColumn.value\n            }.${field} should be an array containing valid colors. ${JSON.stringify(colors)} provided`\n        );\n    }\n    return color;\n};\n\nconst getColumnFormatRowColor = (\n    columnFormat: ColumnFormat,\n    currentColumn: TableHeaderCell,\n    currentRow: number\n): string | undefined => {\n    return getColumnFormatColor(columnFormat, currentColumn, currentRow, 'rowColors');\n};\n\nconst getColumnFormatRowBgColor = (\n    columnFormat: ColumnFormat,\n    currentColumn: TableHeaderCell,\n    currentRow: number\n): string | undefined => {\n    return getColumnFormatColor(columnFormat, currentColumn, currentRow, 'rowBackgroundColors');\n};\n\nconst getColumnFormatSparklineColor = (\n    columnFormat: ColumnFormat,\n    currentColumn: TableHeaderCell,\n    currentRow: number\n): string | undefined => {\n    return getColumnFormatColor(columnFormat, currentColumn, currentRow, 'sparklineColors');\n};\n\nconst getColumnFormatSparklineAreaColor = (\n    columnFormat: ColumnFormat,\n    currentColumn: TableHeaderCell,\n    currentRow: number\n): string | undefined => {\n    return getColumnFormatColor(columnFormat, currentColumn, currentRow, 'sparklineAreaColors');\n};\n\nconst getTableFormatAlign = (\n    tableFormat: Partial<TableFormat>,\n    currentColumn: number,\n    currentRow: number\n): TableAlignment | undefined => {\n    const alignOption = get(tableFormat, 'align');\n    let align;\n    if (\n        isArray(alignOption) &&\n        isArray(alignOption[currentColumn]) &&\n        includes(validAlignments, alignOption[currentColumn][currentRow])\n    ) {\n        align = alignOption[currentColumn][currentRow];\n    } else if (typeof alignOption !== 'undefined') {\n        console.warn(\n            `tableFormat.align should be a 2 dimensional array containing (${validAlignments.join(\n                ' | '\n            )}). ${JSON.stringify(alignOption)} provided`\n        );\n    }\n    return align;\n};\n\nconst getTableFormatCellType = (\n    tableFormat: Partial<TableFormat>,\n    currentColumn: number,\n    currentRow: number\n): CellRenderers | undefined => {\n    const cellTypes = get(tableFormat, 'cellTypes');\n    let cellType;\n    if (\n        isArray(cellTypes) &&\n        isArray(cellTypes[currentColumn]) &&\n        includes(validCellRenderers, cellTypes[currentColumn][currentRow])\n    ) {\n        cellType = cellTypes[currentColumn][currentRow];\n    } else if (typeof cellTypes !== 'undefined') {\n        console.warn(\n            `tableFormat.cellType should be a 2 dimensional array containing (${validCellRenderers.join(\n                ' | '\n            )}). ${JSON.stringify(cellTypes)} provided`\n        );\n    }\n    return cellType;\n};\n\nconst getTableFormatSparklineType = (\n    tableFormat: Partial<TableFormat>,\n    currentColumn: number,\n    currentRow: number\n): SparklineType | undefined => {\n    const types = get(tableFormat, 'sparklineTypes');\n    let sparklineType;\n    if (\n        isArray(types) &&\n        isArray(types[currentColumn]) &&\n        includes(validSparklineTypes, types[currentColumn][currentRow])\n    ) {\n        sparklineType = types[currentColumn][currentRow];\n    } else if (typeof types !== 'undefined') {\n        console.warn(\n            `tableFormat.sparklineTypes should be a 2 dimensional array containing one of (${validSparklineTypes.join(\n                ' | '\n            )}). ${JSON.stringify(types)} provided`\n        );\n    }\n    return sparklineType;\n};\n\nconst getTableFormatColor = (\n    tableFormat: Partial<TableFormat>,\n    currentColumn: number,\n    currentRow: number,\n    field: string\n): string | undefined => {\n    const colors = get(tableFormat, field);\n    let color;\n    if (isArray(colors) && isArray(colors[currentColumn]) && isColor(colors[currentColumn][currentRow])) {\n        color = colors[currentColumn][currentRow];\n    } else if (isArray(colors) && isColor(colors[currentRow])) {\n        color = colors[currentRow];\n    } else if (\n        typeof colors !== 'undefined' &&\n        isArray(colors) &&\n        isArray(colors[currentColumn]) &&\n        colors[currentColumn][currentRow] !== undefined\n    ) {\n        console.warn(\n            `tableFormat.${field} needs to be an array of colors, provided ${JSON.stringify(\n                colors\n            )}. Current value at [${currentColumn}][${currentRow}] is ${JSON.stringify(colors[currentRow])}`\n        );\n    }\n    return color;\n};\n\nconst getTableFormatRowColor = (\n    tableFormat: Partial<TableFormat>,\n    currentCol: number,\n    currentRow: number\n): string | undefined => {\n    return getTableFormatColor(tableFormat, currentCol, currentRow, 'rowColors');\n};\n\nconst getTableFormatRowBgColor = (\n    tableFormat: Partial<TableFormat>,\n    currentCol: number,\n    currentRow: number\n): string | undefined => {\n    return getTableFormatColor(tableFormat, currentCol, currentRow, 'rowBackgroundColors');\n};\n\nconst getTableFormatSparklineColor = (\n    tableFormat: Partial<TableFormat>,\n    currentCol: number,\n    currentRow: number\n): string | undefined => {\n    return getTableFormatColor(tableFormat, currentCol, currentRow, 'sparklineColors');\n};\n\nconst getTableFormatSparklineAreaColor = (\n    tableFormat: Partial<TableFormat>,\n    currentCol: number,\n    currentRow: number\n): string | undefined => {\n    return getTableFormatColor(tableFormat, currentCol, currentRow, 'sparklineAreaColors');\n};\n\nconst getTableFormatData = (\n    tableFormat: Partial<TableFormat>,\n    currentCol: number,\n    currentRow: number\n): string | undefined => {\n    const data = get(tableFormat, 'data');\n    let datum;\n    if (isArray(data) && isArray(data[currentCol])) {\n        datum = data[currentCol][currentRow];\n    } else if (typeof data !== 'undefined') {\n        console.warn(\n            `tableFormat.data should be a 2 dimensional array containing formatted data to be displayed. ${typeof data} provided`\n        );\n    }\n    return datum;\n};\n\nconst validValueSelector = (\n    v1: TableCellValueType,\n    v2: TableCellValueType,\n    v3: TableCellValueType,\n    defaultValue: TableCellValueType\n): TableCellValueType => {\n    const validTypes = ['string', 'number'];\n    if (validTypes.includes(typeof v1) || isArray(v1)) {\n        return v1;\n    }\n    if (validTypes.includes(typeof v2) || isArray(v2)) {\n        return v2;\n    }\n    if (validTypes.includes(typeof v3) || isArray(v3)) {\n        return v3;\n    }\n    return defaultValue;\n};\n\nexport const useTable = (tableArgs: UseTableArgs = {}): TableStructure => {\n    let { table = [], headers = [] } = tableArgs;\n    const {\n        headerVisibility = 'inline',\n        showRowNumbers = false,\n        tableFormat = {},\n        columnFormat = {},\n    } = tableArgs;\n\n    const longestColumnLength: number = Math.max(...table.map((column): number => column.length));\n\n    if (showRowNumbers) {\n        headers = ['#', ...headers];\n        table = [Array.from({ length: longestColumnLength }, (v, i): number => i + 1), ...table];\n        if (isArray(tableFormat.align)) {\n            tableFormat.align = [new Array(longestColumnLength).fill('left'), ...tableFormat.align];\n        }\n        if (isArray(tableFormat.cellTypes)) {\n            tableFormat.cellTypes = [\n                new Array(longestColumnLength).fill('TextCell'),\n                ...tableFormat.cellTypes,\n            ];\n        }\n        if (isArray(tableFormat.data)) {\n            tableFormat.data = [\n                Array.from({ length: longestColumnLength }, (v, i): string => `${i + 1}`),\n                ...tableFormat.data,\n            ];\n        }\n        if (isArray(tableFormat.rowBackgroundColors)) {\n            if (tableFormat.rowBackgroundColors.length > 0 && isArray(tableFormat.rowBackgroundColors[0])) {\n                tableFormat.rowBackgroundColors = [\n                    new Array(longestColumnLength),\n                    ...tableFormat.rowBackgroundColors,\n                ] as string[][];\n            }\n        }\n        if (isArray(tableFormat.rowColors)) {\n            if (tableFormat.rowColors.length > 0 && isArray(tableFormat.rowColors[0])) {\n                tableFormat.rowColors = [\n                    new Array(longestColumnLength),\n                    ...tableFormat.rowColors,\n                ] as string[][];\n            }\n        }\n        if (isArray(tableFormat.sparklineColors)) {\n            tableFormat.sparklineColors = [new Array(longestColumnLength), ...tableFormat.sparklineColors];\n        }\n        if (isArray(tableFormat.sparklineAreaColors)) {\n            tableFormat.sparklineAreaColors = [\n                new Array(longestColumnLength),\n                ...tableFormat.sparklineAreaColors,\n            ];\n        }\n        if (isArray(tableFormat.sparklineTypes)) {\n            tableFormat.sparklineTypes = [\n                new Array(longestColumnLength).fill('area'),\n                ...tableFormat.sparklineTypes,\n            ];\n        }\n    }\n\n    const tableHeader: TableHeader = {\n        visibility:\n            validHeaderVisibilities.indexOf(headerVisibility as TableHeaderVisibility) >= 0\n                ? (headerVisibility as TableHeaderVisibility)\n                : 'inline',\n        cells: table.map(\n            (f, i): TableHeaderCell => {\n                if (i < headers.length) {\n                    return generateHeader(headers[i], i, columnFormat);\n                } else {\n                    return generateHeader('', i, columnFormat);\n                }\n            }\n        ),\n        style: {\n            backgroundColor:\n                (has(tableFormat, 'headerBackgroundColor') &&\n                    isColor(tableFormat.headerBackgroundColor) &&\n                    tableFormat.headerBackgroundColor) ||\n                undefined,\n            color:\n                (has(tableFormat, 'headerColor') &&\n                    isColor(tableFormat.headerColor) &&\n                    tableFormat.headerColor) ||\n                undefined,\n        },\n    };\n\n    const tableBody: TableBody = {\n        rows: [],\n    };\n\n    for (let currentRow = 0; currentRow < longestColumnLength; currentRow++) {\n        const row: TableRow = {\n            key: `row-${currentRow}`,\n            index: currentRow,\n            cells: [],\n        };\n\n        table.forEach((column, i): void => {\n            const currentHeader = tableHeader.cells[i];\n\n            const value = validValueSelector(\n                getColumnFormatData(columnFormat, currentHeader, currentRow),\n                getTableFormatData(tableFormat, i, currentRow),\n                column[currentRow],\n                ''\n            );\n\n            const rawValue = column[currentRow];\n\n            const rowBackgroundColor =\n                getColumnFormatRowBgColor(columnFormat, currentHeader, currentRow) ||\n                getTableFormatRowBgColor(tableFormat, i, currentRow) ||\n                undefined;\n\n            const rowColor =\n                getColumnFormatRowColor(columnFormat, currentHeader, currentRow) ||\n                getTableFormatRowColor(tableFormat, i, currentRow) ||\n                undefined;\n\n            const align =\n                getColumnFormatAlign(columnFormat, currentHeader, currentRow) ||\n                getTableFormatAlign(tableFormat, i, currentRow) ||\n                'left';\n\n            const cellType =\n                getColumnFormatCellType(columnFormat, currentHeader, currentRow) ||\n                getTableFormatCellType(tableFormat, i, currentRow) ||\n                'TextCell';\n\n            const sparklineColor =\n                getColumnFormatSparklineColor(columnFormat, currentHeader, currentRow) ||\n                getTableFormatSparklineColor(tableFormat, i, currentRow) ||\n                undefined;\n\n            const sparklineAreaColor =\n                getColumnFormatSparklineAreaColor(columnFormat, currentHeader, currentRow) ||\n                getTableFormatSparklineAreaColor(tableFormat, i, currentRow) ||\n                undefined;\n\n            const sparklineType =\n                getColumnFormatSparklineType(columnFormat, currentHeader, currentRow) ||\n                getTableFormatSparklineType(tableFormat, i, currentRow) ||\n                'area';\n\n            const key = generateKey(value as string, `${currentRow}-${i}`);\n\n            let additionalStyles = {};\n            if (isNumber(currentHeader.width)) {\n                const textOverflowType = getTextOverflowType(columnFormat, currentHeader.value, 'ellipsis');\n                const textOverflowStyle = getOverflowStyles({\n                    textOverflow: textOverflowType as TextOverflow,\n                    variables: { width: currentHeader.width },\n                });\n                additionalStyles = {\n                    ...additionalStyles,\n                    ...textOverflowStyle,\n                    width: toPx(currentHeader.width),\n                };\n            }\n\n            row.cells.push({\n                key,\n                value,\n                rawValue,\n                align,\n                cellType,\n                rowIndex: currentRow,\n                columnIndex: i,\n                sparklineColor,\n                sparklineAreaColor,\n                sparklineType,\n                style: {\n                    backgroundColor: rowBackgroundColor,\n                    color: rowColor,\n                    ...additionalStyles,\n                },\n            });\n        });\n\n        tableBody.rows.push(row);\n    }\n\n    return {\n        tableHeader,\n        tableBody,\n    };\n};\n","export * from './SwitchTableCell';\nexport * from './TextCell';\nexport * from './ArrayCell';\nexport * from './SparklineCell';\n","export const SwitchTableCell = ({ type, children }): React.ReactElement =>\n    children.filter((child): boolean => child.type.displayName === type);\n","import * as React from 'react';\nimport * as T from 'prop-types';\nimport { get } from 'lodash';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport Message from '@splunk/visualizations-shared/Message';\nimport { DataSource } from '../interfaces/DataSource';\nimport withFixedSizeContainer from '../hocs/FixedSizeContainer';\n\n/**\n * @method shouldShowIconPlaceholder\n * @param {object} dataSources\n * @param {boolean} loading\n * @returns {boolean}\n */\nexport const shouldShowIconPlaceholder = (\n    dataSources: { [name: string]: DataSource },\n    loading = false\n): boolean => {\n    const data = get(dataSources, 'primary.data.columns[0]', undefined);\n    const noData = data === undefined;\n    const fields = get(dataSources, 'primary.data.fields[0]', undefined);\n    const noFields = fields === undefined;\n    return loading || noData || noFields;\n};\n\nexport interface IconPlaceholderProps {\n    icon?: React.ComponentClass<any>;\n    width?: string | number;\n    height?: string | number;\n    backgroundColor?: string;\n}\n\nconst propTypes: Record<keyof IconPlaceholderProps, T.Validator<any>> = {\n    icon: T.func,\n    width: T.oneOfType([T.string, T.number]),\n    height: T.oneOfType([T.string, T.number]),\n    backgroundColor: T.string,\n};\n\n/**\n * @method IconPlaceholder\n * @param {IconPlaceholderProps} props\n * @returns {React.ReactElement}\n */\nconst IconPlaceholder = (props: IconPlaceholderProps): React.ReactElement => {\n    const { width, height, icon } = props;\n    if (icon) {\n        return React.createElement(icon, {\n            style: {\n                left: '50%',\n                top: '50%',\n                color: 'grey',\n                position: 'absolute',\n                transform: 'translate(-50%, -50%)',\n            },\n            width: '50%',\n            height: '50%',\n        });\n    }\n\n    return <Message width={width} height={height} level=\"warning\" message={_('No DataSource Connected')} />;\n};\n\nIconPlaceholder.propTypes = propTypes;\nIconPlaceholder.defaultProps = {\n    width: '100%',\n    height: 250,\n};\n\nexport default withFixedSizeContainer(IconPlaceholder);\n","import * as React from 'react';\nimport SUITable from '@splunk/react-ui/Table';\nimport { TableRowCell } from '../hooks';\n\ninterface TextCellProps {\n    cell: TableRowCell;\n    useMouseOverEffect: boolean;\n}\n\nexport const TextCell = ({ cell, useMouseOverEffect }: TextCellProps): React.ReactElement => (\n    <SUITable.Cell\n        style={cell.style}\n        align={cell.align}\n        data-test-cell-type=\"TextCell\"\n        data-row-index={cell.rowIndex}\n        data-col-index={cell.columnIndex}\n        onClick={useMouseOverEffect ? () => {} : undefined}\n    >\n        {cell.value.toString()}\n    </SUITable.Cell>\n);\n\nTextCell.displayName = 'TextCell';\n","import * as React from 'react';\nimport SUITable from '@splunk/react-ui/Table';\nimport { TableRowCell } from '../hooks';\n\ninterface ArrayCellProps {\n    cell: TableRowCell;\n    useMouseOverEffect: boolean;\n}\n\nexport const ArrayCell = ({ cell, useMouseOverEffect }: ArrayCellProps): React.ReactElement => {\n    const value = Array.isArray(cell.value) ? cell.value : [cell.value];\n    return (\n        <SUITable.Cell\n            style={cell.style}\n            align={cell.align}\n            data-test-cell-type=\"ArrayCell\"\n            onClick={useMouseOverEffect ? () => {} : undefined}\n        >\n            {value.map(\n                (v, i): React.ReactElement => (\n                    <div\n                        key={v.toString()}\n                        data-row-index={cell.rowIndex}\n                        data-col-index={cell.columnIndex}\n                        data-array-index={i}\n                    >\n                        {v.toString()}\n                    </div>\n                )\n            )}\n        </SUITable.Cell>\n    );\n};\nArrayCell.displayName = 'ArrayCell';\n","import * as React from 'react';\n\nimport SUITable from '@splunk/react-ui/Table';\nimport Line from '@splunk/react-sparkline/Line';\nimport { TableRowCell, TableCellValueType } from '../hooks';\n\ninterface SparklineCellProps {\n    cell: TableRowCell;\n    useMouseOverEffect: boolean;\n}\n\nconst paddingLeftRight = 5;\nconst paddingTopBottom = 3;\n\nconst parseSparklineData = (data: TableCellValueType): (number | null)[] =>\n    (Array.isArray(data) ? data : [data])\n        .map((d): number => parseInt(d.toString(), 10))\n        .map((d): number | null => (isNaN(d) ? null : d));\n\nexport const validSparklineTypes = ['line', 'area'] as const;\nexport type SparklineType = typeof validSparklineTypes[number];\n\nexport const SparklineCell = ({ cell, useMouseOverEffect }: SparklineCellProps): React.ReactElement => {\n    const [cellRef, setCellRef] = React.useState(React.createRef<HTMLDivElement>());\n    const [height, setHeight] = React.useState(null);\n    const data = React.useMemo((): number[] => parseSparklineData(cell.value), [cell.value]);\n\n    React.useEffect(() => {\n        setHeight((cellRef as any).offsetHeight);\n    }, [cellRef]);\n\n    return (\n        <SUITable.Cell\n            style={{\n                ...cell.style,\n                padding: 0,\n                margin: 0,\n                width: `${(cellRef as any).offsetWidth}px`,\n                height: `${height}px`,\n            }}\n            align={cell.align}\n            elementRef={setCellRef}\n            data-test-cell-type=\"SparklineCell\"\n            data-row-index={cell.rowIndex}\n            data-col-index={cell.columnIndex}\n            onClick={useMouseOverEffect ? () => {} : undefined}\n        >\n            {height ? (\n                <Line\n                    style={{\n                        paddingLeft: `${paddingLeftRight}px`,\n                        paddingTop: `${paddingTopBottom}px`,\n                        width: `${(cellRef as any).offsetWidth - paddingLeftRight * 2}px`,\n                        height: `${height - paddingTopBottom * 2}px`,\n                    }}\n                    data={data}\n                    width={(cellRef as any).offsetWidth - paddingLeftRight * 2}\n                    height={height - paddingTopBottom * 2}\n                    isArea={cell.sparklineType === 'area'}\n                    acceptNull={true}\n                    lineColor={cell.sparklineColor}\n                    fillColor={cell.sparklineAreaColor}\n                />\n            ) : (\n                <svg style={{ height: 0 }} />\n            )}\n        </SUITable.Cell>\n    );\n};\n\nSparklineCell.displayName = 'SparklineCell';\n","export enum VizCategory {\n    SINGLE_VALUE = 'Single Value',\n    TRENDS = 'Trends',\n    COMPARISONS = 'Comparisons',\n    TABLE = 'Table',\n    GAUGE = 'Gauge',\n    DISTRIBUTIONS = 'Distributions',\n    CHOROPLETH = 'Choropleth Maps',\n    SHAPES = 'Shapes',\n    MISC = 'misc',\n    FLOW = 'Flow',\n    CORRELATION = 'Correlation',\n    SPATIAL = 'Spatial',\n}\n","import * as React from 'react';\nimport { camelCase, has, get, defaultsDeep } from 'lodash';\nimport getSettingsFromThemedProps from '@splunk/themes/getSettingsFromThemedProps';\nimport { Options as Opts } from '@splunk/visualization-encoding/Options';\nimport { withSanitizedProps } from '@splunk/visualizations-shared/SanitizeProps';\n\nimport { withTheme } from 'styled-components';\nimport SplunkVisualization from './SplunkVisualization';\nimport { DashboardVizProps } from './interfaces/DashboardVizProps';\nimport { VizConfig } from './interfaces/VizConfig';\nimport { VizProps } from './interfaces/VizProps';\nimport { VizBehavior } from './interfaces/VizBehavior';\nimport { DataSource } from './interfaces/DataSource';\nimport { getSortingParams } from './hooks/getSorting';\nimport { getPaginationParams } from './hooks/getPagination';\nimport { useDeepMemo } from './hooks/useDeepMemo';\nimport { pickFieldFromJSONSchema } from './utils/JSONSchemaUtils';\nimport MissingPropsMessage, { missingKeys } from './components/MissingPropsMessage';\nimport withEditModeCover from './hocs/withEditModeCover';\nimport withPlaceholder from './hocs/withPlaceholder';\nimport { ChartingProps } from './Charting';\nimport { deepMergeWithArrayOverrides } from './utils/hocUtils';\n\ntype HOC = (props: DashboardVizProps) => React.ReactElement<DashboardVizProps>;\nexport interface DashboardVizOpts {\n    ReactViz: React.ComponentType<ChartingProps | VizProps>; // we will wrap this in DashboardViz (see const DashboardViz = ...)\n    vizConfig: VizConfig;\n    computeVizProps?: (props) => any;\n    useIconPlaceholder?: (\n        dataSources: { [name: string]: DataSource },\n        loading: boolean,\n        options: Record<string, unknown>\n    ) => boolean;\n}\n\n/**\n * hoc that wraps a pure react visualization in a Dashboard visualization\n * @param {DashboardVizOpts} opts\n * @returns {HOC}\n */\nconst withDashboardViz = (opts: DashboardVizOpts): HOC => {\n    const { ReactViz, vizConfig, computeVizProps = () => {}, useIconPlaceholder } = opts;\n\n    // sanitizing props before sending them to reactviz.\n    const SanitizedReactViz = withSanitizedProps(ReactViz);\n    const defaultOptions = pickFieldFromJSONSchema(vizConfig.optionsSchema, 'default');\n\n    const DashboardViz = (props: DashboardVizProps): React.ReactElement<DashboardVizProps> => {\n        const {\n            mode,\n            hasEventHandlers,\n            dataSources, // type of { [key: string]: DataSource }\n            options,\n            context = {},\n            width,\n            height,\n            onComputedProps,\n            onEventTrigger,\n            theme,\n            onRequestParamsChange,\n        } = props;\n\n        const themeFunc = themeVar => vizConfig.themes[themeVar]?.(props);\n        const bgColorFromTheme = themeFunc('defaultBackgroundColor');\n        const {\n            family: currentThemeFamily,\n            colorScheme: currentThemeColorScheme,\n            density: currentThemeDensity,\n        } = getSettingsFromThemedProps({ theme });\n\n        let evaluatedOptions: Opts = {}; // evaluatedOptions need to be initialized as an empty object\n        evaluatedOptions = useDeepMemo((): Record<string, unknown> => {\n            try {\n                return Opts.evaluate(\n                    {\n                        context: defaultsDeep({}, context, vizConfig.defaultContext),\n                        options: deepMergeWithArrayOverrides({}, options, defaultOptions),\n                    },\n                    dataSources,\n                    themeFunc\n                );\n            } catch (e) {\n                console.error(`unexpected error evaluating options:  + ${e.message}`);\n                return {};\n            }\n        }, [currentThemeFamily, currentThemeColorScheme, currentThemeDensity, options, context, dataSources]);\n\n        // useEffect hook needs to be initialized before any early returns\n        // this is in accordance with the order of hook calls being the same on each render https://reactjs.org/docs/hooks-rules.html#explanation\n        React.useEffect((): void => {\n            onComputedProps(evaluatedOptions);\n        });\n\n        // present warning message if any required props are missing\n        const { requiredProps = [], supports } = vizConfig;\n        const missing = missingKeys(requiredProps, evaluatedOptions);\n        if (missing.length > 0 && supports.includes(VizBehavior.PLACEHOLDER)) {\n            return (\n                <MissingPropsMessage\n                    data-test=\"missing-props-message\"\n                    width={width}\n                    height={height}\n                    missingProps={missing}\n                    backgroundColor={bgColorFromTheme}\n                />\n            );\n        }\n\n        // events\n        const eventCallbackProps = {};\n        if (hasEventHandlers && mode === 'view' && vizConfig.supports.indexOf(VizBehavior.EVENTS) > -1) {\n            const supportedEvents = vizConfig.events;\n            Object.keys(supportedEvents).forEach((eventName): void => {\n                const eventCallbackPropName = camelCase(`on.${eventName}`);\n                eventCallbackProps[eventCallbackPropName] = null;\n                // todo: refactor single value and single value icon to send payload from viz\n                // then remove these lines\n                const { payloadKeys } = supportedEvents[eventName];\n                let payload = {};\n                if (Array.isArray(payloadKeys) && payloadKeys.length) {\n                    payloadKeys.forEach(p => (payload[p] = evaluatedOptions[p]));\n                }\n\n                eventCallbackProps[eventCallbackPropName] = (ev): Record<string, unknown> => {\n                    if (ev && ev.payload) {\n                        payload = ev.payload;\n                    }\n\n                    return onEventTrigger({ originalEvent: ev, payload, type: eventName });\n                };\n            });\n        }\n        // compute pure viz props which are not from options\n        const computedVizProps = computeVizProps({\n            ...props,\n            ...evaluatedOptions,\n            ...eventCallbackProps,\n            themeFunc,\n        });\n\n        /**\n         * PAGE_AND_SORT behavior\n         *\n         * Some visualizations, like table, requires metadata about the datasource,\n         * like total number of results, current count, offset, and sort, for rendering\n         * paginator and sorting direction. In this approach, the visualization\n         * allow users to set 'paginateDataSourceKey' to select which datasource\n         * should the visualization extract the metadata from. It defaults to 'primary' datasource.\n         * The visualization config should set the PAGE_AND_SORT behavior to receive\n         * 'requestParams', 'meta' and onRequestParams callback as props.\n         *\n         * In future, we could automatically detect which all datasources are being used\n         * and bind those magically to pagination/sorting behavior.\n         */\n        let dataSourceMetadata = {};\n        const OptionKey = 'paginateDataSourceKey';\n        const paginateDataSourceKey =\n            (has(evaluatedOptions, OptionKey) && evaluatedOptions[OptionKey]) || 'primary';\n        if (\n            vizConfig.supports.indexOf(VizBehavior.PAGE_AND_SORT) > -1 &&\n            has(dataSources, paginateDataSourceKey)\n        ) {\n            const requestParams = get(dataSources, [paginateDataSourceKey, 'requestParams'], {});\n            const meta = get(dataSources, [paginateDataSourceKey, 'meta'], {});\n            const handleRequestParamsChange = (payload: Record<string, unknown>): void =>\n                onRequestParamsChange(paginateDataSourceKey, payload);\n\n            const sortParams = getSortingParams({\n                requestParams,\n                meta,\n                onRequestParamsChange: handleRequestParamsChange,\n            });\n\n            const paginatorParams = getPaginationParams({\n                requestParams,\n                meta,\n                onRequestParamsChange: handleRequestParamsChange,\n            });\n\n            dataSourceMetadata = {\n                sortParams,\n                paginatorParams,\n            };\n        }\n\n        return (\n            <SanitizedReactViz\n                mode={mode}\n                width={width}\n                height={height}\n                {...evaluatedOptions}\n                {...computedVizProps}\n                {...eventCallbackProps}\n                {...dataSourceMetadata}\n            />\n        );\n    };\n\n    DashboardViz.propTypes = {\n        ...SplunkVisualization.propTypes,\n        ...ReactViz.propTypes,\n    };\n\n    DashboardViz.defaultProps = {\n        ...SplunkVisualization.defaultProps,\n        ...ReactViz.defaultProps,\n        // using withTheme requires component to receive theme prop. In case the consumer did not provide ThemeProvider, a default empty object will prevent warnings.\n        theme: {},\n    };\n    // attach viz config\n    DashboardViz.config = vizConfig;\n\n    // @ts-ignore: TODO fix sc upgrade TS issues\n    return withTheme(withPlaceholder(withEditModeCover(DashboardViz), useIconPlaceholder));\n};\n\nexport default withDashboardViz;\n","module.exports = require(\"@splunk/themes/getSettingsFromThemedProps\");","module.exports = require(\"@splunk/visualization-encoding/Options\");","module.exports = require(\"@splunk/ui-utils/i18n\");","module.exports = require(\"@splunk/visualizations-shared/SanitizeProps\");","/* eslint-disable react/no-unused-prop-types,react/prefer-stateless-function */\nimport * as T from 'prop-types';\nimport { noop } from 'lodash';\nimport { DashboardVizProps } from './interfaces/DashboardVizProps';\nimport { DefaultVizActionHandler } from './interfaces/VizActionHandler';\n\n// this is identical to the initial height and width we use in BaseVisualization in dashboard-visualizations\nexport const INITIAL_WIDTH = 250;\nexport const INITIAL_HEIGHT = 250;\n\n/**\n * A Splunk visualization\n */\nclass SplunkVisualization {\n    static propTypes: Record<keyof DashboardVizProps, T.Validator<any>> = {\n        /**\n         * display mode\n         */\n        mode: T.oneOf(['view', 'edit', 'export']).isRequired,\n        /**\n         * width in pixel or string, defaults to 100%\n         */\n        width: T.oneOfType([T.string, T.number]).isRequired,\n        /**\n         * height in pixel or string\n         */\n        height: T.oneOfType([T.string, T.number]).isRequired,\n        /**\n         * visualization context used for dynamic option evaluation\n         */\n        context: T.object,\n        /**\n         * visualization formatting options\n         */\n        options: T.object,\n        /**\n         * A callback to update formatting options\n         */\n        onOptionsChange: T.func,\n        /**\n         * datasource state which include data and request params, object key indicate the datasource type.\n         */\n        dataSources: T.objectOf(\n            T.shape({\n                /**\n                 * current request params\n                 */\n                requestParams: T.object,\n                /**\n                 * current dataset\n                 */\n                data: T.shape({\n                    fields: T.array,\n                    columns: T.array,\n                }),\n                /**\n                 * error\n                 */\n                error: T.shape({\n                    level: T.string,\n                    message: T.string,\n                }),\n                /**\n                 * meta data that came with the dataset\n                 */\n                meta: T.object,\n            })\n        ),\n        /**\n         * A callback to trigger event\n         */\n        onEventTrigger: T.func,\n        /**\n         * Inform viz if there are handlers listening to events\n         */\n        hasEventHandlers: T.bool,\n        /**\n         * A callback to communicate computed props to a consumer\n         */\n        onComputedProps: T.func,\n        /**\n         * A callback to obtain visualization api\n         */\n        vizActionHandlerRef: T.func,\n\n        loading: T.bool,\n        theme: T.object,\n        /**\n         * A callback to request new data with updated request params\n         */\n        onRequestParamsChange: T.func,\n    };\n    /**\n     *\n     */\n    static defaultProps: DashboardVizProps = {\n        // BaseVisualization in dashboard-visualizations uses 100% for width but 250 for height\n        width: '100%',\n        height: INITIAL_HEIGHT,\n        dataSources: {},\n        onEventTrigger: (): Record<string, unknown> => ({}),\n        mode: 'view',\n        hasEventHandlers: false,\n        options: {},\n        context: {},\n        onOptionsChange: (): Record<string, unknown> => ({}),\n        vizActionHandlerRef: (): DefaultVizActionHandler => new DefaultVizActionHandler(),\n        onComputedProps: (): Record<string, unknown> => ({}),\n        loading: false,\n        onRequestParamsChange: noop,\n    };\n}\n\nexport default SplunkVisualization;\n","export interface VizActionHandler {\n    /**\n     * put focus on the visualization\n     */\n    focus(): void;\n\n    /**\n     * compute snapshot of this visualization\n     */\n    snapshot(): Record<string, unknown>; //(This is for pdf export)\n}\n\nexport class DefaultVizActionHandler {\n    focus(): void {\n        //noop\n    }\n\n    snapshot(): Record<string, unknown> {\n        return null; //noop\n    }\n}\n","/**\n * represents the data in a raw columnar format, resulting from a splunk\n * query request.\n */\ninterface FieldEntry {\n    name: string;\n}\n\nexport interface JsonColumnData {\n    fields: FieldEntry[] | string[];\n    columns: string[][];\n}\nexport interface Meta {\n    totalCount: number;\n}\n\nexport const validSortDirs = ['asc', 'desc', 'none'] as const;\nexport type SortDirType = typeof validSortDirs[number];\n\nexport interface RequestParams {\n    count?: number;\n    offset?: number;\n    sort?: {\n        [sortKey: string]: SortDirType;\n    };\n}\n\nexport interface DataSource {\n    requestParams: Partial<RequestParams>;\n    onRequestParamsChange?: (p: Record<string, unknown>) => void;\n    data: JsonColumnData;\n    error?: { level: string; message: string };\n    meta: Partial<Meta>;\n}\n\nexport interface DataSourceMeta {\n    requestParams: Partial<RequestParams>;\n    meta: Partial<Meta>;\n    onRequestParamsChange: (payload: RequestParams) => void;\n}\n","import { useRef } from 'react';\nimport { isEqual } from 'lodash';\n\n/**\n * This hook evaluates and stores the result of a passed function and only\n * re-evaluates the function when passed dependencies change.\n *\n * It is different from the internal React useMemo in the following aspects:\n * - it only stores the last evaluated result\n * - it uses a deep equality check to determine if dependencies have changed\n *\n * Inspired by apollo-client's useDeepMemo\n *\n * @param fn the function to be executed and\n * @param dependencies an array of dependencies\n */\nexport const useDeepMemo = <FnReturnType, DepType>(\n    fn: () => FnReturnType,\n    dependencies: DepType\n): FnReturnType => {\n    const ref = useRef<{ dependencies: DepType; value: FnReturnType }>();\n    if (!ref.current || !isEqual(dependencies, ref.current.dependencies)) {\n        ref.current = {\n            dependencies,\n            value: fn(),\n        };\n    }\n    return ref.current.value;\n};\n","import type { JSONSchema7Definition } from 'json-schema';\nimport { has, isEmpty, get } from 'lodash';\nimport { KV } from '../interfaces/Object';\nimport { OptionsSchema } from '../interfaces/OptionsSchema';\n\nexport const pickFieldFromJSONSchema = (\n    optionsSchema: OptionsSchema | JSONSchema7Definition,\n    fieldName = 'default'\n): KV =>\n    Object.keys(optionsSchema).reduce((accum: Record<string, unknown>, k): Record<string, unknown> => {\n        if (has(optionsSchema[k], fieldName)) {\n            accum[k] = optionsSchema[k][fieldName];\n        } else if (get(optionsSchema, [k, 'type']) === 'object' && has(optionsSchema[k], 'properties')) {\n            const nestedSchema = pickFieldFromJSONSchema(optionsSchema[k].properties, fieldName);\n            if (!isEmpty(nestedSchema)) {\n                accum[k] = nestedSchema;\n            }\n        }\n        return accum;\n    }, {});\n","import * as React from 'react';\nimport * as T from 'prop-types';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport Message from '@splunk/visualizations-shared/Message';\nimport withFixedSizeContainer from '../hocs/FixedSizeContainer';\n\n/**\n * @method isMissing\n * @param {any} v\n * @returns {boolean} true if the input value === null or undefined\n */\nexport const isMissing = (v): boolean => {\n    return v === null || v === undefined;\n};\n\n/**\n * @method misskingKeys\n * @param {string[]} keys\n * @param {object} target\n * @returns {string[]} the keys of missing required props\n */\nexport const missingKeys = (keys: string[], target: Record<string, unknown>): string[] =>\n    keys.filter(k => isMissing(target[k]));\n\nexport interface MissingPropsProps {\n    width?: string | number;\n    height?: string | number;\n    missingProps: string[];\n    backgroundColor?: string;\n}\n\nconst propTypes: Record<keyof MissingPropsProps, T.Validator<any>> = {\n    width: T.oneOfType([T.string, T.number]),\n    height: T.oneOfType([T.string, T.number]),\n    backgroundColor: T.string,\n    missingProps: T.arrayOf(T.string),\n};\n\n/**\n * @method MissingPropsMessage\n * @param {MissingPropsProps} props\n * @returns {React.ReactElement}\n */\nexport const MissingPropsMessage = (props: MissingPropsProps): React.ReactElement => {\n    const { width, height, missingProps } = props;\n    return (\n        <Message\n            data-test=\"message\"\n            width={width}\n            height={height}\n            message={_(`Missing property: ${missingProps.join(', ')}`)}\n        />\n    );\n};\n\nMissingPropsMessage.propTypes = propTypes;\nMissingPropsMessage.defaultProps = {\n    width: '100%',\n    height: 250,\n};\nexport default withFixedSizeContainer(MissingPropsMessage);\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { DashboardVizProps } from '../interfaces/DashboardVizProps';\nimport { ExtendedDashViz } from '../interfaces/ExtendedDashViz';\nimport { extendStaticWrapperProps } from '../utils/hocUtils';\n\nconst Cover = styled.div`\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n`;\n\nconst Blocker = styled.div`\n    position: relative;\n    width: 100%;\n    height: 100%;\n`;\n\n/**\n * HOC that renders a cover layer in edit mode\n * @method withEditModeCover\n * @param {ExtendedDashViz} Visualization\n * @returns {ExtendedDashViz} Wrapper\n */\nconst withEditModeCover = (Visualization: ExtendedDashViz): ExtendedDashViz => {\n    const Wrapper = (props: DashboardVizProps): React.ReactElement<DashboardVizProps> => {\n        const { mode } = props;\n        return (\n            <Blocker>\n                <Visualization {...props} />\n                {mode === 'edit' && <Cover data-test=\"edit-mode-cover\" />}\n            </Blocker>\n        );\n    };\n    extendStaticWrapperProps({ Wrapper, Visualization });\n    return Wrapper as ExtendedDashViz;\n};\n\nexport default withEditModeCover;\n","import * as React from 'react';\nimport { isColor } from '@splunk/visualizations-shared/colorUtils';\nimport IconPlaceholder, { shouldShowIconPlaceholder } from '../components/IconPlaceholder';\nimport { VizBehavior } from '../interfaces/VizBehavior';\nimport { DashboardVizProps } from '../interfaces/DashboardVizProps';\nimport { DataSource } from '../interfaces/DataSource';\nimport { ExtendedDashViz } from '../interfaces/ExtendedDashViz';\nimport { extendStaticWrapperProps } from '../utils/hocUtils';\n\ntype useIconPlaceholder = (\n    dataSources: { [name: string]: DataSource },\n    loading: boolean,\n    options: Record<string, unknown>\n) => boolean;\n\nconst withPlaceholder = (\n    Visualization: ExtendedDashViz,\n    useIconPlaceholder: useIconPlaceholder = shouldShowIconPlaceholder\n): ExtendedDashViz => {\n    const { config } = Visualization;\n    const { themes } = config;\n\n    const Wrapper = (props: DashboardVizProps): React.ReactElement<DashboardVizProps> => {\n        const { dataSources, loading, options, height, width } = props;\n\n        const showPlaceholder = useIconPlaceholder(dataSources, loading, options);\n        const bgColorFromTheme = isColor(options?.backgroundColor)\n            ? options?.backgroundColor\n            : themes?.defaultBackgroundColor?.(props);\n\n        if (config.supports.includes(VizBehavior.PLACEHOLDER) && showPlaceholder) {\n            return (\n                <IconPlaceholder\n                    data-test=\"icon-placeholder\"\n                    icon={config.icon}\n                    width={width}\n                    height={height}\n                    backgroundColor={bgColorFromTheme}\n                />\n            );\n        }\n\n        return <Visualization {...props} />;\n    };\n    extendStaticWrapperProps({ Wrapper, Visualization });\n    return Wrapper as ExtendedDashViz;\n};\n\nexport default withPlaceholder;\n","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"styled-components\");","module.exports = require(\"@splunk/visualizations-shared/colorConstants\");","module.exports = require(\"@splunk/visualization-icons\");","export enum VizBehavior {\n    /**\n     * Dynamic Options Behavior.\n     * This allows visualization options to be powered by data\n     *\n     * **Example**\n     *\n     * sparklineValues: \">primary|seriesByIndex(0)\"\n     * would configure sparklineValues with an array of data points\n     * coming from the first series in the primary datasource\n     *\n     */\n    DYNAMIC_OPTIONS = 'dynamic-options',\n    EVENTS = 'events',\n    /**\n     * Placeholder behavior: visualization will display a placeholder rather than fail if any of the `requiredProps` is\n     * missing.\n     * @type {string}\n     */\n    PLACEHOLDER = 'placeholder',\n    PAGE_AND_SORT = 'page-and-sort',\n}\n","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","import { cloneDeep } from 'lodash';\nimport { DashboardVizProps } from '../interfaces/DashboardVizProps';\n\nexport type DashboardVizType = React.ComponentType<DashboardVizProps>;\n\n/**\n * @method extendStaticWrapperProps\n * @param {Object} props\n * @param {DashboardVizType} props.Wrapper\n * @param {DashboardVizType} props.Visualization\n */\nexport const extendStaticWrapperProps = ({\n    Wrapper,\n    Visualization,\n}: {\n    [key: string]: DashboardVizType;\n}): void => {\n    const extendProperties = ['propTypes', 'defaultProps', 'config'];\n    extendProperties.forEach((prop: string): void => {\n        if (Visualization[prop]) {\n            Wrapper[prop] = Visualization[prop];\n        }\n    });\n};\n\n/**\n * helper to deeply merge objects while preserving arrays in earlier source objects\n * deeply nested primitive keys are merged similarly to lodash's defaultsDeep, while keys with arrays will be preserved if already present in the resultant merged object\n * this prevents default arrays from appending values to user-defined arrays (this occurs if the default array is longer than the user-defined one)\n *\n * @method deepMergeWithArrayOverrides\n * @param {Object} initial - target object to merge values into\n * @param {Object[]} sources - other default options to be merged into the resultant object if no explicit value is provided, with earlier args taking precedence over later ones\n *\n * @returns {Object}\n */\nexport const deepMergeWithArrayOverrides = (initial, ...sources) => {\n    const clone = cloneDeep(initial);\n    sources.forEach(sourceToApply => {\n        Object.keys(sourceToApply).forEach(sourceKey => {\n            if (!clone.hasOwnProperty(sourceKey)) {\n                clone[sourceKey] = cloneDeep(sourceToApply[sourceKey]);\n            }\n            // object merging excluding arrays\n            if (\n                clone[sourceKey] &&\n                typeof clone[sourceKey] === 'object' &&\n                !Array.isArray(clone[sourceKey]) &&\n                typeof sourceToApply[sourceKey] === 'object'\n            ) {\n                clone[sourceKey] = deepMergeWithArrayOverrides(clone[sourceKey], sourceToApply[sourceKey]);\n            }\n        });\n    });\n    return clone;\n};\n","module.exports = require(\"@splunk/react-ui/Table\");","module.exports = require(\"@splunk/react-sparkline/Line\");","import { get, range } from 'lodash';\nimport { DYNAMIC_OPTIONS_DSL_PATTERN } from '@splunk/visualizations-shared/schemaUtils';\nimport { VizBehavior } from '../interfaces/VizBehavior';\nimport { VizConfig } from '../interfaces/VizConfig';\nimport { OptionsSchema } from '../interfaces/OptionsSchema';\nimport type { JSONSchema7Definition } from 'json-schema';\n\nexport interface PresetEntry {\n    name: string;\n    value: any;\n    label: string;\n}\n\nconst dynamicOptionsDSLType = {\n    type: 'string',\n    pattern: DYNAMIC_OPTIONS_DSL_PATTERN,\n} as const;\n\n/**\n * Helper function to extend an options schema with dynamic options DSL\n * @param optionsSchema a visualization's options schema\n * @returns an updated options schema that additionally allows strings starting with > for each option\n */\nfunction enhanceOptionsSchemaWithDynamicOptions(\n    optionsSchema: OptionsSchema | JSONSchema7Definition\n): OptionsSchema {\n    const enhancedOptionsSchema: OptionsSchema = {};\n    Object.keys(optionsSchema).forEach((key): void => {\n        const {\n            // The next a few are schema annotations, we should leave them as is.\n            // Note: in reality we don't use `readOnly`, `writeOnly` or `examples`, but they are listed here for completeness.\n            // Ref: https://datatracker.ietf.org/doc/html/draft-handrews-json-schema-validation-01\n            title,\n            description,\n            readOnly,\n            writeOnly,\n            examples,\n            default: defaultValue,\n            // The next a few need special care\n            type,\n            properties,\n            patternProperties,\n            // The rest should be handled together\n            ...remainingSchemaEntry\n        } = optionsSchema[key];\n\n        const annotations = {\n            ...(title !== undefined && { title }),\n            ...(description !== undefined && { description }),\n            ...(readOnly !== undefined && { readOnly }),\n            ...(writeOnly !== undefined && { writeOnly }),\n            ...(examples !== undefined && { examples }),\n            ...(defaultValue !== undefined && { default: defaultValue }),\n        };\n\n        if (type === 'object') {\n            enhancedOptionsSchema[key] = {\n                ...remainingSchemaEntry,\n                ...annotations,\n                type,\n                ...(properties && { properties: enhanceOptionsSchemaWithDynamicOptions(properties) }),\n            };\n            if (patternProperties) {\n                let enhancedPatternProperties = {};\n                Object.keys(patternProperties).forEach((key): void => {\n                    enhancedPatternProperties = {\n                        ...enhancedPatternProperties,\n                        ...enhanceOptionsSchemaWithDynamicOptions({ [key]: patternProperties[key] }),\n                    };\n                });\n                enhancedOptionsSchema[key].patternProperties = enhancedPatternProperties;\n            }\n        } else {\n            enhancedOptionsSchema[key] = {\n                ...annotations,\n                anyOf: [\n                    // we can't assume `type` is always there because there are `enum` and `const`.\n                    { ...(type !== undefined && { type }), ...remainingSchemaEntry },\n                    dynamicOptionsDSLType,\n                ],\n            };\n        }\n    });\n    return enhancedOptionsSchema;\n}\n\n/**\n * Helper function to enhance a Visualization Config as needed based on behaviors specified in supports block\n * @param vizConfig a Visualization Config\n * @returns an enhanced Visualization Config containing updated config entries based on behaviors it supports\n */\nfunction enhanceConfig(vizConfig: VizConfig): VizConfig {\n    const enhancedConfig: VizConfig = vizConfig;\n    if (vizConfig.supports.indexOf(VizBehavior.DYNAMIC_OPTIONS) !== -1) {\n        enhancedConfig.optionsSchema = enhanceOptionsSchemaWithDynamicOptions(vizConfig.optionsSchema);\n    }\n    return enhancedConfig;\n}\n\nfunction isDynamicOption(option?: string): boolean {\n    return (option && typeof option === 'string' && option.trim().startsWith('>')) || false;\n}\n\n// private helpers to improve readability of getInitialPreset\n// this shouldn't be tested since this util isn't something that we expect to use outside of getInitialPreset\n\n/**\n * this checks to make sure that all values within vizContext are compatible with the given preset's context to determine the initialPreset\n * if a preset has explicitly specified a key as being undefined, the vizContext must also has that key as undefined, or else this CANNOT be the initialPreset\n * the inverse is true; if a preset has key is NOT undefined, it must also be NOT undefined in the corresponding vizContext\n * the internal config contents are irrelevant (as the user could customize them in source), just as long as the presence of `undefined`s match up\n *\n * Since the presetConfigs have explicit undefined keys to override the existing config, we need to explicitly check the undefined values\n */\nfunction hasCompatibleContexts(\n    vizContext: { [configKey: string]: any },\n    presetContext: { [configKey: string]: any }\n): boolean {\n    const presetContextKeys = Object.keys(presetContext);\n    return presetContextKeys.every(\n        (contextKey): boolean =>\n            (presetContext[contextKey] === undefined && vizContext[contextKey] === undefined) ||\n            (presetContext[contextKey] !== undefined && vizContext[contextKey] !== undefined)\n    );\n}\n\n/**\n * Checks to make sure that dynamic (non-dynamic) options in a given preset are also dynamic (non-dynamic) in the vizOptions\n */\nfunction hasCompatibleOptions(\n    vizOptions: { [configKey: string]: any },\n    presetOptions: { [configKey: string]: any }\n): boolean {\n    const presetOptionKeys = Object.keys(presetOptions);\n    return presetOptionKeys.every(\n        (optionKey): boolean =>\n            isDynamicOption(presetOptions[optionKey]) === isDynamicOption(vizOptions[optionKey])\n    );\n}\n\n/**\n * Evaluates whether there is an initialPreset that fits the current state of vizContext + vizOptions\n * This function ignores extraneous vizOptions or vizContext keys, as they could be outside the scope of what the preset is intended to configure\n *\n * @param {Object} vizContext - the current vizContext definition\n * @param {Object} vizOptions - the current vizOptions definition\n * @param {PresetEntry[]} presets - the list of presets, one of which can be considered an initialPreset\n */\nfunction getInitialPreset(\n    vizContext: { [configKey: string]: any },\n    vizOptions: { [configKey: string]: any },\n    presets: PresetEntry[]\n): PresetEntry | null {\n    return presets.find((preset): boolean => {\n        const presetContext = get(preset, ['value', 'context'], {});\n        const presetOptions = get(preset, ['value', 'options'], {});\n        const presetContextKeys = Object.keys(presetContext);\n        const presetOptionKeys = Object.keys(presetOptions);\n\n        // all presets have to explicitly specify which options to reset (i.e. need explicitly undefined keys)\n        // if not, then the preset is invalid in config.ts\n        if (presetContextKeys.length === 0 || presetOptionKeys.length === 0) return false;\n\n        return (\n            hasCompatibleContexts(vizContext, presetContext) &&\n            hasCompatibleOptions(vizOptions, presetOptions)\n        );\n    });\n}\n\ninterface PrecisionOption {\n    label: string;\n    value: number;\n}\n\n/**\n * generates number precision values for a Select editor\n *\n * @param {Number} numPrecisionValues - number of integer precision values to generate\n * @returns {{ label: string; value; string  }[]} array of { label, value } tuples\n */\nfunction generatePrecisionValues(numPrecisionValues: number): PrecisionOption[] {\n    return range(0, numPrecisionValues + 1).map(\n        (i): PrecisionOption => ({\n            label: `${i} (0${i > 0 ? '.' : ''}${'0'.repeat(i)})`, // e.g. 0.000 for numPrecisionValues = 3\n            value: i,\n        })\n    );\n}\n\nexport {\n    enhanceConfig,\n    enhanceOptionsSchemaWithDynamicOptions,\n    isDynamicOption,\n    getInitialPreset,\n    generatePrecisionValues,\n};\n","module.exports = require(\"@splunk/visualizations-shared/Message\");","module.exports = require(\"@babel/runtime/helpers/taggedTemplateLiteral\");"],"sourceRoot":""}