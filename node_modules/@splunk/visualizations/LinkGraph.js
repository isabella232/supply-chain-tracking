/*!
 * Copyright © 2018 Splunk Inc.
 * SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or
 * in part without a valid written license from Splunk Inc. is PROHIBITED.
 */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 171);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = require("prop-types");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = require("lodash");

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = require("@splunk/ui-utils/i18n");

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = require("styled-components");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VizBehavior = void 0;
var VizBehavior;

(function (VizBehavior) {
  /**
   * Dynamic Options Behavior.
   * This allows visualization options to be powered by data
   *
   * **Example**
   *
   * sparklineValues: ">primary|seriesByIndex(0)"
   * would configure sparklineValues with an array of data points
   * coming from the first series in the primary datasource
   *
   */
  VizBehavior["DYNAMIC_OPTIONS"] = "dynamic-options";
  VizBehavior["EVENTS"] = "events";
  /**
   * Placeholder behavior: visualization will display a placeholder rather than fail if any of the `requiredProps` is
   * missing.
   * @type {string}
   */

  VizBehavior["PLACEHOLDER"] = "placeholder";
  VizBehavior["PAGE_AND_SORT"] = "page-and-sort";
})(VizBehavior = exports.VizBehavior || (exports.VizBehavior = {}));

/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/defineProperty");

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof = __webpack_require__(22);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deepMergeWithArrayOverrides = exports.extendStaticWrapperProps = void 0;

var lodash_1 = __webpack_require__(2);
/**
 * @method extendStaticWrapperProps
 * @param {Object} props
 * @param {DashboardVizType} props.Wrapper
 * @param {DashboardVizType} props.Visualization
 */


var extendStaticWrapperProps = function extendStaticWrapperProps(_ref) {
  var Wrapper = _ref.Wrapper,
      Visualization = _ref.Visualization;
  var extendProperties = ['propTypes', 'defaultProps', 'config'];
  extendProperties.forEach(function (prop) {
    if (Visualization[prop]) {
      Wrapper[prop] = Visualization[prop];
    }
  });
};

exports.extendStaticWrapperProps = extendStaticWrapperProps;
/**
 * helper to deeply merge objects while preserving arrays in earlier source objects
 * deeply nested primitive keys are merged similarly to lodash's defaultsDeep, while keys with arrays will be preserved if already present in the resultant merged object
 * this prevents default arrays from appending values to user-defined arrays (this occurs if the default array is longer than the user-defined one)
 *
 * @method deepMergeWithArrayOverrides
 * @param {Object} initial - target object to merge values into
 * @param {Object[]} sources - other default options to be merged into the resultant object if no explicit value is provided, with earlier args taking precedence over later ones
 *
 * @returns {Object}
 */

var deepMergeWithArrayOverrides = function deepMergeWithArrayOverrides(initial) {
  var clone = lodash_1.cloneDeep(initial);

  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    sources[_key - 1] = arguments[_key];
  }

  sources.forEach(function (sourceToApply) {
    Object.keys(sourceToApply).forEach(function (sourceKey) {
      if (!clone.hasOwnProperty(sourceKey)) {
        clone[sourceKey] = lodash_1.cloneDeep(sourceToApply[sourceKey]);
      } // object merging excluding arrays


      if (clone[sourceKey] && _typeof(clone[sourceKey]) === 'object' && !Array.isArray(clone[sourceKey]) && _typeof(sourceToApply[sourceKey]) === 'object') {
        clone[sourceKey] = exports.deepMergeWithArrayOverrides(clone[sourceKey], sourceToApply[sourceKey]);
      }
    });
  });
  return clone;
};

exports.deepMergeWithArrayOverrides = deepMergeWithArrayOverrides;

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _defineProperty = __webpack_require__(6);

var __rest = this && this.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generatePrecisionValues = exports.getInitialPreset = exports.isDynamicOption = exports.enhanceOptionsSchemaWithDynamicOptions = exports.enhanceConfig = void 0;

var lodash_1 = __webpack_require__(2);

var schemaUtils_1 = __webpack_require__(14);

var VizBehavior_1 = __webpack_require__(5);

var dynamicOptionsDSLType = {
  type: 'string',
  pattern: schemaUtils_1.DYNAMIC_OPTIONS_DSL_PATTERN
};
/**
 * Helper function to extend an options schema with dynamic options DSL
 * @param optionsSchema a visualization's options schema
 * @returns an updated options schema that additionally allows strings starting with > for each option
 */

function enhanceOptionsSchemaWithDynamicOptions(optionsSchema) {
  var enhancedOptionsSchema = {};
  Object.keys(optionsSchema).forEach(function (key) {
    var _a = optionsSchema[key],
        title = _a.title,
        description = _a.description,
        readOnly = _a.readOnly,
        writeOnly = _a.writeOnly,
        examples = _a.examples,
        defaultValue = _a.default,
        type = _a.type,
        properties = _a.properties,
        patternProperties = _a.patternProperties,
        remainingSchemaEntry = __rest(_a, ["title", "description", "readOnly", "writeOnly", "examples", "default", "type", "properties", "patternProperties"]);

    var annotations = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, title !== undefined && {
      title: title
    }), description !== undefined && {
      description: description
    }), readOnly !== undefined && {
      readOnly: readOnly
    }), writeOnly !== undefined && {
      writeOnly: writeOnly
    }), examples !== undefined && {
      examples: examples
    }), defaultValue !== undefined && {
      default: defaultValue
    });

    if (type === 'object') {
      enhancedOptionsSchema[key] = Object.assign(Object.assign(Object.assign(Object.assign({}, remainingSchemaEntry), annotations), {
        type: type
      }), properties && {
        properties: enhanceOptionsSchemaWithDynamicOptions(properties)
      });

      if (patternProperties) {
        var enhancedPatternProperties = {};
        Object.keys(patternProperties).forEach(function (key) {
          enhancedPatternProperties = Object.assign(Object.assign({}, enhancedPatternProperties), enhanceOptionsSchemaWithDynamicOptions(_defineProperty({}, key, patternProperties[key])));
        });
        enhancedOptionsSchema[key].patternProperties = enhancedPatternProperties;
      }
    } else {
      enhancedOptionsSchema[key] = Object.assign(Object.assign({}, annotations), {
        anyOf: [Object.assign(Object.assign({}, type !== undefined && {
          type: type
        }), remainingSchemaEntry), dynamicOptionsDSLType]
      });
    }
  });
  return enhancedOptionsSchema;
}

exports.enhanceOptionsSchemaWithDynamicOptions = enhanceOptionsSchemaWithDynamicOptions;
/**
 * Helper function to enhance a Visualization Config as needed based on behaviors specified in supports block
 * @param vizConfig a Visualization Config
 * @returns an enhanced Visualization Config containing updated config entries based on behaviors it supports
 */

function enhanceConfig(vizConfig) {
  var enhancedConfig = vizConfig;

  if (vizConfig.supports.indexOf(VizBehavior_1.VizBehavior.DYNAMIC_OPTIONS) !== -1) {
    enhancedConfig.optionsSchema = enhanceOptionsSchemaWithDynamicOptions(vizConfig.optionsSchema);
  }

  return enhancedConfig;
}

exports.enhanceConfig = enhanceConfig;

function isDynamicOption(option) {
  return option && typeof option === 'string' && option.trim().startsWith('>') || false;
}

exports.isDynamicOption = isDynamicOption; // private helpers to improve readability of getInitialPreset
// this shouldn't be tested since this util isn't something that we expect to use outside of getInitialPreset

/**
 * this checks to make sure that all values within vizContext are compatible with the given preset's context to determine the initialPreset
 * if a preset has explicitly specified a key as being undefined, the vizContext must also has that key as undefined, or else this CANNOT be the initialPreset
 * the inverse is true; if a preset has key is NOT undefined, it must also be NOT undefined in the corresponding vizContext
 * the internal config contents are irrelevant (as the user could customize them in source), just as long as the presence of `undefined`s match up
 *
 * Since the presetConfigs have explicit undefined keys to override the existing config, we need to explicitly check the undefined values
 */

function hasCompatibleContexts(vizContext, presetContext) {
  var presetContextKeys = Object.keys(presetContext);
  return presetContextKeys.every(function (contextKey) {
    return presetContext[contextKey] === undefined && vizContext[contextKey] === undefined || presetContext[contextKey] !== undefined && vizContext[contextKey] !== undefined;
  });
}
/**
 * Checks to make sure that dynamic (non-dynamic) options in a given preset are also dynamic (non-dynamic) in the vizOptions
 */


function hasCompatibleOptions(vizOptions, presetOptions) {
  var presetOptionKeys = Object.keys(presetOptions);
  return presetOptionKeys.every(function (optionKey) {
    return isDynamicOption(presetOptions[optionKey]) === isDynamicOption(vizOptions[optionKey]);
  });
}
/**
 * Evaluates whether there is an initialPreset that fits the current state of vizContext + vizOptions
 * This function ignores extraneous vizOptions or vizContext keys, as they could be outside the scope of what the preset is intended to configure
 *
 * @param {Object} vizContext - the current vizContext definition
 * @param {Object} vizOptions - the current vizOptions definition
 * @param {PresetEntry[]} presets - the list of presets, one of which can be considered an initialPreset
 */


function getInitialPreset(vizContext, vizOptions, presets) {
  return presets.find(function (preset) {
    var presetContext = lodash_1.get(preset, ['value', 'context'], {});
    var presetOptions = lodash_1.get(preset, ['value', 'options'], {});
    var presetContextKeys = Object.keys(presetContext);
    var presetOptionKeys = Object.keys(presetOptions); // all presets have to explicitly specify which options to reset (i.e. need explicitly undefined keys)
    // if not, then the preset is invalid in config.ts

    if (presetContextKeys.length === 0 || presetOptionKeys.length === 0) return false;
    return hasCompatibleContexts(vizContext, presetContext) && hasCompatibleOptions(vizOptions, presetOptions);
  });
}

exports.getInitialPreset = getInitialPreset;
/**
 * generates number precision values for a Select editor
 *
 * @param {Number} numPrecisionValues - number of integer precision values to generate
 * @returns {{ label: string; value; string  }[]} array of { label, value } tuples
 */

function generatePrecisionValues(numPrecisionValues) {
  return lodash_1.range(0, numPrecisionValues + 1).map(function (i) {
    return {
      label: "".concat(i, " (0").concat(i > 0 ? '.' : '').concat('0'.repeat(i), ")"),
      value: i
    };
  });
}

exports.generatePrecisionValues = generatePrecisionValues;

/***/ }),
/* 9 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/Message");

/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/classCallCheck");

/***/ }),
/* 11 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/colorUtils");

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __webpack_require__(1);

var styled_components_1 = __webpack_require__(4);

var SizeAwareWrapper_1 = __webpack_require__(17);

var style_1 = __webpack_require__(13);

var colorUtils_1 = __webpack_require__(11);

var Item = styled_components_1.default.div.attrs(function (_ref) {
  var width = _ref.width;
  return {
    style: {
      width: style_1.toPx(width)
    }
  };
}).withConfig({
  displayName: "FixedSizeContainer__Item",
  componentId: "sc-1yhgpod-0"
})(["position:relative;background-color:", "};"], function (props) {
  return colorUtils_1.isColor(props.backgroundColor) && props.backgroundColor || props.theme.defaultBackgroundColor;
}); // Use `.attrs()` for highly dynamic styles. Ref: https://github.com/styled-components/styled-components/issues/134#issuecomment-312415291

var FixSizeItem = styled_components_1.default.div.attrs(function (_ref2) {
  var width = _ref2.width,
      height = _ref2.height;
  return {
    style: Object.assign(Object.assign({}, width && {
      width: style_1.toPx(width)
    }), height && {
      height: style_1.toPx(height)
    })
  };
}).withConfig({
  displayName: "FixedSizeContainer__FixSizeItem",
  componentId: "sc-1yhgpod-1"
})(["position:relative;flex-direction:column;flex:1;display:flex;background-color:", "};"], function (props) {
  return colorUtils_1.isColor(props.backgroundColor) && props.backgroundColor || props.theme.defaultBackgroundColor;
});
var ItemContent = styled_components_1.default.div.withConfig({
  displayName: "FixedSizeContainer__ItemContent",
  componentId: "sc-1yhgpod-2"
})(["position:relative;min-height:100px;width:100%;"]);
var FixSizeItemContent = styled_components_1.default.div.withConfig({
  displayName: "FixedSizeContainer__FixSizeItemContent",
  componentId: "sc-1yhgpod-3"
})(["min-height:0px;flex:1;position:relative;box-sizing:border-box;"]);

var withFixedSizeContainer = function withFixedSizeContainer(Viz) {
  var FixedSizeContainer = function FixedSizeContainer(props) {
    var width = props.width,
        height = props.height,
        backgroundColor = props.backgroundColor;

    if (!height) {
      return React.createElement(Item, {
        "data-test": "item",
        width: width,
        backgroundColor: backgroundColor
      }, React.createElement(ItemContent, null, React.createElement(Viz, Object.assign({}, props))));
    }

    return React.createElement(FixSizeItem, {
      "data-test": "fix-size-item",
      width: width,
      height: height,
      backgroundColor: backgroundColor
    }, React.createElement(FixSizeItemContent, null, React.createElement(SizeAwareWrapper_1.default, null, function (_ref3) {
      var newWidth = _ref3.width,
          newHeight = _ref3.height;
      return React.createElement(Viz, Object.assign({}, props, {
        width: newWidth,
        height: newHeight
      }));
    })));
  };

  FixedSizeContainer.displayName = 'withFixedSizeContainer';
  return FixedSizeContainer;
};

exports.default = withFixedSizeContainer;

/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/style");

/***/ }),
/* 14 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/schemaUtils");

/***/ }),
/* 15 */,
/* 16 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/createClass");

/***/ }),
/* 17 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/SizeAwareWrapper");

/***/ }),
/* 18 */,
/* 19 */
/***/ (function(module, exports) {

module.exports = require("@splunk/themes/variables");

/***/ }),
/* 20 */,
/* 21 */
/***/ (function(module, exports) {

module.exports = require("@splunk/themes/pick");

/***/ }),
/* 22 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/typeof");

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _defineProperty = __webpack_require__(6);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getSortingParams = exports.SortParamsPropTypes = void 0;

var T = __webpack_require__(0);

var lodash_1 = __webpack_require__(2);

var DataSource_1 = __webpack_require__(33);

exports.SortParamsPropTypes = T.shape({
  currentSortKey: T.string,
  currentSortDir: T.oneOf(DataSource_1.validSortDirs),
  onSort: T.func
});

var getSortingParams = function getSortingParams(_ref) {
  var requestParams = _ref.requestParams,
      onRequestParamsChange = _ref.onRequestParamsChange;
  var currentSortKey;
  var currentSortDir;
  var nextSortDirMap = {
    asc: 'desc',
    desc: 'asc',
    none: 'asc'
  };
  var onSort;

  if (lodash_1.isFunction(onRequestParamsChange)) {
    if (requestParams && lodash_1.has(requestParams, 'sort')) {
      currentSortKey = Object.keys(requestParams.sort).shift();
      currentSortDir = requestParams.sort[currentSortKey];
    } // undid memoization since there is a dependency on requestParams, which is a deeply nested object


    onSort = function onSort(e, _ref2) {
      var sortKey = _ref2.sortKey,
          sortDir = _ref2.sortDir;

      if (typeof sortKey === 'string') {
        var nextSortDir = lodash_1.has(nextSortDirMap, sortDir) ? nextSortDirMap[sortDir] : 'none';
        onRequestParamsChange(Object.assign(Object.assign({}, requestParams), {
          offset: 0,
          sort: _defineProperty({}, sortKey, nextSortDir)
        }));
      } else {
        onRequestParamsChange(requestParams);
      }
    };
  }

  return {
    currentSortKey: currentSortKey,
    currentSortDir: currentSortDir,
    onSort: onSort
  };
};

exports.getSortingParams = getSortingParams;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getPaginationParams = exports.PaginatorParamsPropTypes = void 0;

var T = __webpack_require__(0);

var lodash_1 = __webpack_require__(2);

exports.PaginatorParamsPropTypes = T.shape({
  isPaging: T.bool,
  current: T.number,
  totalPages: T.number,
  onChange: T.func
});

var getPaginationParams = function getPaginationParams(_ref) {
  var requestParams = _ref.requestParams,
      meta = _ref.meta,
      onRequestParamsChange = _ref.onRequestParamsChange;
  var totalCount = meta && meta.totalCount || 0;
  var offset = requestParams && requestParams.offset || 0;
  var count = requestParams && requestParams.count;
  var totalPages = typeof count === 'number' && count > 0 ? Math.ceil(totalCount / count) : 0;
  var current = typeof count === 'number' && count > 0 ? Math.floor(offset / count) + 1 : 0;
  var isPaging = totalPages > 1 && lodash_1.isFunction(onRequestParamsChange);

  var onChangeHandler = function onChangeHandler(e, _ref2) {
    var page = _ref2.page,
        countArg = _ref2.count;
    var newParams = lodash_1.cloneDeep(requestParams);

    if (typeof countArg === 'number') {
      newParams.count = countArg;
      newParams.offset = 0;
    }

    var pageCount = typeof newParams.count === 'number' ? newParams.count : 10;

    if (typeof page === 'number' && page > 0) {
      newParams.count = pageCount;
      newParams.offset = (page - 1) * pageCount;
    }

    onRequestParamsChange(newParams);
  };

  return {
    isPaging: isPaging,
    current: current,
    totalPages: totalPages,
    onChange: lodash_1.isFunction(onRequestParamsChange) ? onChangeHandler : lodash_1.noop
  };
};

exports.getPaginationParams = getPaginationParams;

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shouldShowIconPlaceholder = void 0;

var React = __webpack_require__(1);

var T = __webpack_require__(0);

var lodash_1 = __webpack_require__(2);

var i18n_1 = __webpack_require__(3);

var Message_1 = __webpack_require__(9);

var FixedSizeContainer_1 = __webpack_require__(12);
/**
 * @method shouldShowIconPlaceholder
 * @param {object} dataSources
 * @param {boolean} loading
 * @returns {boolean}
 */


var shouldShowIconPlaceholder = function shouldShowIconPlaceholder(dataSources) {
  var loading = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var data = lodash_1.get(dataSources, 'primary.data.columns[0]', undefined);
  var noData = data === undefined;
  var fields = lodash_1.get(dataSources, 'primary.data.fields[0]', undefined);
  var noFields = fields === undefined;
  return loading || noData || noFields;
};

exports.shouldShowIconPlaceholder = shouldShowIconPlaceholder;
var propTypes = {
  icon: T.func,
  width: T.oneOfType([T.string, T.number]),
  height: T.oneOfType([T.string, T.number]),
  backgroundColor: T.string
};
/**
 * @method IconPlaceholder
 * @param {IconPlaceholderProps} props
 * @returns {React.ReactElement}
 */

var IconPlaceholder = function IconPlaceholder(props) {
  var width = props.width,
      height = props.height,
      icon = props.icon;

  if (icon) {
    return React.createElement(icon, {
      style: {
        left: '50%',
        top: '50%',
        color: 'grey',
        position: 'absolute',
        transform: 'translate(-50%, -50%)'
      },
      width: '50%',
      height: '50%'
    });
  }

  return React.createElement(Message_1.default, {
    width: width,
    height: height,
    level: "warning",
    message: i18n_1._('No DataSource Connected')
  });
};

IconPlaceholder.propTypes = propTypes;
IconPlaceholder.defaultProps = {
  width: '100%',
  height: 250
};
exports.default = FixedSizeContainer_1.default(IconPlaceholder);

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VizCategory = void 0;
var VizCategory;

(function (VizCategory) {
  VizCategory["SINGLE_VALUE"] = "Single Value";
  VizCategory["TRENDS"] = "Trends";
  VizCategory["COMPARISONS"] = "Comparisons";
  VizCategory["TABLE"] = "Table";
  VizCategory["GAUGE"] = "Gauge";
  VizCategory["DISTRIBUTIONS"] = "Distributions";
  VizCategory["CHOROPLETH"] = "Choropleth Maps";
  VizCategory["SHAPES"] = "Shapes";
  VizCategory["MISC"] = "misc";
  VizCategory["FLOW"] = "Flow";
  VizCategory["CORRELATION"] = "Correlation";
  VizCategory["SPATIAL"] = "Spatial";
})(VizCategory = exports.VizCategory || (exports.VizCategory = {}));

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __webpack_require__(1);

var lodash_1 = __webpack_require__(2);

var getSettingsFromThemedProps_1 = __webpack_require__(28);

var Options_1 = __webpack_require__(29);

var SanitizeProps_1 = __webpack_require__(30);

var styled_components_1 = __webpack_require__(4);

var SplunkVisualization_1 = __webpack_require__(31);

var VizBehavior_1 = __webpack_require__(5);

var getSorting_1 = __webpack_require__(23);

var getPagination_1 = __webpack_require__(24);

var useDeepMemo_1 = __webpack_require__(34);

var JSONSchemaUtils_1 = __webpack_require__(35);

var MissingPropsMessage_1 = __webpack_require__(36);

var withEditModeCover_1 = __webpack_require__(37);

var withPlaceholder_1 = __webpack_require__(38);

var hocUtils_1 = __webpack_require__(7);
/**
 * hoc that wraps a pure react visualization in a Dashboard visualization
 * @param {DashboardVizOpts} opts
 * @returns {HOC}
 */


var withDashboardViz = function withDashboardViz(opts) {
  var ReactViz = opts.ReactViz,
      vizConfig = opts.vizConfig,
      _opts$computeVizProps = opts.computeVizProps,
      computeVizProps = _opts$computeVizProps === void 0 ? function () {} : _opts$computeVizProps,
      useIconPlaceholder = opts.useIconPlaceholder; // sanitizing props before sending them to reactviz.

  var SanitizedReactViz = SanitizeProps_1.withSanitizedProps(ReactViz);
  var defaultOptions = JSONSchemaUtils_1.pickFieldFromJSONSchema(vizConfig.optionsSchema, 'default');

  var DashboardViz = function DashboardViz(props) {
    var mode = props.mode,
        hasEventHandlers = props.hasEventHandlers,
        dataSources = props.dataSources,
        options = props.options,
        _props$context = props.context,
        context = _props$context === void 0 ? {} : _props$context,
        width = props.width,
        height = props.height,
        onComputedProps = props.onComputedProps,
        onEventTrigger = props.onEventTrigger,
        theme = props.theme,
        onRequestParamsChange = props.onRequestParamsChange;

    var themeFunc = function themeFunc(themeVar) {
      var _a, _b;

      return (_b = (_a = vizConfig.themes)[themeVar]) === null || _b === void 0 ? void 0 : _b.call(_a, props);
    };

    var bgColorFromTheme = themeFunc('defaultBackgroundColor');

    var _getSettingsFromTheme = getSettingsFromThemedProps_1.default({
      theme: theme
    }),
        currentThemeFamily = _getSettingsFromTheme.family,
        currentThemeColorScheme = _getSettingsFromTheme.colorScheme,
        currentThemeDensity = _getSettingsFromTheme.density;

    var evaluatedOptions = {}; // evaluatedOptions need to be initialized as an empty object

    evaluatedOptions = useDeepMemo_1.useDeepMemo(function () {
      try {
        return Options_1.Options.evaluate({
          context: lodash_1.defaultsDeep({}, context, vizConfig.defaultContext),
          options: hocUtils_1.deepMergeWithArrayOverrides({}, options, defaultOptions)
        }, dataSources, themeFunc);
      } catch (e) {
        console.error("unexpected error evaluating options:  + ".concat(e.message));
        return {};
      }
    }, [currentThemeFamily, currentThemeColorScheme, currentThemeDensity, options, context, dataSources]); // useEffect hook needs to be initialized before any early returns
    // this is in accordance with the order of hook calls being the same on each render https://reactjs.org/docs/hooks-rules.html#explanation

    React.useEffect(function () {
      onComputedProps(evaluatedOptions);
    }); // present warning message if any required props are missing

    var _vizConfig$requiredPr = vizConfig.requiredProps,
        requiredProps = _vizConfig$requiredPr === void 0 ? [] : _vizConfig$requiredPr,
        supports = vizConfig.supports;
    var missing = MissingPropsMessage_1.missingKeys(requiredProps, evaluatedOptions);

    if (missing.length > 0 && supports.includes(VizBehavior_1.VizBehavior.PLACEHOLDER)) {
      return React.createElement(MissingPropsMessage_1.default, {
        "data-test": "missing-props-message",
        width: width,
        height: height,
        missingProps: missing,
        backgroundColor: bgColorFromTheme
      });
    } // events


    var eventCallbackProps = {};

    if (hasEventHandlers && mode === 'view' && vizConfig.supports.indexOf(VizBehavior_1.VizBehavior.EVENTS) > -1) {
      var supportedEvents = vizConfig.events;
      Object.keys(supportedEvents).forEach(function (eventName) {
        var eventCallbackPropName = lodash_1.camelCase("on.".concat(eventName));
        eventCallbackProps[eventCallbackPropName] = null; // todo: refactor single value and single value icon to send payload from viz
        // then remove these lines

        var payloadKeys = supportedEvents[eventName].payloadKeys;
        var payload = {};

        if (Array.isArray(payloadKeys) && payloadKeys.length) {
          payloadKeys.forEach(function (p) {
            return payload[p] = evaluatedOptions[p];
          });
        }

        eventCallbackProps[eventCallbackPropName] = function (ev) {
          if (ev && ev.payload) {
            payload = ev.payload;
          }

          return onEventTrigger({
            originalEvent: ev,
            payload: payload,
            type: eventName
          });
        };
      });
    } // compute pure viz props which are not from options


    var computedVizProps = computeVizProps(Object.assign(Object.assign(Object.assign(Object.assign({}, props), evaluatedOptions), eventCallbackProps), {
      themeFunc: themeFunc
    }));
    /**
     * PAGE_AND_SORT behavior
     *
     * Some visualizations, like table, requires metadata about the datasource,
     * like total number of results, current count, offset, and sort, for rendering
     * paginator and sorting direction. In this approach, the visualization
     * allow users to set 'paginateDataSourceKey' to select which datasource
     * should the visualization extract the metadata from. It defaults to 'primary' datasource.
     * The visualization config should set the PAGE_AND_SORT behavior to receive
     * 'requestParams', 'meta' and onRequestParams callback as props.
     *
     * In future, we could automatically detect which all datasources are being used
     * and bind those magically to pagination/sorting behavior.
     */

    var dataSourceMetadata = {};
    var OptionKey = 'paginateDataSourceKey';
    var paginateDataSourceKey = lodash_1.has(evaluatedOptions, OptionKey) && evaluatedOptions[OptionKey] || 'primary';

    if (vizConfig.supports.indexOf(VizBehavior_1.VizBehavior.PAGE_AND_SORT) > -1 && lodash_1.has(dataSources, paginateDataSourceKey)) {
      var requestParams = lodash_1.get(dataSources, [paginateDataSourceKey, 'requestParams'], {});
      var meta = lodash_1.get(dataSources, [paginateDataSourceKey, 'meta'], {});

      var handleRequestParamsChange = function handleRequestParamsChange(payload) {
        return onRequestParamsChange(paginateDataSourceKey, payload);
      };

      var sortParams = getSorting_1.getSortingParams({
        requestParams: requestParams,
        meta: meta,
        onRequestParamsChange: handleRequestParamsChange
      });
      var paginatorParams = getPagination_1.getPaginationParams({
        requestParams: requestParams,
        meta: meta,
        onRequestParamsChange: handleRequestParamsChange
      });
      dataSourceMetadata = {
        sortParams: sortParams,
        paginatorParams: paginatorParams
      };
    }

    return React.createElement(SanitizedReactViz, Object.assign({
      mode: mode,
      width: width,
      height: height
    }, evaluatedOptions, computedVizProps, eventCallbackProps, dataSourceMetadata));
  };

  DashboardViz.propTypes = Object.assign(Object.assign({}, SplunkVisualization_1.default.propTypes), ReactViz.propTypes);
  DashboardViz.defaultProps = Object.assign(Object.assign(Object.assign({}, SplunkVisualization_1.default.defaultProps), ReactViz.defaultProps), {
    // using withTheme requires component to receive theme prop. In case the consumer did not provide ThemeProvider, a default empty object will prevent warnings.
    theme: {}
  }); // attach viz config

  DashboardViz.config = vizConfig; // @ts-ignore: TODO fix sc upgrade TS issues

  return styled_components_1.withTheme(withPlaceholder_1.default(withEditModeCover_1.default(DashboardViz), useIconPlaceholder));
};

exports.default = withDashboardViz;

/***/ }),
/* 28 */
/***/ (function(module, exports) {

module.exports = require("@splunk/themes/getSettingsFromThemedProps");

/***/ }),
/* 29 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualization-encoding/Options");

/***/ }),
/* 30 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/SanitizeProps");

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _classCallCheck = __webpack_require__(10);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.INITIAL_HEIGHT = exports.INITIAL_WIDTH = void 0;
/* eslint-disable react/no-unused-prop-types,react/prefer-stateless-function */

var T = __webpack_require__(0);

var lodash_1 = __webpack_require__(2);

var VizActionHandler_1 = __webpack_require__(32); // this is identical to the initial height and width we use in BaseVisualization in dashboard-visualizations


exports.INITIAL_WIDTH = 250;
exports.INITIAL_HEIGHT = 250;
/**
 * A Splunk visualization
 */

var SplunkVisualization = function SplunkVisualization() {
  _classCallCheck(this, SplunkVisualization);
};

SplunkVisualization.propTypes = {
  /**
   * display mode
   */
  mode: T.oneOf(['view', 'edit', 'export']).isRequired,

  /**
   * width in pixel or string, defaults to 100%
   */
  width: T.oneOfType([T.string, T.number]).isRequired,

  /**
   * height in pixel or string
   */
  height: T.oneOfType([T.string, T.number]).isRequired,

  /**
   * visualization context used for dynamic option evaluation
   */
  context: T.object,

  /**
   * visualization formatting options
   */
  options: T.object,

  /**
   * A callback to update formatting options
   */
  onOptionsChange: T.func,

  /**
   * datasource state which include data and request params, object key indicate the datasource type.
   */
  dataSources: T.objectOf(T.shape({
    /**
     * current request params
     */
    requestParams: T.object,

    /**
     * current dataset
     */
    data: T.shape({
      fields: T.array,
      columns: T.array
    }),

    /**
     * error
     */
    error: T.shape({
      level: T.string,
      message: T.string
    }),

    /**
     * meta data that came with the dataset
     */
    meta: T.object
  })),

  /**
   * A callback to trigger event
   */
  onEventTrigger: T.func,

  /**
   * Inform viz if there are handlers listening to events
   */
  hasEventHandlers: T.bool,

  /**
   * A callback to communicate computed props to a consumer
   */
  onComputedProps: T.func,

  /**
   * A callback to obtain visualization api
   */
  vizActionHandlerRef: T.func,
  loading: T.bool,
  theme: T.object,

  /**
   * A callback to request new data with updated request params
   */
  onRequestParamsChange: T.func
};
/**
 *
 */

SplunkVisualization.defaultProps = {
  // BaseVisualization in dashboard-visualizations uses 100% for width but 250 for height
  width: '100%',
  height: exports.INITIAL_HEIGHT,
  dataSources: {},
  onEventTrigger: function onEventTrigger() {
    return {};
  },
  mode: 'view',
  hasEventHandlers: false,
  options: {},
  context: {},
  onOptionsChange: function onOptionsChange() {
    return {};
  },
  vizActionHandlerRef: function vizActionHandlerRef() {
    return new VizActionHandler_1.DefaultVizActionHandler();
  },
  onComputedProps: function onComputedProps() {
    return {};
  },
  loading: false,
  onRequestParamsChange: lodash_1.noop
};
exports.default = SplunkVisualization;

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _classCallCheck = __webpack_require__(10);

var _createClass = __webpack_require__(16);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DefaultVizActionHandler = void 0;

var DefaultVizActionHandler = /*#__PURE__*/function () {
  function DefaultVizActionHandler() {
    _classCallCheck(this, DefaultVizActionHandler);
  }

  _createClass(DefaultVizActionHandler, [{
    key: "focus",
    value: function focus() {//noop
    }
  }, {
    key: "snapshot",
    value: function snapshot() {
      return null; //noop
    }
  }]);

  return DefaultVizActionHandler;
}();

exports.DefaultVizActionHandler = DefaultVizActionHandler;

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.validSortDirs = void 0;
exports.validSortDirs = ['asc', 'desc', 'none'];

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useDeepMemo = void 0;

var react_1 = __webpack_require__(1);

var lodash_1 = __webpack_require__(2);
/**
 * This hook evaluates and stores the result of a passed function and only
 * re-evaluates the function when passed dependencies change.
 *
 * It is different from the internal React useMemo in the following aspects:
 * - it only stores the last evaluated result
 * - it uses a deep equality check to determine if dependencies have changed
 *
 * Inspired by apollo-client's useDeepMemo
 *
 * @param fn the function to be executed and
 * @param dependencies an array of dependencies
 */


var useDeepMemo = function useDeepMemo(fn, dependencies) {
  var ref = react_1.useRef();

  if (!ref.current || !lodash_1.isEqual(dependencies, ref.current.dependencies)) {
    ref.current = {
      dependencies: dependencies,
      value: fn()
    };
  }

  return ref.current.value;
};

exports.useDeepMemo = useDeepMemo;

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pickFieldFromJSONSchema = void 0;

var lodash_1 = __webpack_require__(2);

var pickFieldFromJSONSchema = function pickFieldFromJSONSchema(optionsSchema) {
  var fieldName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';
  return Object.keys(optionsSchema).reduce(function (accum, k) {
    if (lodash_1.has(optionsSchema[k], fieldName)) {
      accum[k] = optionsSchema[k][fieldName];
    } else if (lodash_1.get(optionsSchema, [k, 'type']) === 'object' && lodash_1.has(optionsSchema[k], 'properties')) {
      var nestedSchema = exports.pickFieldFromJSONSchema(optionsSchema[k].properties, fieldName);

      if (!lodash_1.isEmpty(nestedSchema)) {
        accum[k] = nestedSchema;
      }
    }

    return accum;
  }, {});
};

exports.pickFieldFromJSONSchema = pickFieldFromJSONSchema;

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MissingPropsMessage = exports.missingKeys = exports.isMissing = void 0;

var React = __webpack_require__(1);

var T = __webpack_require__(0);

var i18n_1 = __webpack_require__(3);

var Message_1 = __webpack_require__(9);

var FixedSizeContainer_1 = __webpack_require__(12);
/**
 * @method isMissing
 * @param {any} v
 * @returns {boolean} true if the input value === null or undefined
 */


var isMissing = function isMissing(v) {
  return v === null || v === undefined;
};

exports.isMissing = isMissing;
/**
 * @method misskingKeys
 * @param {string[]} keys
 * @param {object} target
 * @returns {string[]} the keys of missing required props
 */

var missingKeys = function missingKeys(keys, target) {
  return keys.filter(function (k) {
    return exports.isMissing(target[k]);
  });
};

exports.missingKeys = missingKeys;
var propTypes = {
  width: T.oneOfType([T.string, T.number]),
  height: T.oneOfType([T.string, T.number]),
  backgroundColor: T.string,
  missingProps: T.arrayOf(T.string)
};
/**
 * @method MissingPropsMessage
 * @param {MissingPropsProps} props
 * @returns {React.ReactElement}
 */

var MissingPropsMessage = function MissingPropsMessage(props) {
  var width = props.width,
      height = props.height,
      missingProps = props.missingProps;
  return React.createElement(Message_1.default, {
    "data-test": "message",
    width: width,
    height: height,
    message: i18n_1._("Missing property: ".concat(missingProps.join(', ')))
  });
};

exports.MissingPropsMessage = MissingPropsMessage;
exports.MissingPropsMessage.propTypes = propTypes;
exports.MissingPropsMessage.defaultProps = {
  width: '100%',
  height: 250
};
exports.default = FixedSizeContainer_1.default(exports.MissingPropsMessage);

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __webpack_require__(1);

var styled_components_1 = __webpack_require__(4);

var hocUtils_1 = __webpack_require__(7);

var Cover = styled_components_1.default.div.withConfig({
  displayName: "withEditModeCover__Cover",
  componentId: "sc-1gsbnxb-0"
})(["position:absolute;left:0;right:0;top:0;bottom:0;"]);
var Blocker = styled_components_1.default.div.withConfig({
  displayName: "withEditModeCover__Blocker",
  componentId: "sc-1gsbnxb-1"
})(["position:relative;width:100%;height:100%;"]);
/**
 * HOC that renders a cover layer in edit mode
 * @method withEditModeCover
 * @param {ExtendedDashViz} Visualization
 * @returns {ExtendedDashViz} Wrapper
 */

var withEditModeCover = function withEditModeCover(Visualization) {
  var Wrapper = function Wrapper(props) {
    var mode = props.mode;
    return React.createElement(Blocker, null, React.createElement(Visualization, Object.assign({}, props)), mode === 'edit' && React.createElement(Cover, {
      "data-test": "edit-mode-cover"
    }));
  };

  hocUtils_1.extendStaticWrapperProps({
    Wrapper: Wrapper,
    Visualization: Visualization
  });
  return Wrapper;
};

exports.default = withEditModeCover;

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __webpack_require__(1);

var colorUtils_1 = __webpack_require__(11);

var IconPlaceholder_1 = __webpack_require__(25);

var VizBehavior_1 = __webpack_require__(5);

var hocUtils_1 = __webpack_require__(7);

var withPlaceholder = function withPlaceholder(Visualization) {
  var useIconPlaceholder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : IconPlaceholder_1.shouldShowIconPlaceholder;
  var config = Visualization.config;
  var themes = config.themes;

  var Wrapper = function Wrapper(props) {
    var _a;

    var dataSources = props.dataSources,
        loading = props.loading,
        options = props.options,
        height = props.height,
        width = props.width;
    var showPlaceholder = useIconPlaceholder(dataSources, loading, options);
    var bgColorFromTheme = colorUtils_1.isColor(options === null || options === void 0 ? void 0 : options.backgroundColor) ? options === null || options === void 0 ? void 0 : options.backgroundColor : (_a = themes === null || themes === void 0 ? void 0 : themes.defaultBackgroundColor) === null || _a === void 0 ? void 0 : _a.call(themes, props);

    if (config.supports.includes(VizBehavior_1.VizBehavior.PLACEHOLDER) && showPlaceholder) {
      return React.createElement(IconPlaceholder_1.default, {
        "data-test": "icon-placeholder",
        icon: config.icon,
        width: width,
        height: height,
        backgroundColor: bgColorFromTheme
      });
    }

    return React.createElement(Visualization, Object.assign({}, props));
  };

  hocUtils_1.extendStaticWrapperProps({
    Wrapper: Wrapper,
    Visualization: Visualization
  });
  return Wrapper;
};

exports.default = withPlaceholder;

/***/ }),
/* 39 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/toConsumableArray");

/***/ }),
/* 40 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/colorConstants");

/***/ }),
/* 41 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualization-color-palettes");

/***/ }),
/* 42 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualization-icons");

/***/ }),
/* 43 */,
/* 44 */,
/* 45 */,
/* 46 */,
/* 47 */,
/* 48 */,
/* 49 */,
/* 50 */,
/* 51 */,
/* 52 */,
/* 53 */,
/* 54 */,
/* 55 */,
/* 56 */,
/* 57 */,
/* 58 */,
/* 59 */,
/* 60 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/slicedToArray");

/***/ }),
/* 61 */,
/* 62 */,
/* 63 */,
/* 64 */,
/* 65 */,
/* 66 */,
/* 67 */,
/* 68 */,
/* 69 */,
/* 70 */,
/* 71 */,
/* 72 */,
/* 73 */,
/* 74 */,
/* 75 */,
/* 76 */,
/* 77 */,
/* 78 */,
/* 79 */,
/* 80 */,
/* 81 */,
/* 82 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/inherits");

/***/ }),
/* 83 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/possibleConstructorReturn");

/***/ }),
/* 84 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/getPrototypeOf");

/***/ }),
/* 85 */,
/* 86 */,
/* 87 */,
/* 88 */,
/* 89 */,
/* 90 */,
/* 91 */,
/* 92 */,
/* 93 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/dataSourceUtils");

/***/ }),
/* 94 */,
/* 95 */,
/* 96 */,
/* 97 */,
/* 98 */,
/* 99 */,
/* 100 */,
/* 101 */,
/* 102 */,
/* 103 */,
/* 104 */,
/* 105 */,
/* 106 */,
/* 107 */,
/* 108 */,
/* 109 */,
/* 110 */,
/* 111 */,
/* 112 */,
/* 113 */,
/* 114 */,
/* 115 */,
/* 116 */,
/* 117 */,
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var __rest = this && this.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PureLinkGraph = exports.LinkGraph = exports.config = exports.themes = exports.computeVizProps = exports.showPlaceHolderIcon = void 0;

var lodash_1 = __webpack_require__(2);

var dataSourceUtils_1 = __webpack_require__(93);

var withDashboardViz_1 = __webpack_require__(27);

var PureLinkGraph_1 = __webpack_require__(172);

exports.PureLinkGraph = PureLinkGraph_1.default;

var config_1 = __webpack_require__(184);

exports.config = config_1.default;
/**
 * @method showPlaceHolderIcon
 * @param {Object} dataSources
 * @returns {Boolean} return true if loading, error, non existent state or without columns in dataSources
 */

var showPlaceHolderIcon = function showPlaceHolderIcon(dataSources) {
  var columns = lodash_1.get(dataSources, 'primary.data.columns', undefined);
  var noColumns = columns === undefined;
  var dataSourceState = dataSourceUtils_1.getDataSourceStateInfo(dataSources);
  return dataSourceState === dataSourceUtils_1.DataSourceState.ERROR || dataSourceState === dataSourceUtils_1.DataSourceState.LOADING || dataSourceState === dataSourceUtils_1.DataSourceState.NONEXISTENT || noColumns;
};

exports.showPlaceHolderIcon = showPlaceHolderIcon;

var computeVizProps = function computeVizProps(_a) {
  var themeFunc = _a.themeFunc,
      props = __rest(_a, ["themeFunc"]);

  var themeColorVariables = ['defaultBackgroundColor', 'defaultLinkColor', 'defaultNodeColor'];
  var themeColors = {};
  themeColorVariables.forEach(function (variable) {
    themeColors[variable] = themeFunc(variable);
  });

  if (props.dataSources) {
    var _props$dataSources$pr = props.dataSources.primary.data,
        fields = _props$dataSources$pr.fields,
        columns = _props$dataSources$pr.columns;
    return Object.assign({
      fields: fields.map(function (field) {
        return field.name ? field.name : field;
      }),
      columns: columns
    }, themeColors);
  }

  return themeColors;
};

exports.computeVizProps = computeVizProps;
var LinkGraph = withDashboardViz_1.default({
  ReactViz: PureLinkGraph_1.default,
  vizConfig: config_1.default,
  computeVizProps: exports.computeVizProps,
  useIconPlaceholder: function useIconPlaceholder(dataSources, loading) {
    return exports.showPlaceHolderIcon(dataSources);
  }
});
exports.LinkGraph = LinkGraph;
var themes = config_1.default.themes;
exports.themes = themes;
exports.default = LinkGraph;

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sortGraphColumn = exports.getAllPathsToNodeID = exports.getAllPathsFromNodeID = exports.createLinkGraphFromTable = exports.OFFSET_Y = exports.cleanString = void 0;

var lodash_1 = __webpack_require__(2);

var cleanString = function cleanString(s) {
  return String(s).replace(/[^a-zA-Z0-9\\-]/gi, '');
};

exports.cleanString = cleanString;
exports.OFFSET_Y = 35;
/**
 *
 * @param fields
 * @param columns
 * @param nodeWidth
 * @param nodeHeight
 * @param nodeSpacingX
 * @param nodeSpacingY
 * @param resultLimit
 * @param fieldOrder
 * @returns GraphType
 * Translates fields and column data into GraphType object.
 * Node placement is figured out here - see NodeType
 * We transverse over fields
 * Then for every field we go down the column
 * We create a node
 * look to the right one column, create an edge
 * look to the left one column, create an edge
 */

var createLinkGraphFromTable = function createLinkGraphFromTable(fieldsIn, columnsIn, nodeWidth, nodeHeight, nodeSpacingX, nodeSpacingY, resultLimit, fieldOrder) {
  var nodes = {};
  var graphDataModel = {
    nodes: {},
    edges: [],
    fields: {}
  };

  if (!fieldsIn || !Array.isArray(fieldsIn) || !columnsIn || !Array.isArray(columnsIn)) {
    return graphDataModel;
  }

  var fields = fieldsIn;
  var columns = columnsIn;

  if (fieldOrder.length) {
    fields = fieldOrder;
    columns = [];
    fields.forEach(function (field, fieldIndex) {
      columns[fieldIndex] = columnsIn[fieldsIn.indexOf(field)];
    });
  }

  fields.forEach(function (field, fieldIndex) {
    nodes[field] = {
      nodes: {}
    };
    graphDataModel.fields[field] = {
      count: 0
    };

    if (!columns[fieldIndex]) {
      return graphDataModel;
    }

    columns[fieldIndex].find(function (column, columnIndex) {
      var key = "".concat(fieldIndex, "-").concat(exports.cleanString(field), "-").concat(exports.cleanString(column));
      var node = nodes[field].nodes[column];

      if (!nodes[field].nodes[column]) {
        node = {
          data: {
            field: field,
            fieldIndex: fieldIndex,
            count: 1,
            value: column,
            ins: {},
            outs: {}
          }
        };
      } else {
        node.data.count += 1;
      }

      if (columns[fieldIndex + 1] && columns[fieldIndex + 1][columnIndex]) {
        var sourceNode = "".concat(fieldIndex, "-").concat(exports.cleanString(field), "-").concat(exports.cleanString(column));
        var targetNode = "".concat(fieldIndex + 1, "-").concat(exports.cleanString(fields[fieldIndex + 1]), "-").concat(exports.cleanString(columns[fieldIndex + 1][columnIndex]));
        var edge = {
          sourceNode: sourceNode,
          targetNode: targetNode
        };
        node.data.outs["".concat(exports.cleanString(column), "-").concat(exports.cleanString(columns[fieldIndex + 1][columnIndex]))] = edge;
        graphDataModel.edges.push(edge);
      }

      if (columns[fieldIndex - 1] && columns[fieldIndex - 1][columnIndex]) {
        node.data.ins["".concat(column, "-").concat(columns[fieldIndex - 1][columnIndex])] = {
          out: columns[fieldIndex - 1][columnIndex],
          in: column
        };
      }

      if (!graphDataModel.nodes[key]) {
        nodes[field].nodes[column] = node;
        graphDataModel.nodes[key] = node;
        node.x = fieldIndex * nodeWidth + fieldIndex * nodeSpacingX;
        node.y = (Object.keys(nodes[field].nodes).length - 1) * nodeHeight + (Object.keys(nodes[field].nodes).length - 1) * nodeSpacingY + exports.OFFSET_Y;
        node.w = nodeWidth;
        node.h = nodeHeight;
      }

      graphDataModel.fields[field].count = Object.keys(nodes[field].nodes).length;
      return Object.keys(nodes[field].nodes).length === resultLimit;
    });
  });
  return graphDataModel;
};

exports.createLinkGraphFromTable = createLinkGraphFromTable;
/**
 * Get all paths from a node. If sourceNodeID is passed, all the paths would
 * start with this id. Return value is an object where id of start node is the key,
 * array of path is the value. Given a graph like:
 * '7' - '8'- '9' - '1' - '2' - '4' - '5' - '6'
              '0' -  ┘     └  - '3'
 *
 * getAllPathsFromNodeID(json, '1') will return:
 *  {
 *      1: [
 *          [1, 2, 4, 5, 6],
 *          [1, 2, 3]
 *      ]
 *  }
 *
 * @param {Object} graph
 * @param {String} sourceNodeID Node ID to start from
 * @return {Object}
 */

var getAllPathsFromNodeID = function getAllPathsFromNodeID(graph, sourceNodeID) {
  var cache = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  if (!graph || !sourceNodeID) {
    return {
      nodes: {},
      edges: [],
      fields: {}
    };
  }

  var sourceNodeIDs = [sourceNodeID];
  var allPaths = {};
  lodash_1.each(sourceNodeIDs, function (id) {
    var currentPathArray = [];
    lodash_1.each(lodash_1.filter(graph.edges, {
      sourceNode: id
    }), function (_ref) {
      var targetNode = _ref.targetNode;

      if (!cache[targetNode]) {
        exports.getAllPathsFromNodeID(graph, targetNode, cache);
      }

      var paths = cache[targetNode];
      lodash_1.each(paths, function (path) {
        var pathCopy = path.slice();
        pathCopy.unshift(id);
        currentPathArray.push(pathCopy);
      });
    });

    if (!currentPathArray.length) {
      currentPathArray.push([id]);
    } // eslint-disable-next-line no-param-reassign


    cache[id] = currentPathArray;
    allPaths[id] = currentPathArray;
  });
  return allPaths;
};

exports.getAllPathsFromNodeID = getAllPathsFromNodeID;
/**
 * Get all paths from a graph. All the paths would
 * end with this id. Return value is an object where id of end node is the key,
 * array of path is the value. Given a graph like:
 * '7' - '8'- '9' - '1' - '2' - '4' - '5' - '6'
              '0' -  ┘     └  - '3'
 *
 * getAllPathsToNodeID(json, '2') will return:
 *  {
 *      2: [
 *          [7, 8, 9, 1, 2],
 *          [0, 1, 2]
 *      ]
 *  }
 *
 * @param {Graph} graph
 * @param {String} targetNodeID Node ID to end with
 * @return {Object}
 */

var getAllPathsToNodeID = function getAllPathsToNodeID(graph, targetNodeID) {
  var cache = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  if (!graph || !targetNodeID) {
    return {};
  }

  var targetNodeIDs = [targetNodeID];
  var allPaths = {};
  lodash_1.each(targetNodeIDs, function (id) {
    var currentPathArray = [];
    lodash_1.each(lodash_1.filter(graph.edges, {
      targetNode: id
    }), function (_ref2) {
      var sourceNode = _ref2.sourceNode;

      if (!cache[sourceNode]) {
        exports.getAllPathsToNodeID(graph, sourceNode, cache);
      }

      var paths = cache[sourceNode];
      lodash_1.each(paths, function (path) {
        var pathCopy = path.slice();
        pathCopy.push(id);
        currentPathArray.push(pathCopy);
      });
    });

    if (!currentPathArray.length) {
      currentPathArray.push([id]);
    }

    var currentCache = cache;
    currentCache[id] = currentPathArray;
    allPaths[id] = currentPathArray;
  });
  return allPaths;
};

exports.getAllPathsToNodeID = getAllPathsToNodeID; // TODO: write tests once all sorting options are supported

var sortGraphColumn = function sortGraphColumn(graph, field, sortKey, nodeHeight, nodeSpacingY) {
  var nodesToSort = Object.values(graph.nodes).filter(function (node) {
    return node.data.field === field;
  });
  var nodes = lodash_1.sortBy(nodesToSort, function (node) {
    return node.data.value;
  });

  if (sortKey === 'Z-A') {
    nodes.reverse();
  }

  nodes.forEach(function (node, index) {
    var currentNode = node;
    currentNode.y = index * nodeHeight + index * nodeSpacingY + exports.OFFSET_Y;
  });
};

exports.sortGraphColumn = sortGraphColumn;

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StyledEdgesPath = exports.StyledViewport = void 0;

var styled_components_1 = __webpack_require__(4);

var pick_1 = __webpack_require__(21);

var variables_1 = __webpack_require__(19);

exports.StyledViewport = styled_components_1.default.div.withConfig({
  displayName: "GraphStyles__StyledViewport",
  componentId: "sc-5hdhcf-0"
})(["position:absolute;top:0px;left:0px;width:100%;height:100%;.node{transition:background 0.05s ease-out;background:", ";border:2px solid transparent;}.node.hovering{background:", ";}.node.selected{border-radius:1px;border:2px solid ", ";}.edge{transition:opacity 0.05s ease-out;stroke:", ";opacity:0.3;}.edge.hovering{opacity:0.8;}> button{border-radius:1px;position:absolute;overflow:hidden;background:none;color:inherit;border:none;padding:0;font:inherit;cursor:pointer;outline:inherit;display:flex;justify-content:space-between;align-items:center;.center-content{width:100%;max-width:100%;flex:1 1 100%;display:flex;flex-wrap:nowrap;justify-content:flex-start;width:0;padding-left:8px;padding-right:8px;> p{color:", ";}> p:nth-child(1){font-size:10px;padding:0;margin:0;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;}> p:nth-child(2){flex:0 auto;margin:0;font-size:10px;padding-left:8px;}}.left-content{padding-left:8px;}.right-content{padding-right:8px;}.left-content,.right-content{flex:0 0 auto;> p{height:100%;font-weight:bold;font-size:10px;padding:0;margin:0;color:", ";}}}"], function (props) {
  return props.nodeColor;
}, function (props) {
  return props.nodeHighlightColor;
}, pick_1.default({
  enterprise: variables_1.default.accentColorD10,
  prisma: variables_1.default.interactiveColorPrimary
}), function (props) {
  return props.linkColor;
}, pick_1.default({
  enterprise: {
    light: variables_1.default.gray30,
    dark: variables_1.default.gray60
  },
  prisma: variables_1.default.contentColorActive
}), pick_1.default({
  enterprise: {
    light: variables_1.default.gray30,
    dark: variables_1.default.gray60
  },
  prisma: {
    light: variables_1.default.contentColorActive,
    dark: variables_1.default.contentColorMuted
  }
}));
exports.StyledEdgesPath = styled_components_1.default.path.withConfig({
  displayName: "GraphStyles__StyledEdgesPath",
  componentId: "sc-5hdhcf-1"
})(["fill:transparent;stroke:#9b9b9d;stroke-width:", ";"], function (props) {
  return "".concat(props.linkWidth, "px");
});

/***/ }),
/* 121 */,
/* 122 */,
/* 123 */,
/* 124 */,
/* 125 */,
/* 126 */,
/* 127 */,
/* 128 */,
/* 129 */,
/* 130 */,
/* 131 */,
/* 132 */,
/* 133 */,
/* 134 */,
/* 135 */,
/* 136 */,
/* 137 */,
/* 138 */,
/* 139 */,
/* 140 */,
/* 141 */,
/* 142 */,
/* 143 */,
/* 144 */,
/* 145 */,
/* 146 */,
/* 147 */,
/* 148 */,
/* 149 */,
/* 150 */,
/* 151 */,
/* 152 */,
/* 153 */,
/* 154 */,
/* 155 */,
/* 156 */,
/* 157 */,
/* 158 */,
/* 159 */,
/* 160 */,
/* 161 */,
/* 162 */,
/* 163 */,
/* 164 */,
/* 165 */,
/* 166 */,
/* 167 */,
/* 168 */,
/* 169 */,
/* 170 */,
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) {
    if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
  }
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

__exportStar(__webpack_require__(118), exports);

var LinkGraph_1 = __webpack_require__(118);

Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function get() {
    return LinkGraph_1.default;
  }
});

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _slicedToArray = __webpack_require__(60);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PureLinkGraph = void 0;

var React = __webpack_require__(1);

var T = __webpack_require__(0);

var styled_components_1 = __webpack_require__(4);

var lodash_1 = __webpack_require__(2);

var FixedSizeContainer_1 = __webpack_require__(12);

var PureLinkGraphUtils_1 = __webpack_require__(119);

var Graph_1 = __webpack_require__(173);

var Field_1 = __webpack_require__(178);

var FieldStyles_1 = __webpack_require__(183);

var LinkGraphContainer = styled_components_1.default.div.withConfig({
  displayName: "PureLinkGraph__LinkGraphContainer",
  componentId: "sc-2wfxi-0"
})(["position:relative;top:12px;left:16px;width:", "px;height:", "px;"], function (props) {
  return (props === null || props === void 0 ? void 0 : props.width) - 32;
}, function (props) {
  return (props === null || props === void 0 ? void 0 : props.height) - 24;
});
var LinkGraphWrapper = styled_components_1.default.div.withConfig({
  displayName: "PureLinkGraph__LinkGraphWrapper",
  componentId: "sc-2wfxi-1"
})(["background-color:", ";width:", "px;height:", "px;overflow:auto;"], function (_ref) {
  var backgroundColor = _ref.backgroundColor;
  return backgroundColor;
}, function (props) {
  return lodash_1.get(props, 'width');
}, function (props) {
  return lodash_1.get(props, 'height');
});
LinkGraphContainer.displayName = 'LinkGraphContainer';

var PureLinkGraph = function PureLinkGraph(props) {
  var mode = props.mode,
      backgroundColor = props.backgroundColor,
      width = props.width,
      height = props.height,
      fields = props.fields,
      columns = props.columns,
      nodeWidth = props.nodeWidth,
      nodeHeight = props.nodeHeight,
      nodeSpacingX = props.nodeSpacingX,
      nodeSpacingY = props.nodeSpacingY,
      onNodeClick = props.onNodeClick,
      linkColor = props.linkColor,
      nodeColor = props.nodeColor,
      nodeHighlightColor = props.nodeHighlightColor,
      resultLimit = props.resultLimit,
      linkWidth = props.linkWidth,
      showValueCounts = props.showValueCounts,
      showNodeCounts = props.showNodeCounts,
      fieldOrder = props.fieldOrder;
  /*
  value / setValue is here so we can modify graphDataModelState directly and
  force a rerender, as opposed to making a copy of graphDataModelState and
  mutating the copy and using that in the new state.
   I will make sure to test this in a UDF context to make sure there is no data loss
  or incorrect rendering ( and will then remove this last comment or address later on )
  */

  var _React$useState = React.useState(0),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      value = _React$useState2[0],
      setValue = _React$useState2[1];

  var _React$useState3 = React.useState(PureLinkGraphUtils_1.createLinkGraphFromTable(fields, columns, nodeWidth, nodeHeight, nodeSpacingX, nodeSpacingY, resultLimit, fieldOrder)),
      _React$useState4 = _slicedToArray(_React$useState3, 2),
      graphDataModelState = _React$useState4[0],
      setGraphDataModelState = _React$useState4[1];

  React.useEffect(function () {
    setGraphDataModelState(PureLinkGraphUtils_1.createLinkGraphFromTable(fields, columns, nodeWidth, nodeHeight, nodeSpacingX, nodeSpacingY, resultLimit, fieldOrder));
  }, [fields, columns, nodeWidth, nodeHeight, nodeSpacingX, nodeSpacingY, resultLimit, fieldOrder]);

  var handleFieldSort = function handleFieldSort(field, sortKey) {
    PureLinkGraphUtils_1.sortGraphColumn(graphDataModelState, field, sortKey, nodeHeight, nodeSpacingY);
    setGraphDataModelState(graphDataModelState);
    setValue(value + 1);
  };

  return React.createElement(LinkGraphWrapper, {
    backgroundColor: backgroundColor,
    height: height,
    width: width
  }, React.createElement(LinkGraphContainer, {
    "data-test-render-count": value,
    height: height,
    width: width
  }, React.createElement(Graph_1.default, {
    linkColor: linkColor,
    nodeColor: nodeColor,
    nodeHighlightColor: nodeHighlightColor,
    graphDataModel: graphDataModelState,
    onNodeClick: onNodeClick,
    linkWidth: linkWidth,
    showValueCounts: showValueCounts
  }), React.createElement(FieldStyles_1.StyledFields, {
    nodeWidth: nodeWidth,
    nodeSpacingX: nodeSpacingX
  }, Object.keys(graphDataModelState.fields).map(function (field, index) {
    return React.createElement(Field_1.default, {
      showNodeCounts: showNodeCounts,
      "data-test": "field-".concat(index),
      key: field,
      onSort: function onSort(sortKey) {
        return handleFieldSort(field, sortKey);
      },
      field: field,
      width: nodeWidth,
      count: graphDataModelState.fields[field].count
    });
  }))));
};

exports.PureLinkGraph = PureLinkGraph;
exports.PureLinkGraph.propTypes = {
  mode: T.string,
  backgroundColor: T.string,
  width: T.number,
  height: T.number,
  fields: T.array,
  columns: T.array,
  onNodeClick: T.func,
  nodeWidth: T.number,
  nodeHeight: T.number,
  nodeSpacingX: T.number,
  nodeSpacingY: T.number,
  linkColor: T.string,
  nodeColor: T.string,
  nodeHighlightColor: T.string,
  resultLimit: T.number,
  linkWidth: T.number,
  showValueCounts: T.bool,
  showNodeCounts: T.bool,
  fieldOrder: T.array
};
exports.PureLinkGraph.defaultProps = {
  mode: 'view',
  fields: null,
  columns: [],
  backgroundColor: '#0B0C0E',
  width: 1200,
  height: 400,
  nodeWidth: 180,
  nodeHeight: 21,
  nodeSpacingX: 32,
  nodeSpacingY: 6,
  linkWidth: 1,
  linkColor: '#B5B5B5',
  nodeColor: '#1E2024',
  nodeHighlightColor: '#7B56DB',
  resultLimit: 50,
  showValueCounts: true,
  showNodeCounts: true,
  onNodeClick: function onNodeClick() {},
  fieldOrder: []
};
exports.PureLinkGraph.displayName = 'VizLinkGraph';
exports.default = FixedSizeContainer_1.default(exports.PureLinkGraph);

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _toConsumableArray = __webpack_require__(39);

var _classCallCheck = __webpack_require__(10);

var _createClass = __webpack_require__(16);

var _inherits = __webpack_require__(82);

var _possibleConstructorReturn = __webpack_require__(83);

var _getPrototypeOf = __webpack_require__(84);

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __webpack_require__(1);

var lodash_1 = __webpack_require__(2);

var Edges_1 = __webpack_require__(174);

var Nodes_1 = __webpack_require__(175);

var GraphStyles_1 = __webpack_require__(120);

var PureLinkGraphUtils_1 = __webpack_require__(119);

var Graph = /*#__PURE__*/function (_React$Component) {
  _inherits(Graph, _React$Component);

  var _super = _createSuper(Graph);

  function Graph(props) {
    var _this;

    _classCallCheck(this, Graph);

    _this = _super.call(this, props);
    _this.requestAnimationFrameId = null;
    _this.viewport = null;
    _this.state = {
      nodes: {},
      edges: [],
      highlightedNodes: [],
      hasMounted: false
    };
    return _this;
  }

  _createClass(Graph, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.setState({
        hasMounted: true
      });
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      var _this2 = this;

      var highlightedNodes = this.state.highlightedNodes;
      cancelAnimationFrame(this.requestAnimationFrameId);
      this.highlightAllEdges();
      this.unhighlightAllNodes();
      highlightedNodes.forEach(function (value) {
        _this2.handleMouseEnterNode(PureLinkGraphUtils_1.cleanString(value));
      });
      this.tween();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      cancelAnimationFrame(this.requestAnimationFrameId);
    }
  }, {
    key: "handleMouseEnterNode",
    value: function handleMouseEnterNode(nodeID) {
      var _this3 = this;

      this.unhighlightAllEdges();
      var allPathsFromNodeID = PureLinkGraphUtils_1.getAllPathsFromNodeID(this.props.graphDataModel, nodeID);
      var allPathsToNodeID = PureLinkGraphUtils_1.getAllPathsToNodeID(this.props.graphDataModel, nodeID);
      var lastUUID;
      Object.keys(allPathsFromNodeID).forEach(function (pathKey) {
        allPathsFromNodeID[pathKey].forEach(function (path) {
          path.forEach(function (uuid) {
            var element = _this3.viewport.querySelector("[data-test=\"node-".concat(uuid, "\"]"));

            if (element) {
              element.classList.add('hovering');
            }

            element = _this3.viewport.querySelector("[data-test=\"edge-".concat(lastUUID, "-").concat(uuid, "\"]"));

            if (element) {
              element.classList.add('hovering');
            }

            lastUUID = uuid;
          });
        });
      });
      lastUUID = null;
      Object.keys(allPathsToNodeID).forEach(function (pathKey) {
        allPathsToNodeID[pathKey].forEach(function (path) {
          path.forEach(function (uuid) {
            var element = _this3.viewport.querySelector("[data-test=\"node-".concat(uuid, "\"]"));

            if (element) {
              element.classList.add('hovering');
            }

            element = _this3.viewport.querySelector("[data-test=\"edge-".concat(lastUUID, "-").concat(uuid, "\"]"));

            if (element) {
              element.classList.add('hovering');
            }

            lastUUID = uuid;
          });
        });
      });
    }
  }, {
    key: "handleMouseLeave",
    value: function handleMouseLeave() {
      var _this4 = this;

      var highlightedNodes = this.state.highlightedNodes;

      _toConsumableArray(this.viewport.getElementsByClassName('hovering')[Symbol.iterator]()).forEach(function (ele) {
        ele.classList.remove('hovering');
      });

      highlightedNodes.forEach(function (value) {
        _this4.handleMouseEnterNode(PureLinkGraphUtils_1.cleanString(value));
      });
      this.highlightAllEdges();
    }
  }, {
    key: "handleMouseClick",
    value: function handleMouseClick(fieldIndex, field, value) {
      var _this5 = this;

      var onNodeClick = this.props.onNodeClick;
      var highlightedNodes = this.state.highlightedNodes;
      var key = "".concat(fieldIndex, "-").concat(field, "-").concat(value);

      var newHighlightedNodes = _toConsumableArray(highlightedNodes);

      var index = newHighlightedNodes.indexOf(key);
      var element = this.viewport.querySelector("[data-test=\"node-".concat(fieldIndex, "-").concat(PureLinkGraphUtils_1.cleanString(field), "-").concat(PureLinkGraphUtils_1.cleanString(value), "\"]"));
      var state = false;

      if (index !== -1) {
        newHighlightedNodes.splice(index, 1);
        element.classList.remove('selected');
        element.setAttribute('aria-pressed', 'false');
      } else {
        newHighlightedNodes.push(key);
        state = true;
        element.classList.add('selected');
        element.setAttribute('aria-pressed', 'true');
      }

      this.setState({
        highlightedNodes: newHighlightedNodes
      }, function () {
        return _this5.handleMouseLeave();
      });
      var selectedOption = state ? 'selected' : 'unselected';
      var payload = {
        field: field,
        value: value,
        state: selectedOption
      };
      onNodeClick({
        payload: payload
      });
    }
  }, {
    key: "highlightAllEdges",
    value: function highlightAllEdges() {
      var highlightedNodes = this.state.highlightedNodes;

      if (!highlightedNodes.length) {
        this.viewport.querySelectorAll("[data-test^=\"edge-\"]").forEach(function (element) {
          return element.classList.add('hovering');
        });
      }
    }
  }, {
    key: "unhighlightAllEdges",
    value: function unhighlightAllEdges() {
      var highlightedNodes = this.state.highlightedNodes;

      if (!highlightedNodes.length) {
        this.viewport.querySelectorAll("[data-test^=\"edge-\"]").forEach(function (element) {
          return element.classList.remove('hovering');
        });
      }
    }
  }, {
    key: "unhighlightAllNodes",
    value: function unhighlightAllNodes() {
      var highlightedNodes = this.state.highlightedNodes;

      if (!highlightedNodes.length) {
        this.viewport.querySelectorAll("[data-test^=\"node-\"]").forEach(function (element) {
          return element.classList.remove('hovering');
        });
      }
    }
  }, {
    key: "tween",
    value: function tween() {
      var _this6 = this;

      var nodes = this.state.nodes;
      var isAnimating = false;
      Object.keys(nodes).forEach(function (nodeId) {
        var node = nodes[nodeId];

        var nodeElement = _this6.viewport.querySelector("[data-test=\"node-".concat(nodeId, "\"]"));

        if (nodeElement) {
          if (nodeElement.style.left === '') {
            _this6.moveNodeBy(nodeId, Math.floor(node.x), Math.floor(node.y), Math.floor(node.w), Math.floor(node.h));
          } else {
            var x = parseInt(nodeElement.style.left, 10);
            var y = parseInt(nodeElement.style.top, 10);
            var w = parseInt(nodeElement.style.width, 10);
            var h = parseInt(nodeElement.style.height, 10);
            node.time += 0.01;
            var newX = Math.floor(x * (1 - node.time) + node.x * node.time);
            var newY = Math.floor(y * (1 - node.time) + node.y * node.time);
            var newWidth = Math.floor(w * (1 - node.time) + node.w * node.time);
            var newHeight = Math.floor(h * (1 - node.time) + node.h * node.time);

            if (node.time < 1) {
              _this6.moveNodeBy(nodeId, Math.floor(newX), Math.floor(newY), Math.floor(newWidth), Math.floor(newHeight));

              isAnimating = true;
            } else {
              _this6.moveNodeBy(nodeId, Math.floor(node.x), Math.floor(node.y), Math.floor(node.w), Math.floor(node.h));

              node.time = 1;
            }
          }
        }
      });
      cancelAnimationFrame(this.requestAnimationFrameId);

      if (isAnimating) {
        this.requestAnimationFrameId = requestAnimationFrame(this.tween.bind(this));
      }
    }
  }, {
    key: "moveNodeBy",
    value: function moveNodeBy(nodeId, xIn, yIn, wIn, hIn) {
      var _this7 = this;

      var nodes = this.state.nodes;
      nodes[nodeId].currentX = xIn;
      nodes[nodeId].currentY = yIn;
      nodes[nodeId].currentW = wIn;
      nodes[nodeId].currentH = hIn;
      var nodeElement = this.viewport.querySelector("[data-test=\"node-".concat(nodeId, "\"]"));

      if (nodeElement) {
        nodeElement.style.left = "".concat(xIn, "px");
        nodeElement.style.top = "".concat(yIn, "px");
        nodeElement.style.width = "".concat(wIn, "px");
        nodeElement.style.height = "".concat(hIn, "px");
      }

      Object.values(nodes[nodeId].data.outs).forEach(function (edge) {
        if (edge.sourceNode === nodeId || edge.targetNode === nodeId) {
          var start = nodes[edge.sourceNode];
          var end = nodes[edge.targetNode];

          var edgeElement = _this7.viewport.querySelector("[data-test=\"edge-".concat(edge.sourceNode, "-").concat(edge.targetNode, "\"]"));

          if (edgeElement && start && end) {
            var middle = {
              currentX: 0,
              currentY: 0,
              currentWidth: 0,
              currentHeight: 0
            };
            middle.currentX = start.currentX + start.currentW + (end.currentX - (start.currentX + start.currentW)) / 2;
            middle.currentY = start.currentY + start.currentH / 2 + (end.currentY - start.currentY - start.currentH / 2) / 2;
            var svgData = "\n                            M".concat(start.currentX + start.currentW, ",").concat(start.currentY + start.currentH / 2, "\n                            L").concat(start.currentX + start.currentW, ",").concat(start.currentY + start.currentH / 2, "\n                            C").concat(middle.currentX, ",").concat(start.currentY + start.currentH / 2, "\n                            ").concat(middle.currentX, ",").concat(end.currentY + end.currentH / 2, "\n                            ").concat(end.currentX, ",").concat(end.currentY + end.currentH / 2, "\n                            L").concat(end.currentX, ",").concat(end.currentY + end.currentH / 2);
            edgeElement.setAttribute('d', svgData);
          }
        }
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this8 = this;

      var _this$state = this.state,
          nodes = _this$state.nodes,
          edges = _this$state.edges;
      var _this$props = this.props,
          nodeColor = _this$props.nodeColor,
          nodeHighlightColor = _this$props.nodeHighlightColor,
          linkColor = _this$props.linkColor,
          linkWidth = _this$props.linkWidth,
          showValueCounts = _this$props.showValueCounts;
      var newEdges = edges.filter(function (edge) {
        return nodes[edge.sourceNode] && nodes[edge.targetNode];
      });
      return React.createElement(GraphStyles_1.StyledViewport, {
        nodeColor: nodeColor,
        nodeHighlightColor: nodeHighlightColor,
        linkColor: linkColor,
        ref: function ref(c) {
          _this8.viewport = c;
        }
      }, React.createElement(Nodes_1.default, {
        nodes: nodes,
        onNodeClick: function onNodeClick(fieldIndex, field, value) {
          return _this8.handleMouseClick(fieldIndex, field, value);
        },
        handleMouseEnterNode: function handleMouseEnterNode(nodeID) {
          return _this8.handleMouseEnterNode(nodeID);
        },
        handleMouseLeave: function handleMouseLeave() {
          return _this8.handleMouseLeave();
        },
        showValueCounts: showValueCounts
      }), React.createElement(Edges_1.default, {
        edges: newEdges,
        linkWidth: linkWidth
      }));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(props, state) {
      if (!state.hasMounted) {
        return state;
      }

      var nodes = lodash_1.cloneDeep(props.graphDataModel.nodes);
      Object.keys(nodes).forEach(function (key) {
        var nodeFromProps = nodes[key];
        var nodeFromState = state.nodes[key];

        if (!nodeFromState) {
          nodeFromProps.time = 1;
        } else if (nodeFromProps.x !== nodeFromState.x || nodeFromProps.y !== nodeFromState.y || nodeFromProps.w !== nodeFromState.w || nodeFromProps.h !== nodeFromState.h) {
          nodeFromProps.time = 0;
        }

        nodeFromProps.currentX = nodeFromProps.x;
        nodeFromProps.currentY = nodeFromProps.y;
        nodeFromProps.currentW = nodeFromProps.w;
        nodeFromProps.currentH = nodeFromProps.h;
      });

      var highlightedNodes = _toConsumableArray(state.highlightedNodes);

      state.highlightedNodes.forEach(function (nodeID) {
        if (!props.graphDataModel.nodes[PureLinkGraphUtils_1.cleanString(nodeID)]) {
          highlightedNodes = [];
        }
      });
      return {
        nodes: nodes,
        edges: props.graphDataModel.edges,
        highlightedNodes: highlightedNodes
      };
    }
  }]);

  return Graph;
}(React.Component);

exports.default = Graph;

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __webpack_require__(1);

var GraphStyles_1 = __webpack_require__(120);

var Edges = function Edges(props) {
  var edges = props.edges,
      linkWidth = props.linkWidth;
  var key = '';
  return React.createElement("svg", {
    style: {
      position: 'absolute',
      overflow: 'visible',
      pointerEvents: 'none'
    },
    height: "100%",
    width: "100%",
    "data-test": "edges"
  }, edges.map(function (edge) {
    key = "edge-".concat(edge.sourceNode, "-").concat(edge.targetNode);
    return [React.createElement(GraphStyles_1.StyledEdgesPath, {
      className: "edge",
      key: key,
      "data-test": key,
      linkWidth: linkWidth
    })];
  }));
};

exports.default = Edges;

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __webpack_require__(1);

var Node_1 = __webpack_require__(176);

var Nodes = function Nodes(props) {
  return Object.keys(props.nodes).map(function (key) {
    return React.createElement("button", {
      className: "node",
      type: "button",
      "data-test": "node-".concat(key),
      key: key,
      onClick: function onClick() {
        return props.onNodeClick(props.nodes[key].data.fieldIndex, props.nodes[key].data.field, props.nodes[key].data.value);
      },
      onMouseEnter: function onMouseEnter() {
        return props.handleMouseEnterNode(key);
      },
      onMouseLeave: function onMouseLeave() {
        return props.handleMouseLeave();
      }
    }, React.createElement(Node_1.default, {
      data: props.nodes[key].data,
      showValueCounts: props.showValueCounts
    }));
  });
};

exports.default = Nodes;

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __webpack_require__(1);

var Paragraph_1 = __webpack_require__(177);

var Node = function Node(props) {
  var data = props.data,
      showValueCounts = props.showValueCounts;
  return React.createElement(React.Fragment, null, React.createElement("div", {
    className: "center-content"
  }, React.createElement(Paragraph_1.default, null, data.value)), React.createElement("div", {
    className: "right-content"
  }, React.createElement(Paragraph_1.default, null, showValueCounts ? data.count : null)));
};

exports.default = Node;

/***/ }),
/* 177 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/Paragraph");

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __webpack_require__(1);

var Dropdown_1 = __webpack_require__(179);

var Button_1 = __webpack_require__(180);

var Menu_1 = __webpack_require__(181);

var Chip_1 = __webpack_require__(182);

var Field = function Field(_ref) {
  var field = _ref.field,
      count = _ref.count,
      onSort = _ref.onSort,
      showNodeCounts = _ref.showNodeCounts,
      width = _ref.width;
  var toggle = React.createElement(Button_1.default, {
    label: field,
    isMenu: true,
    appearance: "toggle"
  });
  return React.createElement("div", null, React.createElement(Dropdown_1.default, {
    toggle: toggle,
    retainFocus: true,
    "data-test": "field-".concat(field, "-dropdown")
  }, React.createElement(Menu_1.default, {
    style: {
      width: width
    }
  }, React.createElement(Menu_1.default.Item, {
    "data-test": "A-Z",
    onClick: function onClick() {
      return onSort('A-Z');
    }
  }, "A-Z"), React.createElement(Menu_1.default.Item, {
    "data-test": "Z-A",
    onClick: function onClick() {
      return onSort('Z-A');
    }
  }, "Z-A"))), showNodeCounts ? React.createElement(Chip_1.default, {
    style: {
      float: 'right',
      fontSize: '10px',
      height: '20px'
    }
  }, count) : null);
};

Field.displayName = 'Field';
exports.default = Field;

/***/ }),
/* 179 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/Dropdown");

/***/ }),
/* 180 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/Button");

/***/ }),
/* 181 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/Menu");

/***/ }),
/* 182 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/Chip");

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StyledFields = void 0;

var styled_components_1 = __webpack_require__(4);

var pick_1 = __webpack_require__(21);

exports.StyledFields = styled_components_1.default.div.withConfig({
  displayName: "FieldStyles__StyledFields",
  componentId: "gvs6f8-0"
})(["position:absolute;whitespace:nowrap;display:flex;justify-content:space-between;align-items:center;max-height:30px;> div:last-child{margin-right:16px;}> div{width:", "px;margin-right:", "px;display:flex;justify-content:space-between;align-items:center;> button{background:transparent !important;padding:0;border:none;border-radius:!important;font-size:12px !important;box-shadow:none !important;}> button > span{justify-content:flex-start;> span{padding:", ";flex:0 1 auto;font-weight:bold;}svg{width:", ";}}> div{margin:0;}}"], function (props) {
  return props.nodeWidth;
}, function (props) {
  return props.nodeSpacingX;
}, pick_1.default({
  prisma: '0 !important'
}), pick_1.default({
  enterprise: '100%',
  prisma: '70%'
}));

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _toConsumableArray = __webpack_require__(39);

Object.defineProperty(exports, "__esModule", {
  value: true
});

var lodash_1 = __webpack_require__(2);

var visualization_icons_1 = __webpack_require__(42);

var schemaUtils_1 = __webpack_require__(14);

var i18n_1 = __webpack_require__(3);

var pick_1 = __webpack_require__(21);

var variables_1 = __webpack_require__(19);

var colorConstants_1 = __webpack_require__(40);

var visualization_color_palettes_1 = __webpack_require__(41);

var configUtils_1 = __webpack_require__(8);

var VizCategory_1 = __webpack_require__(26);

var VizBehavior_1 = __webpack_require__(5);

var dataContract = {
  requiredDataSources: [{
    name: 'primary',
    description: 'DataSource that powers the visualization'
  }],
  optionalDataSources: [],
  initialRequestParams: {
    primary: {
      offset: 0,
      count: 10000
    }
  }
};
var size = {
  initialWidth: 900,
  initialHeight: 400
};
var defaultContext = {};
var optionsSchema = {
  backgroundColor: {
    default: '> themes.defaultBackgroundColor',
    description: 'Specify the color for the background. You may use a dataSource to apply the color. The default for enterprise light is "#ffffff". The default for enterprise dark is "#000000". The default for prisma dark is "#0b0c0e".',
    pattern: schemaUtils_1.COLOR_OR_TOKEN_PATTERN_WITH_RGBA,
    type: 'string'
  },
  fieldOrder: {
    default: '> primary | getField()',
    description: 'Specify the order of fields to be displayed in the link graph from left to right when loaded. Unspecified fields will be excluded from the graph.',
    type: 'array',
    items: {
      type: 'string'
    }
  },
  linkColor: {
    default: '#6d6f76',
    description: 'Specify the color used for highlighted links. Unhighlighted links will be displayed at 20% opacity.',
    pattern: schemaUtils_1.COLOR_OR_TOKEN_PATTERN,
    type: 'string'
  },
  linkWidth: {
    default: 1,
    description: 'Specify, in pixels, the stroke width of each link.',
    type: 'number'
  },
  nodeColor: {
    default: '> themes.defaultNodeColor',
    description: 'Specify the color used for unhighlighted nodes.',
    pattern: schemaUtils_1.COLOR_OR_TOKEN_PATTERN_WITH_RGBA,
    type: 'string'
  },
  nodeHeight: {
    default: 21,
    description: 'Specify, in pixels, the height of each node.',
    type: 'number'
  },
  nodeHighlightColor: {
    default: visualization_color_palettes_1.VIZ_CATEGORICAL[0],
    description: 'Specify the color used for highlighted nodes.',
    pattern: schemaUtils_1.COLOR_OR_TOKEN_PATTERN_WITH_RGBA,
    type: 'string'
  },
  nodeSpacingX: {
    default: 32,
    description: 'Specify, in pixels, the horizontal spacing between each node.',
    type: 'number'
  },
  nodeSpacingY: {
    default: 18,
    description: 'Specify, in pixels, the vertical spacing between each node.',
    type: 'number'
  },
  nodeWidth: {
    default: 180,
    description: 'Specify, in pixels, the width of each node.',
    type: 'number'
  },
  resultLimit: {
    default: 50,
    description: 'Specify the number of nodes rendered in each column.',
    type: 'number'
  },
  showNodeCounts: {
    default: true,
    description: 'Specify whether a count is shown for the number of nodes displayed in each column. The number of total nodes is also shown if there are hidden nodes.',
    type: 'boolean'
  },
  showValueCounts: {
    default: true,
    description: 'Specify whether a count is shown for the frequency of occurrence for each distinct node value.',
    type: 'boolean'
  }
};
var themes = {
  defaultBackgroundColor: function defaultBackgroundColor(props) {
    return pick_1.default({
      enterprise: {
        dark: variables_1.default.black(props),
        light: variables_1.default.backgroundColor(props)
      },
      prisma: variables_1.default.backgroundColorSidebar(props)
    })(props);
  },
  defaultNodeColor: function defaultNodeColor(props) {
    return pick_1.default({
      enterprise: {
        dark: variables_1.default.backgroundColorDialog(props),
        light: variables_1.default.gray96(props)
      },
      prisma: variables_1.default.backgroundColorDialog(props)
    })(props);
  }
};
var EDITOR_LABEL_WIDTH = 140;
var backgroundColorPaletteSet = new Set([].concat(_toConsumableArray(colorConstants_1.COLOR_EDITOR_PALETTE), _toConsumableArray(lodash_1.map(themes, function (t) {
  return lodash_1.get(t, 'defaultBackgroundColor');
}))));
var editorConfig = [// {
//     label: _('Data'),
//     layout: [
//         [
//             {
//                 label: _('Field Ordering'),
//                 option: 'fieldOrder',
//                 editor: 'editor.arrayOfStrings',
//                 editorProps: {
//                     themes,
//                     labelPosition: 'top',
//                 },
//             },
//         ],
//     ],
// },
{
  label: i18n_1._('Coloring'),
  layout: [[{
    label: i18n_1._('Background'),
    option: 'backgroundColor',
    editor: 'editor.color',
    editorProps: {
      themes: themes,
      labelPosition: 'left',
      labelWidth: EDITOR_LABEL_WIDTH,
      palette: _toConsumableArray(backgroundColorPaletteSet)
    }
  }], [{
    label: i18n_1._('Node Color'),
    option: 'nodeColor',
    editor: 'editor.color',
    editorProps: {
      themes: themes,
      labelPosition: 'left',
      labelWidth: EDITOR_LABEL_WIDTH,
      palette: _toConsumableArray(backgroundColorPaletteSet)
    }
  }], [{
    label: i18n_1._('Selected Node Color'),
    option: 'nodeHighlightColor',
    editor: 'editor.color',
    editorProps: {
      themes: themes,
      labelPosition: 'left',
      labelWidth: EDITOR_LABEL_WIDTH,
      palette: _toConsumableArray(backgroundColorPaletteSet)
    }
  }], [{
    label: i18n_1._('Link Color'),
    option: 'linkColor',
    editor: 'editor.color',
    editorProps: {
      themes: themes,
      labelPosition: 'left',
      labelWidth: EDITOR_LABEL_WIDTH,
      palette: _toConsumableArray(backgroundColorPaletteSet)
    }
  }]]
}, {
  label: i18n_1._('Node Layout'),
  layout: [[{
    label: i18n_1._('Node Width'),
    option: 'nodeWidth',
    editor: 'editor.number',
    editorProps: {
      themes: themes,
      labelPosition: 'top',
      min: 0,
      labelWidth: EDITOR_LABEL_WIDTH
    }
  }, {
    label: i18n_1._('Node Height'),
    option: 'nodeHeight',
    editor: 'editor.number',
    editorProps: {
      themes: themes,
      labelPosition: 'top',
      min: 0,
      labelWidth: EDITOR_LABEL_WIDTH
    }
  }], [{
    label: i18n_1._('Vertical Spacing'),
    option: 'nodeSpacingY',
    editor: 'editor.number',
    editorProps: {
      themes: themes,
      labelPosition: 'top',
      min: 0,
      labelWidth: EDITOR_LABEL_WIDTH
    }
  }, {
    label: i18n_1._('Horizontal Spacing'),
    option: 'nodeSpacingX',
    editor: 'editor.number',
    editorProps: {
      themes: themes,
      labelPosition: 'top',
      min: 0,
      labelWidth: EDITOR_LABEL_WIDTH
    }
  }], [{
    label: i18n_1._('Link Width'),
    option: 'linkWidth',
    editor: 'editor.number',
    editorProps: {
      themes: themes,
      labelPosition: 'left',
      min: 0,
      labelWidth: EDITOR_LABEL_WIDTH
    }
  }], [{
    label: i18n_1._('Result Limit'),
    option: 'resultLimit',
    editor: 'editor.number',
    editorProps: {
      themes: themes,
      labelPosition: 'left',
      min: 0,
      labelWidth: EDITOR_LABEL_WIDTH
    }
  }]]
}, {
  label: i18n_1._('Display Options'),
  layout: [[{
    label: i18n_1._('Show Node Counts'),
    option: 'showNodeCounts',
    editor: 'editor.toggle',
    editorProps: {
      themes: themes,
      labelPosition: 'left',
      labelWidth: 130,
      palette: _toConsumableArray(backgroundColorPaletteSet)
    }
  }], [{
    label: i18n_1._('Show Value Counts'),
    option: 'showValueCounts',
    editor: 'editor.toggle',
    editorProps: {
      themes: themes,
      labelPosition: 'left',
      labelWidth: 130,
      palette: _toConsumableArray(backgroundColorPaletteSet)
    }
  }]]
}];
var config = {
  /**
   * unique viz key
   */
  key: 'splunk.linkgraph',

  /**
   * viz name
   */
  name: 'Link Graph',
  category: VizCategory_1.VizCategory.FLOW,
  status: 'preview',

  /**
   * viz icon
   */
  icon: visualization_icons_1.LinkGraph,
  dataContract: dataContract,
  size: size,
  defaultContext: defaultContext,
  optionsSchema: optionsSchema,
  editorConfig: editorConfig,
  events: {
    'node.click': {
      description: 'triggered when user clicks a node'
    }
  },
  supports: [VizBehavior_1.VizBehavior.DYNAMIC_OPTIONS, VizBehavior_1.VizBehavior.EVENTS, VizBehavior_1.VizBehavior.PLACEHOLDER],
  themes: themes
};
exports.default = configUtils_1.enhanceConfig(config);

/***/ })
/******/ ]);
//# sourceMappingURL=LinkGraph.js.map