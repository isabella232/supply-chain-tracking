{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/layout.ts","webpack:///external \"lodash/cloneDeep\""],"names":[],"mappings":"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","file":"layout.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","import cloneDeep from 'lodash/cloneDeep';\nimport type {\n    ConnectedLineItem,\n    ConnectedPosition,\n    AbsoluteBlockItem,\n    AbsoluteLayoutStructure,\n    Coordinate,\n    AbsolutePosition,\n    ConnectedLinePosition,\n    AbsoluteLayoutItem,\n    VizContract,\n    VizConfig,\n} from '@splunk/dashboard-types';\n\nexport const DEFAULT_SCALE_FACTOR = 3;\nexport const VIZ_DEFAULT_HEIGHT_PX = 400;\nexport const DEFAULT_CANVAS_WIDTH = 1200;\nexport const DEFAULT_CANVAS_HEIGHT = 900;\n\n/**\n * Given two layout items, check if they collide.\n * @method collides\n * @param {Object} layoutItemA\n * @param {Object} layoutItemB\n * @returns {Boolean} true or false\n */\nexport const collides = (\n    layoutItemA: AbsoluteBlockItem,\n    layoutItemB: AbsoluteBlockItem\n): boolean => {\n    // same element\n    if (layoutItemA.item === layoutItemB.item) {\n        return false;\n    }\n    // layoutItemA is left of layoutItemB\n    if (\n        layoutItemA.position.x + layoutItemA.position.w <=\n        layoutItemB.position.x\n    ) {\n        return false;\n    }\n    // layoutItemA is right of layoutItemB\n    if (\n        layoutItemA.position.x >=\n        layoutItemB.position.x + layoutItemB.position.w\n    ) {\n        return false;\n    }\n    // layoutItemA is above layoutItemB\n    if (\n        layoutItemA.position.y + layoutItemA.position.h <=\n        layoutItemB.position.y\n    ) {\n        return false;\n    }\n    // layoutItemA is below layoutItemB\n    if (\n        layoutItemA.position.y >=\n        layoutItemB.position.y + layoutItemB.position.h\n    ) {\n        return false;\n    }\n    // boxes overlap\n    return true;\n};\n\n/**\n * compute end position based on port\n * @method computeLocationPort\n * @param {Object} linePosition to or from\n * @param {Array} layout\n * @returns {Object} converted end position\n */\nexport const computeLocationPort = (\n    endPosition: ConnectedPosition,\n    layout: AbsoluteLayoutStructure\n): Coordinate | null => {\n    const id = endPosition.item;\n    const index = layout.map((item) => item.item).indexOf(id);\n    let position: AbsolutePosition;\n    if (index >= 0) {\n        position = cloneDeep((layout[index] as AbsoluteBlockItem).position);\n    } else {\n        return null;\n    }\n    switch (endPosition.port) {\n        case 'n':\n            return { x: position.x + position.w / 2, y: position.y };\n        case 'e':\n            return {\n                x: position.x + position.w,\n                y: position.y + position.h / 2,\n            };\n        case 's':\n            return {\n                x: position.x + position.w / 2,\n                y: position.y + position.h,\n            };\n        case 'w':\n            return { x: position.x, y: position.y + position.h / 2 };\n        default:\n            return null;\n    }\n};\n\nexport const toCoordinate = (\n    itemPosition: Partial<Coordinate> & Partial<ConnectedPosition>,\n    layout: AbsoluteLayoutStructure\n): Coordinate => {\n    const topLeft: Coordinate = { x: 0, y: 0 };\n\n    if (itemPosition.item && itemPosition.port) {\n        return (\n            computeLocationPort(\n                { item: itemPosition.item, port: itemPosition.port },\n                layout\n            ) ?? topLeft\n        );\n    }\n\n    if (\n        typeof itemPosition.x === 'number' &&\n        typeof itemPosition.y === 'number'\n    ) {\n        return { x: itemPosition.x, y: itemPosition.y };\n    }\n\n    return topLeft;\n};\n\n/**\n * convert line position to block position\n * @method convertLineToBlockItem\n * @param {Object} itemPosition\n * @param {Array} layout\n * @param {Number} status\n * @returns {Object} converted block position\n */\nexport const convertLineToBlockItem = (\n    itemPosition: ConnectedLinePosition,\n    layout: AbsoluteLayoutItem[]\n): AbsolutePosition => {\n    const from = toCoordinate(itemPosition.from, layout);\n    const to = toCoordinate(itemPosition.to, layout);\n\n    return {\n        x: Math.min(from.x, to.x),\n        y: Math.min(from.y, to.y),\n        w: Math.abs(from.x - to.x),\n        h: Math.abs(from.y - to.y),\n    };\n};\n\n/**\n * convert layout item to block item\n * @method convertToBlockItem\n * @param {Object} item\n * @returns {Object} converted block item\n */\nexport const convertToBlockItem = (\n    item: AbsoluteLayoutItem,\n    layout: AbsoluteLayoutStructure\n): AbsoluteBlockItem => {\n    const blockItem: AbsoluteBlockItem = {\n        item: item.item,\n        type: 'block',\n        position: {\n            x: 0,\n            y: 0,\n            w: 0,\n            h: 0,\n        },\n    };\n    if (item.type === 'line') {\n        blockItem.position = convertLineToBlockItem(item.position, layout);\n    } else {\n        // default item type is block\n        blockItem.position = cloneDeep(item.position);\n    }\n    return blockItem;\n};\n\n/**\n * convert layout items to block items\n * @method convertToBlockItems\n * @param {Array} layout\n * @returns {Array} converted block items\n */\nexport const convertToBlockItems = (\n    layout: AbsoluteLayoutStructure\n): AbsoluteBlockItem[] => {\n    return layout.map((item) => convertToBlockItem(item, layout));\n};\n\n/**\n * Get layout items sorted from top left to right and down.\n * @method sortLayoutItems\n * @param {Array} layout\n * @returns {Array} sorted layout\n */\nexport const sortLayoutItems = (\n    layout: AbsoluteBlockItem[]\n): AbsoluteBlockItem[] => {\n    return cloneDeep(layout).sort((BlockItem1, BlockItem2) => {\n        let res = -1;\n        if (\n            BlockItem1.position.y > BlockItem2.position.y ||\n            (BlockItem1.position.y === BlockItem2.position.y &&\n                BlockItem1.position.x > BlockItem2.position.x)\n        ) {\n            res = 1;\n        } else if (\n            BlockItem1.position.y === BlockItem2.position.y &&\n            BlockItem1.position.x === BlockItem2.position.x\n        ) {\n            // Without this, we can get different sort results in IE vs. Chrome/FF\n            res = 0;\n        }\n        return res;\n    });\n};\n\n/**\n * Returns the first item this layout collides with.\n * @method getFirstCollision\n * @param {Array} layout\n * @param {Object} layoutItem\n * @returns {Object} first collision or undefined\n */\nexport const getFirstCollision = (\n    layout: AbsoluteBlockItem[],\n    layoutItem: AbsoluteBlockItem\n): AbsoluteBlockItem | undefined => {\n    return layout.find((item) => collides(item, layoutItem));\n};\n\ninterface GetPositionByTypeProps {\n    col: number;\n    row: number;\n    width: number;\n    height: number;\n    type: 'line' | 'block' | string;\n}\n\n/**\n * get position based on type\n * @method getPositionByType\n * @param {Object} config\n * @param {Number} config.col\n * @param {Number} config.row\n * @param {Number} config.width\n * @param {Number} config.height\n * @param {String} config.type\n * @returns {Object} new position\n */\nexport const getPositionByType = ({\n    col,\n    row,\n    width,\n    height,\n    type,\n}: GetPositionByTypeProps): AbsolutePosition | ConnectedLinePosition => {\n    if (type === 'line') {\n        return {\n            from: {\n                x: col,\n                y: row + height,\n            },\n            to: {\n                x: col + width,\n                y: row + height / 2,\n            },\n        };\n    }\n\n    return {\n        x: col,\n        y: row,\n        w: width,\n        h: height,\n    };\n};\n\ninterface GetDefaultPositionProps {\n    width: number;\n    height: number;\n    canvasHeight: number;\n    canvasWidth: number;\n    type: 'block' | 'line';\n}\n\n/**\n * get the default position based on type (Note: does not support legacy grid)\n * @method getDefaultPosition\n * @param {Object} config\n * @param {Number} config.canvasWidth\n * @param {Number} config.canvasHeight\n * @param {Number} config.width\n * @param {Number} config.height\n * @param {String} config.type\n * @returns {Object} default position\n */\nexport const getDefaultPosition = <T extends GetDefaultPositionProps>({\n    canvasWidth,\n    canvasHeight,\n    width,\n    height,\n    type,\n}: T): AbsolutePosition | ConnectedLinePosition => {\n    if (type === 'line') {\n        return {\n            from: {\n                x: Math.round(canvasWidth / DEFAULT_SCALE_FACTOR),\n                y: Math.round(canvasHeight / DEFAULT_SCALE_FACTOR),\n            },\n            to: {\n                x: Math.round(canvasWidth / DEFAULT_SCALE_FACTOR + width),\n                y: Math.round(canvasHeight / DEFAULT_SCALE_FACTOR + height),\n            },\n        };\n    }\n\n    return {\n        x: Math.round(canvasWidth / DEFAULT_SCALE_FACTOR),\n        y: Math.round(canvasHeight / DEFAULT_SCALE_FACTOR),\n        w: width,\n        h: height,\n    };\n};\n\ninterface ComputeNextAvailablePositionProps {\n    width: number;\n    height: number;\n    canvasHeight: number;\n    canvasWidth: number;\n    items: AbsoluteLayoutStructure;\n    type: 'block' | 'line';\n}\n\n/**\n * compute next available position for new added item (Note: does not support legacy grid)\n * @method computeNextAvailablePosition\n * @param {Object} config\n * @param {Number} config.width\n * @param {Number} config.height\n * @param {Number} config.canvasHeight\n * @param {Number} config.canvasWidth\n * @param {Number} config.items\n * @param {Number} config.type absolute/line\n * @returns {Object} position\n */\nexport const computeNextAvailablePosition = <\n    T extends ComputeNextAvailablePositionProps\n>({\n    width,\n    height,\n    canvasHeight,\n    canvasWidth,\n    items,\n    type,\n}: T): AbsolutePosition | ConnectedLinePosition => {\n    const rectA: AbsoluteBlockItem = {\n        item: '__canvas__',\n        position: {\n            x: 0,\n            y: 0,\n            w: width,\n            h: height,\n        },\n    };\n    let minHeight;\n    const layout = convertToBlockItems(items);\n    const sorted = sortLayoutItems(layout);\n    // iterate all possible positions from top left to bottom right\n    // for each position, we first try to find collision.\n    // for each row, we record the minHeight for the collisions in this row.\n    // if we can find a collision,  update col to the right boundary of current collision and update minHeight.\n    // After each row, we update row to minHeight.\n    // In this way, we can skip a lot of meaningless positions.\n    // if find a good position, return this position\n    // else return default position\n    // Time complexity: O(K*K)   K is the number of layout items.\n    let row = 0;\n    let col;\n    for (; row < canvasHeight; row += 1) {\n        minHeight = canvasHeight - 1;\n        col = 0;\n        for (; col < canvasWidth; col += 1) {\n            rectA.position.x = col;\n            rectA.position.y = row;\n            const rightBoundary = rectA.position.x + rectA.position.w - 1;\n            const bottomBoundary = rectA.position.y + rectA.position.h - 1;\n            // possible position must within canvas on horizontal and vertical side\n            if (\n                !(rightBoundary > canvasWidth || bottomBoundary > canvasHeight)\n            ) {\n                const collision = getFirstCollision(sorted, rectA);\n                if (collision) {\n                    minHeight = Math.min(\n                        minHeight,\n                        collision.position.y + collision.position.h - 1\n                    );\n                    // update col\n                    col = collision.position.x + collision.position.w - 1; // NOSONAR\n                } else {\n                    return getPositionByType({ col, row, width, height, type });\n                }\n            } else {\n                break;\n            }\n        }\n        // update row\n        row = minHeight; // NOSONAR\n    }\n    return getDefaultPosition({\n        canvasWidth,\n        canvasHeight,\n        width,\n        height,\n        type,\n    });\n};\n\ninterface ComputeNewBlockItemPositionProps {\n    canvasWidth: number;\n    canvasHeight: number;\n    vizContract?: VizContract;\n    config?: VizConfig;\n    items: AbsoluteLayoutStructure;\n}\n\n/**\n * Given the current absolute layout items, return position that new visualization should locate.\n * @method computeNewBlockItemPosition\n * @param {Object} options\n * @param {Number} options.canvasWidth\n * @param {Number} options.canvasHeight\n * @param {Object} options.vizContract\n * @param {Array} options.items\n * @param {Object} options.config\n * @returns {Object} nextPosition\n */\nexport const computeNewBlockItemPosition = ({\n    canvasWidth,\n    canvasHeight,\n    vizContract,\n    config,\n    items,\n}: ComputeNewBlockItemPositionProps): AbsolutePosition => {\n    const width =\n        vizContract?.initialDimension?.width ??\n        config?.size?.initialWidth ??\n        Math.round(canvasWidth / 3);\n    const height =\n        vizContract?.initialDimension?.height ??\n        config?.size?.initialHeight ??\n        Math.round(canvasHeight / 3);\n    return computeNextAvailablePosition({\n        width,\n        height,\n        canvasHeight,\n        canvasWidth,\n        items,\n        type: 'block',\n    }) as AbsolutePosition;\n};\n\ninterface ComputeNewLinePositionProps {\n    canvasWidth: number;\n    canvasHeight: number;\n    items: AbsoluteLayoutStructure;\n}\n\n/**\n * Given the current absolute layout items, return point position\n * @method computeNewLinePosition\n * @params {Object} config\n * @param {Number} config.canvasWidth\n * @param {Number} config.canvasHeight\n * @param {Array} config.items\n * @returns {*} position\n */\nexport const computeNewLinePosition = ({\n    canvasWidth,\n    canvasHeight,\n    items,\n}: ComputeNewLinePositionProps): ConnectedLinePosition => {\n    // default width and height for line\n    const width = 150;\n    const height = 20;\n    return computeNextAvailablePosition({\n        width,\n        height,\n        canvasHeight,\n        canvasWidth,\n        items,\n        type: 'line',\n    }) as ConnectedLinePosition;\n};\n\n/**\n * compute the max height based on current layout items and minimum height\n * @method computeMaxHeight\n * @param {Array} layoutItems\n * @param {Number} minHeight\n * @returns {Number} max height\n */\nexport const computeMaxHeight = (\n    layoutItems: AbsoluteBlockItem[],\n    minHeight = 0\n): number => {\n    return layoutItems.length > 0\n        ? Math.max(\n              ...layoutItems.map((item) => item.position.y + item.position.h),\n              1\n          )\n        : minHeight;\n};\n\ninterface ComputeNewAbsoluteStructureItemProps {\n    itemId: string;\n    type?: 'block' | 'line';\n    canvasWidth: number;\n    canvasHeight: number;\n    vizContract?: VizContract;\n    config?: VizConfig;\n    layoutItems: AbsoluteLayoutStructure;\n}\n\n/**\n * Computes a new layout item position for the absolute layout\n * @param {Object} options\n * @param {String} options.itemId The identifier for a visualization\n * @param {String} [options.type=\"block\"] The structure type for a viz: must be \"line\" or \"block\"\n * @param {Number} options.canvasWidth The width of the canvas\n * @param {Number} options.canvasHeight The height of the canvas\n * @param {Object} options.vizContract Metadata to define the default height/width of a new viz\n * @param {Object} options.config\n * @param {Array} layoutItems List of items in the layout structure\n * @returns {LayoutItem}\n */\nexport const computeNewAbsoluteStructureItem = <\n    T extends ComputeNewAbsoluteStructureItemProps\n>({\n    itemId,\n    type = 'block',\n    canvasWidth,\n    canvasHeight,\n    vizContract,\n    layoutItems,\n    config,\n}: T): AbsoluteBlockItem | ConnectedLineItem => {\n    if (type === 'line') {\n        return {\n            item: itemId,\n            type: 'line',\n            position: computeNewLinePosition({\n                canvasWidth,\n                canvasHeight,\n                items: layoutItems,\n            }),\n        };\n    }\n\n    return {\n        item: itemId,\n        type: 'block',\n        position: computeNewBlockItemPosition({\n            canvasWidth,\n            canvasHeight,\n            vizContract,\n            config,\n            items: layoutItems,\n        }),\n    };\n};\n\ninterface ComputeNewGridStructureItemProps {\n    itemId: string;\n    layoutItems: AbsoluteBlockItem[];\n    canvasWidth: number;\n}\n\n/**\n * Computes a new layout item position for the grid layout\n * @param {Object} config\n * @param {String} config.itemId The identifier for a visualization\n * @param {Number} config.canvasWidth The width of the canvas\n * @param {Array} layoutItems List of items in the layout structure\n * @returns {LayoutItem}\n */\nexport const computeNewGridStructureItem = ({\n    itemId,\n    layoutItems,\n    canvasWidth,\n}: ComputeNewGridStructureItemProps): AbsoluteBlockItem => ({\n    item: itemId,\n    type: 'block',\n    position: {\n        x: 0,\n        y: computeMaxHeight(layoutItems),\n        w: canvasWidth,\n        h: VIZ_DEFAULT_HEIGHT_PX,\n    },\n});\n\n/**\n * Check if the default scrollbar is obtrusive (uses screen real estate) or not (directly overlaid on content)\n * @returns {Boolean}\n */\nconst hasObtrusiveDefaultScrollbar = (): boolean => {\n    const scrollDiv = document.createElement('div');\n    scrollDiv.setAttribute(\n        'style',\n        'width:100px;height:100px;overflow:scroll;position:absolute;top:-9999px;'\n    );\n    document.body.appendChild(scrollDiv);\n\n    // get the scrollbar width\n    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n    // delete the div\n    document.body.removeChild(scrollDiv);\n\n    return scrollbarWidth !== 0;\n};\n\n/**\n * Determine if scrollbar is required to be overlaid (non obtrusive)\n * @returns {Boolean}\n */\nexport const useScrollbarOverlay = (): boolean => {\n    /**\n     * NOTE: only webkit and blink based browsers support 'overflow:overlay'\n     * this fix is for https://jira.splunk.com/browse/SCP-36275 which predominantly exists in Chrome on Windows OS\n     * @returns {Boolean}\n     */\n    return (\n        hasObtrusiveDefaultScrollbar() && CSS.supports('overflow', 'overlay')\n    );\n};\n","module.exports = require(\"lodash/cloneDeep\");"],"sourceRoot":""}