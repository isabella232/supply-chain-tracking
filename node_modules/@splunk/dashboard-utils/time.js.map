{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@splunk/ui-utils/i18n\"","webpack:///external \"lodash/isString\"","webpack:///./src/timeUnits.ts","webpack:///external \"@splunk/moment\"","webpack:///./src/time.ts","webpack:///external \"lodash/find\"","webpack:///external \"lodash/has\"","webpack:///external \"lodash/isFinite\"","webpack:///external \"@splunk/ui-utils/format\"","webpack:///external \"@splunk/splunk-utils/config\""],"names":[],"mappings":"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","file":"time.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n","module.exports = require(\"@splunk/ui-utils/i18n\");","module.exports = require(\"lodash/isString\");","import { _ } from '@splunk/ui-utils/i18n';\n\nconst SecondsDescription = {\n    abbr: 's',\n    singular: _('second'),\n    plural: _('seconds'),\n};\nconst MinutesDescription = {\n    abbr: 'm',\n    singular: _('minute'),\n    plural: _('minutes'),\n};\nconst HoursDescription = { abbr: 'h', singular: _('hour'), plural: _('hours') };\nconst DaysDescription = { abbr: 'd', singular: _('day'), plural: _('days') };\nconst WeeksDescription = { abbr: 'w', singular: _('week'), plural: _('weeks') };\nconst MonthsDescription = {\n    abbr: 'mon',\n    singular: _('month'),\n    plural: _('months'),\n};\nconst QuartersDescription = {\n    abbr: 'q',\n    singular: _('quarter'),\n    plural: _('quarters'),\n};\nconst YearsDescription = {\n    abbr: 'y',\n    singular: _('year'),\n    plural: _('years'),\n};\n\nconst u = {\n    s: SecondsDescription,\n    sec: SecondsDescription,\n    secs: SecondsDescription,\n    second: SecondsDescription,\n    seconds: SecondsDescription,\n    m: MinutesDescription,\n    min: MinutesDescription,\n    mins: MinutesDescription,\n    minute: MinutesDescription,\n    minutes: MinutesDescription,\n    h: HoursDescription,\n    hr: HoursDescription,\n    hrs: HoursDescription,\n    hour: HoursDescription,\n    hours: HoursDescription,\n    d: DaysDescription,\n    day: DaysDescription,\n    days: DaysDescription,\n    w: WeeksDescription,\n    week: WeeksDescription,\n    weeks: WeeksDescription,\n    mon: MonthsDescription,\n    month: MonthsDescription,\n    months: MonthsDescription,\n    q: QuartersDescription,\n    qtr: QuartersDescription,\n    qtrs: QuartersDescription,\n    quarter: QuartersDescription,\n    quarters: QuartersDescription,\n    y: YearsDescription,\n    yr: YearsDescription,\n    yrs: YearsDescription,\n    year: YearsDescription,\n    years: YearsDescription,\n};\n\nexport const timeUnits = u;\n\n// snap units can additionally include days of the week.\nexport const snapUnits = {\n    ...u,\n    w0: { abbr: 'w0', singular: _('Sunday'), plural: _('Sundays') },\n    w1: { abbr: 'w1', singular: _('Monday'), plural: _('Mondays') },\n    w2: { abbr: 'w2', singular: _('Tuesday'), plural: _('Tuesdays') },\n    w3: {\n        abbr: 'w3',\n        singular: _('Wednesday'),\n        plural: _('Wednesdays'),\n    },\n    w4: { abbr: 'w4', singular: _('Thursday'), plural: _('Thursdays') },\n    w5: { abbr: 'w5', singular: _('Friday'), plural: _('Fridays') },\n    w6: { abbr: 'w6', singular: _('Saturday'), plural: _('Saturdays') },\n    w7: { abbr: 'w7', singular: _('Sunday'), plural: _('Sundays') },\n};\n","module.exports = require(\"@splunk/moment\");","// TODO: This is essentially an old copy of @splunk/time-range-utils/Time. The code in that set of utils has diverged over time, particularly where labels are generated.\nimport find from 'lodash/find';\nimport has from 'lodash/has';\nimport isString from 'lodash/isString';\nimport isFinite from 'lodash/isFinite';\nimport { sprintf } from '@splunk/ui-utils/format';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport { locale } from '@splunk/splunk-utils/config';\nimport moment from '@splunk/moment';\nimport { timeUnits, snapUnits } from './timeUnits';\n\ntype SplunkMoment = typeof moment;\n\nconst momentUnits = {\n    s: 's',\n    m: 'm',\n    h: 'h',\n    d: 'd',\n    w: 'w',\n    mon: 'M',\n    q: 'Q',\n    y: 'y',\n};\ntype MomentUnitsKey = keyof typeof momentUnits;\n\nconst momentSnaps = {\n    s: 'second',\n    m: 'minute',\n    h: 'hour',\n    d: 'day',\n    w: 'week',\n    mon: 'month',\n    q: 'quarter',\n    y: 'year',\n};\ntype MomentSnapsKey = keyof typeof momentSnaps;\n\nconst weekDaySnaps = {\n    w0: 0,\n    w1: 1,\n    w2: 2,\n    w3: 3,\n    w4: 4,\n    w5: 5,\n    w6: 6,\n    w7: 0,\n};\ntype WeekdaySnapsKey = keyof typeof weekDaySnaps;\n\ntype TimeUnitsKey = keyof typeof timeUnits;\ntype SnapUnitsKey = keyof typeof snapUnits;\n\n/**\n * Returns a moment for the given time or the current time, if none is given\n * @method epochToMoment\n * @param {Number} [epoch] given time in seconds\n * @returns Moment\n */\nexport const epochToMoment = (epoch?: number): SplunkMoment => {\n    // If we get an input time, convert to ms, otherwise generate current time\n    const time = epoch || epoch === 0 ? epoch * 1000 : new Date().getTime();\n\n    if (moment.getDefaultSplunkTimezone()) {\n        return moment.newSplunkTime({ time });\n    }\n\n    // fallback to moment default\n    return moment(time);\n};\n\n/**\n * Normalizes units to it's shortest version, such as `s` for `sec` and `mon` for `month`.\n * @name normalizeUnit\n * @function\n * @public\n * @param {String} unit - The unit, such as `s` or `quarter`.\n * @param {bool} [removeInvalid=true] - When true, returns an empty string for invalid units,\n * when false\n * returns 's' for invalid units.\n * @returns {String} Returns the normalized unit or empty string.\n */\nexport function normalizeUnit(abbr: string, removeInvalid = true): string {\n    const hasUnit = has(timeUnits, abbr);\n    const defaultUnit = removeInvalid ? '' : timeUnits.s.abbr;\n    return hasUnit ? timeUnits[abbr as TimeUnitsKey].abbr : defaultUnit;\n}\n/**\n * Normalizes snap units to it's shortest version, this is the same as normalizeUnit, but also\n * supports weekdays, such as `w5`.\n * @public\n * @param {String} unit - The unit, such as `s`, `quarter` or `w0`.\n * @param {bool} [removeInvalid=true] - When true, returns an empty string for invalid units,\n * when false returns 's' for invalid units.\n * @returns {String} Returns the normalized unit or empty string.\n */\nexport function normalizeSnapUnit(abbr: string, removeInvalid = true): string {\n    const hasUnit = has(snapUnits, abbr);\n    const defaultUnit = removeInvalid ? '' : timeUnits.s.abbr;\n    return hasUnit ? snapUnits[abbr as SnapUnitsKey].abbr : defaultUnit;\n}\n\n/**\n * Returns a label for a unit abbreviation, such as 'second' for 's' or 'sec'.\n * @public\n * @param {Object} unit -  The unit, such as `s`, `quarter` or `w0`.\n * @param {Object} [plural=false] - Whether the returned label should be plural.\n * @returns {String}\n */\nexport function getUnitLabel(unit: SnapUnitsKey, plural = false): string {\n    return snapUnits[unit][plural ? 'plural' : 'singular'];\n}\n\n/**\n * Strips rt from the beginning of a time string when found. This makes a time string compatible\n * with the time parser. To ensure capability with the time parser 'rt' returns 'now'.\n * @public\n * @param {String} time - The time string such as `47165491` or `rt-2h@m`.\n * @returns {String} Returns the time string.\n */\nexport function removeRealTime(time: string): string {\n    if (time === 'rt') {\n        return 'now';\n    }\n    return time.replace(/^rt/, '');\n}\n\n/**\n * Removes the timezone from an iso time string\n * @public\n * @param {String} time - The time string such as `47165491` or `-2h@m`.\n * @returns {String}\n */\nexport function removeISOTimezone(time: string): string {\n    return time.replace(/[+-]\\d?\\d:\\d\\d$/, '');\n}\n\n/**\n * Validates that a string represents a unix epoch time.\n * @public\n * @param {String} time - The time string such as `47165491` or `-2h@m`.\n * @returns {bool}\n */\nexport function isEpoch(time: string | number): boolean {\n    return (\n        isFinite(time) || (isString(time) && /^\\d+((\\.\\d+)|(\\d*))$/.test(time))\n    );\n}\n\n/**\n * Validates that a string represents an ISO time.\n * @public\n * @param {String} time - The time string such as `47165491` or `-2h@m`.\n * @returns {bool}\n */\nexport function isISO(time: string): boolean {\n    return !!time.match(\n        /^\\d\\d\\d\\d-\\d\\d?-\\d\\d?T\\d\\d?:\\d\\d?(:\\d\\d?)?(\\.\\d\\d?\\d?)?([+-]\\d\\d?:\\d\\d|Z)?$/\n    );\n}\n\n/**\n * Validates that a string represents an ISO or unix epoch time.\n * @public\n * @param {String} time - The time string such as `47165491` or `-2h@m`.\n * @returns {bool}\n */\nexport function isAbsolute(time: string): boolean {\n    if (time === undefined) {\n        return false;\n    }\n    return isEpoch(time) || isISO(time);\n}\n\ninterface TimeASTModifier {\n    string: string;\n    isParsed: boolean;\n    unit: string;\n    amount: number;\n    snap: string | false;\n}\n\ninterface TimeAST {\n    string: string;\n    type: 'iso' | 'epoch' | 'realTime' | 'relative';\n    isFullyParsed: boolean;\n    modifiers: TimeASTModifier[];\n}\n\n/**\n * Parses a time string for inspection or form population.\n *\n * Example parse for a relative time string:\n * ```\n * {\n *     string: '-3d@qtr+2hr',\n *     type: ['relative'], // 'relative', 'realTime', 'iso', or 'epoch'\n *     isFullyParsed: true,\n *     modifiers: [\n *         {\n *             string: '-3d@qtr',\n *             isParsed: true,\n *             unit: 'd',\n *             amount: -3,\n *             snap: 'q',\n *         },\n *         {\n *             string: '+2hr',\n *             isParsed: true,\n *             unit: 'h',\n *             amount: +2,\n *             snap: false,\n *         },\n *     ],\n * }\n * ```\n * Example parse for a epoch time:\n * ```\n * {\n *     string: '89451357',\n *     type: ['epoch'],\n *     isFullyParsed: true,\n *     modifiers: [],\n * }\n *\n * @public\n * @param {String} time - The time string such as `47165491` or `-2h@m`.\n * @returns {Object}\n */\nexport function parseTimeString(timeString: string): TimeAST | false {\n    if (!isString(timeString)) {\n        return false;\n    }\n\n    const ast: TimeAST = {\n        string: timeString,\n        type: 'relative',\n        isFullyParsed: true,\n        modifiers: [],\n    };\n\n    if (isISO(timeString)) {\n        ast.type = 'iso';\n        return ast;\n    }\n    if (isEpoch(timeString)) {\n        ast.type = 'epoch';\n        return ast;\n    }\n    const segments = timeString\n        .trim()\n        .replace(/-/g, '\\n-')\n        .replace(/\\+/g, '\\n+')\n        .split('\\n');\n\n    // If only snap has been provided push empty string to beginning of segments.\n    if (segments[0].charAt(0) === '@') {\n        segments.unshift('');\n    }\n\n    if (segments[0] === 'rt' || segments[0] === 'rtnow') {\n        ast.type = 'realTime';\n    } else if (['rt', 'now', 'rtnow', ''].indexOf(segments[0]) < 0) {\n        ast.isFullyParsed = false;\n        return ast;\n    } else {\n        ast.type = 'relative';\n    }\n\n    ast.modifiers = segments.slice(1).map((segmentString) => {\n        const segment: TimeASTModifier = {\n            string: segmentString,\n            unit: 's',\n            amount: 0,\n            snap: false,\n            isParsed: false,\n        };\n\n        const sParse = segmentString.match(\n            /^(([-+]\\d*)([a-zA-Z]*))?(@([a-zA-Z][a-zA-Z0-7]*))?$/\n        );\n        //                                          2         3      4          5\n\n        if (sParse) {\n            segment.unit = sParse[3] && normalizeUnit(sParse[3], false);\n            segment.amount = segment.unit ? parseInt(sParse[2], 10) || 1 : 0;\n            segment.snap = !!sParse[4] && normalizeSnapUnit(sParse[5], false);\n            segment.isParsed = true;\n\n            if (\n                (sParse[5] && !snapUnits[sParse[5] as SnapUnitsKey]) || // invalid unit\n                (sParse[3] && !timeUnits[sParse[3] as TimeUnitsKey]) || // invalid snap unit\n                segmentString.length === 1 // unqualified - or +\n            ) {\n                ast.isFullyParsed = false;\n                segment.isParsed = false;\n            }\n        } else {\n            ast.isFullyParsed = false;\n        }\n\n        return segment;\n    });\n\n    return ast;\n}\n\n/**\n * Validates that a string is a valid time string.\n * @public\n * @param {String} time - The time string such as `rt` , `rtnow` or `-2h@m`.\n * @returns {bool}\n */\nexport function isValidTime(time: string): boolean {\n    const parsedTime = parseTimeString(time);\n    return parsedTime && parsedTime.isFullyParsed;\n}\n\n/**\n * Validates that a string represents a real-time search.\n * @public\n * @param {String} time - The time string such as `rt` , `rtnow` or `-2h@m`.\n * @returns {bool}\n */\nexport function isRealTime(time: string): boolean {\n    const parsedTimeString = parseTimeString(time);\n\n    return (\n        parsedTimeString &&\n        parsedTimeString.type === 'realTime' &&\n        parsedTimeString.isFullyParsed\n    );\n}\n\n/**\n * Validates that a iso time string is a whole day.\n * @public\n * @param {string|object} time - A time string (such as `2008-09-15T15:53:00+05:00`) or a\n * @splunk/moment time instance.\n * @returns {bool}\n */\nexport function isWholeDay(time: string | SplunkMoment): boolean {\n    if (\n        (isString(time) && isISO(time)) ||\n        (moment.isMoment(time) && time.isValid())\n    ) {\n        const timeMoment = moment(time);\n        return timeMoment.valueOf() === timeMoment.startOf('day').valueOf();\n    }\n\n    return false;\n}\n\n/**\n * Validate that a time string acts is either empty or `0`.\n * @public\n * @param {String} time - The time string such as `rt` , `rtnow` or `-2h@m`.\n * @returns {bool}\n */\nexport function isEarliestEmpty(time: string): boolean {\n    return !time || time === '0';\n}\n\n/**\n * Validate that a time string acts is either empty or now\n * @public\n * @param {String} time - The time string such as `rt` , `rtnow` or `-2h@m`.\n * @returns {bool}\n */\nexport function isLatestNow(time: string): boolean {\n    return !time || (isString(time) && time === 'now');\n}\n\n/**\n * Validate that a time range acts is equivalent to all-time.\n * @public\n * @param {String} earliest - The time string such as `rt` , `rtnow` or `-2h@m`.\n * @param {String} latest - The time string such as `rt` , `rtnow` or `-2h@m`.\n * @returns {bool}\n */\nexport function isAllTime(earliest: string, latest: string): boolean {\n    return (\n        isEarliestEmpty(removeRealTime(earliest)) &&\n        isLatestNow(removeRealTime(latest))\n    );\n}\n\ninterface TimeRange {\n    earliest: string;\n    latest: string;\n}\n\n/**\n * Validate that two time range are equivalent. This normalizes the two comparisons using\n * isEarliestEmpty() and isLatestNow().\n * @public\n * @param {Object} range1 - The time string range  such as `{ earliest: '-1d', latest: 'now' }`.\n * @param {Object} range2 -  The time string range such as `{ earliest: '0', latest: '-1d' }`.\n * @returns {bool}\n */\nexport function timeRangesAreEquivalent(\n    range1: TimeRange,\n    range2: TimeRange\n): boolean {\n    const earliest1 = range1.earliest;\n    const latest1 = range1.latest;\n\n    const earliest2 = range2.earliest;\n    const latest2 = range2.latest;\n\n    let earliestEqual = false;\n    let latestEqual = false;\n\n    if (isEarliestEmpty(earliest1) && isEarliestEmpty(earliest2)) {\n        earliestEqual = true;\n    } else {\n        earliestEqual = earliest1 === earliest2;\n    }\n\n    if (isLatestNow(latest1) && isLatestNow(latest2)) {\n        latestEqual = true;\n    } else {\n        latestEqual = latest1 === latest2;\n    }\n\n    return earliestEqual && latestEqual;\n}\n\ninterface TimePreset extends TimeRange {\n    label: string;\n}\n\n/**\n * Searches through an array of presets and returns any equivalent labels using\n * timeRangesAreEquivalent().\n * @public\n * @param {array} presets - An array of presents such as:\n * ```\n * [\n *     { label: '30 second window', earliest: 'rt-30s', latest: 'rt' },\n *     { label: 'Today', earliest: '@d', latest: 'now' },\n *     { label: 'Previous year', earliest: '-1y@y', latest: '@y' },\n *     { label: 'Last 15 minutes', earliest: '-15m', latest: 'now' },\n *     { label: 'All time', earliest: '0', latest: '' },\n * ]\n * ```\n * @param {String} earliest - The time string such as `rt` , `rtnow` or `-2h@m`.\n * @param {String} latest - The time string such as `rt` , `rtnow` or `-2h@m`.\n * @returns {string | false } The matched preset label.\n */\nexport function findPresetLabel(\n    presets: TimePreset[],\n    earliest: string,\n    latest: string\n): string | false {\n    /* JSDoc and eslint cannot agree on the appropriate format of this */\n    /* eslint-disable */\n    const currentPreset = find(presets, (preset) => {\n        const range2 = { earliest: preset.earliest, latest: preset.latest };\n\n        return timeRangesAreEquivalent({ earliest, latest }, range2);\n    });\n    /* eslint-enable */\n\n    return currentPreset ? currentPreset.label : false;\n}\n\n/**\n * Generates a label for a real-time time search.\n * For example:  '5 minute window' or 'Real-time'\n * @private\n * @param {String} earliest - The time string such as `rt` , `rtnow` or `-2h@m`.\n * @param {String} latest - The time string such as `rt` , `rtnow` or `-2h@m`.\n * @returns {null|string}\n */\nfunction createRealTimeLabel(earliest: string, latest: string): string | false {\n    if (isRealTime(earliest) || isRealTime(latest)) {\n        const earliestParse = parseTimeString(earliest);\n        const latestParse = parseTimeString(latest);\n        if (!earliestParse || !latestParse) {\n            return false;\n        }\n\n        const earliestModifier = earliestParse.modifiers[0];\n\n        const labelTemplates = {\n            s: _('%(time)d second window'),\n            m: _('%(time)d minute window'),\n            h: _('%(time)d hour window'),\n            d: _('%(time)d day window'),\n            w: _('%(time)d week window'),\n            mon: _('%(time)d month window'),\n            q: _('%(time)d quarter window'),\n            y: _('%(time)d year window'),\n        };\n\n        if (\n            earliestModifier &&\n            earliestParse.type === 'realTime' &&\n            latestParse.type === 'realTime' &&\n            latestParse.modifiers.length === 0 &&\n            earliestModifier?.unit &&\n            has(labelTemplates, earliestModifier.unit) &&\n            earliestParse.modifiers.length === 1\n        ) {\n            return sprintf(\n                labelTemplates[\n                    earliestModifier.unit as keyof typeof labelTemplates\n                ],\n                {\n                    time: Math.abs(earliestModifier.amount || 0),\n                }\n            );\n        }\n\n        // Other Real-Time.\n        return _('Real-time');\n    }\n    return false;\n}\n\n/**\n * Generates a label for a relative time search.\n * For example:  'Last 5 minutes'\n * @private\n * @param {String} earliest - The time string such as `rt` , `rtnow` or `-2h@m`.\n * @param {String} latest - The time string such as `rt` , `rtnow` or `-2h@m`.\n * @returns {null|string}\n */\nfunction createRelativeTimeLabel(\n    earliest: string,\n    latest: string\n): string | false {\n    const earliestParse = parseTimeString(earliest);\n    const latestParse = parseTimeString(latest);\n\n    if (!earliestParse || !latestParse) {\n        return false;\n    }\n\n    const earliestModifier = earliestParse.modifiers[0];\n    const latestModifier = latestParse.modifiers[0];\n\n    if (\n        earliestParse.type === 'realTime' ||\n        latestParse.type === 'realTime' ||\n        !earliestModifier ||\n        earliestParse.modifiers.length > 1 ||\n        latestParse.modifiers.length > 1\n    ) {\n        return false;\n    }\n\n    if (\n        earliestModifier.amount < 0 &&\n        (!earliestModifier.snap ||\n            earliestModifier.unit === earliestModifier.snap) &&\n        (isLatestNow(latest) || (latestModifier && !latestModifier.amount)) &&\n        (!latestModifier ||\n            !latestModifier.snap ||\n            earliestModifier.unit === latestModifier.snap)\n    ) {\n        const amount = Math.abs(earliestModifier.amount);\n        const pluralKey = amount > 1 ? 'plural' : 'singular';\n        return sprintf(_('Last %(amount)d %(unit)s'), {\n            amount,\n            unit: timeUnits[earliestModifier.unit as TimeUnitsKey][pluralKey],\n        });\n    }\n    return false;\n}\n\n/**\n * Compares two moment instances to determine if they are on the same day.\n * @private\n * @param {Object} earliest - @splunk/moment time instance\n * @param {Object} latest - @splunk/moment time instance\n * @returns {bool}\n */\nfunction areSameDay(a: SplunkMoment, b: SplunkMoment): boolean {\n    const aTime = a.clone().startOf('day');\n    const bTime = b.clone().startOf('day');\n    return aTime.isSame(bTime);\n}\n\ntype DateUnit = 'year' | 'month' | 'date';\n\n/**\n * Determines whether the date is the start of a year, month or day.\n * @private\n * @param {Object} date - @splunk/moment time instance\n * @returns {'year'|'month'|'date'|undefined}\n */\nfunction largestDateUnit(date: SplunkMoment): DateUnit | undefined {\n    return find(['year', 'month', 'date'] as DateUnit[], (unit: string) => {\n        const dateStart: SplunkMoment = date.clone().startOf(unit);\n        return date.isSame(dateStart) as boolean;\n    });\n}\n/**\n * Finds the largest date unit that can describe a date range: years, months or days.\n * @private\n * @param {Object} earliest - @splunk/moment time instance\n * @param {Object} latest - @splunk/moment time instance\n * @returns {'year'|'month'|'date'|null}\n */\nfunction findSingleDateUnit(a: SplunkMoment, b: SplunkMoment): DateUnit | null {\n    if (!(isWholeDay(a) && isWholeDay(b))) {\n        return null;\n    }\n\n    if (\n        a.month() === 0 &&\n        b.month() === 0 &&\n        a.date() === 1 &&\n        b.date() === 1\n    ) {\n        return 'year';\n    }\n\n    if (\n        (a.year() === b.year() && a.date() === 1 && b.date() === 1) ||\n        (a.year() + 1 === b.year() &&\n            b.month() === 0 &&\n            a.date() === 1 &&\n            b.date() === 1)\n    ) {\n        return 'month';\n    }\n\n    if (\n        (a.year() === b.year() && a.month() === b.month()) ||\n        (a.year() === b.year() &&\n            a.month() + 1 === b.month() &&\n            b.date() === 1) ||\n        (a.year() + 1 === b.year() && b.month() === 0)\n    ) {\n        return 'date';\n    }\n\n    return null;\n}\n/**\n * Generates a date range label for a single year, month or day.\n * For example:  '2017', 'Feb 2017' or 'Feb 18, 2017'\n * @private\n * @param {Object} date - @splunk/moment time instance\n * @param {'year'|'month'|'date'} unit\n * @returns {String}\n */\nfunction createSingleUnitOnLabel(date: SplunkMoment, unit: DateUnit): string {\n    switch (unit) {\n        case 'year':\n            return date.format('YYYY');\n        case 'month':\n            return sprintf(_('%(month)s %(year)s'), {\n                month: date.format('MMM'),\n                year: date.format('YYYY'),\n            });\n        default:\n            return date.format('ll');\n    }\n}\n/**\n * Generates a date range label for a range of years, months or days.\n * For example:  '2015 though 2017', 'Feb through Apr, 2017' or 'Feb 17 through 18, 2017'\n * @private\n * @param {Object} earliest - @splunk/moment time instance\n * @param {Object} latest - @splunk/moment time instance\n * @param {'year'|'month'|'date'} unit\n * @returns {String}\n */\nfunction createSingleUnitThroughLabel(\n    a: SplunkMoment,\n    b: SplunkMoment,\n    unit: DateUnit\n) {\n    const b2 = b.subtract(1, unit === 'date' ? 'day' : unit);\n\n    switch (unit) {\n        case 'year':\n            return sprintf(_('%(earliestYear)s through %(latestYear)s'), {\n                earliestYear: a.format('YYYY'),\n                latestYear: b2.format('YYYY'),\n            });\n        case 'month':\n            return sprintf(\n                _('%(earliestMonth)s through %(latestMonth)s, %(inYear)s'),\n                {\n                    earliestMonth: a.format('MMM'),\n                    latestMonth: b2.format('MMM'),\n                    inYear: b2.format('YYYY'),\n                }\n            );\n        default:\n            return sprintf(\n                _(\n                    '%(month)s %(earliestDayOfMonth)s through %(latestDayOfMonth)s, %(inYear)s'\n                ),\n                {\n                    month: a.format('MMM'),\n                    earliestDayOfMonth: a.format('D'),\n                    latestDayOfMonth: b2.format('D'),\n                    inYear: b2.format('YYYY'),\n                }\n            );\n    }\n}\n/**\n * Generates date-time label with the minimum specificity for time:minute, seconds or milliseconds.\n * For example:  'Feb 18, 2017 4:12:30.567 AM'\n * @private\n * @param {Object} date - @splunk/moment time instance\n * @returns {String}\n */\nfunction createDateTimeLabel(date: SplunkMoment): string {\n    if (date.millisecond()) {\n        return date.splunkFormat('llms');\n    }\n    if (date.second()) {\n        return date.splunkFormat('lls');\n    }\n    return date.splunkFormat('lll');\n}\n/**\n * Generates time label with the minimum specificity for time: minute, seconds or milliseconds.\n * For example:  '6:00 AM', '6:00:20 AM' or '6:00:20.712 AM'\n * @private\n * @param {Object} time - @splunk/moment time instance\n * @returns {String}\n */\nfunction createTimeLabel(time: SplunkMoment): string {\n    if (time.millisecond()) {\n        return time.splunkFormat('LTMS');\n    }\n    if (time.second()) {\n        return time.format('LTS');\n    }\n    return time.format('LT');\n}\n\n/**\n * Generates a date-time label with the minimum specificity for time: minute, seconds or milliseconds.\n * For example: 'Feb 17, 2017 6:00 AM to Feb 18, 2017 12:20 AM'\n * @private\n * @param {Object} earliestTime - @splunk/moment time instance\n * @param {Object} latestTime - @splunk/moment time instance\n * @returns {String}\n */\nfunction createTimeRangeLabel(a: SplunkMoment, b: SplunkMoment) {\n    let format;\n\n    if (a.millisecond() || b.millisecond()) {\n        format = 'llms';\n    } else if (a.second() || b.second()) {\n        format = 'lls';\n    } else {\n        format = 'lll';\n    }\n\n    return sprintf(_('%(earliestDateTime)s to %(latestDateTime)s'), {\n        earliestDateTime: a.splunkFormat(format),\n        latestDateTime: b.splunkFormat(format),\n    });\n}\n\n/**\n * Generates a label for a time range on a single date.\n * For example: '6:00:20.850 AM to 8:00:40.490 PM, Feb 17, 2017'\n * @private\n * @param {Object} earliestTime - @splunk/moment time instance\n * @param {Object} latestTime - @splunk/moment time instance\n * @returns {String}\n */\nfunction createPartOfDayLabel(a: SplunkMoment, b: SplunkMoment) {\n    return sprintf(_('%(earliestTime)s to %(latestTime)s, %(date)s'), {\n        earliestTime: createTimeLabel(a),\n        latestTime: createTimeLabel(b),\n        date: a.format('ll'),\n    });\n}\n\nfunction conformToMaxChars(\n    label: string,\n    shortLabel: string,\n    maxChars: number\n): string {\n    // if label is shorter than the shortLabel and longer than maxChars, use the label.\n    // This scenario may arise due to long translations of the shortLabel.\n    return maxChars && label.length > Math.max(shortLabel.length, maxChars)\n        ? shortLabel\n        : label;\n}\n/**\n * Generates a label for a date range when provided two ISO date formats.\n * @private\n * @param {String} earliest - An ISO time string, or other splunk time string.\n * @param {String} latest - An ISO time string, or other splunk time string .\n * @param {Number} maxChars - If the generated label is too long, it will abbreviate\n   to a more generic form, such as 'Between Date-times' instead of 'Feb 17, 2017 6:00 AM to Feb 18, 2017 12:20 AM'.\n * @returns {null|string}\n */\nfunction createDateTimeRangeLabel(\n    earliest: string,\n    latest: string,\n    maxChars: number\n): string | null {\n    const a = isISO(earliest)\n        ? moment(earliest).locale(locale || 'en_US')\n        : undefined;\n    const b = isISO(latest)\n        ? moment(latest).locale(locale || 'en_US')\n        : undefined;\n\n    if (a && b) {\n        // During Year, Month Day\n        const unit = findSingleDateUnit(a, b);\n\n        // Single Year, Month or Day\n        const next = unit && moment(a).add(1, unit === 'date' ? 'days' : unit);\n        if (unit && next[unit]() === b[unit]()) {\n            return createSingleUnitOnLabel(a, unit);\n        }\n        if (unit) {\n            return conformToMaxChars(\n                createSingleUnitThroughLabel(a, b, unit),\n                _('Date Range'),\n                maxChars\n            );\n        }\n\n        // Part of Day\n        if (areSameDay(a, b)) {\n            return conformToMaxChars(\n                createPartOfDayLabel(a, b),\n                _('Part of a Day'),\n                maxChars\n            );\n        }\n\n        // Full\n        return conformToMaxChars(\n            createTimeRangeLabel(a, b),\n            _('Between Date-times'),\n            maxChars\n        );\n    }\n    if (a && isLatestNow(latest)) {\n        // Since\n        const unit = largestDateUnit(a);\n        const since = unit\n            ? createSingleUnitOnLabel(a, unit)\n            : createDateTimeLabel(a);\n        const longLabel = sprintf(_('Since %(dateTime)s'), { dateTime: since });\n        return conformToMaxChars(longLabel, _('Since Date-time'), maxChars);\n    }\n    if (isEarliestEmpty(earliest) && b) {\n        // Before\n        const unit = largestDateUnit(b);\n        const before = unit\n            ? createSingleUnitOnLabel(b, unit)\n            : createDateTimeLabel(b);\n        const longLabel = sprintf(_('Before %(dateTime)s'), {\n            dateTime: before,\n        });\n        return conformToMaxChars(longLabel, _('Before Date-time'), maxChars);\n    }\n\n    return null;\n}\n/**\n * Returns 'All-time' is the search is all-time or a close equivalent.\n * @private\n * @param {String} earliest - The time string such as `rt` , `rtnow` or `-2h@m`.\n * @param {String} latest - The time string such as `rt` , `rtnow` or `-2h@m`.\n * @returns {String}\n */\nfunction createAllTimeLabel(earliest: string, latest: string): string | false {\n    if (isEarliestEmpty(earliest) && isLatestNow(latest)) {\n        return _('All time');\n    }\n    return false;\n}\n\ninterface CreateRangeLabelOptions {\n    presets?: TimePreset[];\n    maxChars?: number;\n}\n\n/**\n * Creates an appropriate label for a time range, using a preset label if available.\n * @public\n * @param {String} earliest - The time string such as `rt` , `rtnow` or `-2h@m`.\n * @param {String} latest - The time string such as `rt` , `rtnow` or `-2h@m`.\n * @param {Object} [options] - An array of presents such as:\n * @param {Number} [options.maxChars = 0] - If the generated label is too long, it will abbreviate\n * to a more generic form, such as 'Between Date-times' instead of 'Feb 17, 2017 6:00 AM to Feb 18, 2017 12:20 AM'.\n * `Infinity` and `0` allow labels of any length.\n * @param {array} [options.presets] - An array of presents such as:\n * ```\n * [\n *     { label: '30 second window', earliest: 'rt-30s', latest: 'rt' },\n *     { label: 'Today', earliest: '@d', latest: 'now' },\n *     { label: 'Previous year', earliest: '-1y@y', latest: '@y' },\n *     { label: 'Last 15 minutes', earliest: '-15m', latest: 'now' },\n *     { label: 'All time', earliest: '0', latest: '' },\n * ]\n * ```\n * @returns {String} Returns `'Custom time'` if one cannot be made.\n */\nexport function createRangeLabel(\n    earliest: string,\n    latest: string,\n    { presets, maxChars = 0 }: CreateRangeLabelOptions = {}\n): string {\n    const earliestTrimmed = earliest.trim();\n    const latestTrimmed = latest.trim();\n\n    return (\n        createAllTimeLabel(earliestTrimmed, latestTrimmed) ||\n        (presets && findPresetLabel(presets, earliestTrimmed, latestTrimmed)) ||\n        createRealTimeLabel(earliestTrimmed, latestTrimmed) ||\n        createRelativeTimeLabel(earliestTrimmed, latestTrimmed) ||\n        createDateTimeRangeLabel(earliestTrimmed, latestTrimmed, maxChars) ||\n        _('Custom time')\n    );\n}\n\nfunction pluralize(\n    singular: string,\n    plural: string,\n    numberOf: number\n): string | null {\n    if (numberOf === 0) {\n        return null;\n    }\n    return numberOf === 1 ? singular : sprintf(plural, { numberOf });\n}\n\n/**\n * Takes a duration in milliseconds and returns a string describing the duration in terms of\n * years, months, days, hours, minutes, seconds and milliseconds.\n * If a unit isn't needed it's omitted, e.g. durations less than a year won't include '0 years'.\n * @public\n * @param {number} ms - The duration in milliseconds.\n * @returns {String} A formatted duration string, for example `27 days 16 hours 36 minutes 59 seconds`.\n * Durations <= 0 return `null`.\n */\nexport function formatDuration(ms: number): string | null {\n    if (ms <= 0) {\n        return null;\n    }\n\n    const duration = moment.duration(ms);\n    return [\n        pluralize(_('1 year'), _('%(numberOf)d years'), duration.years()),\n        pluralize(_('1 month'), _('%(numberOf)d months'), duration.months()),\n        pluralize(_('1 day'), _('%(numberOf)d days'), duration.days()),\n        pluralize(_('1 hour'), _('%(numberOf)d hours'), duration.hours()),\n        pluralize(_('1 minute'), _('%(numberOf)d minutes'), duration.minutes()),\n        pluralize(_('1 second'), _('%(numberOf)d seconds'), duration.seconds()),\n        pluralize(\n            _('1 millisecond'),\n            _('%(numberOf)d milliseconds'),\n            duration.milliseconds()\n        ),\n    ]\n        .filter((display) => !!display)\n        .join(' ');\n}\n\nexport const parse = (\n    time: string,\n    baseTime = epochToMoment()\n): {\n    error?: Error | null;\n    time: string;\n    iso?: string;\n    momentTime?: SplunkMoment;\n} => {\n    const parsed = parseTimeString(time);\n    if (time === '' || !parsed) {\n        return { error: new Error('Invalid time string'), time };\n    }\n    if (!parsed.isFullyParsed) {\n        return {\n            error: new Error('The time string could not be parsed'),\n            time,\n        };\n    }\n    if (parsed.type === 'iso') {\n        return { error: null, iso: time, time };\n    }\n    if (parsed.type === 'epoch') {\n        return {\n            error: null,\n            iso: epochToMoment(parseFloat(time)).format(),\n            time,\n        };\n    }\n    const date = moment(baseTime);\n    parsed.modifiers.forEach((mod) => {\n        if (mod.amount && momentUnits[mod.unit as MomentUnitsKey]) {\n            date.add(mod.amount, momentUnits[mod.unit as MomentUnitsKey]);\n        }\n        if (mod.snap) {\n            if (momentSnaps[mod.snap as MomentSnapsKey]) {\n                date.startOf(momentSnaps[mod.snap as MomentSnapsKey]);\n            } else if (weekDaySnaps[mod.snap as WeekdaySnapsKey] != null) {\n                date.startOf(momentSnaps.w).add(\n                    weekDaySnaps[mod.snap as WeekdaySnapsKey],\n                    'd'\n                );\n                if (epochToMoment().isBefore(date)) {\n                    // always snap to past time, so we need to shift back for 1 week.\n                    date.add(-1, 'w');\n                }\n            }\n        }\n    });\n    return { error: null, iso: date.format(), time, momentTime: date };\n};\n\nexport const defaultTimePreset = [\n    { label: _('Today'), earliest: '@d', latest: 'now' },\n    { label: _('Week to date'), earliest: '@w0', latest: 'now' },\n    { label: _('Business week to date'), earliest: '@w1', latest: 'now' },\n    { label: _('Month to date'), earliest: '@mon', latest: 'now' },\n    { label: _('Year to date'), earliest: '@y', latest: 'now' },\n    { label: _('Yesterday'), earliest: '-1d@d', latest: '@d' },\n    { label: _('Previous week'), earliest: '-7d@w0', latest: '@w0' },\n    {\n        label: _('Previous business week'),\n        earliest: '-6d@w1',\n        latest: '-1d@w6',\n    },\n    { label: _('Previous month'), earliest: '-1mon@mon', latest: '@mon' },\n    { label: _('Previous year'), earliest: '-1y@y', latest: '@y' },\n    { label: _('Last 15 minutes'), earliest: '-15m', latest: 'now' },\n    { label: _('Last 60 minutes'), earliest: '-60m@m', latest: 'now' },\n    { label: _('Last 4 hours'), earliest: '-4h@m', latest: 'now' },\n    { label: _('Last 24 hours'), earliest: '-24h@h', latest: 'now' },\n    { label: _('Last 7 days'), earliest: '-7d@h', latest: 'now' },\n    { label: _('Last 30 days'), earliest: '-30d@d', latest: 'now' },\n    { label: _('All time'), earliest: '0', latest: 'now' },\n];\n\nexport const defaultRealTimePreset = [\n    { label: _('30 second window'), earliest: 'rt-30s', latest: 'rt' },\n    { label: _('1 minute window'), earliest: 'rt-1m', latest: 'rt' },\n    { label: _('5 minute window'), earliest: 'rt-5m', latest: 'rt' },\n    { label: _('30 minute window'), earliest: 'rt-30m', latest: 'rt' },\n    { label: _('1 hour window'), earliest: 'rt-1h', latest: 'rt' },\n    { label: _('All time (real-time)'), earliest: 'rt', latest: 'rt' },\n].concat(defaultTimePreset);\n","module.exports = require(\"lodash/find\");","module.exports = require(\"lodash/has\");","module.exports = require(\"lodash/isFinite\");","module.exports = require(\"@splunk/ui-utils/format\");","module.exports = require(\"@splunk/splunk-utils/config\");"],"sourceRoot":""}