/*!
 * Copyright © 2020 Splunk Inc.
 * SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or
 * in part without a valid written license from Splunk Inc. is PROHIBITED.
 */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 36);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = require("@splunk/ui-utils/i18n");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = require("prop-types");

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = require("styled-components");

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = require("lodash/get");

/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = require("@splunk/dashboard-context");

/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = require("@splunk/dashboard-icons");

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseTimeRangePicker = exports.LONG_LABEL_LENGTH = exports.LONG_WIDTH_DRAGGABLE = exports.SHORT_WIDTH_DRAGGABLE = exports.LONG_WIDTH = exports.SHORT_WIDTH = exports.ADVANCED_INPUT_TYPES = exports.FORM_INPUT_TYPES = exports.DEFAULT_LATEST = exports.DEFAULT_VALUE = void 0;
var react_1 = __importStar(__webpack_require__(0));
var prop_types_1 = __importDefault(__webpack_require__(2));
var Dropdown_1 = __importDefault(__webpack_require__(29));
var time_1 = __webpack_require__(30);
var i18n_1 = __webpack_require__(1);
var dashboard_context_1 = __importDefault(__webpack_require__(5));
var dashboard_telemetry_1 = __webpack_require__(31);
var get_1 = __importDefault(__webpack_require__(4));
var dashboard_icons_1 = __webpack_require__(6);
var BaseInput_1 = __importDefault(__webpack_require__(32));
exports.DEFAULT_VALUE = '-24h@h,now';
exports.DEFAULT_LATEST = 'now';
exports.FORM_INPUT_TYPES = ['relative', 'date', 'dateTime'];
exports.ADVANCED_INPUT_TYPES = ['relative', 'allTime', 'dateTime'];
exports.SHORT_WIDTH = 260;
exports.LONG_WIDTH = 377;
// todo: change them back to the original values above, after the react-sortable-hoc supporting variable width in grid https://github.com/clauderic/react-sortable-hoc#grid-support
exports.SHORT_WIDTH_DRAGGABLE = 180;
exports.LONG_WIDTH_DRAGGABLE = 180;
exports.LONG_LABEL_LENGTH = 28;
var parseValue = function (value, defaultValue) {
    var v = value || defaultValue || exports.DEFAULT_VALUE;
    var timeRanges = v.split(',');
    return {
        earliest: timeRanges[0].trim(),
        latest: timeRanges[1] && timeRanges[1].trim()
            ? timeRanges[1].trim()
            : exports.DEFAULT_LATEST,
    };
};
var toValue = function (_a) {
    var earliest = _a.earliest, latest = _a.latest;
    return earliest + "," + latest;
};
var BaseTimeRangePicker = function (_a) {
    var id = _a.id, value = _a.value, presets = _a.presets, _b = _a.options.defaultValue, defaultValue = _b === void 0 ? exports.DEFAULT_VALUE : _b, enableRealTime = _a.enableRealTime, onValueChange = _a.onValueChange, momentTimeZone = _a.momentTimeZone, isError = _a.isError, isDisabled = _a.isDisabled, onUpdateWidth = _a.onUpdateWidth, parseEarliest = _a.parseEarliest, parseLatest = _a.parseLatest, onRequestParseEarliest = _a.onRequestParseEarliest, onRequestParseLatest = _a.onRequestParseLatest;
    var _c = parseValue(value, defaultValue), earliest = _c.earliest, latest = _c.latest;
    var _d = react_1.useContext(dashboard_context_1.default).featureFlags, _e = _d === void 0 ? {} : _d, enableDragDropInputs = _e.enableDragDropInputs;
    var telemetry = react_1.useContext(dashboard_telemetry_1.TelemetryContext);
    react_1.useEffect(function () {
        var label = time_1.createRangeLabel(earliest, latest, {
            timeRangePresets: presets,
            maxChars: 0,
        });
        if (label.length > exports.LONG_LABEL_LENGTH) {
            onUpdateWidth(enableDragDropInputs ? exports.LONG_WIDTH_DRAGGABLE : exports.LONG_WIDTH);
        }
        else {
            onUpdateWidth(enableDragDropInputs ? exports.SHORT_WIDTH_DRAGGABLE : exports.SHORT_WIDTH);
        }
    }, [earliest, latest, presets, onUpdateWidth, enableDragDropInputs]);
    var formInputTypes = react_1.useMemo(function () {
        return enableRealTime
            ? exports.FORM_INPUT_TYPES.concat(['realTime'])
            : exports.FORM_INPUT_TYPES;
    }, [enableRealTime]);
    var advancedInputTypes = react_1.useMemo(function () {
        return enableRealTime
            ? exports.ADVANCED_INPUT_TYPES.concat(['realTime'])
            : exports.ADVANCED_INPUT_TYPES;
    }, [enableRealTime]);
    var handleChange = react_1.useCallback(function (evt, changeData) {
        var actionPayload = {
            pageAction: 'performance.markAll',
            metadata: {
                markInformation: 'TimeRangePicker',
                currentTime: performance.now(),
            },
        };
        telemetry.emit(actionPayload);
        return onValueChange(evt, toValue(changeData));
    }, [onValueChange, telemetry]);
    return (react_1.default.createElement(Dropdown_1.default, { describedBy: id, presets: presets, onChange: handleChange, earliest: earliest, latest: latest, formInputTypes: formInputTypes, advancedInputTypes: advancedInputTypes, onRequestParseEarliest: onRequestParseEarliest, onRequestParseLatest: onRequestParseLatest, parseEarliest: parseEarliest, parseLatest: parseLatest, momentTimeZone: momentTimeZone, inline: false, labelMaxChars: 0, 
        // Not supported https://jira.splunk.com/browse/SCP-31483
        // placeholder={errorMessage || disabledMessage || null}
        disabled: isError || isDisabled }));
};
exports.BaseTimeRangePicker = BaseTimeRangePicker;
/**
 * Transforms the value or values from the input to a set of token: value pairs
 * @param {String} value value of the TRP input
 * @param {Object} meta
 * @param {String} meta.token The token name
 * @returns {Object}
 */
exports.BaseTimeRangePicker.valueToTokens = function (value, _a) {
    var _b;
    var token = _a.token;
    if (!token) {
        return {};
    }
    var _c = parseValue(value), earliest = _c.earliest, latest = _c.latest;
    return _b = {},
        _b[token + ".earliest"] = earliest,
        _b[token + ".latest"] = latest,
        _b;
};
/**
 * Transforms a set of tokens belonging to the input to a valid input value
 * @param {Object} tokens set of submitted tokens
 * @param {String} tokenName the token name associated with the input
 * @param {String} tokenNamespace the namespace the token belongs to
 * @returns {String|null}
 */
exports.BaseTimeRangePicker.tokensToValue = function (_a) {
    var tokens = _a.tokens, tokenName = _a.tokenName, tokenNamespace = _a.tokenNamespace;
    if (!tokens || !tokenName || !tokenNamespace) {
        return null;
    }
    var earliest = get_1.default(tokens, [tokenNamespace, tokenName + ".earliest"]);
    var latest = get_1.default(tokens, [tokenNamespace, tokenName + ".latest"]);
    return earliest && latest ? toValue({ earliest: earliest, latest: latest }) : null;
};
exports.BaseTimeRangePicker.propTypes = __assign(__assign({}, BaseInput_1.default.propTypes), { enableRealTime: prop_types_1.default.bool, 
    // See: https://eng.sv.splunk.com/react-time-range/6.0.0/index.html#/Dropdown
    presets: prop_types_1.default.arrayOf(prop_types_1.default.object), momentTimeZone: prop_types_1.default.object, parseEarliest: prop_types_1.default.object, parseLatest: prop_types_1.default.object, onRequestParseEarliest: prop_types_1.default.func, onRequestParseLatest: prop_types_1.default.func });
exports.BaseTimeRangePicker.defaultProps = __assign(__assign({}, BaseInput_1.default.defaultProps), { enableRealTime: false, presets: [] });
var meta = {
    label: i18n_1._('Time Range'),
    description: i18n_1._('Select a time range'),
    defaultConfig: {
        options: {
            defaultValue: '-24h@h,now',
        },
        title: i18n_1._('Time Range Input Title'),
    },
    tokenPrefix: 'tr',
    includeInToolbar: true,
    icon: dashboard_icons_1.TimeRangeInput,
};
var schema = {
    defaultValue: {
        description: 'Default value of the input when no value is specified',
        type: 'string',
    },
    token: {
        description: 'Name of the token that will store the value',
        type: 'string',
    },
    tokenNamespace: {
        description: 'Scope in which the token exists',
        type: 'string',
        default: 'default',
    },
};
exports.BaseTimeRangePicker.config = {
    meta: meta,
    schema: schema,
};


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(__webpack_require__(0));
var i18n_1 = __webpack_require__(1);
var mapKeys_1 = __importDefault(__webpack_require__(9));
var SplunkwebConnector_1 = __importDefault(__webpack_require__(10));
var enhancer_1 = __webpack_require__(11);
var BaseTimeRange_1 = __webpack_require__(7);
var TRPEditor_1 = __importDefault(__webpack_require__(33));
/**
 * Enterprise Time Range Picker
 * This component depends on Splunkweb which is present in any enterprise installation.
 * It requires specific values to be added to the window global, and it makes API calls to a splunkd backend to get preset and timezone information
 * @param {Object} props See BaseTimeRange component
 */
var EnterpriseTimeRangePicker = function (props) {
    return (
    // SplunkwebConnector defines presets, onRequestParseEarliest, onRequestParseLatest, parseEarliest, and parseLatest props for its children
    react_1.default.createElement(SplunkwebConnector_1.default, null,
        react_1.default.createElement(BaseTimeRange_1.BaseTimeRangePicker, __assign({}, props, { enableRealTime: true }))));
};
var editor = [
    {
        enableCollapsible: false,
        enableSeparator: false,
        layout: [
            [
                {
                    label: i18n_1._('Token Name'),
                    option: 'token',
                    editor: 'editor.text',
                },
            ],
            [
                {
                    label: i18n_1._('Default Value'),
                    option: 'defaultValue',
                    editor: TRPEditor_1.default,
                    editorProps: {
                        enableRealTime: true,
                        Connector: SplunkwebConnector_1.default,
                    },
                },
            ],
        ],
    },
];
EnterpriseTimeRangePicker.valueToTokens = BaseTimeRange_1.BaseTimeRangePicker.valueToTokens;
EnterpriseTimeRangePicker.tokensToValue = BaseTimeRange_1.BaseTimeRangePicker.tokensToValue;
EnterpriseTimeRangePicker.config = __assign({ editorConfig: editor, optionsSchema: BaseTimeRange_1.BaseTimeRangePicker.config.schema }, mapKeys_1.default(BaseTimeRange_1.BaseTimeRangePicker.config.meta, function (value, key) {
    return key === 'defaultConfig' ? 'baseShape' : key;
}));
exports.default = enhancer_1.withInputWrapper(EnterpriseTimeRangePicker);


/***/ }),
/* 9 */
/***/ (function(module, exports) {

module.exports = require("lodash/mapKeys");

/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-time-range/SplunkwebConnector");

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.withInputWrapper = exports.InputContainer = void 0;
var react_1 = __importStar(__webpack_require__(0));
var styled_components_1 = __importDefault(__webpack_require__(3));
var i18n_1 = __webpack_require__(1);
var get_1 = __importDefault(__webpack_require__(4));
var lodash_1 = __webpack_require__(12);
var react_sortable_hoc_1 = __webpack_require__(13);
var Remove_1 = __importDefault(__webpack_require__(14));
var Warning_1 = __importDefault(__webpack_require__(15));
var Tooltip_1 = __importDefault(__webpack_require__(16));
var Clickable_1 = __importDefault(__webpack_require__(17));
var dashboard_context_1 = __webpack_require__(5);
var themes_1 = __webpack_require__(18);
var riskyCommandUtils_1 = __webpack_require__(19);
var RiskyWarningPopover_1 = __importDefault(__webpack_require__(20));
var OptionalTooltip_1 = __importDefault(__webpack_require__(21));
var dashboard_icons_1 = __webpack_require__(6);
var inputItem_1 = __webpack_require__(22);
var selectedInputBackgroundColor = {
    enterprise: {
        light: themes_1.variables.gray92,
        dark: themes_1.variables.gray30,
    },
    prisma: themes_1.variables.backgroundColorPopup,
};
exports.InputContainer = styled_components_1.default.div.attrs({
    'data-test': 'input-container',
})(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    width: ", "px;\n    padding: 8px;\n    border-radius: 4px;\n    border: 1px solid;\n    position: relative;\n    background-color: ", ";\n    border-color: ", ";\n    &:hover {\n        background-color: ", ";\n    }\n"], ["\n    width: ", "px;\n    padding: 8px;\n    border-radius: 4px;\n    border: 1px solid;\n    position: relative;\n    background-color: ",
    ";\n    border-color: ",
    ";\n    &:hover {\n        background-color: ",
    ";\n    }\n"])), function (props) { return props.width; }, themes_1.pickVariant('showSelection', {
    true: selectedInputBackgroundColor,
    false: 'transparent',
}), themes_1.pickVariant('showSelection', {
    true: {
        enterprise: themes_1.variables.accentColorL10,
        prisma: themes_1.variables.interactiveColorPrimary,
    },
    false: 'transparent',
}), themes_1.pickVariant('mode', {
    edit: selectedInputBackgroundColor,
    view: 'transparent',
}));
var InputTitleRemoveContainer = styled_components_1.default.div.attrs({
    'data-test': 'input-title-remove-container',
})(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n    display: flex;\n    margin-bottom: 4px;\n    align-items: center;\n"], ["\n    display: flex;\n    margin-bottom: 4px;\n    align-items: center;\n"])));
var InputTitle = styled_components_1.default.div.attrs({
    'data-test': 'input-title',
})(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    font-size: 13px;\n    cursor: default;\n    color: ", ";\n    min-height: ", ";\n    flex-grow: 0;\n"], ["\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    font-size: 13px;\n    cursor: default;\n    color: ", ";\n    min-height: ", ";\n    flex-grow: 0;\n"])), themes_1.variables.contentColorActive, function (props) { return (props.title ? null : themes_1.variables.lineHeight); });
var InputRemove = styled_components_1.default.div.attrs({
    'data-test': 'input-remove',
})(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n    height: 16px;\n    margin-left: 8px;\n    visibility: ", ";\n    color: ", ";\n    &:hover {\n        cursor: pointer;\n    }\n    display: flex;\n    align-items: center;\n    flex-direction: row-reverse;\n    flex-grow: 0;\n"], ["\n    height: 16px;\n    margin-left: 8px;\n    visibility: ", ";\n    color: ", ";\n    &:hover {\n        cursor: pointer;\n    }\n    display: flex;\n    align-items: center;\n    flex-direction: row-reverse;\n    flex-grow: 0;\n"])), function (props) { return (props.isSelected ? 'visible' : 'hidden'); }, themes_1.variables.contentColorMuted);
var InputDragHandle = styled_components_1.default.div.attrs({ 'data-test': 'input-drag-handle' })(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n    display: none;\n    position: absolute;\n    left: 0;\n    right: 0;\n    margin: 0 auto;\n    width: 30px;\n    height: 15px;\n    /* background gradient dots */\n    background: ", ";\n    /* blurred background */\n    background-color: ", ";\n    cursor: move;\n\n    ", ":hover & {\n        display: block;\n    }\n"], ["\n    display: none;\n    position: absolute;\n    left: 0;\n    right: 0;\n    margin: 0 auto;\n    width: 30px;\n    height: 15px;\n    /* background gradient dots */\n    background: ", ";\n    /* blurred background */\n    background-color: ",
    ";\n    cursor: move;\n\n    ", ":hover & {\n        display: block;\n    }\n"])), themes_1.variables.draggableBackground, themes_1.pick({
    enterprise: {
        light: 'rgba(184, 184, 184, 0.3)',
        dark: 'rgba(35, 36, 43, 0.2)',
    },
    prisma: {
        light: 'rgba(184, 184, 184, 0.3)',
        dark: 'rgba(35, 36, 43, 0.8)',
    },
}), exports.InputContainer);
var SortableDragHandle = react_sortable_hoc_1.SortableHandle(InputDragHandle);
SortableDragHandle.displayName = 'SortableDragHandle';
var tooltipStyle = {
    height: '16px',
};
var InputStatus = styled_components_1.default.div(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n    height: 16px;\n    margin-left: 8px;\n    display: flex;\n    align-items: center;\n    /* Hack to make this align because we can't style the tooltip toggle properly, and it is pushing content down */\n    margin-top: -2px;\n    flex-grow: 0;\n"], ["\n    height: 16px;\n    margin-left: 8px;\n    display: flex;\n    align-items: center;\n    /* Hack to make this align because we can't style the tooltip toggle properly, and it is pushing content down */\n    margin-top: -2px;\n    flex-grow: 0;\n"])));
var InputStatusIcon = styled_components_1.default(Clickable_1.default)(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n    height: 16px;\n    color: ", ";\n    display: flex;\n    align-items: center;\n    flex-grow: 0;\n    cursor: 'pointer';\n"], ["\n    height: 16px;\n    color: ",
    ";\n    display: flex;\n    align-items: center;\n    flex-grow: 0;\n    cursor: 'pointer';\n"])), themes_1.pickVariant('statusType', {
    error: themes_1.variables.accentColorNegative,
    warning: themes_1.variables.statusColorMedium,
}));
var InputStatusContainer = function (_a) {
    var dataTest = _a["data-test"], Icon = _a.icon, statusMessage = _a.statusMessage, statusType = _a.statusType;
    return (react_1.default.createElement(InputStatus, { "data-test": dataTest },
        react_1.default.createElement(Tooltip_1.default, { content: statusMessage, style: tooltipStyle },
            react_1.default.createElement(InputStatusIcon, { "data-test": dataTest + "-icon", statusType: statusType },
                react_1.default.createElement(Icon, { size: "11px", hideDefaultTooltip: true })))));
};
var Spacer = styled_components_1.default.div(templateObject_8 || (templateObject_8 = __makeTemplateObject(["\n    display: flex;\n    flex-grow: 1;\n"], ["\n    display: flex;\n    flex-grow: 1;\n"])));
var empty = {};
/**
 * HOC that wraps the Input component in a container displaying input title, error icon if error is present
 * and remove button if selected in edit mode. Also sets container style (backgroundColor, border) based on mode and isSelected
 * @param {ReactElement} InputComponent Input Component
 * @param {String} mode Dashboard mode - edit or view
 * @param {String} title Input title
 * @param {String} id Input id
 * @param {Object} options Input options
 * @param {Boolean} isSelected Input is selected in edit mode or not
 * @param {Boolean} isError Input has an error
 * @param {String} errorMessage Input error message
 * @param {Number} width Input Container width - TRP would override this
 */
var withInputWrapper = function (InputComponent) {
    var WrappedComponent = function (_a) {
        var _b = _a.mode, mode = _b === void 0 ? 'view' : _b, title = _a.title, id = _a.id, _c = _a.options, options = _c === void 0 ? empty : _c, _d = _a.isSelected, isSelected = _d === void 0 ? false : _d, _e = _a.isError, isError = _e === void 0 ? false : _e, _f = _a.errorMessage, errorMessage = _f === void 0 ? '' : _f, _g = _a.width, width = _g === void 0 ? 180 : _g, _h = _a.onRemove, onRemove = _h === void 0 ? lodash_1.noop : _h, _j = _a.dataSources, dataSources = _j === void 0 ? empty : _j, rest = __rest(_a, ["mode", "title", "id", "options", "isSelected", "isError", "errorMessage", "width", "onRemove", "dataSources"]);
        var _k = __read(react_1.useState(width), 2), currentWidth = _k[0], setWidth = _k[1];
        var enableDragDropInputs = dashboard_context_1.useFeatureFlags().enableDragDropInputs;
        var searchHasNoResults = inputItem_1.getSearchStatus(dataSources);
        var titleMemo = react_1.useMemo(function () {
            var displayTitle = title || '';
            return react_1.default.createElement(InputTitle, { title: displayTitle }, displayTitle);
        }, [title]);
        var handleRemove = react_1.useCallback(function () { return onRemove(id); }, [onRemove, id]);
        var removeMemo = react_1.useMemo(function () {
            if (mode !== 'edit') {
                return null;
            }
            return (react_1.default.createElement(InputRemove, { onClick: handleRemove, isSelected: isSelected },
                react_1.default.createElement(Remove_1.default, { size: "11px" })));
        }, [mode, handleRemove, isSelected]);
        var search = get_1.default(dataSources, 'primary.meta.search');
        var statusMemo = react_1.useMemo(function () {
            if (!isError && !searchHasNoResults) {
                return null;
            }
            var isRiskyCommand = riskyCommandUtils_1.isRiskyCommandError(errorMessage);
            if (isRiskyCommand) {
                var tooltipMessage = riskyCommandUtils_1.formatRiskyCommandErrorMessage(errorMessage);
                return (react_1.default.createElement(OptionalTooltip_1.default, { message: tooltipMessage },
                    react_1.default.createElement(RiskyWarningPopover_1.default, { statusIcon: react_1.default.createElement(InputStatusIcon, { "data-test": "risky-error", statusType: "error", tabIndex: 0 },
                            react_1.default.createElement(Warning_1.default, { size: "11px", hideDefaultTooltip: true })), riskySearch: search, id: id, message: errorMessage, type: "input" })));
            }
            return isError ? (react_1.default.createElement(InputStatusContainer, { "data-test": "input-error", statusMessage: errorMessage, icon: Warning_1.default, statusType: "error" })) : (react_1.default.createElement(InputStatusContainer, { "data-test": "input-search", statusMessage: i18n_1._('No search results returned'), icon: dashboard_icons_1.NoResult, statusType: "warning" }));
        }, [isError, searchHasNoResults, errorMessage, search, id]);
        var dragHandleEl = react_1.useMemo(function () {
            return enableDragDropInputs && mode === 'edit' && isSelected ? (react_1.default.createElement(SortableDragHandle, null)) : null;
        }, [mode, isSelected, enableDragDropInputs]);
        return (react_1.default.createElement(exports.InputContainer, { mode: mode, width: currentWidth, showSelection: isSelected && mode === 'edit' },
            dragHandleEl,
            react_1.default.createElement(InputTitleRemoveContainer, null,
                titleMemo,
                statusMemo,
                react_1.default.createElement(Spacer, null),
                removeMemo),
            react_1.default.createElement(InputComponent, __assign({ id: id, isSelected: isSelected, options: options, isError: isError, errorMessage: errorMessage, onUpdateWidth: setWidth, dataSources: dataSources }, rest))));
    };
    WrappedComponent.valueToTokens = InputComponent.valueToTokens;
    WrappedComponent.tokensToValue = InputComponent.tokensToValue;
    WrappedComponent.validate = InputComponent.validate;
    WrappedComponent.config = InputComponent.config;
    return WrappedComponent;
};
exports.withInputWrapper = withInputWrapper;
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8;


/***/ }),
/* 12 */
/***/ (function(module, exports) {

module.exports = require("lodash");

/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = require("react-sortable-hoc");

/***/ }),
/* 14 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-icons/Remove");

/***/ }),
/* 15 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-icons/Warning");

/***/ }),
/* 16 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/Tooltip");

/***/ }),
/* 17 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/Clickable");

/***/ }),
/* 18 */
/***/ (function(module, exports) {

module.exports = require("@splunk/themes");

/***/ }),
/* 19 */
/***/ (function(module, exports) {

module.exports = require("@splunk/dashboard-utils/riskyCommandUtils");

/***/ }),
/* 20 */
/***/ (function(module, exports) {

module.exports = require("@splunk/dashboard-ui/RiskyWarningPopover");

/***/ }),
/* 21 */
/***/ (function(module, exports) {

module.exports = require("@splunk/dashboard-ui/utils/OptionalTooltip");

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSearchStatus = exports.fetchDynamicContent = exports.hasDynamicOptions = exports.getItemList = exports.mergeItems = exports.getDynamicItems = exports.dataToItems = exports.dataContract = void 0;
var uniqBy_1 = __importDefault(__webpack_require__(23));
var isEmpty_1 = __importDefault(__webpack_require__(24));
var differenceBy_1 = __importDefault(__webpack_require__(25));
var Base_1 = __webpack_require__(26);
var dashboard_utils_1 = __webpack_require__(27);
var Options_1 = __webpack_require__(28);
exports.dataContract = {
    requiredDataSources: ['primary'],
    initialRequestParams: {
        primary: { offset: 0, count: 1000, progress: false },
    },
    encoding: {
        value: {
            isRequired: true,
            type: ['number', 'string'],
            default: 'primary[0]',
        },
        label: {
            type: ['number', 'string'],
            default: 'primary[1]',
        },
    },
};
/**
 * Extracts data from dataset
 * @param {Hash[DataSet]} dataSources The extracted data binding
 * @param {Object} userDefinedEncoding Encoding contract for label and value
 * @returns {Object} label (optionally) and value arrays
 */
var parseEncoding = function (dataSources, userDefinedEncoding) {
    return Base_1.parse(dataSources, Base_1.mergeEncoding(exports.dataContract.encoding, userDefinedEncoding));
};
/**
 * Convert dynamic data into item list
 * @param {Object} dataProps with label & value fields
 * @param {Array[String|Number]} [dataProps.label] The labels for the input options
 * @param {Array[String|Number]} dataProps.value The values for the input options
 * @returns Array[InputItem] List of label/value pairs
 */
var dataToItems = function (_a) {
    var label = _a.label, value = _a.value;
    if (!Array.isArray(value) || value.length === 0) {
        return [];
    }
    if (Array.isArray(label)) {
        return value.map(function (val, idx) { return ({ label: label[idx], value: val }); });
    }
    return value.map(function (val) { return ({ label: val, value: val }); });
};
exports.dataToItems = dataToItems;
var hasNoData = function (dataSources) {
    return Object.values(dataSources).every(function (_a) {
        var data = _a.data;
        return isEmpty_1.default(data);
    });
};
/**
 * Get dynamic items from dataSources and encoding
 * @param {Object} dataSources Hash of dataSources data
 * @param {Object} encoding Encoding config
 * @returns {Object[]} Array of label/value pairs
 */
var getDynamicItems = function (dataSources, encoding) {
    if (isEmpty_1.default(dataSources) || hasNoData(dataSources)) {
        return [];
    }
    var dataProps = parseEncoding(dataSources, encoding);
    return exports.dataToItems(dataProps);
};
exports.getDynamicItems = getDynamicItems;
/**
 * merge static and dynamic items together
 * @param {string[]} [defaultValues=[]] default values
 * @param {Array[InputItem]} staticItems User defined static list
 * @param {Array[InputItem]} [dynamicItems=[]] Search provided dynamic list
 */
var mergeItems = function (_a) {
    var _b = _a.defaultValues, defaultValues = _b === void 0 ? [] : _b, staticItems = _a.staticItems, _c = _a.dynamicItems, dynamicItems = _c === void 0 ? [] : _c;
    var formattedDefaultValues = defaultValues.map(function (value) { return ({
        label: value,
        value: value,
    }); });
    // Sanitize items, always have a label and value
    var formattedItems = __spread(staticItems, dynamicItems).map(function (_a) {
        var label = _a.label, value = _a.value;
        return ({
            label: label || value,
            value: value,
        });
    });
    var dedupedItems = uniqBy_1.default(formattedItems, function (_a) {
        var value = _a.value;
        return value;
    });
    var defaultValuesNotInItems = differenceBy_1.default(formattedDefaultValues, dedupedItems, 'value');
    return __spread(defaultValuesNotInItems, dedupedItems);
};
exports.mergeItems = mergeItems;
/**
 * Merges items from options with items from dataSource
 * @param {Object} cfg
 * @param {Object} cfg.dataSources Hash of dataSources data
 * @param {Object} cfg.encoding Encoding config
 * @param {Object[]} cfg.items List of default items from options
 * @param {Error} cfg.error A dataSource error
 * @param {Boolean} cfg.loading Datasource is fetching data
 * @param {String[]} [cfg.defaultValues=[]] default values
 */
var getItemList = function (_a) {
    var error = _a.error, loading = _a.loading, dataSources = _a.dataSources, encoding = _a.encoding, items = _a.items, _b = _a.defaultValues, defaultValues = _b === void 0 ? [] : _b, skipEncoding = _a.skipEncoding;
    if (error || loading) {
        return [];
    }
    var dynamicItems = skipEncoding
        ? []
        : exports.getDynamicItems(dataSources, encoding);
    return exports.mergeItems({
        defaultValues: defaultValues,
        staticItems: items,
        dynamicItems: dynamicItems,
    });
};
exports.getItemList = getItemList;
var noItems = [];
var hasDynamicOptions = function (arr) {
    if (!Array.isArray(arr)) {
        throw new TypeError('hasDynamicOptions should receive an array');
    }
    return arr.some(function (v) { return typeof v === 'string' && v.trim().startsWith('>'); });
};
exports.hasDynamicOptions = hasDynamicOptions;
var defaultEncoding = {
    label: 'primary[0]',
    value: 'primary[0]',
};
var fetchDynamicContent = function (_a) {
    var context = _a.context, items = _a.items, dataSources = _a.dataSources, encoding = _a.encoding;
    var hasEncoding = !isEmpty_1.default(encoding);
    if (hasEncoding) {
        dashboard_utils_1.deprecated('Encoding is deprecated, please use Dynamic Options instead.');
    }
    // Return early if there's no data to be dynamic
    if (isEmpty_1.default(dataSources)) {
        return noItems;
    }
    // Calculate items from dynamic items config
    if (exports.hasDynamicOptions([items])) {
        var resolvedItems = Options_1.Options.evaluate({
            context: context,
            options: { items: items },
        }, dataSources).items;
        return resolvedItems;
    }
    // Use user's provided encoding
    if (hasEncoding) {
        return exports.getDynamicItems(dataSources, encoding);
    }
    // Use default encoding
    return exports.getDynamicItems(dataSources, defaultEncoding);
};
exports.fetchDynamicContent = fetchDynamicContent;
// check if the input search (when connected) ran successfully but didn't return any results
var getSearchStatus = function (dataSources) {
    var _a, _b, _c, _d;
    return ((_b = (_a = dataSources.primary) === null || _a === void 0 ? void 0 : _a.meta) === null || _b === void 0 ? void 0 : _b.status) === 'done' &&
        ((_d = (_c = dataSources.primary) === null || _c === void 0 ? void 0 : _c.meta) === null || _d === void 0 ? void 0 : _d.totalCount) === 0;
};
exports.getSearchStatus = getSearchStatus;


/***/ }),
/* 23 */
/***/ (function(module, exports) {

module.exports = require("lodash/uniqBy");

/***/ }),
/* 24 */
/***/ (function(module, exports) {

module.exports = require("lodash/isEmpty");

/***/ }),
/* 25 */
/***/ (function(module, exports) {

module.exports = require("lodash/differenceBy");

/***/ }),
/* 26 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualization-encoding-parsers/Base");

/***/ }),
/* 27 */
/***/ (function(module, exports) {

module.exports = require("@splunk/dashboard-utils");

/***/ }),
/* 28 */
/***/ (function(module, exports) {

module.exports = require("@splunk/visualization-encoding/Options");

/***/ }),
/* 29 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-time-range/Dropdown");

/***/ }),
/* 30 */
/***/ (function(module, exports) {

module.exports = require("@splunk/time-range-utils/time");

/***/ }),
/* 31 */
/***/ (function(module, exports) {

module.exports = require("@splunk/dashboard-telemetry");

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var prop_types_1 = __importDefault(__webpack_require__(2));
var noop = function () { };
var BaseInput = function () { return null; };
BaseInput.propTypes = {
    // input id
    id: prop_types_1.default.string,
    // input title
    title: prop_types_1.default.string,
    // dynamic options context
    context: prop_types_1.default.object,
    // input format options
    options: prop_types_1.default.object,
    // current value, separate by comma input supports multiple value, for example 'foo,bar'
    value: prop_types_1.default.string,
    // datasource state which include data and request params, object key indicate the datasource type.
    dataSources: prop_types_1.default.objectOf(prop_types_1.default.shape({
        /**
         * current request params
         */
        requestParams: prop_types_1.default.object,
        /**
         * current dataset
         */
        data: prop_types_1.default.shape({
            fields: prop_types_1.default.array,
            columns: prop_types_1.default.array,
        }),
        /**
         * error
         */
        error: prop_types_1.default.shape({
            level: prop_types_1.default.string,
            message: prop_types_1.default.string,
        }),
        /**
         * meta data that came with the dataset
         */
        meta: prop_types_1.default.object,
    })),
    /**
     * DEPRECATED: Description the fields and properties of the datasource used when retrieving data
     */
    encoding: prop_types_1.default.object,
    /**
     * A callback to trigger event
     */
    onValueChange: prop_types_1.default.func,
    /**
     * Indicates whether the input is disabled
     */
    isDisabled: prop_types_1.default.bool,
    /**
     * Message to show in disabled state
     */
    disabledMessage: prop_types_1.default.string,
    /**
     * Indicates whether there is errors in the input
     */
    isError: prop_types_1.default.bool,
    /**
     * Message to show in error state
     */
    errorMessage: prop_types_1.default.string,
    /**
     * Indicates whether the input is selected
     */
    isSelected: prop_types_1.default.bool,
    /**
     * input container width in pixel
     */
    width: prop_types_1.default.number,
    /**
     * indicates whether datasource is still fetching data and hasn't had errors
     */
    loading: prop_types_1.default.bool,
    /**
     * dashboard mode - edit/view
     */
    mode: prop_types_1.default.string,
    /**
     * Dynamically update the width of the HOC
     */
    onUpdateWidth: prop_types_1.default.func,
    /**
     * A callback to trigger input removal from definition
     */
    onRemove: prop_types_1.default.func,
    /**
     * DEPRECATED: indicates whether the input should skip using encoding. This is useful when the input options contains dynamic options
     */
    skipEncoding: prop_types_1.default.bool,
};
BaseInput.config = {
    /**
     * default data contract
     */
    dataContract: {
        requiredDataSources: ['primary'],
        initialRequestParams: {
            primary: { offset: 0, count: 100 },
        },
    },
};
BaseInput.defaultProps = {
    context: {},
    options: {},
    onValueChange: noop,
    isDisabled: false,
    isError: false,
    isSelected: false,
    width: 180,
    onUpdateWidth: noop,
    onRemove: noop,
    skipEncoding: false,
};
BaseInput.valueToTokens = function () { return ({}); };
exports.default = BaseInput;


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(__webpack_require__(0));
var prop_types_1 = __importDefault(__webpack_require__(2));
var token_1 = __webpack_require__(34);
var ControlGroup_1 = __importDefault(__webpack_require__(35));
var styled_components_1 = __importDefault(__webpack_require__(3));
var BaseTimeRange_1 = __webpack_require__(7);
// Prevent TRP from overflowing sidebar when it has a large value
// Setting width on ControlGroup doesn't allow TRP to go full width
var InputContainer = styled_components_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    width: 329px;\n"], ["\n    width: 329px;\n"])));
var TRPEditor = function (_a) {
    var onChange = _a.onChange, name = _a.name, value = _a.value, labelPosition = _a.labelPosition, label = _a.label, enableRealTime = _a.enableRealTime, Connector = _a.Connector;
    var isDisabled = token_1.hasTokens(value);
    var handleChange = react_1.useCallback(function (evt, data) {
        onChange(evt, name, data);
    }, [name, onChange]);
    return (react_1.default.createElement(ControlGroup_1.default, { label: label, labelPosition: labelPosition },
        react_1.default.createElement(InputContainer, null,
            react_1.default.createElement(Connector, null,
                react_1.default.createElement(BaseTimeRange_1.BaseTimeRangePicker, { "data-test": name, onValueChange: handleChange, value: value, disabled: isDisabled, enableRealTime: enableRealTime })))));
};
TRPEditor.propTypes = {
    /**
     * Callback when changing the text value
     *
     * @param {SyntheticEvent} event The react `SyntheticEvent`
     * @param {string} name The option name
     * @param {string} value The option value
     */
    onChange: prop_types_1.default.func.isRequired,
    /**
     * The option name
     */
    name: prop_types_1.default.string.isRequired,
    /**
     * A human readable label for the option
     */
    label: prop_types_1.default.string.isRequired,
    /**
     * The option value
     */
    value: prop_types_1.default.string,
    /**
     * Label position
     */
    labelPosition: prop_types_1.default.oneOf(['top', 'left']),
    /**
     * What environment to use
     */
    enableRealTime: prop_types_1.default.bool,
    /**
     * A connector that will supply:
     * presets, onRequestParseEarliest, onRequestParseLatest,
     * parseEarliest, and parseLatest props for its children
     */
    Connector: prop_types_1.default.elementType.isRequired,
};
TRPEditor.defaultProps = {
    value: BaseTimeRange_1.DEFAULT_VALUE,
    labelPosition: 'top',
    enableRealTime: false,
};
exports.default = TRPEditor;
var templateObject_1;


/***/ }),
/* 34 */
/***/ (function(module, exports) {

module.exports = require("@splunk/dashboard-utils/token");

/***/ }),
/* 35 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/ControlGroup");

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = void 0;
var EnterpriseTimeRangePicker_1 = __webpack_require__(8);
Object.defineProperty(exports, "default", { enumerable: true, get: function () { return __importDefault(EnterpriseTimeRangePicker_1).default; } });


/***/ })
/******/ ]);
//# sourceMappingURL=index.js.map