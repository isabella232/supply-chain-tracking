{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@splunk/ui-utils/i18n\"","webpack:///./src/utils/enhancer.tsx","webpack:///external \"prop-types\"","webpack:///external \"lodash/mapKeys\"","webpack:///external \"@splunk/dashboard-icons\"","webpack:///./src/components/BaseInput.jsx","webpack:///external \"lodash/get\"","webpack:///./src/utils/inputItem.js","webpack:///./src/components/BaseTimeRange.jsx","webpack:///external \"styled-components\"","webpack:///external \"lodash\"","webpack:///external \"@splunk/dashboard-context\"","webpack:///external \"@splunk/react-ui/Multiselect\"","webpack:///./src/components/DefaultSelectedValueEditor.tsx","webpack:///external \"@splunk/react-ui/ControlGroup\"","webpack:///./src/components/DropdownEditorConfig.ts","webpack:///./src/components/TRPEditor.jsx","webpack:///./src/index.ts","webpack:///./src/Text/index.js","webpack:///./src/Text/Text.jsx","webpack:///external \"@splunk/react-ui/Text\"","webpack:///external \"@splunk/dashboard-ui/hooks/useTextInput\"","webpack:///external \"react-sortable-hoc\"","webpack:///external \"@splunk/react-icons/Remove\"","webpack:///external \"@splunk/react-icons/Warning\"","webpack:///external \"@splunk/react-ui/Tooltip\"","webpack:///external \"@splunk/react-ui/Clickable\"","webpack:///external \"@splunk/themes\"","webpack:///external \"@splunk/dashboard-utils/riskyCommandUtils\"","webpack:///external \"@splunk/dashboard-ui/RiskyWarningPopover\"","webpack:///external \"@splunk/dashboard-ui/utils/OptionalTooltip\"","webpack:///external \"lodash/uniqBy\"","webpack:///external \"lodash/isEmpty\"","webpack:///external \"lodash/differenceBy\"","webpack:///external \"@splunk/visualization-encoding-parsers/Base\"","webpack:///external \"@splunk/dashboard-utils\"","webpack:///external \"@splunk/visualization-encoding/Options\"","webpack:///./src/Text/TextSchema.js","webpack:///./src/Multiselect/index.js","webpack:///./src/Multiselect/Multiselect.jsx","webpack:///external \"lodash/without\"","webpack:///external \"lodash/difference\"","webpack:///external \"lodash/isEqual\"","webpack:///./src/Multiselect/MultiselectSchema.js","webpack:///./src/components/MultiselectEditorConfig.ts","webpack:///external \"@splunk/react-ui/RadioBar\"","webpack:///external \"@splunk/dashboard-ui/ComboBoxEditor\"","webpack:///./src/components/MultiselectDefaultValueEditor.tsx","webpack:///./src/Select/index.js","webpack:///./src/Select/Select.jsx","webpack:///external \"@splunk/react-ui/Select\"","webpack:///./src/Select/SelectSchema.js","webpack:///./src/Number/index.js","webpack:///./src/Number/Number.jsx","webpack:///external \"@splunk/react-ui/Number\"","webpack:///external \"lodash/debounce\"","webpack:///./src/Number/NumberSchema.js","webpack:///./src/TimeRangePicker/index.js","webpack:///./src/TimeRangePicker/TimeRangePicker.jsx","webpack:///./src/components/DefaultTimeRangeConnector.jsx","webpack:///external \"@splunk/ui-utils/promise\"","webpack:///external \"@splunk/dashboard-utils/time\"","webpack:///external \"@splunk/react-time-range/Dropdown\"","webpack:///external \"@splunk/time-range-utils/time\"","webpack:///external \"@splunk/dashboard-telemetry\"","webpack:///external \"@splunk/dashboard-utils/token\"","webpack:///./src/EnterpriseTimeRangePicker/index.js","webpack:///./src/EnterpriseTimeRangePicker/EnterpriseTimeRangePicker.jsx","webpack:///external \"@splunk/react-time-range/SplunkwebConnector\""],"names":[],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n","module.exports = require(\"react\");","module.exports = require(\"@splunk/ui-utils/i18n\");","import React, { useMemo, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport get from 'lodash/get';\nimport { noop } from 'lodash';\nimport { SortableHandle } from 'react-sortable-hoc';\nimport Remove from '@splunk/react-icons/Remove';\nimport Warning from '@splunk/react-icons/Warning';\nimport type { SVGPropsOptionalViewBox } from '@splunk/react-icons/SVG';\nimport Tooltip from '@splunk/react-ui/Tooltip';\nimport Clickable from '@splunk/react-ui/Clickable';\nimport { useFeatureFlags } from '@splunk/dashboard-context';\nimport { variables, pick, pickVariant } from '@splunk/themes';\nimport {\n    formatRiskyCommandErrorMessage,\n    isRiskyCommandError,\n} from '@splunk/dashboard-utils/riskyCommandUtils';\nimport RiskyWarningPopover from '@splunk/dashboard-ui/RiskyWarningPopover';\nimport OptionalTooltip from '@splunk/dashboard-ui/utils/OptionalTooltip';\nimport { NoResult } from '@splunk/dashboard-icons';\n\nimport { InputProps, HOCProps, InputStaticProps } from '../types';\nimport { getSearchStatus } from './inputItem';\n\ninterface InputContainerProps {\n    showSelection: boolean;\n    mode: 'edit' | 'view';\n    width: number;\n}\n\nconst selectedInputBackgroundColor = {\n    enterprise: {\n        light: variables.gray92,\n        dark: variables.gray30,\n    },\n    prisma: variables.backgroundColorPopup,\n};\n\nexport const InputContainer = styled.div.attrs({\n    'data-test': 'input-container',\n})<InputContainerProps>`\n    width: ${(props) => props.width}px;\n    padding: 8px;\n    border-radius: 4px;\n    border: 1px solid;\n    position: relative;\n    background-color: ${pickVariant<InputContainerProps>('showSelection', {\n        true: selectedInputBackgroundColor,\n        false: 'transparent',\n    })};\n    border-color: ${pickVariant<InputContainerProps>('showSelection', {\n        true: {\n            enterprise: variables.accentColorL10,\n            prisma: variables.interactiveColorPrimary,\n        },\n        false: 'transparent',\n    })};\n    &:hover {\n        background-color: ${pickVariant<InputContainerProps>('mode', {\n            edit: selectedInputBackgroundColor,\n            view: 'transparent',\n        })};\n    }\n`;\n\nconst InputTitleRemoveContainer = styled.div.attrs({\n    'data-test': 'input-title-remove-container',\n})`\n    display: flex;\n    margin-bottom: 4px;\n    align-items: center;\n`;\n\nconst InputTitle = styled.div.attrs({\n    'data-test': 'input-title',\n})`\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    font-size: 13px;\n    cursor: default;\n    color: ${variables.contentColorActive};\n    min-height: ${(props) => (props.title ? null : variables.lineHeight)};\n    flex-grow: 0;\n`;\n\ninterface InputRemoveProps {\n    isSelected: boolean;\n}\n\nconst InputRemove = styled.div.attrs({\n    'data-test': 'input-remove',\n})<InputRemoveProps>`\n    height: 16px;\n    margin-left: 8px;\n    visibility: ${(props) => (props.isSelected ? 'visible' : 'hidden')};\n    color: ${variables.contentColorMuted};\n    &:hover {\n        cursor: pointer;\n    }\n    display: flex;\n    align-items: center;\n    flex-direction: row-reverse;\n    flex-grow: 0;\n`;\n\nconst InputDragHandle = styled.div.attrs({ 'data-test': 'input-drag-handle' })`\n    display: none;\n    position: absolute;\n    left: 0;\n    right: 0;\n    margin: 0 auto;\n    width: 30px;\n    height: 15px;\n    /* background gradient dots */\n    background: ${variables.draggableBackground};\n    /* blurred background */\n    background-color: ${pick({\n        enterprise: {\n            light: 'rgba(184, 184, 184, 0.3)',\n            dark: 'rgba(35, 36, 43, 0.2)',\n        },\n        prisma: {\n            light: 'rgba(184, 184, 184, 0.3)',\n            dark: 'rgba(35, 36, 43, 0.8)',\n        },\n    })};\n    cursor: move;\n\n    ${InputContainer}:hover & {\n        display: block;\n    }\n`;\n\nconst SortableDragHandle = SortableHandle(InputDragHandle);\nSortableDragHandle.displayName = 'SortableDragHandle';\n\nconst tooltipStyle = {\n    height: '16px',\n};\n\ninterface InputStatusContainerProps {\n    'data-test': string;\n    icon: (props: SVGPropsOptionalViewBox) => JSX.Element;\n    statusMessage: string;\n    statusType: string;\n}\n\nconst InputStatus = styled.div`\n    height: 16px;\n    margin-left: 8px;\n    display: flex;\n    align-items: center;\n    /* Hack to make this align because we can't style the tooltip toggle properly, and it is pushing content down */\n    margin-top: -2px;\n    flex-grow: 0;\n`;\n\nconst InputStatusIcon = styled(Clickable)`\n    height: 16px;\n    color: ${pickVariant<Pick<InputStatusContainerProps, 'statusType'>>(\n        'statusType',\n        {\n            error: variables.accentColorNegative,\n            warning: variables.statusColorMedium,\n        }\n    )};\n    display: flex;\n    align-items: center;\n    flex-grow: 0;\n    cursor: 'pointer';\n`;\n\nconst InputStatusContainer = ({\n    'data-test': dataTest,\n    icon: Icon,\n    statusMessage,\n    statusType,\n}: InputStatusContainerProps): JSX.Element => (\n    <InputStatus data-test={dataTest}>\n        <Tooltip content={statusMessage} style={tooltipStyle}>\n            <InputStatusIcon\n                data-test={`${dataTest}-icon`}\n                statusType={statusType}\n            >\n                <Icon size=\"11px\" hideDefaultTooltip />\n            </InputStatusIcon>\n        </Tooltip>\n    </InputStatus>\n);\n\nconst Spacer = styled.div`\n    display: flex;\n    flex-grow: 1;\n`;\n\nconst empty = {};\n\ntype HOC = (props: HOCProps) => React.ReactElement<HOCProps>;\n\n/**\n * HOC that wraps the Input component in a container displaying input title, error icon if error is present\n * and remove button if selected in edit mode. Also sets container style (backgroundColor, border) based on mode and isSelected\n * @param {ReactElement} InputComponent Input Component\n * @param {String} mode Dashboard mode - edit or view\n * @param {String} title Input title\n * @param {String} id Input id\n * @param {Object} options Input options\n * @param {Boolean} isSelected Input is selected in edit mode or not\n * @param {Boolean} isError Input has an error\n * @param {String} errorMessage Input error message\n * @param {Number} width Input Container width - TRP would override this\n */\nexport const withInputWrapper = (\n    InputComponent: React.ComponentType<InputProps> & InputStaticProps\n): HOC => {\n    const WrappedComponent = ({\n        mode = 'view',\n        title,\n        id,\n        options = empty,\n        isSelected = false,\n        isError = false,\n        errorMessage = '',\n        width = 180,\n        onRemove = noop,\n        dataSources = empty,\n        ...rest\n    }: HOCProps): React.ReactElement => {\n        const [currentWidth, setWidth] = useState(width);\n        const { enableDragDropInputs } = useFeatureFlags();\n\n        const searchHasNoResults = getSearchStatus(dataSources);\n\n        const titleMemo = useMemo(() => {\n            const displayTitle = title || '';\n            return <InputTitle title={displayTitle}>{displayTitle}</InputTitle>;\n        }, [title]);\n\n        const handleRemove = useCallback(() => onRemove(id), [onRemove, id]);\n\n        const removeMemo = useMemo(() => {\n            if (mode !== 'edit') {\n                return null;\n            }\n            return (\n                <InputRemove onClick={handleRemove} isSelected={isSelected}>\n                    <Remove size=\"11px\" />\n                </InputRemove>\n            );\n        }, [mode, handleRemove, isSelected]);\n\n        const search = get(dataSources, 'primary.meta.search');\n\n        const statusMemo = useMemo(() => {\n            if (!isError && !searchHasNoResults) {\n                return null;\n            }\n\n            const isRiskyCommand = isRiskyCommandError(errorMessage);\n\n            if (isRiskyCommand) {\n                const tooltipMessage = formatRiskyCommandErrorMessage(\n                    errorMessage\n                );\n                return (\n                    <OptionalTooltip message={tooltipMessage}>\n                        <RiskyWarningPopover\n                            statusIcon={\n                                <InputStatusIcon\n                                    data-test=\"risky-error\"\n                                    statusType=\"error\"\n                                    tabIndex={0}\n                                >\n                                    <Warning size=\"11px\" hideDefaultTooltip />\n                                </InputStatusIcon>\n                            }\n                            riskySearch={search}\n                            id={id}\n                            message={errorMessage}\n                            type=\"input\"\n                        />\n                    </OptionalTooltip>\n                );\n            }\n\n            return isError ? (\n                <InputStatusContainer\n                    data-test=\"input-error\"\n                    statusMessage={errorMessage}\n                    icon={Warning}\n                    statusType=\"error\"\n                />\n            ) : (\n                <InputStatusContainer\n                    data-test=\"input-search\"\n                    statusMessage={_('No search results returned')}\n                    icon={NoResult}\n                    statusType=\"warning\"\n                />\n            );\n        }, [isError, searchHasNoResults, errorMessage, search, id]);\n\n        const dragHandleEl = useMemo(\n            () =>\n                enableDragDropInputs && mode === 'edit' && isSelected ? (\n                    <SortableDragHandle />\n                ) : null,\n            [mode, isSelected, enableDragDropInputs]\n        );\n\n        return (\n            <InputContainer\n                mode={mode}\n                width={currentWidth}\n                showSelection={isSelected && mode === 'edit'}\n            >\n                {dragHandleEl}\n                <InputTitleRemoveContainer>\n                    {titleMemo}\n                    {statusMemo}\n                    <Spacer />\n                    {removeMemo}\n                </InputTitleRemoveContainer>\n                <InputComponent\n                    id={id}\n                    isSelected={isSelected}\n                    options={options}\n                    isError={isError}\n                    errorMessage={errorMessage}\n                    onUpdateWidth={setWidth}\n                    dataSources={dataSources}\n                    {...rest}\n                />\n            </InputContainer>\n        );\n    };\n    WrappedComponent.valueToTokens = InputComponent.valueToTokens;\n    WrappedComponent.tokensToValue = InputComponent.tokensToValue;\n    WrappedComponent.validate = InputComponent.validate;\n    WrappedComponent.config = InputComponent.config;\n    return WrappedComponent;\n};\n","module.exports = require(\"prop-types\");","module.exports = require(\"lodash/mapKeys\");","module.exports = require(\"@splunk/dashboard-icons\");","import T from 'prop-types';\n\nconst noop = () => {};\nconst BaseInput = () => null;\n\nBaseInput.propTypes = {\n    // input id\n    id: T.string,\n    // input title\n    title: T.string,\n    // dynamic options context\n    context: T.object,\n    // input format options\n    options: T.object,\n    // current value, separate by comma input supports multiple value, for example 'foo,bar'\n    value: T.string,\n    // datasource state which include data and request params, object key indicate the datasource type.\n    dataSources: T.objectOf(\n        T.shape({\n            /**\n             * current request params\n             */\n            requestParams: T.object,\n            /**\n             * current dataset\n             */\n            data: T.shape({\n                fields: T.array,\n                columns: T.array,\n            }),\n            /**\n             * error\n             */\n            error: T.shape({\n                level: T.string,\n                message: T.string,\n            }),\n            /**\n             * meta data that came with the dataset\n             */\n            meta: T.object,\n        })\n    ),\n    /**\n     * DEPRECATED: Description the fields and properties of the datasource used when retrieving data\n     */\n    encoding: T.object,\n    /**\n     * A callback to trigger event\n     */\n    onValueChange: T.func,\n    /**\n     * Indicates whether the input is disabled\n     */\n    isDisabled: T.bool,\n    /**\n     * Message to show in disabled state\n     */\n    disabledMessage: T.string,\n    /**\n     * Indicates whether there is errors in the input\n     */\n    isError: T.bool,\n    /**\n     * Message to show in error state\n     */\n    errorMessage: T.string,\n    /**\n     * Indicates whether the input is selected\n     */\n    isSelected: T.bool,\n    /**\n     * input container width in pixel\n     */\n    width: T.number,\n    /**\n     * indicates whether datasource is still fetching data and hasn't had errors\n     */\n    loading: T.bool,\n    /**\n     * dashboard mode - edit/view\n     */\n    mode: T.string,\n    /**\n     * Dynamically update the width of the HOC\n     */\n    onUpdateWidth: T.func,\n    /**\n     * A callback to trigger input removal from definition\n     */\n    onRemove: T.func,\n    /**\n     * DEPRECATED: indicates whether the input should skip using encoding. This is useful when the input options contains dynamic options\n     */\n    skipEncoding: T.bool,\n};\n\nBaseInput.config = {\n    /**\n     * default data contract\n     */\n    dataContract: {\n        requiredDataSources: ['primary'],\n        initialRequestParams: {\n            primary: { offset: 0, count: 100 },\n        },\n    },\n};\n\nBaseInput.defaultProps = {\n    context: {},\n    options: {},\n    onValueChange: noop,\n    isDisabled: false,\n    isError: false,\n    isSelected: false,\n    width: 180,\n    onUpdateWidth: noop,\n    onRemove: noop,\n    skipEncoding: false,\n};\n\nBaseInput.valueToTokens = () => ({});\nexport default BaseInput;\n","module.exports = require(\"lodash/get\");","import uniqBy from 'lodash/uniqBy';\nimport isEmpty from 'lodash/isEmpty';\nimport differenceBy from 'lodash/differenceBy';\nimport {\n    parse as baseParse,\n    mergeEncoding,\n} from '@splunk/visualization-encoding-parsers/Base';\nimport { deprecated } from '@splunk/dashboard-utils';\nimport { Options } from '@splunk/visualization-encoding/Options';\n\nexport const dataContract = {\n    requiredDataSources: ['primary'],\n    initialRequestParams: {\n        primary: { offset: 0, count: 1000, progress: false },\n    },\n    encoding: {\n        value: {\n            isRequired: true,\n            type: ['number', 'string'],\n            default: 'primary[0]',\n        },\n        label: {\n            type: ['number', 'string'],\n            default: 'primary[1]',\n        },\n    },\n};\n\n/**\n * Extracts data from dataset\n * @param {Hash[DataSet]} dataSources The extracted data binding\n * @param {Object} userDefinedEncoding Encoding contract for label and value\n * @returns {Object} label (optionally) and value arrays\n */\nconst parseEncoding = (dataSources, userDefinedEncoding) => {\n    return baseParse(\n        dataSources,\n        mergeEncoding(dataContract.encoding, userDefinedEncoding)\n    );\n};\n\n/**\n * Convert dynamic data into item list\n * @param {Object} dataProps with label & value fields\n * @param {Array[String|Number]} [dataProps.label] The labels for the input options\n * @param {Array[String|Number]} dataProps.value The values for the input options\n * @returns Array[InputItem] List of label/value pairs\n */\nexport const dataToItems = ({ label, value }) => {\n    if (!Array.isArray(value) || value.length === 0) {\n        return [];\n    }\n\n    if (Array.isArray(label)) {\n        return value.map((val, idx) => ({ label: label[idx], value: val }));\n    }\n\n    return value.map((val) => ({ label: val, value: val }));\n};\n\nconst hasNoData = (dataSources) =>\n    Object.values(dataSources).every(({ data }) => isEmpty(data));\n\n/**\n * Get dynamic items from dataSources and encoding\n * @param {Object} dataSources Hash of dataSources data\n * @param {Object} encoding Encoding config\n * @returns {Object[]} Array of label/value pairs\n */\nexport const getDynamicItems = (dataSources, encoding) => {\n    if (isEmpty(dataSources) || hasNoData(dataSources)) {\n        return [];\n    }\n\n    const dataProps = parseEncoding(dataSources, encoding);\n    return dataToItems(dataProps);\n};\n\n/**\n * merge static and dynamic items together\n * @param {string[]} [defaultValues=[]] default values\n * @param {Array[InputItem]} staticItems User defined static list\n * @param {Array[InputItem]} [dynamicItems=[]] Search provided dynamic list\n */\nexport const mergeItems = ({\n    defaultValues = [],\n    staticItems,\n    dynamicItems = [],\n}) => {\n    const formattedDefaultValues = defaultValues.map((value) => ({\n        label: value,\n        value,\n    }));\n\n    // Sanitize items, always have a label and value\n    const formattedItems = [...staticItems, ...dynamicItems].map(\n        ({ label, value }) => ({\n            label: label || value,\n            value,\n        })\n    );\n\n    const dedupedItems = uniqBy(formattedItems, ({ value }) => {\n        return value;\n    });\n\n    const defaultValuesNotInItems = differenceBy(\n        formattedDefaultValues,\n        dedupedItems,\n        'value'\n    );\n\n    return [...defaultValuesNotInItems, ...dedupedItems];\n};\n\n/**\n * Merges items from options with items from dataSource\n * @param {Object} cfg\n * @param {Object} cfg.dataSources Hash of dataSources data\n * @param {Object} cfg.encoding Encoding config\n * @param {Object[]} cfg.items List of default items from options\n * @param {Error} cfg.error A dataSource error\n * @param {Boolean} cfg.loading Datasource is fetching data\n * @param {String[]} [cfg.defaultValues=[]] default values\n */\nexport const getItemList = ({\n    error,\n    loading,\n    dataSources,\n    encoding,\n    items,\n    defaultValues = [],\n    skipEncoding,\n}) => {\n    if (error || loading) {\n        return [];\n    }\n\n    const dynamicItems = skipEncoding\n        ? []\n        : getDynamicItems(dataSources, encoding);\n\n    return mergeItems({\n        defaultValues,\n        staticItems: items,\n        dynamicItems,\n    });\n};\n\nconst noItems = [];\n\nexport const hasDynamicOptions = (arr) => {\n    if (!Array.isArray(arr)) {\n        throw new TypeError('hasDynamicOptions should receive an array');\n    }\n    return arr.some((v) => typeof v === 'string' && v.trim().startsWith('>'));\n};\n\nconst defaultEncoding = {\n    label: 'primary[0]',\n    value: 'primary[0]',\n};\n\nexport const fetchDynamicContent = ({\n    context,\n    items,\n    dataSources,\n    encoding,\n}) => {\n    const hasEncoding = !isEmpty(encoding);\n    if (hasEncoding) {\n        deprecated(\n            'Encoding is deprecated, please use Dynamic Options instead.'\n        );\n    }\n\n    // Return early if there's no data to be dynamic\n    if (isEmpty(dataSources)) {\n        return noItems;\n    }\n\n    // Calculate items from dynamic items config\n    if (hasDynamicOptions([items])) {\n        const { items: resolvedItems } = Options.evaluate(\n            {\n                context,\n                options: { items },\n            },\n            dataSources\n        );\n\n        return resolvedItems;\n    }\n\n    // Use user's provided encoding\n    if (hasEncoding) {\n        return getDynamicItems(dataSources, encoding);\n    }\n\n    // Use default encoding\n    return getDynamicItems(dataSources, defaultEncoding);\n};\n\n// check if the input search (when connected) ran successfully but didn't return any results\nexport const getSearchStatus = (dataSources) =>\n    dataSources.primary?.meta?.status === 'done' &&\n    dataSources.primary?.meta?.totalCount === 0;\n","import React, { useMemo, useCallback, useEffect, useContext } from 'react';\nimport T from 'prop-types';\nimport TimeRangeDropdown from '@splunk/react-time-range/Dropdown';\nimport { createRangeLabel } from '@splunk/time-range-utils/time';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport DashboardContext from '@splunk/dashboard-context';\nimport { TelemetryContext } from '@splunk/dashboard-telemetry';\nimport get from 'lodash/get';\nimport { TimeRangeInput as TimeRangeIcon } from '@splunk/dashboard-icons';\nimport BaseInput from './BaseInput';\n\nexport const DEFAULT_VALUE = '-24h@h,now';\nexport const DEFAULT_LATEST = 'now';\nexport const FORM_INPUT_TYPES = ['relative', 'date', 'dateTime'];\nexport const ADVANCED_INPUT_TYPES = ['relative', 'allTime', 'dateTime'];\nexport const SHORT_WIDTH = 260;\nexport const LONG_WIDTH = 377;\n// todo: change them back to the original values above, after the react-sortable-hoc supporting variable width in grid https://github.com/clauderic/react-sortable-hoc#grid-support\nexport const SHORT_WIDTH_DRAGGABLE = 180;\nexport const LONG_WIDTH_DRAGGABLE = 180;\nexport const LONG_LABEL_LENGTH = 28;\n\nconst parseValue = (value, defaultValue) => {\n    const v = value || defaultValue || DEFAULT_VALUE;\n    const timeRanges = v.split(',');\n\n    return {\n        earliest: timeRanges[0].trim(),\n        latest:\n            timeRanges[1] && timeRanges[1].trim()\n                ? timeRanges[1].trim()\n                : DEFAULT_LATEST,\n    };\n};\n\nconst toValue = ({ earliest, latest }) => `${earliest},${latest}`;\n\nexport const BaseTimeRangePicker = ({\n    id,\n    value,\n    presets,\n    options: { defaultValue = DEFAULT_VALUE },\n    enableRealTime,\n    onValueChange,\n    momentTimeZone,\n    isError,\n    isDisabled,\n    onUpdateWidth,\n    parseEarliest,\n    parseLatest,\n    onRequestParseEarliest,\n    onRequestParseLatest,\n}) => {\n    const { earliest, latest } = parseValue(value, defaultValue);\n\n    const { featureFlags: { enableDragDropInputs } = {} } = useContext(\n        DashboardContext\n    );\n    const telemetry = useContext(TelemetryContext);\n\n    useEffect(() => {\n        const label = createRangeLabel(earliest, latest, {\n            timeRangePresets: presets,\n            maxChars: 0,\n        });\n        if (label.length > LONG_LABEL_LENGTH) {\n            onUpdateWidth(\n                enableDragDropInputs ? LONG_WIDTH_DRAGGABLE : LONG_WIDTH\n            );\n        } else {\n            onUpdateWidth(\n                enableDragDropInputs ? SHORT_WIDTH_DRAGGABLE : SHORT_WIDTH\n            );\n        }\n    }, [earliest, latest, presets, onUpdateWidth, enableDragDropInputs]);\n\n    const formInputTypes = useMemo(\n        () =>\n            enableRealTime\n                ? FORM_INPUT_TYPES.concat(['realTime'])\n                : FORM_INPUT_TYPES,\n        [enableRealTime]\n    );\n\n    const advancedInputTypes = useMemo(\n        () =>\n            enableRealTime\n                ? ADVANCED_INPUT_TYPES.concat(['realTime'])\n                : ADVANCED_INPUT_TYPES,\n        [enableRealTime]\n    );\n\n    const handleChange = useCallback(\n        (evt, changeData) => {\n            const actionPayload = {\n                pageAction: 'performance.markAll',\n                metadata: {\n                    markInformation: 'TimeRangePicker',\n                    currentTime: performance.now(),\n                },\n            };\n            telemetry.emit(actionPayload);\n            return onValueChange(evt, toValue(changeData));\n        },\n        [onValueChange, telemetry]\n    );\n\n    return (\n        <TimeRangeDropdown\n            describedBy={id}\n            presets={presets}\n            onChange={handleChange}\n            earliest={earliest}\n            latest={latest}\n            formInputTypes={formInputTypes}\n            advancedInputTypes={advancedInputTypes}\n            onRequestParseEarliest={onRequestParseEarliest}\n            onRequestParseLatest={onRequestParseLatest}\n            parseEarliest={parseEarliest}\n            parseLatest={parseLatest}\n            momentTimeZone={momentTimeZone}\n            inline={false}\n            labelMaxChars={0}\n            // Not supported https://jira.splunk.com/browse/SCP-31483\n            // placeholder={errorMessage || disabledMessage || null}\n            disabled={isError || isDisabled}\n        />\n    );\n};\n\n/**\n * Transforms the value or values from the input to a set of token: value pairs\n * @param {String} value value of the TRP input\n * @param {Object} meta\n * @param {String} meta.token The token name\n * @returns {Object}\n */\nBaseTimeRangePicker.valueToTokens = (value, { token }) => {\n    if (!token) {\n        return {};\n    }\n    const { earliest, latest } = parseValue(value);\n    return {\n        [`${token}.earliest`]: earliest,\n        [`${token}.latest`]: latest,\n    };\n};\n\n/**\n * Transforms a set of tokens belonging to the input to a valid input value\n * @param {Object} tokens set of submitted tokens\n * @param {String} tokenName the token name associated with the input\n * @param {String} tokenNamespace the namespace the token belongs to\n * @returns {String|null}\n */\nBaseTimeRangePicker.tokensToValue = ({ tokens, tokenName, tokenNamespace }) => {\n    if (!tokens || !tokenName || !tokenNamespace) {\n        return null;\n    }\n\n    const earliest = get(tokens, [tokenNamespace, `${tokenName}.earliest`]);\n    const latest = get(tokens, [tokenNamespace, `${tokenName}.latest`]);\n    return earliest && latest ? toValue({ earliest, latest }) : null;\n};\n\nBaseTimeRangePicker.propTypes = {\n    ...BaseInput.propTypes,\n    enableRealTime: T.bool,\n    // See: https://eng.sv.splunk.com/react-time-range/6.0.0/index.html#/Dropdown\n    presets: T.arrayOf(T.object),\n    momentTimeZone: T.object,\n    parseEarliest: T.object,\n    parseLatest: T.object,\n    onRequestParseEarliest: T.func,\n    onRequestParseLatest: T.func,\n};\n\nBaseTimeRangePicker.defaultProps = {\n    ...BaseInput.defaultProps,\n    enableRealTime: false,\n    presets: [],\n};\n\nconst meta = {\n    label: _('Time Range'),\n    description: _('Select a time range'),\n    defaultConfig: {\n        options: {\n            defaultValue: '-24h@h,now',\n        },\n        title: _('Time Range Input Title'),\n    },\n    tokenPrefix: 'tr',\n    includeInToolbar: true,\n    icon: TimeRangeIcon,\n};\n\nconst schema = {\n    defaultValue: {\n        description: 'Default value of the input when no value is specified',\n        type: 'string',\n    },\n    token: {\n        description: 'Name of the token that will store the value',\n        type: 'string',\n    },\n    tokenNamespace: {\n        description: 'Scope in which the token exists',\n        type: 'string',\n        default: 'default',\n    },\n};\n\nBaseTimeRangePicker.config = {\n    meta,\n    schema,\n};\n","module.exports = require(\"styled-components\");","module.exports = require(\"lodash\");","module.exports = require(\"@splunk/dashboard-context\");","module.exports = require(\"@splunk/react-ui/Multiselect\");","import React, { useCallback, useMemo } from 'react';\nimport { zipWith } from 'lodash';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport ControlGroup from '@splunk/react-ui/ControlGroup';\nimport RadioBar from '@splunk/react-ui/RadioBar';\nimport ComboBoxEditor from '@splunk/dashboard-ui/ComboBoxEditor';\nimport type { ComboBoxOptions } from '@splunk/dashboard-ui/ComboBoxEditor';\nimport MultiselectDefaultValueEditor from './MultiselectDefaultValueEditor';\n\nexport interface SelectInputOptions {\n    items: ComboBoxOptions | string;\n    defaultValue?: string;\n    selectFirstSearchResult?: boolean;\n}\n\ninterface SelectInputOptionsToUpdate {\n    defaultValue?: string;\n    selectFirstSearchResult?: boolean;\n}\n\ninterface SelectInputContext {\n    statics?: [string[], string[]];\n}\n\ntype DefaultValueType = 'defined' | 'first' | 'none';\n\nconst DEFAULT_VALUE_TYPE_DESCRIPTION = {\n    defined: _('Assigns the user defined values as the default'),\n    first: _('Assigns the first value as the default'),\n    none: _('No value will be assigned as the default'),\n};\n\nexport interface DefaultSelectedValueEditorProps {\n    options: SelectInputOptions;\n    context: SelectInputContext;\n    onChange: (\n        event: React.SyntheticEvent,\n        updatedConfig: { options: SelectInputOptionsToUpdate }\n    ) => void;\n    value?: string;\n    isMultiselect?: boolean;\n}\n\nconst DefaultSelectedValueEditor = ({\n    options,\n    context,\n    onChange,\n    value: defaultValue,\n    isMultiselect,\n}: DefaultSelectedValueEditorProps): JSX.Element => {\n    let valueType: DefaultValueType = 'none';\n    if (options.selectFirstSearchResult) {\n        valueType = 'first';\n    } else if (defaultValue !== undefined) {\n        valueType = 'defined';\n    }\n\n    const staticItems = useMemo(() => {\n        if (Array.isArray(options.items)) {\n            return options.items;\n        }\n        const { statics = [[], []] } = context;\n        return zipWith(...statics, (_l, v) => ({\n            value: v,\n        }));\n    }, [options, context]);\n\n    const handleValueTypeChange = useCallback(\n        (event, { value: type }) => {\n            const newDefaultValue = type === 'defined' ? '' : undefined;\n            const newSelectFirstSearchResult =\n                type === 'first' ? true : undefined;\n\n            onChange(event, {\n                options: {\n                    defaultValue: newDefaultValue,\n                    selectFirstSearchResult: newSelectFirstSearchResult,\n                },\n            });\n        },\n        [onChange]\n    );\n\n    const handleDefaultValueChange = useCallback(\n        (event, updatedValue) => {\n            onChange(event, {\n                options: {\n                    defaultValue: updatedValue,\n                },\n            });\n        },\n        [onChange]\n    );\n\n    const selectedValueInput = useMemo(() => {\n        if (valueType !== 'defined') {\n            return null;\n        }\n\n        const DefaultValueEditor = isMultiselect\n            ? MultiselectDefaultValueEditor\n            : ComboBoxEditor;\n        return (\n            <ControlGroup\n                label={_('Choose a Default Value')}\n                labelPosition=\"top\"\n                hideLabel\n                controlsLayout=\"none\"\n            >\n                <DefaultValueEditor\n                    value={defaultValue}\n                    onChange={handleDefaultValueChange}\n                    options={staticItems}\n                    placeholder={_('Choose or type a default value...')}\n                />\n            </ControlGroup>\n        );\n    }, [\n        isMultiselect,\n        valueType,\n        defaultValue,\n        handleDefaultValueChange,\n        staticItems,\n    ]);\n\n    return (\n        <>\n            <ControlGroup\n                label={_('Default Selected Value')}\n                labelPosition=\"top\"\n                hideLabel\n                help={DEFAULT_VALUE_TYPE_DESCRIPTION[valueType]}\n            >\n                <RadioBar\n                    data-test=\"default-selected-value-type\"\n                    onChange={handleValueTypeChange}\n                    value={valueType}\n                >\n                    <RadioBar.Option\n                        label={_('Choose Default')}\n                        value=\"defined\"\n                    />\n                    <RadioBar.Option label={_('First Value')} value=\"first\" />\n                    <RadioBar.Option label={_('None')} value=\"none\" />\n                </RadioBar>\n            </ControlGroup>\n            {selectedValueInput}\n        </>\n    );\n};\n\nexport default DefaultSelectedValueEditor;\n","module.exports = require(\"@splunk/react-ui/ControlGroup\");","import { _ } from '@splunk/ui-utils/i18n';\nimport DefaultValueEditor from './DefaultSelectedValueEditor';\n\nexport const StaticItemEditorConfig = {\n    label: '',\n    option: 'items',\n    editor: 'editor.staticItem',\n    showEditor: ({ options }: { options: Record<string, unknown> }): boolean =>\n        Array.isArray(options.items),\n};\n\nexport const DynamicItemEditorConfig = {\n    label: _('Dynamic Menu Configuration'),\n    option: 'items',\n    context: 'statics',\n    editor: 'editor.dynamicItem',\n    showEditor: ({ options }: { options: Record<string, unknown> }): boolean =>\n        Array.isArray(options.items) ||\n        (typeof options.items === 'string' && /^>/.test(options.items)),\n    editorProps: {\n        help: _(\n            'Advanced configuration options are being used by this input. Please edit in source mode.'\n        ),\n    },\n};\n\nexport const BaseEditor = [\n    {\n        enableCollapsible: false,\n        enableSeparator: true,\n        layout: [\n            [\n                {\n                    label: _('Token Name'),\n                    option: 'token',\n                    editor: 'editor.text',\n                },\n            ],\n        ],\n    },\n    {\n        label: _('Menu Configuration'),\n        enableCollapsible: true,\n        enableSeparator: true,\n        layout: [[DynamicItemEditorConfig]],\n    },\n];\n\nexport default [\n    ...BaseEditor,\n    {\n        label: _('Default Selected Values'),\n        enableSeparator: false,\n        layout: [\n            [\n                {\n                    label: _('Default Value'),\n                    option: 'defaultValue',\n                    context: 'statics',\n                    editor: DefaultValueEditor,\n                    editorProps: { isMultiselect: false },\n                },\n            ],\n        ],\n    },\n];\n","import React, { useCallback } from 'react';\nimport T from 'prop-types';\nimport { hasTokens } from '@splunk/dashboard-utils/token';\nimport ControlGroup from '@splunk/react-ui/ControlGroup';\nimport styled from 'styled-components';\nimport { BaseTimeRangePicker, DEFAULT_VALUE } from './BaseTimeRange';\n\n// Prevent TRP from overflowing sidebar when it has a large value\n// Setting width on ControlGroup doesn't allow TRP to go full width\nconst InputContainer = styled.div`\n    width: 329px;\n`;\nconst TRPEditor = ({\n    onChange,\n    name,\n    value,\n    labelPosition,\n    label,\n    enableRealTime,\n    Connector,\n}) => {\n    const isDisabled = hasTokens(value);\n\n    const handleChange = useCallback(\n        (evt, data) => {\n            onChange(evt, name, data);\n        },\n        [name, onChange]\n    );\n\n    return (\n        <ControlGroup label={label} labelPosition={labelPosition}>\n            <InputContainer>\n                <Connector>\n                    <BaseTimeRangePicker\n                        data-test={name}\n                        onValueChange={handleChange}\n                        value={value}\n                        disabled={isDisabled}\n                        enableRealTime={enableRealTime}\n                    />\n                </Connector>\n            </InputContainer>\n        </ControlGroup>\n    );\n};\n\nTRPEditor.propTypes = {\n    /**\n     * Callback when changing the text value\n     *\n     * @param {SyntheticEvent} event The react `SyntheticEvent`\n     * @param {string} name The option name\n     * @param {string} value The option value\n     */\n    onChange: T.func.isRequired,\n    /**\n     * The option name\n     */\n    name: T.string.isRequired,\n    /**\n     * A human readable label for the option\n     */\n    label: T.string.isRequired,\n    /**\n     * The option value\n     */\n    value: T.string,\n    /**\n     * Label position\n     */\n    labelPosition: T.oneOf(['top', 'left']),\n    /**\n     * What environment to use\n     */\n    enableRealTime: T.bool,\n    /**\n     * A connector that will supply:\n     * presets, onRequestParseEarliest, onRequestParseLatest,\n     * parseEarliest, and parseLatest props for its children\n     */\n    Connector: T.elementType.isRequired,\n};\n\nTRPEditor.defaultProps = {\n    value: DEFAULT_VALUE,\n    labelPosition: 'top',\n    enableRealTime: false,\n};\n\nexport default TRPEditor;\n","export { default as TextInput } from './Text';\nexport { default as MultiselectInput } from './Multiselect';\nexport { default as DropdownInput } from './Select';\nexport { default as NumberInput } from './Number';\nexport { default as TimeRangeInput } from './TimeRangePicker';\nexport { default as EnterpriseTimeRangeInput } from './EnterpriseTimeRangePicker';\nexport { withInputWrapper } from './utils/enhancer';\nexport { default as BaseInput } from './components/BaseInput';\n","export { default } from './Text';\n","import React, { useCallback, useMemo, useRef, useEffect } from 'react';\nimport T from 'prop-types';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport mapKeys from 'lodash/mapKeys';\nimport SUIText from '@splunk/react-ui/Text';\nimport { Text as TextIcon } from '@splunk/dashboard-icons';\nimport { useTextInput } from '@splunk/dashboard-ui/hooks/useTextInput';\nimport { withInputWrapper } from '../utils/enhancer';\nimport BaseInput from '../components/BaseInput';\nimport TextSchema from './TextSchema';\n\nconst TextInputIcon = (props) => (\n    <TextIcon screenReaderText={_('Text Input')} {...props} />\n);\n\n/**\n * We use SUI Text under the hood to render the input\n */\nconst Text = ({\n    id,\n    options: { placeholder: customPlaceholder, defaultValue },\n    value: committedValue,\n    onValueChange,\n    isDisabled,\n    disabledMessage,\n    errorMessage,\n    isError,\n    isSelected,\n}) => {\n    const inputRef = useRef(null);\n    const initialValue = committedValue || defaultValue || '';\n    const placeholder =\n        errorMessage || disabledMessage || customPlaceholder || '';\n    const uniqKey = useMemo(() => ({ id }), [id]);\n    const handleCommit = useCallback((val) => onValueChange(null, val), [\n        onValueChange,\n    ]);\n\n    const {\n        onHandleBlur,\n        onHandleChange,\n        onHandleKeyDown,\n        value: inputValue,\n    } = useTextInput({\n        initialValue,\n        handleCommit,\n        uniqKey,\n        defaultValue,\n    });\n\n    useEffect(() => {\n        // When input is selected, make sure we focus the textbox\n        if (isSelected && !isDisabled && !!inputRef.current) {\n            inputRef.current.focus();\n        }\n    }, [isSelected, isDisabled]);\n\n    return (\n        <SUIText\n            canClear\n            inputId={id}\n            placeholder={placeholder}\n            disabled={isDisabled}\n            error={isError}\n            value={inputValue}\n            onChange={onHandleChange}\n            onKeyDown={onHandleKeyDown}\n            onBlur={onHandleBlur}\n            // NOTE: this will only work while SUI component is a class component. If it's functional, this won't work anymore\n            //  since functions do not have instances https://reactjs.org/docs/refs-and-the-dom.html\n            ref={inputRef}\n        />\n    );\n};\n\n/**\n * Transforms the value from the input to a token: value pair\n * @param {String} value Text input value\n * @param {Object} meta\n * @param {String} meta.token The token name\n * @param {String} meta.prefix Content that prepends the value\n * @param {String} meta.suffix Content that appends the value\n * @returns {Object}\n */\nText.valueToTokens = (value, { token, prefix = '', suffix = '' }) => {\n    if (!token) {\n        return {};\n    }\n    if (!value) {\n        return {\n            [token]: null,\n        };\n    }\n    return {\n        [token]: `${prefix}${value}${suffix}`,\n    };\n};\n\nText.propTypes = { ...BaseInput.propTypes, placeholder: T.string };\nText.defaultProps = { ...BaseInput.defaultProps };\n\nconst editor = [\n    {\n        enableCollapsible: false,\n        enableSeparator: false,\n        layout: [\n            [\n                {\n                    label: _('Token Name'),\n                    option: 'token',\n                    editor: 'editor.text',\n                },\n            ],\n            [\n                {\n                    label: _('Default Value'),\n                    option: 'defaultValue',\n                    editor: 'editor.text',\n                },\n            ],\n        ],\n    },\n];\n\nconst meta = {\n    label: _('Text'),\n    description: _('Field to enter text'),\n    defaultConfig: {\n        options: {\n            defaultValue: _('Default Text'),\n        },\n        title: 'Text Input Title',\n    },\n    tokenPrefix: 'text',\n    icon: TextInputIcon,\n};\n\nText.schema = TextSchema;\nText.editor = editor;\nText.meta = meta;\n\nText.config = {\n    editorConfig: editor,\n    optionsSchema: TextSchema,\n    ...mapKeys(meta, (value, key) =>\n        key === 'defaultConfig' ? 'baseShape' : key\n    ),\n};\n\nexport default withInputWrapper(Text);\n","module.exports = require(\"@splunk/react-ui/Text\");","module.exports = require(\"@splunk/dashboard-ui/hooks/useTextInput\");","module.exports = require(\"react-sortable-hoc\");","module.exports = require(\"@splunk/react-icons/Remove\");","module.exports = require(\"@splunk/react-icons/Warning\");","module.exports = require(\"@splunk/react-ui/Tooltip\");","module.exports = require(\"@splunk/react-ui/Clickable\");","module.exports = require(\"@splunk/themes\");","module.exports = require(\"@splunk/dashboard-utils/riskyCommandUtils\");","module.exports = require(\"@splunk/dashboard-ui/RiskyWarningPopover\");","module.exports = require(\"@splunk/dashboard-ui/utils/OptionalTooltip\");","module.exports = require(\"lodash/uniqBy\");","module.exports = require(\"lodash/isEmpty\");","module.exports = require(\"lodash/differenceBy\");","module.exports = require(\"@splunk/visualization-encoding-parsers/Base\");","module.exports = require(\"@splunk/dashboard-utils\");","module.exports = require(\"@splunk/visualization-encoding/Options\");","export default {\n    placeholder: {\n        description: 'Placeholder text displayed when input is empty',\n        type: 'string',\n    },\n    token: {\n        description: 'Name of the token that will store the value',\n        type: 'string',\n    },\n    tokenNamespace: {\n        description: 'Scope in which the token exists',\n        type: 'string',\n        default: 'default',\n    },\n    prefix: {\n        description: 'Text that will be prepended to the text input value',\n        type: 'string',\n    },\n    suffix: {\n        description: 'Text that will be concatenated to the text input value',\n        type: 'string',\n    },\n    defaultValue: {\n        description: 'Default value of the input when no value is specified',\n        type: 'string',\n    },\n};\n","export { default } from './Multiselect';\n","import React, { useCallback, useMemo, useEffect } from 'react';\nimport without from 'lodash/without';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport difference from 'lodash/difference';\nimport isEqual from 'lodash/isEqual';\nimport mapKeys from 'lodash/mapKeys';\nimport { MultiselectInput as MultiselectIcon } from '@splunk/dashboard-icons';\nimport SUIMultiselect from '@splunk/react-ui/Multiselect';\nimport { withInputWrapper } from '../utils/enhancer';\nimport {\n    dataContract,\n    mergeItems,\n    hasDynamicOptions,\n    fetchDynamicContent,\n    getSearchStatus,\n} from '../utils/inputItem';\nimport BaseInput from '../components/BaseInput';\nimport MultiselectSchema from './MultiselectSchema';\nimport MultiselectEditor from '../components/MultiselectEditorConfig';\n\nconst noItems = [];\n\nconst parseValue = (value) => {\n    if (value) {\n        return value.split(',');\n    }\n    return noItems;\n};\n\nconst toValue = (arr) => (arr ? arr.join(',') : '');\n\n/**\n * We use SUI Multiselect under the hood to render the input\n */\nconst Multiselect = ({\n    value,\n    context = {},\n    options: {\n        items = [],\n        defaultValue,\n        clearDefaultOnSelection = true,\n        selectFirstSearchResult = false,\n    },\n    dataSources = {},\n    encoding,\n    onValueChange,\n    loading: isLoading,\n    isError,\n    errorMessage,\n    isDisabled: initialDisabledStatus,\n    disabledMessage: initialDisabledMessaged,\n}) => {\n    const searchHasNoResults = getSearchStatus(dataSources);\n\n    const defaultValueArray = useMemo(\n        () => (defaultValue ? parseValue(defaultValue) : noItems),\n        [defaultValue]\n    );\n\n    // defaultValue should be null as it can evaluate to static items if the values are not presented in the item list\n    const isDisabled =\n        initialDisabledStatus || (searchHasNoResults && defaultValue == null);\n    const disabledMessage =\n        isDisabled && (initialDisabledMessaged || _('No search results'));\n\n    // Memoized: Calculate the menuItems and the first search result for dynamic items\n    const { menuItems, firstSearchResult } = useMemo(() => {\n        if (isError || isLoading || isDisabled) {\n            return { menuItems: noItems, firstSearchResult: noItems };\n        }\n\n        // Fetch the set of items from dataSources\n        const hasDynamicItems = hasDynamicOptions([items]);\n        const dynamicItems = fetchDynamicContent({\n            context,\n            items,\n            dataSources,\n            encoding,\n        });\n\n        // Get the first result from the dynamic data\n        const firstResult =\n            selectFirstSearchResult && dynamicItems.length > 0\n                ? [dynamicItems[0].value]\n                : noItems;\n\n        // Merge dynamic and static values\n        const staticItems = hasDynamicItems ? noItems : items;\n        const mergedItems = mergeItems({\n            dynamicItems,\n            staticItems,\n            defaultValues: defaultValueArray,\n        });\n\n        // Filter invalid items from the items list\n        // Items are invalid if they do not have a value\n        const validItems = mergedItems.filter((item) => !!item.value);\n\n        return { menuItems: validItems, firstSearchResult: firstResult };\n    }, [\n        isError,\n        isLoading,\n        isDisabled,\n        items,\n        defaultValueArray,\n        context,\n        dataSources,\n        encoding,\n        selectFirstSearchResult,\n    ]);\n\n    // In order to set the token on input creation once the search resolves\n    useEffect(() => {\n        if (!value && firstSearchResult.length > 0) {\n            onValueChange(null, toValue(firstSearchResult));\n        }\n    }, [firstSearchResult, onValueChange, value]);\n\n    const selectedValues = useMemo(() => {\n        // SUI Multiselect displays default value regardless of being in disabled or loading state\n        if (isDisabled || isError || isLoading) {\n            return noItems;\n        }\n        if (value) {\n            return parseValue(value);\n        }\n        return selectFirstSearchResult ? firstSearchResult : defaultValueArray;\n    }, [\n        isDisabled,\n        isError,\n        isLoading,\n        value,\n        selectFirstSearchResult,\n        defaultValueArray,\n        firstSearchResult,\n    ]);\n\n    // Memoize creation of multiselect options based on data and configurations\n    const multiselectOptions = useMemo(() => {\n        return menuItems.map(({ label, value: val }) => (\n            <SUIMultiselect.Option label={label} value={val} key={val} />\n        ));\n    }, [menuItems]);\n\n    const placeholder = useMemo(() => {\n        return _(errorMessage || disabledMessage || 'Select a value');\n    }, [disabledMessage, errorMessage]);\n\n    const loadingMessage = _('Loading menu items...');\n\n    // onChange handler for multiselect, dereferences the item value from SUI payload\n    const handleValueChange = useCallback(\n        (evt, { values }) => {\n            if (values.length === 0 && selectFirstSearchResult) {\n                // If we de-select all options, select firstSearchResult as default\n                onValueChange(evt, toValue(firstSearchResult));\n                return;\n            }\n            // a hacky way to detect whether user clicked on the \"Select All\" button\n            const isSelectAllClicked = isEqual(\n                [...values].sort(),\n                menuItems.map((item) => item.value).sort()\n            );\n\n            // special case: we want to clear default value when user selects a new value\n            const hasDefaultValue = defaultValueArray.length > 0;\n            const isNonDefaultValueSelected =\n                difference(values, defaultValueArray).length > 0;\n            const wasOnlyDefaultValueSelected = isEqual(\n                [...selectedValues].sort(),\n                [...defaultValueArray].sort()\n            );\n\n            const shouldClearDefaultValue =\n                clearDefaultOnSelection &&\n                hasDefaultValue &&\n                isNonDefaultValueSelected &&\n                wasOnlyDefaultValueSelected &&\n                !isSelectAllClicked;\n\n            const newValues = shouldClearDefaultValue\n                ? without(values, ...defaultValueArray)\n                : values;\n\n            onValueChange(evt, toValue(newValues));\n        },\n        [\n            selectFirstSearchResult,\n            menuItems,\n            defaultValueArray,\n            selectedValues,\n            clearDefaultOnSelection,\n            onValueChange,\n            firstSearchResult,\n        ]\n    );\n\n    return (\n        <SUIMultiselect\n            values={selectedValues}\n            onChange={handleValueChange}\n            placeholder={placeholder}\n            disabled={isDisabled || isError}\n            isLoadingOptions={isLoading}\n            loadingMessage={loadingMessage}\n            compact\n            defaultPlacement=\"below\"\n        >\n            {multiselectOptions}\n        </SUIMultiselect>\n    );\n};\n\n/**\n * Transforms the value or values from the input to a set of token: value pairs\n * @param {String} value Select only the selected item value\n * @param {Object} meta\n * @param {String} meta.token The token name\n * @returns {Object}\n */\nMultiselect.valueToTokens = (value, { token }) => {\n    if (!token) {\n        return {};\n    }\n    if (!value) {\n        return {\n            [token]: null,\n        };\n    }\n    return {\n        [token]: `${value}`,\n    };\n};\n\nMultiselect.propTypes = {\n    ...BaseInput.propTypes,\n};\nMultiselect.defaultProps = {\n    ...BaseInput.defaultProps,\n};\n\nconst meta = {\n    label: _('Multiselect'),\n    description: _('Select multiple list values'),\n    defaultConfig: {\n        options: {\n            items: [\n                { label: _('All'), value: '*' },\n                { label: _('Item 1'), value: 'item001' },\n                { label: _('Item 2'), value: 'item002' },\n                { label: _('Item 3'), value: 'item003' },\n            ],\n            defaultValue: 'item001,item002',\n        },\n        title: _('Multiselect Input Title'),\n    },\n    tokenPrefix: 'ms',\n    icon: MultiselectIcon,\n};\n\nMultiselect.config = {\n    optionsSchema: MultiselectSchema,\n    editorConfig: MultiselectEditor,\n    dataContract,\n    ...mapKeys(meta, (value, key) =>\n        key === 'defaultConfig' ? 'baseShape' : key\n    ),\n};\n\nexport default withInputWrapper(Multiselect);\n","module.exports = require(\"lodash/without\");","module.exports = require(\"lodash/difference\");","module.exports = require(\"lodash/isEqual\");","const commonProperties = {\n    token: {\n        description: 'Name of the token that will store the value',\n        type: 'string',\n    },\n    tokenNamespace: {\n        description: 'Scope in which the token exists',\n        type: 'string',\n        default: 'default',\n    },\n    items: {\n        description: 'Specify the label text that appears below the value.',\n        anyOf: [\n            {\n                type: 'array',\n                items: {\n                    type: 'object',\n                    properties: {\n                        label: {\n                            description:\n                                'The text displayed in the dropdown menu',\n                            type: 'string',\n                            minLength: 1,\n                            pattern: '.*\\\\S.*',\n                        },\n                        value: {\n                            description:\n                                'The value used when the menu item is selected',\n                            type: 'string',\n                            minLength: 1,\n                            pattern: '.*\\\\S.*',\n                        },\n                    },\n                    required: ['value'],\n                },\n            },\n            {\n                type: 'string',\n                pattern: '^>.*',\n            },\n        ],\n    },\n    clearDefaultOnSelection: {\n        description: 'Clear the default value when selecting another value.',\n        type: 'boolean',\n        default: true,\n    },\n};\n\nexport default {\n    // extend means we are defining not just the properties, but the entire option schema itself\n    extend: {\n        type: 'object',\n        anyOf: [\n            {\n                properties: {\n                    selectFirstSearchResult: {\n                        description:\n                            'Select the first result of an attached search as default.',\n                        type: 'boolean',\n                        default: false,\n                        const: false,\n                    },\n                    defaultValue: {\n                        description:\n                            'Default value of the input when no value is specified',\n                        type: 'string',\n                    },\n                    ...commonProperties,\n                },\n                additionalProperties: false,\n            },\n            {\n                properties: {\n                    selectFirstSearchResult: {\n                        description:\n                            'Select the first result of an attached search as default.',\n                        type: 'boolean',\n                        default: false,\n                        const: true,\n                    },\n                    // setting a property to false means it is disallowed\n                    defaultValue: false,\n                    ...commonProperties,\n                },\n                additionalProperties: false,\n            },\n        ],\n    },\n};\n","import { _ } from '@splunk/ui-utils/i18n';\nimport DefaultValueEditor from './DefaultSelectedValueEditor';\nimport { BaseEditor } from './DropdownEditorConfig';\n\nexport default [\n    ...BaseEditor,\n    {\n        label: _('Default Selected Values'),\n        enableSeparator: false,\n        layout: [\n            [\n                {\n                    label: _('Default Value'),\n                    option: 'defaultValue',\n                    context: 'statics',\n                    editor: DefaultValueEditor,\n                    editorProps: { isMultiselect: true },\n                },\n            ],\n        ],\n    },\n];\n","module.exports = require(\"@splunk/react-ui/RadioBar\");","module.exports = require(\"@splunk/dashboard-ui/ComboBoxEditor\");","import React, { useCallback, useMemo } from 'react';\nimport Multiselect from '@splunk/react-ui/Multiselect';\n\ninterface MultiselectDefaultValueEditorProps {\n    /**\n     * Comma-separated values that list the value of the multiselect.\n     */\n    value?: string;\n    /**\n     * List of label-value pairs to list as options for the combo box.\n     */\n    options: { value: string }[];\n    /**\n     * Placeholder to display when the combo box is empty.\n     */\n    placeholder?: string;\n    /**\n     * Callback invoked when the value of the multiselect changes.\n     */\n    onChange: (evt: React.SyntheticEvent, updatedValue: string) => void;\n}\n\n/**\n * Component to edit default values for Multiselect inputs. Designed to be used with the\n * DefaultSelectedValueEditor component.\n */\nconst MultiselectDefaultValueEditor = ({\n    value,\n    options,\n    placeholder,\n    onChange,\n}: MultiselectDefaultValueEditorProps): JSX.Element => {\n    const handleChange = useCallback(\n        (evt, { values }) => {\n            onChange(evt, values.join(',').trim());\n        },\n        [onChange]\n    );\n\n    const uniqueValues = useMemo(() => {\n        if (!value) {\n            return [];\n        }\n        return Array.from(new Set(value.split(',')));\n    }, [value]);\n\n    const multiselectOptions = useMemo(\n        () =>\n            options.map(({ value: v }) => (\n                <Multiselect.Option key={v} label={v} value={v} />\n            )),\n        [options]\n    );\n\n    return (\n        <Multiselect\n            values={uniqueValues}\n            onChange={handleChange}\n            placeholder={placeholder}\n            allowNewValues\n        >\n            {multiselectOptions}\n        </Multiselect>\n    );\n};\n\nexport default MultiselectDefaultValueEditor;\n","export { default } from './Select';\n","import React, { useCallback, useMemo, useEffect } from 'react';\nimport SUISelect from '@splunk/react-ui/Select';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport mapKeys from 'lodash/mapKeys';\nimport { DropdownInput as DropdownIcon } from '@splunk/dashboard-icons';\nimport BaseInput from '../components/BaseInput';\nimport { withInputWrapper } from '../utils/enhancer';\nimport {\n    dataContract,\n    mergeItems,\n    fetchDynamicContent,\n    hasDynamicOptions,\n    getSearchStatus,\n} from '../utils/inputItem';\nimport SelectSchema from './SelectSchema';\nimport DropdownEditor from '../components/DropdownEditorConfig';\n\nconst selectStyle = {\n    width: '100%',\n};\n\nconst loadingMessage = _('Loading menu items...');\n\nconst noItems = [];\n\nconst Select = ({\n    value,\n    onValueChange,\n    options: { defaultValue, items = noItems, selectFirstSearchResult = false },\n    dataSources,\n    encoding,\n    context,\n    loading: isLoading,\n    isError,\n    errorMessage,\n    isDisabled: initialDisableStatus,\n    disabledMessage: initialDisabledMessage,\n}) => {\n    const searchHasNoResults = getSearchStatus(dataSources);\n\n    // defaultValue should be null as it can evaluate to static items if the values are not presented in the item list\n    const isDisabled =\n        initialDisableStatus || (searchHasNoResults && defaultValue == null);\n    const disabledMessage =\n        isDisabled && (initialDisabledMessage || _('No search results'));\n\n    // Memoized: Calculate the menuItems and the first search result for dynamic items\n    const { menuItems, firstSearchResult } = useMemo(() => {\n        if (isError || isLoading || isDisabled) {\n            return { menuItems: noItems, firstSearchResult: null };\n        }\n\n        // Fetch the set of items from dataSources\n        const dynamicItems = fetchDynamicContent({\n            context,\n            items,\n            dataSources,\n            encoding,\n        });\n\n        // Get the first result from the dynamic data\n        const firstResult =\n            selectFirstSearchResult && dynamicItems.length > 0\n                ? dynamicItems[0].value\n                : null;\n\n        // Merge dynamic and static values\n        const defaultValues = defaultValue != null ? [defaultValue] : noItems;\n        const staticItems = hasDynamicOptions([items]) ? noItems : items;\n        const mergedItems = mergeItems({\n            dynamicItems,\n            staticItems,\n            defaultValues,\n        });\n\n        // Filter invalid items from the items list\n        // Items are invalid if they do not have a value\n        const validItems = mergedItems.filter((item) => !!item.value);\n\n        // Convert merged items into Select Options\n        // itemValue is guaranteed to be unique from getItemList\n        const menuOptions = validItems.map(({ label, value: itemValue }) => (\n            <SUISelect.Option\n                label={label}\n                value={itemValue}\n                key={itemValue}\n                truncate\n            />\n        ));\n\n        return { menuItems: menuOptions, firstSearchResult: firstResult };\n    }, [\n        isError,\n        isLoading,\n        isDisabled,\n        items,\n        defaultValue,\n        context,\n        dataSources,\n        encoding,\n        selectFirstSearchResult,\n    ]);\n\n    const currentValue = value || firstSearchResult || defaultValue || '';\n\n    // In order to set the token on input creation once the search resolves\n    useEffect(() => {\n        if (!value && !!firstSearchResult) {\n            onValueChange(null, firstSearchResult);\n        }\n    }, [firstSearchResult, onValueChange, value]);\n\n    // Click handler for select, dereferences item value from SUI payload\n    const handleClick = useCallback(\n        (evt, { value: itemValue }) => {\n            // TODO: keep this from firing if value hasn't actually changed?\n            onValueChange(evt, itemValue);\n        },\n        [onValueChange]\n    );\n\n    const placeholder = useMemo(() => {\n        return _(errorMessage || disabledMessage || 'Select a value');\n    }, [errorMessage, disabledMessage]);\n\n    return (\n        <SUISelect\n            value={currentValue}\n            onChange={handleClick}\n            disabled={isDisabled || isError}\n            defaultPlacement=\"below\"\n            // TODO: restore when theme is fixed to be red outline instead of red fill\n            // error={isError}\n            // Externally to the input can determine if the input is disabled and what the messaging is\n            isLoadingOptions={isLoading}\n            loadingMessage={loadingMessage}\n            placeholder={placeholder}\n            filter={!isLoading}\n            inline\n            style={selectStyle}\n        >\n            {menuItems}\n        </SUISelect>\n    );\n};\n\nSelect.propTypes = {\n    ...BaseInput.propTypes,\n};\n\nSelect.defaultProps = {\n    ...BaseInput.defaultProps,\n};\n\nconst meta = {\n    label: _('Dropdown'),\n    description: _('Select a single list value'),\n    defaultConfig: {\n        options: {\n            items: [\n                { label: _('All'), value: '*' },\n                { label: _('Item 1'), value: 'item001' },\n                { label: _('Item 2'), value: 'item002' },\n            ],\n            defaultValue: '*',\n        },\n        title: _('Dropdown Input Title'),\n    },\n    tokenPrefix: 'dd',\n    icon: DropdownIcon,\n};\n\nSelect.config = {\n    optionsSchema: SelectSchema,\n    editorConfig: DropdownEditor,\n    dataContract,\n    ...mapKeys(meta, (value, key) =>\n        key === 'defaultConfig' ? 'baseShape' : key\n    ),\n};\n\n/**\n * Transforms the value or values from the input to a set of token: value pairs\n * @param {String} value Select only the selected item value\n * @param {Object} meta\n * @param {String} meta.token The token name\n * @param {String} meta.prefix Content that prepends the value\n * @param {String} meta.suffix Content that appends the value\n * @returns {Object}\n */\nSelect.valueToTokens = (value, { token, prefix = '', suffix = '' }) => {\n    if (!token) {\n        return {};\n    }\n    if (!value) {\n        return {\n            [token]: null,\n        };\n    }\n    return {\n        [token]: `${prefix}${value}${suffix}`,\n    };\n};\n\nexport default withInputWrapper(Select);\n","module.exports = require(\"@splunk/react-ui/Select\");","const commonProperties = {\n    token: {\n        description: 'Name of the token that will store the value',\n        type: 'string',\n    },\n    tokenNamespace: {\n        description: 'Scope in which the token exists',\n        type: 'string',\n        default: 'default',\n    },\n    items: {\n        description: 'Specify the label text that appears below the value.',\n        anyOf: [\n            {\n                type: 'array',\n                items: {\n                    type: 'object',\n                    properties: {\n                        label: {\n                            description:\n                                'The text displayed in the dropdown menu',\n                            type: 'string',\n                            minLength: 1,\n                            pattern: '.*\\\\S.*',\n                        },\n                        value: {\n                            description:\n                                'The value used when the menu item is selected',\n                            type: 'string',\n                            minLength: 1,\n                            pattern: '.*\\\\S.*',\n                        },\n                    },\n                    required: ['value'],\n                },\n            },\n            {\n                type: 'string',\n                pattern: '^>.*',\n            },\n        ],\n    },\n    prefix: {\n        description: 'Text that will be prepended to the selected value',\n        type: 'string',\n    },\n    suffix: {\n        description: 'Text that will be concatenated to the selected value',\n        type: 'string',\n    },\n};\n\nexport default {\n    // extend means we are defining not just the properties, but the entire option schema itself\n    extend: {\n        type: 'object',\n        anyOf: [\n            {\n                properties: {\n                    selectFirstSearchResult: {\n                        description:\n                            'Select the first result of an attached search as default.',\n                        type: 'boolean',\n                        default: false,\n                        const: false,\n                    },\n                    defaultValue: {\n                        description:\n                            'Default value of the input when no value is specified',\n                        type: 'string',\n                    },\n                    ...commonProperties,\n                },\n                additionalProperties: false,\n            },\n            {\n                properties: {\n                    selectFirstSearchResult: {\n                        description:\n                            'Select the first result of an attached search as default.',\n                        type: 'boolean',\n                        default: false,\n                        const: true,\n                    },\n                    // setting a property to false means it is disallowed\n                    defaultValue: false,\n                    ...commonProperties,\n                },\n                additionalProperties: false,\n            },\n        ],\n    },\n};\n","export { default } from './Number';\n","import React, { useMemo, useRef, useEffect } from 'react';\nimport T from 'prop-types';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport SUINumber from '@splunk/react-ui/Number';\nimport { NumberInput as NumberIcon } from '@splunk/dashboard-icons';\nimport debounce from 'lodash/debounce';\nimport get from 'lodash/get';\nimport mapKeys from 'lodash/mapKeys';\nimport BaseInput from '../components/BaseInput';\nimport { withInputWrapper } from '../utils/enhancer';\nimport schema from './NumberSchema';\n\nconst NumberInput = ({\n    id,\n    options: { min, max, step, defaultValue },\n    value,\n    onValueChange,\n    isDisabled,\n    disabledMessage,\n    errorMessage,\n    isError,\n    isSelected,\n}) => {\n    const handleChange = useMemo(\n        () => debounce((e, payload) => onValueChange(e, payload.value), 250),\n        [onValueChange]\n    );\n    const consolidatedValue = value != null ? value : defaultValue;\n    // if there is no value or defaultValue, show input as blank by passing null\n    const displayValue =\n        consolidatedValue != null ? Number(consolidatedValue) : null;\n    const inputRef = useRef(null);\n\n    let message;\n    if (isError) {\n        message = errorMessage;\n    } else if (isDisabled) {\n        message = disabledMessage;\n    }\n\n    useEffect(() => {\n        // When input is selected, make sure we focus the textbox\n        if (isSelected && !isDisabled && !!inputRef.current) {\n            inputRef.current.focus();\n        }\n    }, [isSelected, isDisabled]);\n\n    return (\n        <SUINumber\n            min={min}\n            max={max}\n            step={step}\n            error={isError}\n            disabled={isDisabled}\n            inputId={id}\n            onChange={handleChange}\n            // we want to show disabled message if the input is disabled\n            value={message ? null : displayValue}\n            placeholder={message}\n            // NOTE: this will only work while SUI component is a class component. If it's functional, this won't work anymore\n            //  since functions do not have instances https://reactjs.org/docs/refs-and-the-dom.html\n            ref={inputRef}\n        />\n    );\n};\n\nNumberInput.propTypes = {\n    ...BaseInput.propTypes,\n    options: T.shape({\n        min: T.number,\n        max: T.number,\n        step: T.number,\n        defaultValue: T.number,\n    }),\n    value: T.number,\n};\n\nNumberInput.defaultProps = {\n    ...BaseInput.defaultProps,\n};\n\nconst editor = [\n    {\n        enableCollapsible: false,\n        enableSeparator: false,\n        layout: [\n            [\n                {\n                    label: _('Token Name'),\n                    option: 'token',\n                    editor: 'editor.text',\n                },\n            ],\n            [\n                {\n                    label: _('Min'),\n                    option: 'min',\n                    editor: 'editor.number',\n                    placeholder: 'e.g. 0',\n                },\n                {\n                    label: _('Max'),\n                    option: 'max',\n                    editor: 'editor.number',\n                    placeholder: 'e.g. 100',\n                },\n                {\n                    label: _('Step'),\n                    option: 'step',\n                    editor: 'editor.number',\n                    editorProps: {\n                        min: 1,\n                    },\n                },\n            ],\n            [\n                {\n                    label: _('Default Value'),\n                    option: 'defaultValue',\n                    editor: 'editor.number',\n                },\n            ],\n        ],\n    },\n];\nconst meta = {\n    label: _('Number'),\n    description: _('Field to enter a number'),\n    defaultConfig: {\n        options: {\n            defaultValue: 10,\n        },\n        title: _('Number Input Title'),\n    },\n    tokenPrefix: 'num',\n    icon: NumberIcon,\n};\n\nNumberInput.config = {\n    editorConfig: editor,\n    optionsSchema: schema,\n    ...mapKeys(meta, (value, key) =>\n        key === 'defaultConfig' ? 'baseShape' : key\n    ),\n};\n\n/**\n * Transforms the value or values from the input to a set of token: value pairs\n * @param {String} value value of the number input\n * @param {Object} meta\n * @param {String} meta.token The token name\n * @returns {Object}\n */\nNumberInput.valueToTokens = (value, { token }) => {\n    if (!token) {\n        return {};\n    }\n    if (value == null) {\n        return {\n            [token]: null,\n        };\n    }\n    return {\n        [token]: `${value}`,\n    };\n};\n\n/**\n * Transforms a set of tokens belonging to the input to a valid input value\n * @param {Object} tokens set of submitted tokens\n * @param {String} tokenName the token name associated with the input\n * @param {String} tokenNamespace the namespace the token belongs to\n * @returns {Number|null}\n */\nNumberInput.tokensToValue = ({ tokens, tokenName, tokenNamespace }) => {\n    if (!tokens || !tokenName || !tokenNamespace) {\n        return null;\n    }\n\n    // if token is a string, convert to number\n    const value = Number(get(tokens, [tokenNamespace, tokenName]));\n\n    return Number.isNaN(value) ? null : value;\n};\n\n/**\n * validates the static input definition - options/context and returns all the error messages accordingly\n * if no error is found, returns an empty object with errorMessages set to []\n * @param {Object} [inputDef={}]\n * @param {Object} [inputDef.options] input options\n * @returns {Object}\n */\nNumberInput.validate = (inputDef = {}) => {\n    const options = get(inputDef, 'options', {});\n    const errorMessages = [];\n    const { min, max } = options;\n    if (min !== undefined && max !== undefined && min > max) {\n        errorMessages.push('min should be less than max');\n    }\n    return { errorMessages };\n};\n\nexport default withInputWrapper(NumberInput);\n","module.exports = require(\"@splunk/react-ui/Number\");","module.exports = require(\"lodash/debounce\");","export default {\n    defaultValue: {\n        description: 'Default value of the input when no value is specified',\n        anyOf: [{ type: 'number' }, { pattern: '^>.*', type: 'string' }],\n    },\n    token: {\n        description: 'Name of the token that will store the value',\n        type: 'string',\n    },\n    tokenNamespace: {\n        description: 'Scope in which the token exists',\n        type: 'string',\n        default: 'default',\n    },\n    min: {\n        description: 'The smallest allowable value.',\n        anyOf: [{ type: 'number' }, { pattern: '^>.*', type: 'string' }],\n    },\n    max: {\n        description: 'The largest allowable value.',\n        anyOf: [{ type: 'number' }, { pattern: '^>.*', type: 'string' }],\n    },\n    step: {\n        description:\n            'The amount of increment and decrement applied by the buttons and arrow keys.',\n        anyOf: [\n            { type: 'number', default: 1, exclusiveMinimum: 0 },\n            { pattern: '^>.*', type: 'string' },\n        ],\n    },\n};\n","export { default } from './TimeRangePicker';\n","import React from 'react';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport mapKeys from 'lodash/mapKeys';\nimport { withInputWrapper } from '../utils/enhancer';\nimport DefaultTimeRangeConnector from '../components/DefaultTimeRangeConnector';\nimport { BaseTimeRangePicker } from '../components/BaseTimeRange';\nimport TRPEditor from '../components/TRPEditor';\n\nconst TimeRangePicker = (props) => {\n    return (\n        <DefaultTimeRangeConnector>\n            <BaseTimeRangePicker {...props} />\n        </DefaultTimeRangeConnector>\n    );\n};\n\nTimeRangePicker.valueToTokens = BaseTimeRangePicker.valueToTokens;\nTimeRangePicker.tokensToValue = BaseTimeRangePicker.tokensToValue;\n\nconst editor = [\n    {\n        enableCollapsible: false,\n        enableSeparator: false,\n        layout: [\n            [\n                {\n                    label: _('Token Name'),\n                    option: 'token',\n                    editor: 'editor.text',\n                },\n            ],\n            [\n                {\n                    label: _('Default Value'),\n                    option: 'defaultValue',\n                    editor: TRPEditor,\n                    editorProps: {\n                        Connector: DefaultTimeRangeConnector,\n                    },\n                },\n            ],\n        ],\n    },\n];\n\nTimeRangePicker.config = {\n    editorConfig: editor,\n    optionsSchema: BaseTimeRangePicker.config.schema,\n    ...mapKeys(BaseTimeRangePicker.config.meta, (value, key) =>\n        key === 'defaultConfig' ? 'baseShape' : key\n    ),\n};\n\nexport default withInputWrapper(TimeRangePicker);\n","import React, {\n    cloneElement,\n    useState,\n    useCallback,\n    useRef,\n    useEffect,\n} from 'react';\nimport T from 'prop-types';\nimport { makeCancelable } from '@splunk/ui-utils/promise';\nimport { parse, defaultTimePreset } from '@splunk/dashboard-utils/time';\n\nconst parsePromise = (time) => Promise.resolve(parse(time));\n\nconst DefaultTimeRangeConnector = ({ children }) => {\n    const [parseEarliest, setParseEarliest] = useState(null);\n    const [parseLatest, setParseLatest] = useState(null);\n    const cancelableEarliestTimeParser = useRef(null);\n    const cancelableLatestTimeParser = useRef(null);\n\n    useEffect(() => {\n        // cancel on unmount\n        return () => {\n            if (cancelableEarliestTimeParser.current) {\n                cancelableEarliestTimeParser.current.cancel();\n            }\n            if (cancelableLatestTimeParser.current) {\n                cancelableLatestTimeParser.current.cancel();\n            }\n        };\n    }, []);\n\n    const handleRequestParseEarliest = useCallback((time) => {\n        if (cancelableEarliestTimeParser.current) {\n            cancelableEarliestTimeParser.current.cancel();\n        }\n        // Wrap with a cancelable promise\n        cancelableEarliestTimeParser.current = makeCancelable(\n            parsePromise(time)\n        );\n        // Call set state when promise resolves\n        cancelableEarliestTimeParser.current.promise\n            .then((timeData) => {\n                setParseEarliest(timeData);\n            })\n            .catch(() => undefined);\n    }, []);\n\n    const handleRequestParseLatest = useCallback((time) => {\n        if (cancelableLatestTimeParser.current) {\n            cancelableLatestTimeParser.current.cancel();\n        }\n        // Wrap with a cancelable promise\n        cancelableLatestTimeParser.current = makeCancelable(parsePromise(time));\n        // Call set state when promise resolves\n        cancelableLatestTimeParser.current.promise\n            .then((timeData) => {\n                setParseLatest(timeData);\n            })\n            .catch(() => undefined);\n    }, []);\n\n    return cloneElement(React.Children.only(children), {\n        presets: defaultTimePreset,\n        parseEarliest,\n        parseLatest,\n        onRequestParseEarliest: handleRequestParseEarliest,\n        onRequestParseLatest: handleRequestParseLatest,\n    });\n};\n\nDefaultTimeRangeConnector.propTypes = {\n    children: T.element,\n};\n\nexport default DefaultTimeRangeConnector;\n","module.exports = require(\"@splunk/ui-utils/promise\");","module.exports = require(\"@splunk/dashboard-utils/time\");","module.exports = require(\"@splunk/react-time-range/Dropdown\");","module.exports = require(\"@splunk/time-range-utils/time\");","module.exports = require(\"@splunk/dashboard-telemetry\");","module.exports = require(\"@splunk/dashboard-utils/token\");","export { default } from './EnterpriseTimeRangePicker';\n","import React from 'react';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport mapKeys from 'lodash/mapKeys';\nimport SplunkwebConnector from '@splunk/react-time-range/SplunkwebConnector';\nimport { withInputWrapper } from '../utils/enhancer';\nimport { BaseTimeRangePicker } from '../components/BaseTimeRange';\nimport TRPEditor from '../components/TRPEditor';\n\n/**\n * Enterprise Time Range Picker\n * This component depends on Splunkweb which is present in any enterprise installation.\n * It requires specific values to be added to the window global, and it makes API calls to a splunkd backend to get preset and timezone information\n * @param {Object} props See BaseTimeRange component\n */\nconst EnterpriseTimeRangePicker = (props) => {\n    return (\n        // SplunkwebConnector defines presets, onRequestParseEarliest, onRequestParseLatest, parseEarliest, and parseLatest props for its children\n        <SplunkwebConnector>\n            <BaseTimeRangePicker {...props} enableRealTime />\n        </SplunkwebConnector>\n    );\n};\n\nconst editor = [\n    {\n        enableCollapsible: false,\n        enableSeparator: false,\n        layout: [\n            [\n                {\n                    label: _('Token Name'),\n                    option: 'token',\n                    editor: 'editor.text',\n                },\n            ],\n            [\n                {\n                    label: _('Default Value'),\n                    option: 'defaultValue',\n                    editor: TRPEditor,\n                    editorProps: {\n                        enableRealTime: true,\n                        Connector: SplunkwebConnector,\n                    },\n                },\n            ],\n        ],\n    },\n];\n\nEnterpriseTimeRangePicker.valueToTokens = BaseTimeRangePicker.valueToTokens;\nEnterpriseTimeRangePicker.tokensToValue = BaseTimeRangePicker.tokensToValue;\n\nEnterpriseTimeRangePicker.config = {\n    editorConfig: editor,\n    optionsSchema: BaseTimeRangePicker.config.schema,\n    ...mapKeys(BaseTimeRangePicker.config.meta, (value, key) =>\n        key === 'defaultConfig' ? 'baseShape' : key\n    ),\n};\n\nexport default withInputWrapper(EnterpriseTimeRangePicker);\n","module.exports = require(\"@splunk/react-time-range/SplunkwebConnector\");"],"sourceRoot":""}