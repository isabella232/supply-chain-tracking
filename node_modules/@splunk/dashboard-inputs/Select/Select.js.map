{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@splunk/ui-utils/i18n\"","webpack:///external \"@splunk/dashboard-icons\"","webpack:///external \"lodash\"","webpack:///./src/utils/inputItem.js","webpack:///./src/Select/SelectSchema.js","webpack:///./src/Select/Select.jsx","webpack:///external \"@splunk/react-ui/Select\"","webpack:///external \"lodash/mapKeys\"","webpack:///./src/components/BaseInput.jsx","webpack:///external \"prop-types\"","webpack:///./src/utils/enhancer.tsx","webpack:///external \"styled-components\"","webpack:///external \"lodash/get\"","webpack:///external \"react-sortable-hoc\"","webpack:///external \"@splunk/react-icons/Remove\"","webpack:///external \"@splunk/react-icons/Warning\"","webpack:///external \"@splunk/react-ui/Tooltip\"","webpack:///external \"@splunk/react-ui/Clickable\"","webpack:///external \"@splunk/dashboard-context\"","webpack:///external \"@splunk/themes\"","webpack:///external \"@splunk/dashboard-utils/riskyCommandUtils\"","webpack:///external \"@splunk/dashboard-ui/RiskyWarningPopover\"","webpack:///external \"@splunk/dashboard-ui/utils/OptionalTooltip\"","webpack:///external \"lodash/uniqBy\"","webpack:///external \"lodash/isEmpty\"","webpack:///external \"lodash/differenceBy\"","webpack:///external \"@splunk/visualization-encoding-parsers/Base\"","webpack:///external \"@splunk/dashboard-utils\"","webpack:///external \"@splunk/visualization-encoding/Options\"","webpack:///./src/components/DropdownEditorConfig.ts","webpack:///./src/components/DefaultSelectedValueEditor.tsx","webpack:///external \"@splunk/react-ui/ControlGroup\"","webpack:///external \"@splunk/react-ui/RadioBar\"","webpack:///external \"@splunk/dashboard-ui/ComboBoxEditor\"","webpack:///./src/components/MultiselectDefaultValueEditor.tsx","webpack:///external \"@splunk/react-ui/Multiselect\""],"names":[],"mappings":"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","file":"Select.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = require(\"react\");","module.exports = require(\"@splunk/ui-utils/i18n\");","module.exports = require(\"@splunk/dashboard-icons\");","module.exports = require(\"lodash\");","import uniqBy from 'lodash/uniqBy';\nimport isEmpty from 'lodash/isEmpty';\nimport differenceBy from 'lodash/differenceBy';\nimport {\n    parse as baseParse,\n    mergeEncoding,\n} from '@splunk/visualization-encoding-parsers/Base';\nimport { deprecated } from '@splunk/dashboard-utils';\nimport { Options } from '@splunk/visualization-encoding/Options';\n\nexport const dataContract = {\n    requiredDataSources: ['primary'],\n    initialRequestParams: {\n        primary: { offset: 0, count: 1000, progress: false },\n    },\n    encoding: {\n        value: {\n            isRequired: true,\n            type: ['number', 'string'],\n            default: 'primary[0]',\n        },\n        label: {\n            type: ['number', 'string'],\n            default: 'primary[1]',\n        },\n    },\n};\n\n/**\n * Extracts data from dataset\n * @param {Hash[DataSet]} dataSources The extracted data binding\n * @param {Object} userDefinedEncoding Encoding contract for label and value\n * @returns {Object} label (optionally) and value arrays\n */\nconst parseEncoding = (dataSources, userDefinedEncoding) => {\n    return baseParse(\n        dataSources,\n        mergeEncoding(dataContract.encoding, userDefinedEncoding)\n    );\n};\n\n/**\n * Convert dynamic data into item list\n * @param {Object} dataProps with label & value fields\n * @param {Array[String|Number]} [dataProps.label] The labels for the input options\n * @param {Array[String|Number]} dataProps.value The values for the input options\n * @returns Array[InputItem] List of label/value pairs\n */\nexport const dataToItems = ({ label, value }) => {\n    if (!Array.isArray(value) || value.length === 0) {\n        return [];\n    }\n\n    if (Array.isArray(label)) {\n        return value.map((val, idx) => ({ label: label[idx], value: val }));\n    }\n\n    return value.map((val) => ({ label: val, value: val }));\n};\n\nconst hasNoData = (dataSources) =>\n    Object.values(dataSources).every(({ data }) => isEmpty(data));\n\n/**\n * Get dynamic items from dataSources and encoding\n * @param {Object} dataSources Hash of dataSources data\n * @param {Object} encoding Encoding config\n * @returns {Object[]} Array of label/value pairs\n */\nexport const getDynamicItems = (dataSources, encoding) => {\n    if (isEmpty(dataSources) || hasNoData(dataSources)) {\n        return [];\n    }\n\n    const dataProps = parseEncoding(dataSources, encoding);\n    return dataToItems(dataProps);\n};\n\n/**\n * merge static and dynamic items together\n * @param {string[]} [defaultValues=[]] default values\n * @param {Array[InputItem]} staticItems User defined static list\n * @param {Array[InputItem]} [dynamicItems=[]] Search provided dynamic list\n */\nexport const mergeItems = ({\n    defaultValues = [],\n    staticItems,\n    dynamicItems = [],\n}) => {\n    const formattedDefaultValues = defaultValues.map((value) => ({\n        label: value,\n        value,\n    }));\n\n    // Sanitize items, always have a label and value\n    const formattedItems = [...staticItems, ...dynamicItems].map(\n        ({ label, value }) => ({\n            label: label || value,\n            value,\n        })\n    );\n\n    const dedupedItems = uniqBy(formattedItems, ({ value }) => {\n        return value;\n    });\n\n    const defaultValuesNotInItems = differenceBy(\n        formattedDefaultValues,\n        dedupedItems,\n        'value'\n    );\n\n    return [...defaultValuesNotInItems, ...dedupedItems];\n};\n\n/**\n * Merges items from options with items from dataSource\n * @param {Object} cfg\n * @param {Object} cfg.dataSources Hash of dataSources data\n * @param {Object} cfg.encoding Encoding config\n * @param {Object[]} cfg.items List of default items from options\n * @param {Error} cfg.error A dataSource error\n * @param {Boolean} cfg.loading Datasource is fetching data\n * @param {String[]} [cfg.defaultValues=[]] default values\n */\nexport const getItemList = ({\n    error,\n    loading,\n    dataSources,\n    encoding,\n    items,\n    defaultValues = [],\n    skipEncoding,\n}) => {\n    if (error || loading) {\n        return [];\n    }\n\n    const dynamicItems = skipEncoding\n        ? []\n        : getDynamicItems(dataSources, encoding);\n\n    return mergeItems({\n        defaultValues,\n        staticItems: items,\n        dynamicItems,\n    });\n};\n\nconst noItems = [];\n\nexport const hasDynamicOptions = (arr) => {\n    if (!Array.isArray(arr)) {\n        throw new TypeError('hasDynamicOptions should receive an array');\n    }\n    return arr.some((v) => typeof v === 'string' && v.trim().startsWith('>'));\n};\n\nconst defaultEncoding = {\n    label: 'primary[0]',\n    value: 'primary[0]',\n};\n\nexport const fetchDynamicContent = ({\n    context,\n    items,\n    dataSources,\n    encoding,\n}) => {\n    const hasEncoding = !isEmpty(encoding);\n    if (hasEncoding) {\n        deprecated(\n            'Encoding is deprecated, please use Dynamic Options instead.'\n        );\n    }\n\n    // Return early if there's no data to be dynamic\n    if (isEmpty(dataSources)) {\n        return noItems;\n    }\n\n    // Calculate items from dynamic items config\n    if (hasDynamicOptions([items])) {\n        const { items: resolvedItems } = Options.evaluate(\n            {\n                context,\n                options: { items },\n            },\n            dataSources\n        );\n\n        return resolvedItems;\n    }\n\n    // Use user's provided encoding\n    if (hasEncoding) {\n        return getDynamicItems(dataSources, encoding);\n    }\n\n    // Use default encoding\n    return getDynamicItems(dataSources, defaultEncoding);\n};\n\n// check if the input search (when connected) ran successfully but didn't return any results\nexport const getSearchStatus = (dataSources) =>\n    dataSources.primary?.meta?.status === 'done' &&\n    dataSources.primary?.meta?.totalCount === 0;\n","const commonProperties = {\n    token: {\n        description: 'Name of the token that will store the value',\n        type: 'string',\n    },\n    tokenNamespace: {\n        description: 'Scope in which the token exists',\n        type: 'string',\n        default: 'default',\n    },\n    items: {\n        description: 'Specify the label text that appears below the value.',\n        anyOf: [\n            {\n                type: 'array',\n                items: {\n                    type: 'object',\n                    properties: {\n                        label: {\n                            description:\n                                'The text displayed in the dropdown menu',\n                            type: 'string',\n                            minLength: 1,\n                            pattern: '.*\\\\S.*',\n                        },\n                        value: {\n                            description:\n                                'The value used when the menu item is selected',\n                            type: 'string',\n                            minLength: 1,\n                            pattern: '.*\\\\S.*',\n                        },\n                    },\n                    required: ['value'],\n                },\n            },\n            {\n                type: 'string',\n                pattern: '^>.*',\n            },\n        ],\n    },\n    prefix: {\n        description: 'Text that will be prepended to the selected value',\n        type: 'string',\n    },\n    suffix: {\n        description: 'Text that will be concatenated to the selected value',\n        type: 'string',\n    },\n};\n\nexport default {\n    // extend means we are defining not just the properties, but the entire option schema itself\n    extend: {\n        type: 'object',\n        anyOf: [\n            {\n                properties: {\n                    selectFirstSearchResult: {\n                        description:\n                            'Select the first result of an attached search as default.',\n                        type: 'boolean',\n                        default: false,\n                        const: false,\n                    },\n                    defaultValue: {\n                        description:\n                            'Default value of the input when no value is specified',\n                        type: 'string',\n                    },\n                    ...commonProperties,\n                },\n                additionalProperties: false,\n            },\n            {\n                properties: {\n                    selectFirstSearchResult: {\n                        description:\n                            'Select the first result of an attached search as default.',\n                        type: 'boolean',\n                        default: false,\n                        const: true,\n                    },\n                    // setting a property to false means it is disallowed\n                    defaultValue: false,\n                    ...commonProperties,\n                },\n                additionalProperties: false,\n            },\n        ],\n    },\n};\n","import React, { useCallback, useMemo, useEffect } from 'react';\nimport SUISelect from '@splunk/react-ui/Select';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport mapKeys from 'lodash/mapKeys';\nimport { DropdownInput as DropdownIcon } from '@splunk/dashboard-icons';\nimport BaseInput from '../components/BaseInput';\nimport { withInputWrapper } from '../utils/enhancer';\nimport {\n    dataContract,\n    mergeItems,\n    fetchDynamicContent,\n    hasDynamicOptions,\n    getSearchStatus,\n} from '../utils/inputItem';\nimport SelectSchema from './SelectSchema';\nimport DropdownEditor from '../components/DropdownEditorConfig';\n\nconst selectStyle = {\n    width: '100%',\n};\n\nconst loadingMessage = _('Loading menu items...');\n\nconst noItems = [];\n\nconst Select = ({\n    value,\n    onValueChange,\n    options: { defaultValue, items = noItems, selectFirstSearchResult = false },\n    dataSources,\n    encoding,\n    context,\n    loading: isLoading,\n    isError,\n    errorMessage,\n    isDisabled: initialDisableStatus,\n    disabledMessage: initialDisabledMessage,\n}) => {\n    const searchHasNoResults = getSearchStatus(dataSources);\n\n    // defaultValue should be null as it can evaluate to static items if the values are not presented in the item list\n    const isDisabled =\n        initialDisableStatus || (searchHasNoResults && defaultValue == null);\n    const disabledMessage =\n        isDisabled && (initialDisabledMessage || _('No search results'));\n\n    // Memoized: Calculate the menuItems and the first search result for dynamic items\n    const { menuItems, firstSearchResult } = useMemo(() => {\n        if (isError || isLoading || isDisabled) {\n            return { menuItems: noItems, firstSearchResult: null };\n        }\n\n        // Fetch the set of items from dataSources\n        const dynamicItems = fetchDynamicContent({\n            context,\n            items,\n            dataSources,\n            encoding,\n        });\n\n        // Get the first result from the dynamic data\n        const firstResult =\n            selectFirstSearchResult && dynamicItems.length > 0\n                ? dynamicItems[0].value\n                : null;\n\n        // Merge dynamic and static values\n        const defaultValues = defaultValue != null ? [defaultValue] : noItems;\n        const staticItems = hasDynamicOptions([items]) ? noItems : items;\n        const mergedItems = mergeItems({\n            dynamicItems,\n            staticItems,\n            defaultValues,\n        });\n\n        // Filter invalid items from the items list\n        // Items are invalid if they do not have a value\n        const validItems = mergedItems.filter((item) => !!item.value);\n\n        // Convert merged items into Select Options\n        // itemValue is guaranteed to be unique from getItemList\n        const menuOptions = validItems.map(({ label, value: itemValue }) => (\n            <SUISelect.Option\n                label={label}\n                value={itemValue}\n                key={itemValue}\n                truncate\n            />\n        ));\n\n        return { menuItems: menuOptions, firstSearchResult: firstResult };\n    }, [\n        isError,\n        isLoading,\n        isDisabled,\n        items,\n        defaultValue,\n        context,\n        dataSources,\n        encoding,\n        selectFirstSearchResult,\n    ]);\n\n    const currentValue = value || firstSearchResult || defaultValue || '';\n\n    // In order to set the token on input creation once the search resolves\n    useEffect(() => {\n        if (!value && !!firstSearchResult) {\n            onValueChange(null, firstSearchResult);\n        }\n    }, [firstSearchResult, onValueChange, value]);\n\n    // Click handler for select, dereferences item value from SUI payload\n    const handleClick = useCallback(\n        (evt, { value: itemValue }) => {\n            // TODO: keep this from firing if value hasn't actually changed?\n            onValueChange(evt, itemValue);\n        },\n        [onValueChange]\n    );\n\n    const placeholder = useMemo(() => {\n        return _(errorMessage || disabledMessage || 'Select a value');\n    }, [errorMessage, disabledMessage]);\n\n    return (\n        <SUISelect\n            value={currentValue}\n            onChange={handleClick}\n            disabled={isDisabled || isError}\n            defaultPlacement=\"below\"\n            // TODO: restore when theme is fixed to be red outline instead of red fill\n            // error={isError}\n            // Externally to the input can determine if the input is disabled and what the messaging is\n            isLoadingOptions={isLoading}\n            loadingMessage={loadingMessage}\n            placeholder={placeholder}\n            filter={!isLoading}\n            inline\n            style={selectStyle}\n        >\n            {menuItems}\n        </SUISelect>\n    );\n};\n\nSelect.propTypes = {\n    ...BaseInput.propTypes,\n};\n\nSelect.defaultProps = {\n    ...BaseInput.defaultProps,\n};\n\nconst meta = {\n    label: _('Dropdown'),\n    description: _('Select a single list value'),\n    defaultConfig: {\n        options: {\n            items: [\n                { label: _('All'), value: '*' },\n                { label: _('Item 1'), value: 'item001' },\n                { label: _('Item 2'), value: 'item002' },\n            ],\n            defaultValue: '*',\n        },\n        title: _('Dropdown Input Title'),\n    },\n    tokenPrefix: 'dd',\n    icon: DropdownIcon,\n};\n\nSelect.config = {\n    optionsSchema: SelectSchema,\n    editorConfig: DropdownEditor,\n    dataContract,\n    ...mapKeys(meta, (value, key) =>\n        key === 'defaultConfig' ? 'baseShape' : key\n    ),\n};\n\n/**\n * Transforms the value or values from the input to a set of token: value pairs\n * @param {String} value Select only the selected item value\n * @param {Object} meta\n * @param {String} meta.token The token name\n * @param {String} meta.prefix Content that prepends the value\n * @param {String} meta.suffix Content that appends the value\n * @returns {Object}\n */\nSelect.valueToTokens = (value, { token, prefix = '', suffix = '' }) => {\n    if (!token) {\n        return {};\n    }\n    if (!value) {\n        return {\n            [token]: null,\n        };\n    }\n    return {\n        [token]: `${prefix}${value}${suffix}`,\n    };\n};\n\nexport default withInputWrapper(Select);\n","module.exports = require(\"@splunk/react-ui/Select\");","module.exports = require(\"lodash/mapKeys\");","import T from 'prop-types';\n\nconst noop = () => {};\nconst BaseInput = () => null;\n\nBaseInput.propTypes = {\n    // input id\n    id: T.string,\n    // input title\n    title: T.string,\n    // dynamic options context\n    context: T.object,\n    // input format options\n    options: T.object,\n    // current value, separate by comma input supports multiple value, for example 'foo,bar'\n    value: T.string,\n    // datasource state which include data and request params, object key indicate the datasource type.\n    dataSources: T.objectOf(\n        T.shape({\n            /**\n             * current request params\n             */\n            requestParams: T.object,\n            /**\n             * current dataset\n             */\n            data: T.shape({\n                fields: T.array,\n                columns: T.array,\n            }),\n            /**\n             * error\n             */\n            error: T.shape({\n                level: T.string,\n                message: T.string,\n            }),\n            /**\n             * meta data that came with the dataset\n             */\n            meta: T.object,\n        })\n    ),\n    /**\n     * DEPRECATED: Description the fields and properties of the datasource used when retrieving data\n     */\n    encoding: T.object,\n    /**\n     * A callback to trigger event\n     */\n    onValueChange: T.func,\n    /**\n     * Indicates whether the input is disabled\n     */\n    isDisabled: T.bool,\n    /**\n     * Message to show in disabled state\n     */\n    disabledMessage: T.string,\n    /**\n     * Indicates whether there is errors in the input\n     */\n    isError: T.bool,\n    /**\n     * Message to show in error state\n     */\n    errorMessage: T.string,\n    /**\n     * Indicates whether the input is selected\n     */\n    isSelected: T.bool,\n    /**\n     * input container width in pixel\n     */\n    width: T.number,\n    /**\n     * indicates whether datasource is still fetching data and hasn't had errors\n     */\n    loading: T.bool,\n    /**\n     * dashboard mode - edit/view\n     */\n    mode: T.string,\n    /**\n     * Dynamically update the width of the HOC\n     */\n    onUpdateWidth: T.func,\n    /**\n     * A callback to trigger input removal from definition\n     */\n    onRemove: T.func,\n    /**\n     * DEPRECATED: indicates whether the input should skip using encoding. This is useful when the input options contains dynamic options\n     */\n    skipEncoding: T.bool,\n};\n\nBaseInput.config = {\n    /**\n     * default data contract\n     */\n    dataContract: {\n        requiredDataSources: ['primary'],\n        initialRequestParams: {\n            primary: { offset: 0, count: 100 },\n        },\n    },\n};\n\nBaseInput.defaultProps = {\n    context: {},\n    options: {},\n    onValueChange: noop,\n    isDisabled: false,\n    isError: false,\n    isSelected: false,\n    width: 180,\n    onUpdateWidth: noop,\n    onRemove: noop,\n    skipEncoding: false,\n};\n\nBaseInput.valueToTokens = () => ({});\nexport default BaseInput;\n","module.exports = require(\"prop-types\");","import React, { useMemo, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport get from 'lodash/get';\nimport { noop } from 'lodash';\nimport { SortableHandle } from 'react-sortable-hoc';\nimport Remove from '@splunk/react-icons/Remove';\nimport Warning from '@splunk/react-icons/Warning';\nimport type { SVGPropsOptionalViewBox } from '@splunk/react-icons/SVG';\nimport Tooltip from '@splunk/react-ui/Tooltip';\nimport Clickable from '@splunk/react-ui/Clickable';\nimport { useFeatureFlags } from '@splunk/dashboard-context';\nimport { variables, pick, pickVariant } from '@splunk/themes';\nimport {\n    formatRiskyCommandErrorMessage,\n    isRiskyCommandError,\n} from '@splunk/dashboard-utils/riskyCommandUtils';\nimport RiskyWarningPopover from '@splunk/dashboard-ui/RiskyWarningPopover';\nimport OptionalTooltip from '@splunk/dashboard-ui/utils/OptionalTooltip';\nimport { NoResult } from '@splunk/dashboard-icons';\n\nimport { InputProps, HOCProps, InputStaticProps } from '../types';\nimport { getSearchStatus } from './inputItem';\n\ninterface InputContainerProps {\n    showSelection: boolean;\n    mode: 'edit' | 'view';\n    width: number;\n}\n\nconst selectedInputBackgroundColor = {\n    enterprise: {\n        light: variables.gray92,\n        dark: variables.gray30,\n    },\n    prisma: variables.backgroundColorPopup,\n};\n\nexport const InputContainer = styled.div.attrs({\n    'data-test': 'input-container',\n})<InputContainerProps>`\n    width: ${(props) => props.width}px;\n    padding: 8px;\n    border-radius: 4px;\n    border: 1px solid;\n    position: relative;\n    background-color: ${pickVariant<InputContainerProps>('showSelection', {\n        true: selectedInputBackgroundColor,\n        false: 'transparent',\n    })};\n    border-color: ${pickVariant<InputContainerProps>('showSelection', {\n        true: {\n            enterprise: variables.accentColorL10,\n            prisma: variables.interactiveColorPrimary,\n        },\n        false: 'transparent',\n    })};\n    &:hover {\n        background-color: ${pickVariant<InputContainerProps>('mode', {\n            edit: selectedInputBackgroundColor,\n            view: 'transparent',\n        })};\n    }\n`;\n\nconst InputTitleRemoveContainer = styled.div.attrs({\n    'data-test': 'input-title-remove-container',\n})`\n    display: flex;\n    margin-bottom: 4px;\n    align-items: center;\n`;\n\nconst InputTitle = styled.div.attrs({\n    'data-test': 'input-title',\n})`\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    font-size: 13px;\n    cursor: default;\n    color: ${variables.contentColorActive};\n    min-height: ${(props) => (props.title ? null : variables.lineHeight)};\n    flex-grow: 0;\n`;\n\ninterface InputRemoveProps {\n    isSelected: boolean;\n}\n\nconst InputRemove = styled.div.attrs({\n    'data-test': 'input-remove',\n})<InputRemoveProps>`\n    height: 16px;\n    margin-left: 8px;\n    visibility: ${(props) => (props.isSelected ? 'visible' : 'hidden')};\n    color: ${variables.contentColorMuted};\n    &:hover {\n        cursor: pointer;\n    }\n    display: flex;\n    align-items: center;\n    flex-direction: row-reverse;\n    flex-grow: 0;\n`;\n\nconst InputDragHandle = styled.div.attrs({ 'data-test': 'input-drag-handle' })`\n    display: none;\n    position: absolute;\n    left: 0;\n    right: 0;\n    margin: 0 auto;\n    width: 30px;\n    height: 15px;\n    /* background gradient dots */\n    background: ${variables.draggableBackground};\n    /* blurred background */\n    background-color: ${pick({\n        enterprise: {\n            light: 'rgba(184, 184, 184, 0.3)',\n            dark: 'rgba(35, 36, 43, 0.2)',\n        },\n        prisma: {\n            light: 'rgba(184, 184, 184, 0.3)',\n            dark: 'rgba(35, 36, 43, 0.8)',\n        },\n    })};\n    cursor: move;\n\n    ${InputContainer}:hover & {\n        display: block;\n    }\n`;\n\nconst SortableDragHandle = SortableHandle(InputDragHandle);\nSortableDragHandle.displayName = 'SortableDragHandle';\n\nconst tooltipStyle = {\n    height: '16px',\n};\n\ninterface InputStatusContainerProps {\n    'data-test': string;\n    icon: (props: SVGPropsOptionalViewBox) => JSX.Element;\n    statusMessage: string;\n    statusType: string;\n}\n\nconst InputStatus = styled.div`\n    height: 16px;\n    margin-left: 8px;\n    display: flex;\n    align-items: center;\n    /* Hack to make this align because we can't style the tooltip toggle properly, and it is pushing content down */\n    margin-top: -2px;\n    flex-grow: 0;\n`;\n\nconst InputStatusIcon = styled(Clickable)`\n    height: 16px;\n    color: ${pickVariant<Pick<InputStatusContainerProps, 'statusType'>>(\n        'statusType',\n        {\n            error: variables.accentColorNegative,\n            warning: variables.statusColorMedium,\n        }\n    )};\n    display: flex;\n    align-items: center;\n    flex-grow: 0;\n    cursor: 'pointer';\n`;\n\nconst InputStatusContainer = ({\n    'data-test': dataTest,\n    icon: Icon,\n    statusMessage,\n    statusType,\n}: InputStatusContainerProps): JSX.Element => (\n    <InputStatus data-test={dataTest}>\n        <Tooltip content={statusMessage} style={tooltipStyle}>\n            <InputStatusIcon\n                data-test={`${dataTest}-icon`}\n                statusType={statusType}\n            >\n                <Icon size=\"11px\" hideDefaultTooltip />\n            </InputStatusIcon>\n        </Tooltip>\n    </InputStatus>\n);\n\nconst Spacer = styled.div`\n    display: flex;\n    flex-grow: 1;\n`;\n\nconst empty = {};\n\ntype HOC = (props: HOCProps) => React.ReactElement<HOCProps>;\n\n/**\n * HOC that wraps the Input component in a container displaying input title, error icon if error is present\n * and remove button if selected in edit mode. Also sets container style (backgroundColor, border) based on mode and isSelected\n * @param {ReactElement} InputComponent Input Component\n * @param {String} mode Dashboard mode - edit or view\n * @param {String} title Input title\n * @param {String} id Input id\n * @param {Object} options Input options\n * @param {Boolean} isSelected Input is selected in edit mode or not\n * @param {Boolean} isError Input has an error\n * @param {String} errorMessage Input error message\n * @param {Number} width Input Container width - TRP would override this\n */\nexport const withInputWrapper = (\n    InputComponent: React.ComponentType<InputProps> & InputStaticProps\n): HOC => {\n    const WrappedComponent = ({\n        mode = 'view',\n        title,\n        id,\n        options = empty,\n        isSelected = false,\n        isError = false,\n        errorMessage = '',\n        width = 180,\n        onRemove = noop,\n        dataSources = empty,\n        ...rest\n    }: HOCProps): React.ReactElement => {\n        const [currentWidth, setWidth] = useState(width);\n        const { enableDragDropInputs } = useFeatureFlags();\n\n        const searchHasNoResults = getSearchStatus(dataSources);\n\n        const titleMemo = useMemo(() => {\n            const displayTitle = title || '';\n            return <InputTitle title={displayTitle}>{displayTitle}</InputTitle>;\n        }, [title]);\n\n        const handleRemove = useCallback(() => onRemove(id), [onRemove, id]);\n\n        const removeMemo = useMemo(() => {\n            if (mode !== 'edit') {\n                return null;\n            }\n            return (\n                <InputRemove onClick={handleRemove} isSelected={isSelected}>\n                    <Remove size=\"11px\" />\n                </InputRemove>\n            );\n        }, [mode, handleRemove, isSelected]);\n\n        const search = get(dataSources, 'primary.meta.search');\n\n        const statusMemo = useMemo(() => {\n            if (!isError && !searchHasNoResults) {\n                return null;\n            }\n\n            const isRiskyCommand = isRiskyCommandError(errorMessage);\n\n            if (isRiskyCommand) {\n                const tooltipMessage = formatRiskyCommandErrorMessage(\n                    errorMessage\n                );\n                return (\n                    <OptionalTooltip message={tooltipMessage}>\n                        <RiskyWarningPopover\n                            statusIcon={\n                                <InputStatusIcon\n                                    data-test=\"risky-error\"\n                                    statusType=\"error\"\n                                    tabIndex={0}\n                                >\n                                    <Warning size=\"11px\" hideDefaultTooltip />\n                                </InputStatusIcon>\n                            }\n                            riskySearch={search}\n                            id={id}\n                            message={errorMessage}\n                            type=\"input\"\n                        />\n                    </OptionalTooltip>\n                );\n            }\n\n            return isError ? (\n                <InputStatusContainer\n                    data-test=\"input-error\"\n                    statusMessage={errorMessage}\n                    icon={Warning}\n                    statusType=\"error\"\n                />\n            ) : (\n                <InputStatusContainer\n                    data-test=\"input-search\"\n                    statusMessage={_('No search results returned')}\n                    icon={NoResult}\n                    statusType=\"warning\"\n                />\n            );\n        }, [isError, searchHasNoResults, errorMessage, search, id]);\n\n        const dragHandleEl = useMemo(\n            () =>\n                enableDragDropInputs && mode === 'edit' && isSelected ? (\n                    <SortableDragHandle />\n                ) : null,\n            [mode, isSelected, enableDragDropInputs]\n        );\n\n        return (\n            <InputContainer\n                mode={mode}\n                width={currentWidth}\n                showSelection={isSelected && mode === 'edit'}\n            >\n                {dragHandleEl}\n                <InputTitleRemoveContainer>\n                    {titleMemo}\n                    {statusMemo}\n                    <Spacer />\n                    {removeMemo}\n                </InputTitleRemoveContainer>\n                <InputComponent\n                    id={id}\n                    isSelected={isSelected}\n                    options={options}\n                    isError={isError}\n                    errorMessage={errorMessage}\n                    onUpdateWidth={setWidth}\n                    dataSources={dataSources}\n                    {...rest}\n                />\n            </InputContainer>\n        );\n    };\n    WrappedComponent.valueToTokens = InputComponent.valueToTokens;\n    WrappedComponent.tokensToValue = InputComponent.tokensToValue;\n    WrappedComponent.validate = InputComponent.validate;\n    WrappedComponent.config = InputComponent.config;\n    return WrappedComponent;\n};\n","module.exports = require(\"styled-components\");","module.exports = require(\"lodash/get\");","module.exports = require(\"react-sortable-hoc\");","module.exports = require(\"@splunk/react-icons/Remove\");","module.exports = require(\"@splunk/react-icons/Warning\");","module.exports = require(\"@splunk/react-ui/Tooltip\");","module.exports = require(\"@splunk/react-ui/Clickable\");","module.exports = require(\"@splunk/dashboard-context\");","module.exports = require(\"@splunk/themes\");","module.exports = require(\"@splunk/dashboard-utils/riskyCommandUtils\");","module.exports = require(\"@splunk/dashboard-ui/RiskyWarningPopover\");","module.exports = require(\"@splunk/dashboard-ui/utils/OptionalTooltip\");","module.exports = require(\"lodash/uniqBy\");","module.exports = require(\"lodash/isEmpty\");","module.exports = require(\"lodash/differenceBy\");","module.exports = require(\"@splunk/visualization-encoding-parsers/Base\");","module.exports = require(\"@splunk/dashboard-utils\");","module.exports = require(\"@splunk/visualization-encoding/Options\");","import { _ } from '@splunk/ui-utils/i18n';\nimport DefaultValueEditor from './DefaultSelectedValueEditor';\n\nexport const StaticItemEditorConfig = {\n    label: '',\n    option: 'items',\n    editor: 'editor.staticItem',\n    showEditor: ({ options }: { options: Record<string, unknown> }): boolean =>\n        Array.isArray(options.items),\n};\n\nexport const DynamicItemEditorConfig = {\n    label: _('Dynamic Menu Configuration'),\n    option: 'items',\n    context: 'statics',\n    editor: 'editor.dynamicItem',\n    showEditor: ({ options }: { options: Record<string, unknown> }): boolean =>\n        Array.isArray(options.items) ||\n        (typeof options.items === 'string' && /^>/.test(options.items)),\n    editorProps: {\n        help: _(\n            'Advanced configuration options are being used by this input. Please edit in source mode.'\n        ),\n    },\n};\n\nexport const BaseEditor = [\n    {\n        enableCollapsible: false,\n        enableSeparator: true,\n        layout: [\n            [\n                {\n                    label: _('Token Name'),\n                    option: 'token',\n                    editor: 'editor.text',\n                },\n            ],\n        ],\n    },\n    {\n        label: _('Menu Configuration'),\n        enableCollapsible: true,\n        enableSeparator: true,\n        layout: [[DynamicItemEditorConfig]],\n    },\n];\n\nexport default [\n    ...BaseEditor,\n    {\n        label: _('Default Selected Values'),\n        enableSeparator: false,\n        layout: [\n            [\n                {\n                    label: _('Default Value'),\n                    option: 'defaultValue',\n                    context: 'statics',\n                    editor: DefaultValueEditor,\n                    editorProps: { isMultiselect: false },\n                },\n            ],\n        ],\n    },\n];\n","import React, { useCallback, useMemo } from 'react';\nimport { zipWith } from 'lodash';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport ControlGroup from '@splunk/react-ui/ControlGroup';\nimport RadioBar from '@splunk/react-ui/RadioBar';\nimport ComboBoxEditor from '@splunk/dashboard-ui/ComboBoxEditor';\nimport type { ComboBoxOptions } from '@splunk/dashboard-ui/ComboBoxEditor';\nimport MultiselectDefaultValueEditor from './MultiselectDefaultValueEditor';\n\nexport interface SelectInputOptions {\n    items: ComboBoxOptions | string;\n    defaultValue?: string;\n    selectFirstSearchResult?: boolean;\n}\n\ninterface SelectInputOptionsToUpdate {\n    defaultValue?: string;\n    selectFirstSearchResult?: boolean;\n}\n\ninterface SelectInputContext {\n    statics?: [string[], string[]];\n}\n\ntype DefaultValueType = 'defined' | 'first' | 'none';\n\nconst DEFAULT_VALUE_TYPE_DESCRIPTION = {\n    defined: _('Assigns the user defined values as the default'),\n    first: _('Assigns the first value as the default'),\n    none: _('No value will be assigned as the default'),\n};\n\nexport interface DefaultSelectedValueEditorProps {\n    options: SelectInputOptions;\n    context: SelectInputContext;\n    onChange: (\n        event: React.SyntheticEvent,\n        updatedConfig: { options: SelectInputOptionsToUpdate }\n    ) => void;\n    value?: string;\n    isMultiselect?: boolean;\n}\n\nconst DefaultSelectedValueEditor = ({\n    options,\n    context,\n    onChange,\n    value: defaultValue,\n    isMultiselect,\n}: DefaultSelectedValueEditorProps): JSX.Element => {\n    let valueType: DefaultValueType = 'none';\n    if (options.selectFirstSearchResult) {\n        valueType = 'first';\n    } else if (defaultValue !== undefined) {\n        valueType = 'defined';\n    }\n\n    const staticItems = useMemo(() => {\n        if (Array.isArray(options.items)) {\n            return options.items;\n        }\n        const { statics = [[], []] } = context;\n        return zipWith(...statics, (_l, v) => ({\n            value: v,\n        }));\n    }, [options, context]);\n\n    const handleValueTypeChange = useCallback(\n        (event, { value: type }) => {\n            const newDefaultValue = type === 'defined' ? '' : undefined;\n            const newSelectFirstSearchResult =\n                type === 'first' ? true : undefined;\n\n            onChange(event, {\n                options: {\n                    defaultValue: newDefaultValue,\n                    selectFirstSearchResult: newSelectFirstSearchResult,\n                },\n            });\n        },\n        [onChange]\n    );\n\n    const handleDefaultValueChange = useCallback(\n        (event, updatedValue) => {\n            onChange(event, {\n                options: {\n                    defaultValue: updatedValue,\n                },\n            });\n        },\n        [onChange]\n    );\n\n    const selectedValueInput = useMemo(() => {\n        if (valueType !== 'defined') {\n            return null;\n        }\n\n        const DefaultValueEditor = isMultiselect\n            ? MultiselectDefaultValueEditor\n            : ComboBoxEditor;\n        return (\n            <ControlGroup\n                label={_('Choose a Default Value')}\n                labelPosition=\"top\"\n                hideLabel\n                controlsLayout=\"none\"\n            >\n                <DefaultValueEditor\n                    value={defaultValue}\n                    onChange={handleDefaultValueChange}\n                    options={staticItems}\n                    placeholder={_('Choose or type a default value...')}\n                />\n            </ControlGroup>\n        );\n    }, [\n        isMultiselect,\n        valueType,\n        defaultValue,\n        handleDefaultValueChange,\n        staticItems,\n    ]);\n\n    return (\n        <>\n            <ControlGroup\n                label={_('Default Selected Value')}\n                labelPosition=\"top\"\n                hideLabel\n                help={DEFAULT_VALUE_TYPE_DESCRIPTION[valueType]}\n            >\n                <RadioBar\n                    data-test=\"default-selected-value-type\"\n                    onChange={handleValueTypeChange}\n                    value={valueType}\n                >\n                    <RadioBar.Option\n                        label={_('Choose Default')}\n                        value=\"defined\"\n                    />\n                    <RadioBar.Option label={_('First Value')} value=\"first\" />\n                    <RadioBar.Option label={_('None')} value=\"none\" />\n                </RadioBar>\n            </ControlGroup>\n            {selectedValueInput}\n        </>\n    );\n};\n\nexport default DefaultSelectedValueEditor;\n","module.exports = require(\"@splunk/react-ui/ControlGroup\");","module.exports = require(\"@splunk/react-ui/RadioBar\");","module.exports = require(\"@splunk/dashboard-ui/ComboBoxEditor\");","import React, { useCallback, useMemo } from 'react';\nimport Multiselect from '@splunk/react-ui/Multiselect';\n\ninterface MultiselectDefaultValueEditorProps {\n    /**\n     * Comma-separated values that list the value of the multiselect.\n     */\n    value?: string;\n    /**\n     * List of label-value pairs to list as options for the combo box.\n     */\n    options: { value: string }[];\n    /**\n     * Placeholder to display when the combo box is empty.\n     */\n    placeholder?: string;\n    /**\n     * Callback invoked when the value of the multiselect changes.\n     */\n    onChange: (evt: React.SyntheticEvent, updatedValue: string) => void;\n}\n\n/**\n * Component to edit default values for Multiselect inputs. Designed to be used with the\n * DefaultSelectedValueEditor component.\n */\nconst MultiselectDefaultValueEditor = ({\n    value,\n    options,\n    placeholder,\n    onChange,\n}: MultiselectDefaultValueEditorProps): JSX.Element => {\n    const handleChange = useCallback(\n        (evt, { values }) => {\n            onChange(evt, values.join(',').trim());\n        },\n        [onChange]\n    );\n\n    const uniqueValues = useMemo(() => {\n        if (!value) {\n            return [];\n        }\n        return Array.from(new Set(value.split(',')));\n    }, [value]);\n\n    const multiselectOptions = useMemo(\n        () =>\n            options.map(({ value: v }) => (\n                <Multiselect.Option key={v} label={v} value={v} />\n            )),\n        [options]\n    );\n\n    return (\n        <Multiselect\n            values={uniqueValues}\n            onChange={handleChange}\n            placeholder={placeholder}\n            allowNewValues\n        >\n            {multiselectOptions}\n        </Multiselect>\n    );\n};\n\nexport default MultiselectDefaultValueEditor;\n","module.exports = require(\"@splunk/react-ui/Multiselect\");"],"sourceRoot":""}