{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@splunk/dashboard-utils\"","webpack:///external \"lodash/get\"","webpack:///./src/SWACollector.ts"],"names":[],"mappings":";;;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;AClFA,oD;;;;;;;;ACAA,uC;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,yCAAyC;AACzC,8BAA8B;AAC9B,+CAAkD;AAClD,oDAA6B;AAWhB,8BAAsB,GAC/B,qFAAqF,CAAC;AAE1F,IAAM,YAAY,GAAG;IACjB,cAAO,aAAG,CAAC,UAAU,EAAE,6BAA6B,CAAC,KAAK,UAAU;AAApE,CAAoE,CAAC;AAEzE,IAAM,kBAAkB,GAAG,UAAC,UAAkB;IAC1C,iBAAU,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,aAAa;AAAlE,CAAkE,CAAC;AACvE;IACI;QACI,IAAI,CAAC,YAAY,EAAE,EAAE;YACjB,yBAAO,CAAC,IAAI,CAAC,8BAAsB,CAAC,CAAC;SACxC;IACL,CAAC;IAED;;;OAGG;IACH,qDAAqD;IACrD,gCAAS,GAAT,UAAU,OAAyB;QAC/B,IAAI,CAAC,YAAY,EAAE,EAAE;YACjB,MAAM,IAAI,KAAK,CAAC,8BAAsB,CAAC,CAAC;SAC3C;QAEO,SAA6C,OAAO,CAAC,IAAI,WAA1C,EAAf,UAAU,mBAAG,EAAE,MAA2C;QAElE,4CAA4C;QAC5C,IAAI,MAAM,CAAC,sBAAsB,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,EAAE;YAClE,MAAM,CAAC,sBAAsB,CAAC,IAAI,YAC9B,IAAI,EAAE,eAAe,IAClB,OAAO,EACZ,CAAC;SACN;IACL,CAAC;IACL,mBAAC;AAAD,CAAC;AA3BY,oCAAY","file":"SWACollector.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = require(\"@splunk/dashboard-utils\");","module.exports = require(\"lodash/get\");","/* eslint-disable no-underscore-dangle */\n/* eslint-disable camelcase */\nimport { console } from '@splunk/dashboard-utils';\nimport get from 'lodash/get';\nimport { MetricsCollector, CollectorPayload } from './MetricsCollector';\n\ntype pusherFunction = (event: CollectorPayload) => void;\n\ndeclare global {\n    interface Window {\n        _splunk_metrics_events?: { push: pusherFunction };\n    }\n}\n\nexport const NOT_REGISTERED_WARNING =\n    'SWACollector was initialized, but SWA does not appear to be configured on the page.';\n\nconst isRegistered = (): boolean =>\n    typeof get(globalThis, '_splunk_metrics_events.push') === 'function';\n\nconst isPerformanceEvent = (pageAction: string): boolean =>\n    pageAction.substring(0, pageAction.indexOf('.')) === 'performance';\nexport class SWACollector implements MetricsCollector {\n    constructor() {\n        if (!isRegistered()) {\n            console.warn(NOT_REGISTERED_WARNING);\n        }\n    }\n\n    /**\n     * Sends metrics data to a SWA metrics service\n     * @param payload Processed data from the telemetry API\n     */\n    /* eslint-disable-next-line class-methods-use-this */\n    sendEvent(payload: CollectorPayload): void {\n        if (!isRegistered()) {\n            throw new Error(NOT_REGISTERED_WARNING);\n        }\n\n        const { pageAction = '' }: { pageAction?: string } = payload.data;\n\n        // extra `if` check to make the linter happy\n        if (window._splunk_metrics_events && !isPerformanceEvent(pageAction)) {\n            window._splunk_metrics_events.push({\n                type: 'udf.telemetry',\n                ...payload,\n            });\n        }\n    }\n}\n"],"sourceRoot":""}