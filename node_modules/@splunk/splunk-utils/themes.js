"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultTheme = defaultTheme;
exports.getThemeOptions = getThemeOptions;

/**
 * A set of functions for dealing with Splunk themes.
 * @file
 */
var defaultThemeSplunkThemeProviderMap = {
  enterprise: {
    family: 'enterprise',
    colorScheme: 'light',
    density: 'comfortable'
  },
  enterpriseDark: {
    family: 'enterprise',
    colorScheme: 'dark',
    density: 'comfortable'
  },
  prismaLight: {
    family: 'prisma',
    colorScheme: 'light',
    density: 'comfortable'
  },
  prismaDark: {
    family: 'prisma',
    colorScheme: 'dark',
    density: 'comfortable'
  },
  lite: {
    family: 'enterprise',
    colorScheme: 'light',
    density: 'comfortable'
  }
};
/**
 * Determines a default theme name based on the current environment, such as `$C`.
 *
 * @param {Object} [scope=window (if available)] - The environment.
 * @return {String} The theme name (`enterprise`, `lite`, ...)
 * @public
 */

function defaultTheme() {
  var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : typeof window !== 'undefined' ? window : null;

  if (!scope) {
    return 'enterprise';
  }
  /* eslint-disable no-underscore-dangle */


  var partialsTheme = scope.__splunkd_partials__ && scope.__splunkd_partials__['/services/server/info'] && scope.__splunkd_partials__['/services/server/info'].entry[0].content.product_type;
  var scopeTheme = scope.__splunk_ui_theme__;
  /* eslint-enable no-underscore-dangle */

  var cTheme = scope.$C && scope.$C.SPLUNK_UI_THEME;
  return scopeTheme || cTheme || partialsTheme || 'enterprise';
}
/**
 *
 * @param {string} theme
 * @return {object} An object with the props expected by <ThemeProvider> from @splunk/themes
 */


function getThemeOptions(theme) {
  return defaultThemeSplunkThemeProviderMap[theme] || defaultThemeSplunkThemeProviderMap.enterprise;
}