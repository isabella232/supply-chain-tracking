{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/visualizations/splunk-charting.ts","webpack:///external \"@babel/runtime/helpers/typeof\"","webpack:///./src/encoding/index.ts","webpack:///./src/index.ts","webpack:///./src/migrate.ts","webpack:///./src/visualizations/index.ts","webpack:///./src/visualizations/area.ts","webpack:///./src/encoding/encoding.ts","webpack:///external \"@splunk/visualization-encoding-parsers/Base\"","webpack:///external \"@splunk/visualizations/Area\"","webpack:///./src/visualizations/bar.ts","webpack:///external \"@splunk/visualizations/Bar\"","webpack:///./src/visualizations/bubble.ts","webpack:///external \"@splunk/visualizations/Bubble\"","webpack:///./src/visualizations/column.ts","webpack:///external \"@splunk/visualizations/Column\"","webpack:///./src/visualizations/line.ts","webpack:///external \"@splunk/visualizations/Line\"","webpack:///./src/visualizations/pie.ts","webpack:///external \"@splunk/visualizations/Pie\"","webpack:///./src/visualizations/scatter.ts","webpack:///external \"@splunk/visualizations/Scatter\""],"names":[],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import type { VisualizationDefinition } from '@splunk/dashboard-types';\nimport type { EncodingConfig } from '../encoding';\nimport { encodingToDynamicOptionsDSL } from '../encoding';\n\n/**\n *  map of splunk charting based @splunk/dashboard-visualization option names\n *  to updated @splunk/visualization option names\n */\nconst optionRenames = {\n    'axisTitleX.text': 'xAxisTitleText',\n    'axisTitleY.text': 'yAxisTitleText',\n    'axisTitleY2.text': 'y2AxisTitleText',\n    'axisTitleX.visibility': 'xAxisTitleVisibility',\n    'axisTitleY.visibility': 'yAxisTitleVisibility',\n    'axisTitleY2.visibility': 'y2AxisTitleVisibility',\n    'axisLabelsX.majorLabelStyle.rotation': 'xAxisLabelRotation',\n    'axisLabelsX.majorLabelVisibility': 'xAxisLabelVisibility',\n    'axisLabelsY.majorLabelVisibility': 'yAxisLabelVisibility',\n    'axisLabelsY2.majorLabelVisibility': 'y2AxisLabelVisibility',\n    'axisLabelsX.majorTickVisibility': 'xAxisMajorTickVisibility',\n    'axisLabelsY.majorTickVisibility': 'yAxisMajorTickVisibility',\n    'axisLabelsY2.majorTickVisibility': 'y2AxisMajorTickVisibility',\n    'axisLabelsX.minorTickVisibility': 'xAxisMinorTickVisibility',\n    'axisLabelsY.minorTickVisibility': 'yAxisMinorTickVisibility',\n    'axisLabelsY2.minorTickVisibility': 'y2AxisMinorTickVisibility',\n    'axisLabelsX.majorTickSize': 'xAxisMajorTickSize',\n    'axisLabelsY.majorTickSize': 'yAxisMajorTickSize',\n    'axisLabelsY2.majorTickSize': 'y2AxisMajorTickSize',\n    'axisLabelsX.minorTickSize': 'xAxisMinorTickSize',\n    'axisLabelsY.minorTickSize': 'yAxisMinorTickSize',\n    'axisLabelsY2.minorTickSize': 'y2AxisMinorTickSize',\n    'axisLabelsX.majorUnit': 'xAxisMajorTickInterval',\n    'axisLabelsY.majorUnit': 'yAxisMajorTickInterval',\n    'axisLabelsY2.majorUnit': 'y2AxisMajorTickInterval',\n    'axisX.abbreviation': 'xAxisAbbreviation',\n    'axisY.abbreviation': 'yAxisAbbreviation',\n    'axisY2.abbreviation': 'y2AxisAbbreviation',\n    'axisLabelsX.integerUnits': 'showRoundedXAxisLabels',\n    'axisLabelsY2.integerUnits': 'showRoundedY2AxisLabels',\n    'axisLabelsX.maxLabelParts': 'xAxisMaxLabelParts',\n    'axisLabelsX.axisVisibility': 'xAxisLineVisibility',\n    'axisLabelsY.axisVisibility': 'yAxisLineVisibility',\n    'axisLabelsY2.axisVisibility': 'y2AxisLineVisibility',\n    'gridLinesX.showMajorLines': 'showXMajorGridLines',\n    'gridLinesY.showMajorLines': 'showYMajorGridLines',\n    'gridLinesX.showMinorLines': 'showXMinorGridLines',\n    'gridLinesY.showMinorLines': 'showYMinorGridLines',\n    'gridLinesY2.showMajorLines': 'showY2MajorGridLines',\n    'gridLinesY2.showMinorLines': 'showY2MinorGridLines',\n    'axisX.scale': 'xAxisScale',\n    'axisY.scale': 'yAxisScale',\n    'axisY2.scale': 'y2AxisScale',\n    'axisX.maximumNumber': 'xAxisMax',\n    'axisY.maximumNumber': 'yAxisMax',\n    'axisY2.maximumNumber': 'y2AxisMax',\n    'axisX.minimumNumber': 'xAxisMin',\n    'axisY.minimumNumber': 'yAxisMin',\n    'axisY2.minimumNumber': 'y2AxisMin',\n    'axisX.includeZero': 'showXAxisWithZero',\n    'axisY.includeZero': 'showYAxisWithZero',\n    'axisY2.includeZero': 'showY2AxisWithZero',\n    'axisLabelsX.extendsAxisRange': 'showXAxisExtendedRange',\n    'axisLabelsY.extendsAxisRange': 'showYAxisExtendedRange',\n    'layout.splitSeries': 'showSplitSeries',\n    'layout.splitSeries.allowIndependentYRanges': 'showIndependentYRanges',\n    'axisY2.enabled': 'showOverlayY2Axis',\n    'axisY2.fields': 'y2Fields',\n    'chart.overlayFields': 'overlayFields',\n    'legend.labels': 'legendLabels',\n    'legend.labelStyle.overflowMode': 'legendTruncation',\n    'legend.mode': 'legendMode',\n    'legend.placement': 'legendDisplay',\n    'chart.nullValueMode': 'nullValueDisplay',\n    'chart.showDataLabels': 'dataValuesDisplay',\n    fieldColors: 'seriesColorsByField',\n    'chart.resultTruncationLimit': 'resultLimit',\n    'chart.stackMode': 'stackMode',\n    'chart.barSpacing': 'barSpacing',\n    'chart.columnSpacing': 'columnSpacing',\n    'chart.seriesSpacing': 'seriesSpacing',\n    'chart.sliceCollapsingLabel': 'collapseLabel',\n    'chart.sliceCollapsingThreshold': 'collapseThreshold',\n    hasDonutHole: 'showDonutHole',\n    // area specific mapped options\n    areaFillOpacity: 'areaOpacity',\n    'chart.showLines': 'showLines',\n    // bubble specific mapped options\n    'chart.bubbleMinimumSize': 'bubbleSizeMin',\n    'chart.bubbleMaximumSize': 'bubbleSizeMax',\n    'chart.bubbleSizeBy': 'bubbleSizeMethod',\n    // line specific mapped options\n    fieldDashStyles: 'lineDashStylesByField',\n    'chart.showMarkers': 'markerDisplay',\n    // scatter-specific options\n    'chart.markerSize': 'markerSize',\n};\n\nconst visibilityEnumReplacements = {\n    visible: 'show',\n    collapsed: 'hide',\n};\nconst modeEnumReplacements = {\n    none: 'off',\n};\n/**\n * for some options the valid values changed.\n * this maps enum values that need to be changed\n */\nconst enumReplacements = {\n    xAxisTitleVisibility: visibilityEnumReplacements,\n    yAxisTitleVisibility: visibilityEnumReplacements,\n    y2AxisTitleVisibility: visibilityEnumReplacements,\n    xAxisAbbreviation: modeEnumReplacements,\n    yAxisAbbreviation: modeEnumReplacements,\n    y2AxisAbbreviation: modeEnumReplacements,\n    dataValuesDisplay: modeEnumReplacements,\n    legendDisplay: modeEnumReplacements,\n    legendTruncation: {\n        ellipsisNone: 'ellipsisOff',\n    },\n    stackMode: {\n        default: 'auto',\n    },\n};\n\n// splits a string with multiple fields separated by comma\n// returns the same value if it's already an array\nconst splitValue = (oldValue: string | string[]) =>\n    Array.isArray(oldValue) ? oldValue : oldValue.split(',');\n\n/**\n * converts stringified objects into plain objects\n *\n * @param {string | Object} oldValue stringified object to parse\n * @returns {Object}\n */\nconst parseObjects = (oldValue: string | Record<string, unknown>): Record<string, unknown> => {\n    if (typeof oldValue === 'object' && !Array.isArray(oldValue)) {\n        return oldValue;\n    }\n    let nuValue = {};\n    try {\n        nuValue = JSON.parse(oldValue as string);\n    } catch (e) {\n        /* noop */\n    }\n    return nuValue;\n};\n\n/**\n * some option values require special processing\n * (e.g. if the type of the updated option changed)\n * \"legendLabels\": \"test,test2\" => \"legendLabels\": [\"test\", \"test2\"]\n */\nconst otherValueReplacements = {\n    y2Fields: splitValue,\n    overlayFields: splitValue,\n    legendLabels: splitValue,\n    seriesColorsByField: parseObjects,\n    lineDashStylesByField: parseObjects,\n    /**\n     * the original markerDisplay was only exposed as `chart.showMarkers`\n     * setting chart.showMarkers to true is the equivalent of `markerDisplay: 'outlined'`\n     */\n    markerDisplay: (oldValue: boolean) => {\n        if (oldValue === false) return 'off';\n        else if (oldValue === true) return 'outlined';\n        return oldValue;\n    },\n};\n\n/**\n * migrateChartingOptions\n * - renames option keys\n * - checks if enum values have changed for new options, replaces it\n * - checks if other replacements are necessary and applies them\n * @param {object} options dashboard-viz charting options\n * @returns {object} migratedOptions viz charting options\n */\nconst migrateChartingOptions = (options: Record<string, unknown>): Record<string, unknown> => {\n    const migratedOptions = {};\n    Object.keys(options).forEach(key => {\n        const value = options[key];\n        const updatedKey = optionRenames[key] ?? key;\n        let updatedValue = enumReplacements?.[updatedKey]?.[value] ?? value;\n        if (otherValueReplacements[updatedKey]) {\n            updatedValue = otherValueReplacements[updatedKey](updatedValue);\n        }\n        migratedOptions[updatedKey] = updatedValue;\n    });\n    return migratedOptions;\n};\n\n/**\n * helper that encapsulates shared migration logic across most charting-based viz\n * @param {Object} defaultChanges - map consistsing of default value changes from viz.* to splunk.*\n * @param {Object} validOptions - the list of options that the new splunk.* viz supports\n * @param {VisualizationDefinition} vizDefinition - the viz definition to migrate\n * @param {String} vizType - the value of splunk.*\n */\nconst migrateBaseChartingVizDefinition = ({\n    defaultChanges,\n    validOptions,\n    vizDefinition,\n    vizType,\n}: {\n    defaultChanges: Record<string, unknown>;\n    validOptions: Record<string, unknown>;\n    vizDefinition: VisualizationDefinition;\n    vizType: string;\n}) => {\n    const { encoding = {}, options = {}, ...otherDefinitionParts } = vizDefinition;\n    const migratedDefinition: VisualizationDefinition = {\n        ...otherDefinitionParts,\n        type: vizType,\n        options: {},\n        context: {},\n    };\n    // translate encoding to dynamic options equivalent\n    const { options: dataOptions, context: dataContext } = encodingToDynamicOptionsDSL(\n        encoding as Record<string, EncodingConfig>\n    );\n\n    const migratedOptions = {\n        ...defaultChanges,\n        ...migrateChartingOptions(options),\n        ...dataOptions,\n    };\n    // remove invalid options\n    Object.keys(migratedOptions).forEach(key => {\n        if (!validOptions[key]) {\n            delete migratedOptions[key];\n        }\n    });\n    migratedDefinition.options = migratedOptions;\n    migratedDefinition.context = dataContext;\n\n    return migratedDefinition;\n};\n\nexport { migrateBaseChartingVizDefinition, migrateChartingOptions, otherValueReplacements };\n","module.exports = require(\"@babel/runtime/helpers/typeof\");","export * from './encoding';\n","export * from './migrate';\n","import type { VisualizationDefinition } from '@splunk/dashboard-types';\nimport {\n    migrateVizToSplunkArea,\n    migrateVizToSplunkBar,\n    migrateVizToSplunkBubble,\n    migrateVizToSplunkColumn,\n    migrateVizToSplunkLine,\n    migrateVizToSplunkPie,\n    migrateVizToSplunkScatter,\n} from './visualizations';\n\nconst supportedMigrations = {\n    'viz.area': {\n        'splunk.area': migrateVizToSplunkArea,\n    },\n    'viz.bar': {\n        'splunk.bar': migrateVizToSplunkBar,\n    },\n    'viz.bubble': {\n        'splunk.bubble': migrateVizToSplunkBubble,\n    },\n    'viz.column': {\n        'splunk.column': migrateVizToSplunkColumn,\n    },\n    'viz.line': {\n        'splunk.line': migrateVizToSplunkLine,\n    },\n    'viz.pie': {\n        'splunk.pie': migrateVizToSplunkPie,\n    },\n    'viz.scatter': {\n        'splunk.scatter': migrateVizToSplunkScatter,\n    },\n};\n\nconst inferToType = (typeFromDefinition: string): string => {\n    if (typeFromDefinition === 'viz.img') {\n        return 'splunk.image';\n    }\n\n    return typeFromDefinition.replace(/^viz\\./, 'splunk.');\n};\n\ninterface MigrationParams {\n    definition: VisualizationDefinition;\n    toType?: string;\n}\n\nconst migrate = ({ definition, toType: toTypeFromParams }: MigrationParams): VisualizationDefinition => {\n    const toType = toTypeFromParams ?? inferToType(definition.type);\n    if (!supportedMigrations?.[definition?.type]?.[toType]) {\n        throw new Error('Migration currently not supported');\n    }\n    return supportedMigrations[definition.type][toType](definition);\n};\n\ninterface CanMigrateParams {\n    fromType: string;\n    toType: string;\n}\n\nconst canMigrate = ({ fromType, toType }: CanMigrateParams): boolean => {\n    if (supportedMigrations?.[fromType]?.[toType]) {\n        return true;\n    }\n    return false;\n};\n\nexport { migrate, canMigrate, inferToType };\n","export * from './area';\nexport * from './bar';\nexport * from './bubble';\nexport * from './column';\nexport * from './line';\nexport * from './pie';\nexport * from './scatter';\n","import type { VisualizationDefinition } from '@splunk/dashboard-types';\nimport { migrateBaseChartingVizDefinition } from './splunk-charting';\nimport { config } from '@splunk/visualizations/Area';\n\nconst validOptions = {\n    ...config.optionsSchema,\n};\n\n// old default configurations should be retained in migrated configuration\nconst defaultChanges = {\n    yAxisAbbreviation: 'off',\n    y2AxisAbbreviation: 'off',\n    showRoundedY2AxisLabels: false,\n    legendTruncation: 'ellipsisMiddle',\n    showY2MajorGridLines: true,\n};\n\nconst migrateVizToSplunkArea = (vizDefinition: VisualizationDefinition): VisualizationDefinition => {\n    return migrateBaseChartingVizDefinition({\n        defaultChanges,\n        validOptions,\n        vizDefinition,\n        vizType: 'splunk.area',\n    });\n};\n\nexport { migrateVizToSplunkArea };\n","import {\n    parseNameBasedFieldReference,\n    parseIndexBasedFieldReference,\n} from '@splunk/visualization-encoding-parsers/Base';\n// @TODO(pwied): move the parsing helpers so we can deprecate visualization-encoding-parsers package\n\n// index based references are defined by <dataSource>[<index>]\n// this regex matches <text with numbers>[<anything>]\n// the \"[\" \"]\" part makes it an index based reference\nconst indexBasedRegx = /^[A-Za-z0-9_]+\\[.*\\].*$/;\n// name based references are defined by <dataSource>.<columnName>\n// the \".\" access makes it a name based reference\nconst nameBasedRegx = /^[A-Za-z0-9_]+\\..*$/;\n\ninterface AdvancedEncodingConfig {\n    field: string;\n    format?: Record<string, unknown>;\n}\ntype EncodingConfig = string | string[] | AdvancedEncodingConfig;\n\nexport type { EncodingConfig };\n\ninterface DynamicOptionsChunk {\n    options: Record<string, unknown>;\n    context: Record<string, unknown>;\n}\nconst isIndexBasedReference = ref => indexBasedRegx.test(ref);\nconst isNameBasedReference = ref => nameBasedRegx.test(ref);\n\n/**\n * Translates encoding data selections in array format\n *\n * Note:\n * 'frameBySeriesIndexes' only supports positive indexes\n *\n * Examples:\n * 1. all index based selection\n * ['primary[0]', 'primary[1]'] => '> primary | frameBySeriesIndexes(0,1)'\n *\n * 2. all name based selection\n * ['primary.foo', 'primary.bar'] => '> primary | frameBySeriesNames(\"foo\",\"bar\")'\n *\n * 3. index or name based selections\n * ['primary.foo', 'primary[1]'] => '> primary | frameBySeriesNamesOrIndexes(\"foo\",1)'\n */\nconst translateArrayFormatDataReference = (encodingDataReference: string[]): string => {\n    if (encodingDataReference.length === 0) {\n        return;\n    }\n    const allIndexBased = encodingDataReference.every(isIndexBasedReference);\n    const allNameBased = encodingDataReference.every(isNameBasedReference);\n\n    if (allIndexBased) {\n        const { dataSourceName } = parseIndexBasedFieldReference(encodingDataReference[0]);\n        const indexesStr = encodingDataReference\n            .map(ref => parseIndexBasedFieldReference(ref)?.fieldIndex)\n            .join(',');\n        return `> ${dataSourceName} | frameBySeriesIndexes(${indexesStr})`;\n    } else if (allNameBased) {\n        const { dataSourceName } = parseNameBasedFieldReference(encodingDataReference[0]);\n        const namesStr = encodingDataReference\n            .map(ref => '\"' + parseNameBasedFieldReference(ref)?.fieldName + '\"')\n            .join(',');\n        return `> ${dataSourceName} | frameBySeriesNames(${namesStr})`;\n    } else {\n        // it's a mix of name and index based references\n        // get the first ref to extract the dataSource\n        const firstEntry = encodingDataReference[0];\n        const { dataSourceName } = isIndexBasedReference(firstEntry)\n            ? parseIndexBasedFieldReference(firstEntry)\n            : parseNameBasedFieldReference(firstEntry);\n        const paramStr = encodingDataReference\n            .map(ref => {\n                return isIndexBasedReference(ref)\n                    ? parseIndexBasedFieldReference(ref)?.fieldIndex\n                    : '\"' + parseNameBasedFieldReference(ref)?.fieldName + '\"';\n            })\n            .join(',');\n        return `> ${dataSourceName} | frameBySeriesNamesOrIndexes(${paramStr})`;\n    }\n};\n\n/**\n * Translates an encoding data selection string to a dynamic options data selection\n *\n * Index based column selection\n * 'primary[0]' => '> primary | seriesByIndex(0)'\n *\n * Index range based column selection\n * 'primary[1:]' => '> primary | frameBySeriesIndexRange(1)'\n * 'primary[0:3]' => '> primary | frameBySeriesIndexRange(0,2)'\n *\n * Name based column selection\n * 'primary.foo' => '> primary | seriesByName(\"foo\")'\n *\n * Encoding references\n * 'encoding.x' => '> x'\n */\nconst translateDataReference = (encodingDataReference: string): string => {\n    if (encodingDataReference.indexOf('encoding.') === 0) {\n        return `> ${encodingDataReference.replace('encoding.', '')}`;\n    }\n    const isIndexBasedRef = isIndexBasedReference(encodingDataReference);\n    const isNameBasedRef = isNameBasedReference(encodingDataReference);\n\n    if (!isIndexBasedRef && !isNameBasedRef) {\n        console.warn('Unable to parse the encoding. Please verify the encoding format is correct');\n        return;\n    }\n\n    if (isNameBasedRef) {\n        const { dataSourceName, fieldName, columnIndex } = parseNameBasedFieldReference(\n            encodingDataReference\n        );\n        let returnString = `> ${dataSourceName} | seriesByName(\"${fieldName}\")`;\n        if (columnIndex) {\n            returnString += ` | pointByIndex(${columnIndex})`;\n        }\n        return returnString;\n    }\n    if (isIndexBasedRef) {\n        const {\n            dataSourceName,\n            fieldIndex,\n            columnIndex,\n            isFieldIndexRange,\n            fromFieldIndex,\n            toFieldIndex,\n        } = parseIndexBasedFieldReference(encodingDataReference);\n        if (isFieldIndexRange) {\n            let dslToIndexString;\n            if (toFieldIndex === -1) {\n                dslToIndexString = '';\n            } else {\n                // adjust index, DSL is using default slice behavior whereas encoding behaved differently\n                dslToIndexString = `,${toFieldIndex + 1}`;\n            }\n            return `> ${dataSourceName} | frameBySeriesIndexRange(${fromFieldIndex}${dslToIndexString})`;\n        } else {\n            let returnString = `> ${dataSourceName} | seriesByIndex(${fieldIndex})`;\n            if (columnIndex) {\n                returnString += ` | pointByIndex(${columnIndex})`;\n            }\n            return returnString;\n        }\n    }\n};\n/**\n * An encoding configuration can come in various different forms:\n *\n * 1. Simple data selection (either index or name based)\n * {\n *    x: 'primary[0]',\n *    y: 'primary.count'\n * }\n *\n * 2. Multi column selection in array format\n * {\n *    x: 'primary[0]',\n * \t  y: ['primary.count', 'primary.count2']\n * }\n *\n * 3. Advanced Encoding Configuration (for data selection and formatting)\n * {\n *    x: {\n * \t     field: 'primary[0]',\n * \t  },\n *    y: {\n * \t     field: 'primary[1]',\n *       format: {},\n *    }\n * }\n */\nconst encodingToDynamicOptionsDSL = (encoding: Record<string, EncodingConfig>): DynamicOptionsChunk => {\n    const dynamicOptions: DynamicOptionsChunk = {\n        options: {},\n        context: {},\n    };\n    const translatedOptions = {};\n    Object.keys(encoding).forEach(key => {\n        const fieldReference = encoding[key];\n        let fieldReferenceStr = fieldReference as string;\n        if (typeof fieldReference === 'object' && !Array.isArray(fieldReference)) {\n            const { field } = fieldReference;\n            if (field && !Array.isArray(field)) {\n                fieldReferenceStr = field;\n            }\n        }\n        let translatedValue;\n        // field reference is either in form of array or string\n        if (Array.isArray(fieldReference)) {\n            translatedValue = translateArrayFormatDataReference(fieldReference);\n        } else {\n            translatedValue = translateDataReference(fieldReferenceStr);\n        }\n        // omit if translated value is not set\n        if (translatedValue) {\n            translatedOptions[key] = translatedValue;\n        }\n    });\n    dynamicOptions.options = translatedOptions;\n    return dynamicOptions;\n};\n\nexport { encodingToDynamicOptionsDSL };\n","module.exports = require(\"@splunk/visualization-encoding-parsers/Base\");","module.exports = require(\"@splunk/visualizations/Area\");","import type { VisualizationDefinition } from '@splunk/dashboard-types';\nimport { migrateBaseChartingVizDefinition } from './splunk-charting';\nimport { config } from '@splunk/visualizations/Bar';\n\nconst validOptions = {\n    ...config.optionsSchema,\n};\n\n// old default configurations should be retained in migrated configuration\nconst defaultChanges = {\n    yAxisAbbreviation: 'off',\n    y2AxisAbbreviation: 'off',\n    showRoundedY2AxisLabels: false,\n    legendTruncation: 'ellipsisMiddle',\n    showY2MajorGridLines: true,\n};\n\nconst migrateVizToSplunkBar = (vizDefinition: VisualizationDefinition): VisualizationDefinition => {\n    return migrateBaseChartingVizDefinition({\n        defaultChanges,\n        validOptions,\n        vizDefinition,\n        vizType: 'splunk.bar',\n    });\n};\n\nexport { migrateVizToSplunkBar };\n","module.exports = require(\"@splunk/visualizations/Bar\");","import type { VisualizationDefinition } from '@splunk/dashboard-types';\nimport { migrateBaseChartingVizDefinition } from './splunk-charting';\nimport { config } from '@splunk/visualizations/Bubble';\n\nconst validOptions = {\n    ...config.optionsSchema,\n};\n\n// old default configurations should be retained in migrated configuration\nconst defaultChanges = {\n    yAxisAbbreviation: 'off',\n    legendTruncation: 'ellipsisMiddle',\n};\n\nconst migrateVizToSplunkBubble = (vizDefinition: VisualizationDefinition): VisualizationDefinition => {\n    return migrateBaseChartingVizDefinition({\n        defaultChanges,\n        validOptions,\n        vizDefinition,\n        vizType: 'splunk.bubble',\n    });\n};\n\nexport { migrateVizToSplunkBubble };\n","module.exports = require(\"@splunk/visualizations/Bubble\");","import type { VisualizationDefinition } from '@splunk/dashboard-types';\nimport { migrateBaseChartingVizDefinition } from './splunk-charting';\nimport { config } from '@splunk/visualizations/Column';\n\nconst validOptions = {\n    ...config.optionsSchema,\n};\n\n// old default configurations should be retained in migrated configuration\nconst defaultChanges = {\n    yAxisAbbreviation: 'off',\n    y2AxisAbbreviation: 'off',\n    showRoundedY2AxisLabels: false,\n    legendTruncation: 'ellipsisMiddle',\n    showY2MajorGridLines: true,\n};\n\nconst migrateVizToSplunkColumn = (vizDefinition: VisualizationDefinition): VisualizationDefinition => {\n    return migrateBaseChartingVizDefinition({\n        defaultChanges,\n        validOptions,\n        vizDefinition,\n        vizType: 'splunk.column',\n    });\n};\n\nexport { migrateVizToSplunkColumn };\n","module.exports = require(\"@splunk/visualizations/Column\");","import type { VisualizationDefinition } from '@splunk/dashboard-types';\nimport { migrateBaseChartingVizDefinition } from './splunk-charting';\nimport { config } from '@splunk/visualizations/Line';\n\nconst validOptions = {\n    ...config.optionsSchema,\n};\n\n// old default configurations should be retained in migrated configuration\nconst defaultChanges = {\n    yAxisAbbreviation: 'off',\n    y2AxisAbbreviation: 'off',\n    showRoundedY2AxisLabels: false,\n    legendTruncation: 'ellipsisMiddle',\n    showY2MajorGridLines: true,\n    markerDisplay: 'outlined',\n};\n\nconst migrateVizToSplunkLine = (vizDefinition: VisualizationDefinition): VisualizationDefinition => {\n    return migrateBaseChartingVizDefinition({\n        defaultChanges,\n        validOptions,\n        vizDefinition,\n        vizType: 'splunk.line',\n    });\n};\n\nexport { migrateVizToSplunkLine };\n","module.exports = require(\"@splunk/visualizations/Line\");","import type { VisualizationDefinition } from '@splunk/dashboard-types';\nimport type { EncodingConfig } from '../encoding';\nimport { encodingToDynamicOptionsDSL } from '../encoding';\nimport { migrateChartingOptions, otherValueReplacements } from './splunk-charting';\nimport { config } from '@splunk/visualizations/Pie';\n\nconst validOptions = {\n    ...config.optionsSchema,\n};\n\nconst migratePieChartLabelAndPercent = (options: Record<string, unknown>): Record<string, string> => {\n    // if neither chart.showLabels or chart.showPercent is specified in viz.pie,\n    // splunk.pie use the default labelDisplay value\n    if (!('chart.showLabels' in options) && !('chart.showPercent' in options)) {\n        return {};\n    }\n\n    // if only chart.showPercent is specified in viz.pie\n    if (!('chart.showLabels' in options) && 'chart.showPercent' in options) {\n        return { labelDisplay: options['chart.showPercent'] ? 'valuesAndPercentage' : 'values' };\n    }\n\n    // if only chart.showLabels is specified in viz.pie\n    if ('chart.showLabels' in options && !('chart.showPercent' in options)) {\n        return { labelDisplay: options['chart.showLabels'] ? 'values' : 'off' };\n    }\n\n    // if both chart.showLabels and chart.showPercent are specified in viz.pie\n    const labelOption = {\n        labelDisplay: 'values',\n    };\n    if (options['chart.showLabels'] && options['chart.showPercent']) {\n        labelOption.labelDisplay = 'valuesAndPercentage';\n    }\n    if (!options['chart.showLabels']) {\n        labelOption.labelDisplay = 'off';\n    }\n\n    return labelOption;\n};\n\nconst migrateFieldColors = (options: Record<string, any>): Record<string, any> => {\n    if ('fieldColors' in options) {\n        return {\n            seriesColorsByValue: otherValueReplacements.seriesColorsByField(options.fieldColors),\n        };\n    } else {\n        return {};\n    }\n};\n\nconst migrateVizToSplunkPie = (vizDefinition: VisualizationDefinition): VisualizationDefinition => {\n    const { encoding = {}, options = {}, ...otherDefinitionParts } = vizDefinition;\n    const migratedDefinition: VisualizationDefinition = {\n        ...otherDefinitionParts,\n        type: 'splunk.pie',\n        options: {},\n        context: {},\n    };\n    // translate encoding to dynamic options equivalent\n    const { options: dataOptions, context: dataContext } = encodingToDynamicOptionsDSL(\n        encoding as Record<string, EncodingConfig>\n    );\n\n    const migratedOptions = {\n        ...migratePieChartLabelAndPercent(options),\n        ...migrateChartingOptions(options),\n        ...migrateFieldColors(options),\n        ...dataOptions,\n    };\n    // remove invalid options\n    Object.keys(migratedOptions).forEach(key => {\n        if (!validOptions[key]) {\n            delete migratedOptions[key];\n        }\n    });\n    migratedDefinition.options = migratedOptions;\n    migratedDefinition.context = dataContext;\n\n    return migratedDefinition;\n};\n\nexport { migrateVizToSplunkPie };\n","module.exports = require(\"@splunk/visualizations/Pie\");","import type { VisualizationDefinition } from '@splunk/dashboard-types';\nimport { migrateBaseChartingVizDefinition } from './splunk-charting';\nimport { config } from '@splunk/visualizations/Scatter';\n\nconst validOptions = {\n    ...config.optionsSchema,\n};\n\n// old default configurations should be retained in migrated configuration\nconst defaultChanges = {\n    yAxisAbbreviation: 'off',\n    legendTruncation: 'ellipsisMiddle',\n};\n\nconst migrateVizToSplunkScatter = (vizDefinition: VisualizationDefinition): VisualizationDefinition => {\n    return migrateBaseChartingVizDefinition({\n        defaultChanges,\n        validOptions,\n        vizDefinition,\n        vizType: 'splunk.scatter',\n    });\n};\n\nexport { migrateVizToSplunkScatter };\n","module.exports = require(\"@splunk/visualizations/Scatter\");"],"sourceRoot":""}