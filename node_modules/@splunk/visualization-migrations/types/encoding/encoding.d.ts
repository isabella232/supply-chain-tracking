interface AdvancedEncodingConfig {
    field: string;
    format?: Record<string, unknown>;
}
declare type EncodingConfig = string | string[] | AdvancedEncodingConfig;
export type { EncodingConfig };
interface DynamicOptionsChunk {
    options: Record<string, unknown>;
    context: Record<string, unknown>;
}
/**
 * An encoding configuration can come in various different forms:
 *
 * 1. Simple data selection (either index or name based)
 * {
 *    x: 'primary[0]',
 *    y: 'primary.count'
 * }
 *
 * 2. Multi column selection in array format
 * {
 *    x: 'primary[0]',
 * 	  y: ['primary.count', 'primary.count2']
 * }
 *
 * 3. Advanced Encoding Configuration (for data selection and formatting)
 * {
 *    x: {
 * 	     field: 'primary[0]',
 * 	  },
 *    y: {
 * 	     field: 'primary[1]',
 *       format: {},
 *    }
 * }
 */
declare const encodingToDynamicOptionsDSL: (encoding: Record<string, EncodingConfig>) => DynamicOptionsChunk;
export { encodingToDynamicOptionsDSL };
