import type { VisualizationDefinition } from '@splunk/dashboard-types';
/**
 * some option values require special processing
 * (e.g. if the type of the updated option changed)
 * "legendLabels": "test,test2" => "legendLabels": ["test", "test2"]
 */
declare const otherValueReplacements: {
    y2Fields: (oldValue: string | string[]) => string[];
    overlayFields: (oldValue: string | string[]) => string[];
    legendLabels: (oldValue: string | string[]) => string[];
    seriesColorsByField: (oldValue: string | Record<string, unknown>) => Record<string, unknown>;
    lineDashStylesByField: (oldValue: string | Record<string, unknown>) => Record<string, unknown>;
    /**
     * the original markerDisplay was only exposed as `chart.showMarkers`
     * setting chart.showMarkers to true is the equivalent of `markerDisplay: 'outlined'`
     */
    markerDisplay: (oldValue: boolean) => "off" | "outlined";
};
/**
 * migrateChartingOptions
 * - renames option keys
 * - checks if enum values have changed for new options, replaces it
 * - checks if other replacements are necessary and applies them
 * @param {object} options dashboard-viz charting options
 * @returns {object} migratedOptions viz charting options
 */
declare const migrateChartingOptions: (options: Record<string, unknown>) => Record<string, unknown>;
/**
 * helper that encapsulates shared migration logic across most charting-based viz
 * @param {Object} defaultChanges - map consistsing of default value changes from viz.* to splunk.*
 * @param {Object} validOptions - the list of options that the new splunk.* viz supports
 * @param {VisualizationDefinition} vizDefinition - the viz definition to migrate
 * @param {String} vizType - the value of splunk.*
 */
declare const migrateBaseChartingVizDefinition: ({ defaultChanges, validOptions, vizDefinition, vizType, }: {
    defaultChanges: Record<string, unknown>;
    validOptions: Record<string, unknown>;
    vizDefinition: VisualizationDefinition;
    vizType: string;
}) => VisualizationDefinition;
export { migrateBaseChartingVizDefinition, migrateChartingOptions, otherValueReplacements };
