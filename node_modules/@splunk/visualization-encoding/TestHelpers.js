/*!
 * Copyright © 2018 Splunk Inc.
 * SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or
 * in part without a valid written license from Splunk Inc. is PROHIBITED.
 */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 53);
/******/ })
/************************************************************************/
/******/ ({

/***/ 53:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.testThemeRegistry = exports.svDynamicOptions = exports.context = exports.optionsAST = exports.dynamicOptions = exports.dslEncoding = exports.ast = exports.defconDSL = exports.chessDSL = exports.valueExprs1 = exports.expr2 = exports.expr1 = exports.expr0 = void 0;

var helper_1 = __webpack_require__(54);

exports.expr0 = {
  type: 'identifier',
  v: 'WOPR'
};
exports.expr1 = {
  type: 'method',
  name: 'print',
  args: [{
    type: 'string',
    v: 'how'
  }, {
    type: 'string',
    v: 'about'
  }, {
    type: 'string',
    v: 'a'
  }, {
    type: 'string',
    v: 'nice'
  }, {
    type: 'string',
    v: 'game'
  }]
};
exports.expr2 = {
  type: 'method',
  name: 'println',
  args: [{
    type: 'string',
    v: 'OF'
  }, {
    type: 'string',
    v: 'CHESS'
  }]
};
exports.valueExprs1 = [exports.expr0, exports.expr1, exports.expr2]; // WOPR|print('how','about','a','nice','game')|println('OF','CHESS')

exports.chessDSL = "WOPR|print('how','about','a','nice','game')|println('OF','CHESS')";
exports.defconDSL = "WOPR|defenseCondition(0)|prefix('xxx')|rangeValue(ranges)|matchValue(matches)";
exports.ast = {
  context: {
    defconColors: {
      colors: ['red', 'orange', 'yellow', 'blue', 'green']
    }
  },
  dimensions: {
    warGames: {
      value: exports.valueExprs1
    },
    conclusion: {
      value: [{
        type: 'identifier',
        v: 'WOPR'
      }, {
        type: 'method',
        name: 'defenseCondition',
        args: [{
          type: 'number',
          v: 0
        }]
      }, {
        type: 'method',
        name: 'prefix',
        args: [{
          type: 'string',
          v: 'xxx'
        }]
      }, {
        type: 'method',
        name: 'rangeValue',
        args: [{
          type: 'identifier',
          v: 'ranges'
        }]
      }, {
        type: 'method',
        name: 'matchValue',
        args: [{
          type: 'identifier',
          v: 'matches'
        }]
      }]
    }
  }
};
exports.dslEncoding = {
  context: {
    defconColors: {
      colors: ['red', 'orange', 'yellow', 'blue', 'green']
    }
  },
  dimensions: {
    warGames: {
      value: exports.chessDSL
    },
    conclusion: {
      value: exports.defconDSL
    }
  }
};
exports.dynamicOptions = {
  options: {
    aNumber: 42,
    aString: 'a string',
    aColor: '#FF0000',
    aTime: new Date('Thu Jul 16 2020 19:47:12 GMT-0700 (PDT)'),
    expression1: '  > `aString`',
    expression2: '>primary|last() ',
    expression3: '>' + exports.chessDSL,
    expression4: '>' + exports.defconDSL
  },
  context: {
    foo: 'FOO',
    bar: 'BAR',
    nest: {
      nestFoo: 'NESTFOO',
      nestBar: 'NESTBAR'
    }
  }
};
exports.optionsAST = {
  simpleOptions: {
    aNumber: 42,
    aString: 'a string',
    aColor: '#FF0000',
    aTime: new Date('Thu Jul 16 2020 19:47:12 GMT-0700 (PDT)')
  },
  expressions: {
    expression1: [{
      type: 'string',
      v: 'aString'
    }],
    expression2: [{
      type: 'identifier',
      v: 'primary'
    }, {
      type: 'method',
      name: 'last',
      args: []
    }],
    expression3: exports.valueExprs1,
    expression4: [{
      type: 'identifier',
      v: 'WOPR'
    }, {
      type: 'method',
      name: 'defenseCondition',
      args: [{
        type: 'number',
        v: 0
      }]
    }, {
      type: 'method',
      name: 'prefix',
      args: [{
        type: 'string',
        v: 'xxx'
      }]
    }, {
      type: 'method',
      name: 'rangeValue',
      args: [{
        type: 'identifier',
        v: 'ranges'
      }]
    }, {
      type: 'method',
      name: 'matchValue',
      args: [{
        type: 'identifier',
        v: 'matches'
      }]
    }]
  },
  context: {
    foo: 'FOO',
    bar: 'BAR',
    nest: {
      nestFoo: 'NESTFOO',
      nestBar: 'NESTBAR'
    }
  }
};
exports.context = {
  majorThreshold: [{
    from: 3,
    value: '#A52A2A'
  }, {
    from: 2,
    to: 3,
    value: '#FFFF00'
  }, {
    from: 1,
    to: 2,
    value: '#800080'
  }, {
    to: 1,
    value: '#0000FF'
  }],
  deltaThreshold: [{
    from: 3,
    value: 'white'
  }, {
    from: 2,
    to: 3,
    value: 'brown'
  }, {
    from: 1,
    to: 2,
    value: 'gray'
  }, {
    to: 1,
    value: 'black'
  }],
  backgroundThreshold: [{
    from: 3,
    value: 'yellow'
  }, {
    from: 2,
    to: 3,
    value: 'green'
  }, {
    from: 1,
    to: 2,
    value: 'blue'
  }, {
    to: 1,
    value: 'red'
  }]
};
exports.svDynamicOptions = {
  context: exports.context,
  options: {
    sparkline: "> primary|seriesByType('number')",
    major: '> sparkline|lastPoint()',
    majorColor: '> major|rangeValue(majorThreshold)',
    delta: '> sparkline|delta(-2)',
    deltaColor: '> delta|rangeValue(deltaThreshold)',
    backgroundColor: '> delta|rangeValue(backgroundThreshold)',
    notBasedOnData: '>42',
    xColor: '>themes.x',
    yColor: '>themes.y',
    zColor: 'blue',
    aNumber: 42,
    aColor: '>2|rangeValue(majorThreshold)',
    aFormattedTheme: '>themes.aNumber|rangeValue(majorThreshold)',
    singleSeries: '> seriesByIndex(0)',
    multiSeries: '> frameBySeriesIndexRange(0, 2)',
    singleSeriesFieldName: '>singleSeries|getField()',
    multiSeriesFieldName: '>multiSeries|getField()'
  }
};
exports.testThemeRegistry = helper_1.createThemeRegistry('@splunk/foobar', 'BazViz');
exports.testThemeRegistry.addDefaultTheme('enterprise', {
  x: 'red',
  y: 'green',
  aNumber: 2
});

/***/ }),

/***/ 54:
/***/ (function(module, exports) {

module.exports = require("@splunk/visualization-themes/helper");

/***/ })

/******/ });
//# sourceMappingURL=TestHelpers.js.map