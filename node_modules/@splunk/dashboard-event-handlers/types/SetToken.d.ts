import type { EventAction, SetTokenEvent, SetTokenOptions } from '@splunk/dashboard-types';
declare class SetToken {
    private options;
    private events;
    private tokens;
    /**
     * A configuration object is passed to the handler
     * @constructor
     * @param {Object} options
     */
    constructor(options: SetTokenOptions);
    /**
     * Determines if the custom event handler is designed to convert the event
     * @method canHandle
     * @param {VisualizationEvent} event
     * @returns {Boolean} true if the event handler will convert the event
     */
    canHandle(event: EventAction): boolean;
    areTokensValid(payload: EventAction['payload']): boolean;
    getTokenValuesFromPayload(payload: EventAction['payload']): Record<string, string>;
    /**
     * Convert the event payload into a list of actionable tasks
     * @method handle
     * @param {VisualizationEvent} event
     * @returns {EventAction[]} List of action(s)
     */
    handle(event: EventAction): Promise<SetTokenEvent[]>;
}
export default SetToken;
//# sourceMappingURL=SetToken.d.ts.map