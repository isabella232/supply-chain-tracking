/*!
 * Copyright © 2020 Splunk Inc.
 * SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or
 * in part without a valid written license from Splunk Inc. is PROHIBITED.
 */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 4);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.isEventAllowed = void 0;
// filter out range.select and non-click based events
// every viz has a different prefix for their click events, some viz may have multiple click events
var isEventAllowed = function (event) {
    return /\.click$/.test(event.type);
};
exports.isEventAllowed = isEventAllowed;


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var events_1 = __webpack_require__(0);
var CustomUrlDrilldown = /** @class */ (function () {
    /**
     * A configuration object is passed to the handler
     * @constructor
     * @param {Object} options
     */
    function CustomUrlDrilldown(options) {
        if (options === void 0) { options = {}; }
        this.options = options;
        this.events = Array.isArray(options.events) ? options.events : ['any'];
    }
    /**
     * Determines if the custom event handler is designed to convert the event
     * @method canHandle
     * @param {VisualizationEvent} event
     * @returns {Boolean} true if the event handler will convert the event
     */
    CustomUrlDrilldown.prototype.canHandle = function (event) {
        return (event &&
            events_1.isEventAllowed(event) &&
            this.options &&
            !!this.options.url &&
            (this.events.includes('any') || this.events.includes(event.type)));
    };
    /**
     * Convert the event payload into a list of actionable tasks
     * @method handle
     * @param {VisualizationEvent} event
     * @returns {Array} List of action(s)
     */
    CustomUrlDrilldown.prototype.handle = function () {
        // TODO: verify url token updates happen external to the handler eventSaga:findEventHandler
        return Promise.resolve([
            {
                type: 'linkTo',
                payload: {
                    url: this.options.url,
                    newTab: this.options.newTab,
                },
            },
        ]);
    };
    return CustomUrlDrilldown;
}());
exports.default = CustomUrlDrilldown;


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var dashboard_utils_1 = __webpack_require__(3);
var events_1 = __webpack_require__(0);
var SetToken = /** @class */ (function () {
    /**
     * A configuration object is passed to the handler
     * @constructor
     * @param {Object} options
     */
    function SetToken(options) {
        var _a;
        this.options = options;
        this.events =
            Array.isArray(options.events) && options.events.length > 0
                ? options.events
                : ['any'];
        var key = options.key, token = options.token;
        if (key && token) {
            dashboard_utils_1.deprecated('Using a single token option is deprecated. Please use the tokens option. `tokens: [{ key, token }]`');
            this.tokens = [
                {
                    key: key,
                    token: token,
                },
            ];
        }
        else {
            this.tokens = (_a = options.tokens) !== null && _a !== void 0 ? _a : [];
        }
    }
    /**
     * Determines if the custom event handler is designed to convert the event
     * @method canHandle
     * @param {VisualizationEvent} event
     * @returns {Boolean} true if the event handler will convert the event
     */
    SetToken.prototype.canHandle = function (event) {
        return (events_1.isEventAllowed(event) &&
            this.areTokensValid(event.payload) &&
            (this.events.includes('any') || this.events.includes(event.type)));
    };
    // a token is valid if there is a non undefined value in its payload[key] or value
    SetToken.prototype.areTokensValid = function (payload) {
        if (this.tokens.length < 1) {
            return false;
        }
        return Object.values(this.getTokenValuesFromPayload(payload)).some(function (val) { return val !== undefined; });
    };
    SetToken.prototype.getTokenValuesFromPayload = function (payload) {
        var tokenValuesMap = {};
        this.tokens.forEach(function (_a) {
            var token = _a.token, key = _a.key, value = _a.value;
            if (key !== undefined && payload[key] !== undefined) {
                tokenValuesMap[token] = payload[key];
            }
            else if (value !== undefined) {
                // If there is no payload value but there is a static value use it
                tokenValuesMap[token] = value;
            }
        });
        return tokenValuesMap;
    };
    /**
     * Convert the event payload into a list of actionable tasks
     * @method handle
     * @param {VisualizationEvent} event
     * @returns {EventAction[]} List of action(s)
     */
    SetToken.prototype.handle = function (event) {
        return Promise.resolve([
            {
                type: 'setToken',
                payload: {
                    namespace: this.options.tokenNamespace || 'default',
                    tokens: this.getTokenValuesFromPayload(event.payload),
                    submit: true,
                },
            },
        ]);
    };
    return SetToken;
}());
exports.default = SetToken;


/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = require("@splunk/dashboard-utils");

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SetToken = exports.CustomUrlDrilldown = void 0;
var CustomUrlDrilldown_1 = __webpack_require__(1);
Object.defineProperty(exports, "CustomUrlDrilldown", { enumerable: true, get: function () { return __importDefault(CustomUrlDrilldown_1).default; } });
var SetToken_1 = __webpack_require__(2);
Object.defineProperty(exports, "SetToken", { enumerable: true, get: function () { return __importDefault(SetToken_1).default; } });


/***/ })
/******/ ]);
//# sourceMappingURL=index.js.map