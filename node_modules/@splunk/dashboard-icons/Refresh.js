/*!
 * Copyright © 2020 Splunk Inc.
 * SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or
 * in part without a valid written license from Splunk Inc. is PROHIBITED.
 */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 67);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),

/***/ 1:
/***/ (function(module, exports) {

module.exports = require("@splunk/react-icons/SVG");

/***/ }),

/***/ 2:
/***/ (function(module, exports) {

module.exports = require("@splunk/ui-utils/i18n");

/***/ }),

/***/ 67:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(__webpack_require__(0));
var i18n_1 = __webpack_require__(2);
var SVG_1 = __importDefault(__webpack_require__(1));
/* eslint-disable max-len */
function Refresh(props) {
    return (react_1.default.createElement(SVG_1.default, __assign({ screenReaderText: i18n_1._('Refresh'), viewBox: "0 0 24 24" }, props),
        react_1.default.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M18.2685 14.3175L18.4349 14.9384C18.6078 14.558 18.7453 14.162 18.8452 13.7556C18.9449 13.3507 19.0068 12.9373 19.0303 12.521L19.0362 12.4167C19.0663 11.883 19.0409 11.3476 18.9604 10.8191L18.9462 10.7261C18.8794 10.287 18.7695 9.85559 18.6181 9.43803C18.4827 9.06459 18.3148 8.70378 18.1162 8.35979L18.0868 8.30889C17.8331 7.86964 17.5281 7.46215 17.1781 7.09503C16.9596 6.8658 16.7243 6.65314 16.4743 6.4588L16.318 6.33739C16.0132 6.10052 15.6825 5.88712 15.34 5.70564C14.95 5.49901 14.5348 5.32943 14.1132 5.20545C13.7201 5.08986 13.317 5.01136 12.9093 4.97099L12.8406 4.96419C12.4182 4.92237 11.993 4.91829 11.5699 4.95201C11.1331 4.98682 10.7005 5.06176 10.2774 5.17589L9.70069 5.33148C9.16747 5.47533 8.61859 5.15969 8.47474 4.62647C8.33089 4.09324 8.64653 3.54437 9.17976 3.40051L9.7565 3.24492C10.298 3.09883 10.8519 3.00289 11.411 2.95833C11.9526 2.91517 12.497 2.92038 13.0377 2.97392L13.1063 2.98072C13.6384 3.03341 14.1644 3.13584 14.6774 3.28668C15.2296 3.44906 15.7694 3.66976 16.2764 3.9384C16.7197 4.17329 17.1479 4.44938 17.5453 4.75819L17.7015 4.8796C18.0299 5.13478 18.3388 5.41401 18.6257 5.715C19.0853 6.19704 19.4858 6.73209 19.8188 7.30885L19.8482 7.35975C20.1055 7.80535 20.323 8.27272 20.4984 8.75646C20.6944 9.29736 20.8368 9.85624 20.9234 10.425L20.9376 10.518C21.0389 11.1833 21.0709 11.8573 21.033 12.5293L21.0271 12.6335C20.9967 13.1731 20.9164 13.7087 20.7873 14.2334C20.6488 14.7966 20.4548 15.3442 20.2083 15.8683L20.718 15.7317C21.2515 15.5888 21.7998 15.9054 21.9428 16.4389C22.0857 16.9723 21.7691 17.5207 21.2356 17.6636L18.8208 18.3106C18.0206 18.525 17.1981 18.0501 16.9837 17.2499L16.3367 14.8352C16.1937 14.3017 16.5103 13.7534 17.0438 13.6104C17.5773 13.4675 18.1256 13.7841 18.2685 14.3175ZM3.92363 7.90992L3.33327 8.06809C2.7998 8.21103 2.25147 7.89443 2.10854 7.36097C1.9656 6.8275 2.2822 6.27917 2.81566 6.13623L5.2305 5.48922C6.03069 5.27483 6.85318 5.7497 7.06759 6.54989L7.71463 8.96466C7.85757 9.49813 7.54099 10.0465 7.00752 10.1894C6.47405 10.3324 5.92572 10.0158 5.78278 9.4823L5.64111 8.9536C5.46988 9.32312 5.33225 9.70767 5.23007 10.1026C5.1256 10.5063 5.05872 10.9189 5.03027 11.3349L5.02314 11.4391C4.98667 11.9725 5.00567 12.5081 5.07982 13.0376L5.09286 13.1307C5.15447 13.5705 5.25921 14.0032 5.40556 14.4226C5.53644 14.7976 5.70008 15.1604 5.89456 15.5068L5.92334 15.558C6.17169 16.0003 6.47181 16.4114 6.81738 16.7826C7.03315 17.0145 7.26586 17.2299 7.51359 17.4273L7.66835 17.5505C7.97029 17.791 8.29849 18.0084 8.63879 18.1939C9.02626 18.4052 9.43938 18.5797 9.8595 18.7088C10.2512 18.829 10.6533 18.9124 11.0605 18.9576L11.1291 18.9652C11.551 19.0121 11.9761 19.0213 12.3996 18.9926C12.8368 18.963 13.2703 18.8933 13.6946 18.7842L14.2732 18.6355C14.8081 18.4981 15.3532 18.8202 15.4906 19.3552C15.6281 19.8901 15.3059 20.4351 14.771 20.5726L14.1924 20.7213C13.6492 20.8609 13.0943 20.9502 12.5346 20.988C11.9925 21.0247 11.4483 21.013 10.9083 20.953L10.8397 20.9454C10.3082 20.8863 9.78352 20.7776 9.27238 20.6206C8.72212 20.4517 8.18505 20.2245 7.68131 19.9498C7.24086 19.7097 6.81595 19.4285 6.42229 19.1149L6.26753 18.9917C5.94226 18.7326 5.6367 18.4497 5.35338 18.1453C4.89963 17.6578 4.50556 17.118 4.17948 16.5373L4.1507 16.486C3.89877 16.0374 3.6868 15.5674 3.51725 15.0816C3.32767 14.5384 3.192 13.9779 3.1122 13.4081L3.09915 13.315C3.0058 12.6485 2.98189 11.9741 3.0278 11.3027L3.03493 11.1985C3.07179 10.6594 3.15846 10.1248 3.29383 9.60161C3.44505 9.01718 3.65617 8.4503 3.92363 7.90992Z", fill: "currentColor" })));
}
exports.default = Refresh;


/***/ })

/******/ });
//# sourceMappingURL=Refresh.js.map