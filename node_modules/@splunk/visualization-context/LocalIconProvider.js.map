{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@splunk/ui-utils/i18n\"","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"@babel/runtime/helpers/asyncToGenerator\"","webpack:///external \"@babel/runtime/helpers/getPrototypeOf\"","webpack:///external \"@splunk/visualization-context/Provider\"","webpack:///external \"@babel/runtime/helpers/inherits\"","webpack:///external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"uuid-v4\"","webpack:///./src/LocalIconProvider.js"],"names":["b64EncodeUnicode","btoa","String","parseInt","KEY","LocalIconProvider","fetch","response","text","parser","xmlDoc","svg","_","serializer","svgStr","iconDataURI","icon","dataURI","metaData","id","uuid","icons","JSON","localStorage","offset","count","meta","search","results","Object","iconMeta","isSearchedIcon","iconMetaValue","Provider"],"mappings":"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","file":"LocalIconProvider.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 26);\n","module.exports = require(\"@splunk/ui-utils/i18n\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","module.exports = require(\"@splunk/visualization-context/Provider\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"uuid-v4\");","/* eslint-disable class-methods-use-this,no-useless-constructor */\nimport uuid from 'uuid-v4';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport Provider from '@splunk/visualization-context/Provider';\n\nexport const b64EncodeUnicode = str =>\n    // first we use encodeURIComponent to get percent-encoded UTF-8,\n    // then we convert the percent encodings into raw bytes which\n    // can be fed into btoa.\n    btoa(\n        encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) =>\n            String.fromCharCode(parseInt(`0x${p1}`, 16))\n        )\n    );\n\nexport const KEY = '__icons__';\n\n/**\n * a local icon provider\n */\nclass LocalIconProvider extends Provider {\n    constructor() {\n        super();\n    }\n\n    /**\n     * return provider type\n     * @return {String} 'local'\n     */\n    getType() {\n        return 'local';\n    }\n\n    /**\n     * upload one new icon\n     */\n    async upload(dataURI, metaData) {\n        // get svg from dataURI\n        const response = await fetch(dataURI);\n        const text = await response.text();\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(text, 'text/xml');\n        const svg = xmlDoc.getElementsByTagName('svg')[0];\n\n        if (!svg.getAttribute('viewBox')) {\n            throw new Error(_('Please upload a valid svg with viewBox attribute.'));\n        }\n\n        // reset svg attributes\n        svg.setAttribute('preserveAspectRatio', 'none');\n        // convert back to dataURI\n        const serializer = new XMLSerializer();\n        const svgStr = b64EncodeUnicode(serializer.serializeToString(svg));\n        const iconDataURI = `data:image/svg+xml;base64,${svgStr}`;\n\n        // save to localStorage\n        try {\n            const icon = { dataURI: iconDataURI, metaData };\n            const id = uuid();\n            let icons = JSON.parse(localStorage.getItem(KEY) || '{}');\n            icons = { ...icons, [id]: icon };\n            localStorage.setItem(KEY, JSON.stringify(icons));\n            return id;\n        } catch (error) {\n            throw new Error(\n                _('The icon cannot be uploaded. Please check whether your localStorage is full.')\n            );\n        }\n    }\n\n    /**\n     * get one icon by icon id\n     */\n    getById(id) {\n        const icons = JSON.parse(localStorage.getItem(KEY) || '{}');\n        if (icons[id]) {\n            return icons[id];\n        }\n        throw new Error(_('The icon is not found.'));\n    }\n\n    /**\n     * get all icon ids\n     * @params options\n     * @params options.meta   a list of meta data attribute that would be returned with each id\n     * @params options.search  a search string to filter the returned icons\n     */\n    listIds({ offset = 0, count = 100, meta = [], search = null }) {\n        try {\n            const icons = JSON.parse(localStorage.getItem(KEY) || '{}');\n            const results = [];\n\n            Object.keys(icons)\n                .slice(offset, count)\n                .forEach(id => {\n                    const icon = { id };\n                    const iconMeta = icons[id].metaData || {};\n                    // If search is a valid string, return the icon with matched meta data\n                    const isSearchedIcon =\n                        search != null &&\n                        Object.keys(iconMeta).some(attr => {\n                            const iconMetaValue = iconMeta[attr].toLowerCase();\n                            return iconMetaValue.indexOf(search.toLowerCase()) > -1;\n                        });\n\n                    if (search == null || isSearchedIcon) {\n                        if (meta && meta.length) {\n                            icon.metaData = {};\n                            meta.forEach(attr => {\n                                if (iconMeta[attr] != null) {\n                                    icon.metaData[attr] = iconMeta[attr];\n                                }\n                            });\n                        }\n\n                        results.push(icon);\n                    }\n                });\n\n            return results;\n        } catch (error) {\n            throw new Error(_('The icon ids cannot be listed.'));\n        }\n    }\n\n    /**\n     * delete an icon by icon id\n     */\n    deleteById(id) {\n        try {\n            const icon = this.getById(id);\n            const icons = JSON.parse(localStorage.getItem(KEY));\n            delete icons[id];\n            localStorage.setItem(KEY, JSON.stringify(icons));\n            return icon;\n        } catch (error) {\n            throw new Error(_('The icon cannot be deleted.'));\n        }\n    }\n}\n\nexport default LocalIconProvider;\n"],"sourceRoot":""}