{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@splunk/ui-utils/i18n\"","webpack:///external \"@splunk/visualizations-shared/schemaUtils\"","webpack:///external \"@splunk/react-icons/GaugeFiller\"","webpack:///external \"@splunk/react-visualizations/FillerGauge\"","webpack:///external \"@babel/runtime/helpers/inherits\"","webpack:///external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack:///external \"@babel/runtime/helpers/extends\"","webpack:///./src/visualizations/FillerGauge/optionsSchema.js","webpack:///./src/visualizations/FillerGauge/editorConfig.js","webpack:///./src/visualizations/FillerGauge/FillerGauge.jsx","webpack:///external \"@splunk/dashboard-visualizations/common/IconPlaceholder\"","webpack:///external \"@splunk/themes/pick\"","webpack:///external \"@splunk/dashboard-visualizations/utils/enhancer\"","webpack:///external \"react\"","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"@splunk/visualizations-shared/Message\"","webpack:///external \"@splunk/themes/variables\"","webpack:///external \"@babel/runtime/helpers/getPrototypeOf\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"@splunk/visualization-encoding-parsers/FillerGaugeParser\"","webpack:///./src/common/editorConfig/Gauge.js","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"@splunk/dashboard-visualizations/common/BaseVisualization\""],"names":["backgroundColor","description","pattern","type","majorUnit","default","orientation","getPattern","showLabels","showValue","usePercentageRange","usePercentageValue","editorConfig","label","_","open","layout","encoding","formatKey","editor","editorProps","openRanges","isTogglable","option","pickFromTheme","enterprise","dark","variables","light","prisma","backgroundColorSidebar","theme","FillerGaugeComponent","dataSources","options","width","height","propsFromEncoding","parse","dataContract","propInWrongType","receivedType","expectedType","BaseVisualization","propTypes","defaultProps","initialDimension","offset","count","optionsSchema","placeholder","gauge","values","value"],"mappings":"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","file":"FillerGauge.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 148);\n","module.exports = require(\"@splunk/ui-utils/i18n\");","module.exports = require(\"@splunk/visualizations-shared/schemaUtils\");","module.exports = require(\"@splunk/react-icons/GaugeFiller\");","module.exports = require(\"@splunk/react-visualizations/FillerGauge\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/extends\");","import { COLOR_OR_TOKEN_PATTERN, getPattern } from '@splunk/visualizations-shared/schemaUtils';\n\nexport default {\n    backgroundColor: {\n        description:\n            'Specify the color used for the background using a Hex Code. The default for enterprise light mode is \"#FFFFFF\". The default for enterprise dark mode is \"#000000\". The default for prisma dark mode is \"#0B0C0E\".',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    majorUnit: {\n        default: 'auto',\n        description: 'Specify, in pixels, the spacing between major tick marks.',\n        type: ['number', 'string'],\n    },\n    orientation: {\n        default: 'vertical',\n        description: 'Specify the axis orientation of the gauge.',\n        pattern: getPattern(['horizontal', 'vertical']),\n        type: 'string',\n    },\n    showLabels: { default: true, description: 'Specify whether to display labels.', type: 'boolean' },\n    showValue: {\n        default: true,\n        description: 'Specify whether the gauge value is displayed.',\n        type: 'boolean',\n    },\n    usePercentageRange: {\n        default: false,\n        description: 'Specify whether to format gauge ranges as percentages.',\n        type: 'boolean',\n    },\n    usePercentageValue: {\n        default: false,\n        description: 'Specify whether to format the gauge values as percentages.',\n        type: 'boolean',\n    },\n};\n","import { _ } from '@splunk/ui-utils/i18n';\nimport pick from '@splunk/themes/pick';\nimport variables from '@splunk/themes/variables';\nimport GaugeConfig from '../../common/editorConfig/Gauge';\n\nconst editorConfig = [\n    GaugeConfig,\n    {\n        label: _('Threshold Settings'),\n        open: true,\n        layout: [\n            [\n                {\n                    label: _('Gauge Color'),\n                    encoding: 'gaugeColor', // encoding name\n                    formatKey: 'ranges', // key for value in encoding config (gaugeColor.format.ranges)\n                    editor: 'editor.threshold',\n                    editorProps: {\n                        openRanges: false, // Use closed ranges\n                        isTogglable: false, // Can not disable thresholds\n                    },\n                },\n            ],\n        ],\n    },\n    {\n        label: _('Background Color'),\n        layout: [\n            [\n                {\n                    label: '',\n                    option: 'backgroundColor',\n                    editor: 'editor.color',\n                    editorProps: {\n                        pickFromTheme: theme =>\n                            pick({\n                                enterprise: {\n                                    dark: variables.black,\n                                    light: variables.backgroundColor,\n                                },\n                                prisma: variables.backgroundColorSidebar,\n                            })({ theme }),\n                    },\n                },\n            ],\n        ],\n    },\n];\n\nexport default editorConfig;\n","import React, { Component } from 'react';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport BaseVisualization from '@splunk/dashboard-visualizations/common/BaseVisualization';\nimport { parse, dataContract } from '@splunk/visualization-encoding-parsers/FillerGaugeParser';\nimport SuiGaugeFillerIcon from '@splunk/react-icons/GaugeFiller';\nimport ReactFillerGauge from '@splunk/react-visualizations/FillerGauge';\nimport { withVisualizationAndThemeHOCs } from '@splunk/dashboard-visualizations/utils/enhancer';\nimport IconPlaceholder from '@splunk/dashboard-visualizations/common/IconPlaceholder';\nimport Message from '@splunk/visualizations-shared/Message';\nimport optionsSchema from './optionsSchema';\nimport editor from './editorConfig';\n\nexport class FillerGaugeComponent extends Component {\n    static propTypes = BaseVisualization.propTypes;\n\n    static defaultProps = {\n        ...BaseVisualization.defaultProps,\n        height: 250,\n    };\n\n    static dataContract = dataContract;\n\n    static vizContract = {\n        initialDimension: {\n            width: 300,\n            height: 150,\n        },\n    };\n\n    static initialRequestParams = { offset: 0, count: 10000 };\n\n    static supportedDataSources = ['primary'];\n\n    static schema = optionsSchema;\n\n    static editor = editor;\n\n    render() {\n        const { dataSources, options, encoding, width, height } = this.props;\n        const propsFromEncoding = parse(dataSources, encoding);\n\n        let propInWrongType;\n        let receivedType;\n        let expectedType;\n        if (propsFromEncoding.valueType !== dataContract.encoding.value.type) {\n            propInWrongType = 'value';\n            receivedType = propsFromEncoding.valueType;\n            expectedType = dataContract.encoding.value.type;\n        } else if (propsFromEncoding.gaugeColorType !== dataContract.encoding.gaugeColor.type) {\n            propInWrongType = 'gaugeColor';\n            receivedType = propsFromEncoding.gaugeColorType;\n            expectedType = dataContract.encoding.gaugeColor.type;\n        }\n        if (propInWrongType) {\n            return (\n                <Message\n                    data-test=\"message\"\n                    width={width}\n                    height={height}\n                    message={_(\n                        `Data type for \"${propInWrongType}\" encoding is incorrect. Expected: \"${expectedType}\", Received: \"${receivedType}\"`\n                    )}\n                    level=\"info\"\n                />\n            );\n        }\n\n        return <ReactFillerGauge width={width} height={height} {...propsFromEncoding} {...options} />;\n    }\n}\n\nexport default withVisualizationAndThemeHOCs({\n    placeholder: <IconPlaceholder icon={<SuiGaugeFillerIcon />} />,\n})(FillerGaugeComponent);\n","module.exports = require(\"@splunk/dashboard-visualizations/common/IconPlaceholder\");","module.exports = require(\"@splunk/themes/pick\");","module.exports = require(\"@splunk/dashboard-visualizations/utils/enhancer\");","module.exports = require(\"react\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@splunk/visualizations-shared/Message\");","module.exports = require(\"@splunk/themes/variables\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@splunk/visualization-encoding-parsers/FillerGaugeParser\");","import { _ } from '@splunk/ui-utils/i18n';\n\nconst gauge = {\n    label: _('Visualization Settings'),\n    layout: [\n        [\n            {\n                label: _('Show Value'),\n                option: 'showValue',\n                editor: 'editor.toggle',\n            },\n        ],\n        [\n            {\n                label: _('Show Labels'),\n                option: 'showLabels',\n                editor: 'editor.toggle',\n            },\n        ],\n        [\n            {\n                label: _('Orientation'),\n                option: 'orientation',\n                editor: 'editor.radioBar',\n                editorProps: {\n                    values: [\n                        { label: _('Vertical'), value: 'vertical' },\n                        { label: _('Horizontal'), value: 'horizontal' },\n                    ],\n                },\n            },\n        ],\n    ],\n};\n\nexport default gauge;\n","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@splunk/dashboard-visualizations/common/BaseVisualization\");"],"sourceRoot":""}