{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@splunk/ui-utils/i18n\"","webpack:///external \"@splunk/visualizations-shared/schemaUtils\"","webpack:///external \"react\"","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"@splunk/themes/variables\"","webpack:///external \"@babel/runtime/helpers/getPrototypeOf\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"@splunk/dashboard-visualizations/common/BaseVisualization\"","webpack:///external \"@babel/runtime/helpers/inherits\"","webpack:///external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack:///external \"@babel/runtime/helpers/extends\"","webpack:///external \"@splunk/dashboard-visualizations/common/IconPlaceholder\"","webpack:///external \"@splunk/themes/pick\"","webpack:///external \"@splunk/dashboard-visualizations/utils/enhancer\"","webpack:///external \"@splunk/visualization-themes/variables\"","webpack:///external \"@splunk/visualization-icons\"","webpack:///external \"@splunk/dashboard-visualizations/utils/eventUtils\"","webpack:///external \"@splunk/visualizations-shared/colorUtils\"","webpack:///external \"@splunk/visualization-encoding-parsers/SingleValueParser\"","webpack:///./src/common/editorConfig/Threshold.js","webpack:///./src/common/editorConfig/NumberFormatting.js","webpack:///./src/visualizations/SingleValue/optionsSchema.js","webpack:///./src/visualizations/SingleValue/editorConfig.js","webpack:///./src/visualizations/SingleValue/SingleValue.jsx","webpack:///external \"@splunk/react-visualizations/SingleValue\""],"names":["Threshold","label","_","open","layout","encoding","formatKey","editor","numberFormatting","option","editorProps","min","values","value","unit","description","type","unitPosition","default","pattern","getPattern","underLabel","backgroundColor","showTrendIndicator","useTrendUnits","showSparkline","sparklinePosition","sparklineFillColor","sparklineStrokeColor","showSparklineTooltip","sparklineAreaGraph","sparklineAcceptNullData","sparklineHighlightSegments","sparklineHighlightDots","trendDisplayMode","numberPrecision","maximum","minimum","useThousandSeparators","majorFontSize","deltaFontSize","editorConfig","showEditor","options","placeholder","pickFromTheme","enterprise","dark","variables","light","prisma","backgroundColorSidebar","theme","INITIAL_WIDTH","INITIAL_HEIGHT","SingleValueComponent","dataSources","width","height","style","onEventTrigger","mode","hasEventHandlers","onComputedProps","parse","deltaValue","deltaColor","graphData","encodingBackgroundColor","majorColor","Number","Array","parseFloat","isColor","onValueClick","getClickHandler","BaseVisualization","propTypes","defaultProps","dataContract","initialDimension","optionsSchema","enableBackgroundColorOption","defaultBackgroundColor"],"mappings":"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","file":"SingleValue.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 61);\n","module.exports = require(\"@splunk/ui-utils/i18n\");","module.exports = require(\"@splunk/visualizations-shared/schemaUtils\");","module.exports = require(\"react\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@splunk/themes/variables\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@splunk/dashboard-visualizations/common/BaseVisualization\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/extends\");","module.exports = require(\"@splunk/dashboard-visualizations/common/IconPlaceholder\");","module.exports = require(\"@splunk/themes/pick\");","module.exports = require(\"@splunk/dashboard-visualizations/utils/enhancer\");","module.exports = require(\"@splunk/visualization-themes/variables\");","module.exports = require(\"@splunk/visualization-icons\");","module.exports = require(\"@splunk/dashboard-visualizations/utils/eventUtils\");","module.exports = require(\"@splunk/visualizations-shared/colorUtils\");","module.exports = require(\"@splunk/visualization-encoding-parsers/SingleValueParser\");","import { _ } from '@splunk/ui-utils/i18n';\n\nconst Threshold = {\n    label: _('Threshold Settings'),\n    open: true,\n    layout: [\n        [\n            {\n                label: _('Fill'),\n                encoding: 'fill', // encoding name\n                formatKey: 'ranges', // key for value in encoding config (fill.format.ranges)\n                editor: 'editor.threshold',\n            },\n        ],\n    ],\n};\n\nexport default Threshold;\n","import { _ } from '@splunk/ui-utils/i18n';\n\nconst numberFormatting = {\n    label: _('Number Formatting'),\n    layout: [\n        [\n            {\n                label: _('Digit Precision'),\n                option: 'numberPrecision',\n                editor: 'editor.number',\n                editorProps: {\n                    min: 0,\n                },\n            },\n        ],\n        [\n            {\n                label: _('Unit'),\n                option: 'unit',\n                editor: 'editor.text',\n            },\n            {\n                label: _('Position'), // todo: we need a new editor combining unit and position\n                option: 'unitPosition',\n                editor: 'editor.select',\n                editorProps: {\n                    values: [\n                        { label: _('Before'), value: 'before' },\n                        { label: _('After'), value: 'after' },\n                    ],\n                },\n            },\n        ],\n    ],\n};\n\nexport default numberFormatting;\n","import { COLOR_OR_TOKEN_PATTERN, getPattern } from '@splunk/visualizations-shared/schemaUtils';\n\nexport default {\n    unit: { description: 'Specify text to show next to the major value.', type: 'string' },\n    unitPosition: {\n        default: 'after',\n        description: 'Specify whether the unit text should appear before or after the major value.',\n        pattern: getPattern(['before', 'after']),\n        type: 'string',\n    },\n    underLabel: { description: 'Specify the text that appears below the major value.', type: 'string' },\n    backgroundColor: {\n        description:\n            'Specify the color to use for the background. The hex value format should be #FFFFFF. The default for light mode is \"#FFFFFF\". The default for dark mode is \"#171d21\". The default for prisma dark is \"#0b0c0e\".',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    showTrendIndicator: {\n        default: true,\n        description: 'Specify whether to show or hide the trend indicator.',\n        type: 'boolean',\n    },\n    useTrendUnits: {\n        default: false,\n        description:\n            'Specify whether to truncate the trend value to 2 significant digits. A magnitude unit will be displayed.',\n        type: 'boolean',\n    },\n    showSparkline: {\n        default: true,\n        description: 'Specify whether to show or hide the single value sparkline.',\n        type: 'boolean',\n    },\n    sparklinePosition: {\n        default: 'below',\n        description: 'Specify the location to display a sparkline.',\n        pattern: getPattern(['before', 'after', 'below']),\n        type: 'string',\n    },\n    sparklineFillColor: {\n        default: '#6F7A87',\n        description:\n            'Specify a color to use as the fill for the sparkline graph. The hex value format should be #FFFFFF.',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    sparklineStrokeColor: {\n        default: '#2F353C',\n        description:\n            'Specify a color to use for the sparkline stroke. The hex value format should be #FFFFFF.',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    showSparklineTooltip: {\n        default: false,\n        description: 'Show a tooltip to display values on the sparkline.',\n        type: 'boolean',\n    },\n    sparklineAreaGraph: {\n        default: false,\n        description: 'Specify whether to show the sparkline as an area graph rather than a line.',\n        type: 'boolean',\n    },\n    sparklineAcceptNullData: {\n        default: true,\n        description: 'Specify whether to convert null and non-numeric values in the sparkline to 0.',\n        type: 'boolean',\n    },\n    sparklineHighlightSegments: {\n        default: 0,\n        description: 'Specify the number of segments to be highlighted at the top of a sparkline area graph.',\n        type: 'number',\n    },\n    sparklineHighlightDots: {\n        default: 0,\n        description:\n            'Specify the number of markers, or dots, to display at the top of a sparkline area graph.',\n        type: 'number',\n    },\n    trendDisplayMode: {\n        default: 'absolute',\n        description: 'Specify whether the trend value is displayed as a percentage or an absolute count.',\n        pattern: getPattern(['percent', 'absolute']),\n        type: 'string',\n    },\n    numberPrecision: {\n        default: 0,\n        maximum: 20,\n        minimum: 0,\n        description:\n            'Specify the number of decimal places to display. For example, to display 3 decimal places, use a value of 3. The maximum value is 20.',\n        type: 'number',\n    },\n    useThousandSeparators: {\n        default: true,\n        description: 'Specify whether numeric values use commas as thousandths separaters.',\n        type: 'boolean',\n    },\n    majorFontSize: {\n        description:\n            'Specify the font size (px) for the major value. By default the major value font size is calculated dynamically based on the available space.',\n        type: 'number',\n    },\n    deltaFontSize: {\n        description:\n            'Specify the font size (px) for the delta value. By default the delta value font size is calculated dynamically based on the available space.',\n        type: 'number',\n    },\n};\n","import { _ } from '@splunk/ui-utils/i18n';\nimport pick from '@splunk/themes/pick';\nimport variables from '@splunk/themes/variables';\nimport NumberFormattingConfig from '../../common/editorConfig/NumberFormatting';\nimport ThresholdConfig from '../../common/editorConfig/Threshold';\n\nconst editorConfig = [\n    {\n        label: _('Visualization Settings'),\n        layout: [\n            [\n                {\n                    label: _('Show Trending Value'),\n                    option: 'showTrendIndicator',\n                    editor: 'editor.checkbox',\n                },\n            ],\n            [\n                {\n                    label: _('Trend Display as'),\n                    option: 'trendDisplayMode',\n                    editor: 'editor.select',\n                    editorProps: {\n                        values: [\n                            { label: _('Percent'), value: 'percent' },\n                            { label: _('Absolute'), value: 'absolute' },\n                        ],\n                    },\n                    // If property matches the default value specified in schema, its not set in options. Hence we check if its undefined.\n                    showEditor: ({ options }) =>\n                        options.showTrendIndicator || options.showTrendIndicator === undefined,\n                },\n            ],\n            [\n                {\n                    label: _('Show Sparkline'),\n                    option: 'showSparkline',\n                    editor: 'editor.checkbox',\n                },\n            ],\n            [\n                {\n                    label: '',\n                    option: 'sparklinePosition',\n                    editor: 'editor.radioBar',\n                    editorProps: {\n                        values: [\n                            { label: _('Before'), value: 'before' },\n                            { label: _('After'), value: 'after' },\n                            { label: _('Below'), value: 'below' },\n                        ],\n                    },\n                    // If property matches the default value specified in schema, its not set in options. Hence we check if its undefined.\n                    showEditor: ({ options }) => options.showSparkline || options.showSparkline === undefined,\n                },\n            ],\n        ],\n    },\n    {\n        label: _('Font Settings'),\n        open: true,\n        layout: [\n            [\n                {\n                    label: _('Major Font Size (px)'),\n                    option: 'majorFontSize',\n                    editor: 'editor.number',\n                    editorProps: {\n                        min: 1,\n                    },\n                    placeholder: _('Auto'),\n                },\n                {\n                    label: _('Delta Font Size (px)'),\n                    option: 'deltaFontSize',\n                    editor: 'editor.number',\n                    editorProps: {\n                        min: 1,\n                    },\n                    placeholder: _('Auto'),\n                },\n            ],\n        ],\n    },\n    ThresholdConfig,\n    {\n        label: _('Background Color'),\n        layout: [\n            [\n                {\n                    label: '',\n                    option: 'backgroundColor',\n                    editor: 'editor.color',\n                    editorProps: {\n                        pickFromTheme: theme =>\n                            pick({\n                                enterprise: {\n                                    dark: variables.black,\n                                    light: variables.backgroundColor,\n                                },\n                                prisma: variables.backgroundColorSidebar,\n                            })({ theme }),\n                    },\n                },\n            ],\n        ],\n    },\n    NumberFormattingConfig,\n];\n\nexport default editorConfig;\n","import React, { Component } from 'react';\nimport BaseVisualization from '@splunk/dashboard-visualizations/common/BaseVisualization';\nimport { withVisualizationAndThemeHOCs } from '@splunk/dashboard-visualizations/utils/enhancer';\nimport { enterprise } from '@splunk/visualization-themes/variables';\nimport { getClickHandler, enableClickHandler } from '@splunk/dashboard-visualizations/utils/eventUtils';\nimport ReactSingleValue from '@splunk/react-visualizations/SingleValue';\nimport { parse, dataContract } from '@splunk/visualization-encoding-parsers/SingleValueParser';\nimport { SingleValue as SingleValueIcon } from '@splunk/visualization-icons';\nimport IconPlaceholder from '@splunk/dashboard-visualizations/common/IconPlaceholder';\nimport { isColor } from '@splunk/visualizations-shared/colorUtils';\nimport optionsSchema from './optionsSchema';\nimport editor from './editorConfig';\n\nexport const INITIAL_WIDTH = 250;\nexport const INITIAL_HEIGHT = 250;\n\nexport class SingleValueComponent extends Component {\n    static propTypes = {\n        ...BaseVisualization.propTypes,\n    };\n\n    static defaultProps = {\n        ...BaseVisualization.defaultProps,\n        height: INITIAL_HEIGHT,\n    };\n\n    static dataContract = dataContract;\n\n    static vizContract = {\n        initialDimension: {\n            width: INITIAL_WIDTH,\n            height: INITIAL_HEIGHT,\n        },\n    };\n\n    static schema = optionsSchema;\n\n    static editor = editor;\n\n    render() {\n        const {\n            dataSources,\n            options,\n            encoding,\n            width,\n            height,\n            style,\n            onEventTrigger,\n            mode,\n            hasEventHandlers,\n            onComputedProps,\n        } = this.props;\n        const {\n            value,\n            deltaValue,\n            deltaColor,\n            graphData,\n            backgroundColor: encodingBackgroundColor,\n            majorColor = null,\n        } = parse(dataSources, encoding);\n        const showTrendIndicator = !Number.isNaN(deltaValue) && options.showTrendIndicator !== false;\n        // Hide the sparkline if the entire graph is non-numeric\n        const showSparkline =\n            this.props.options.showSparkline &&\n            Array.isArray(graphData) &&\n            graphData.filter(v => !Number.isNaN(parseFloat(v))).length > 0;\n        const backgroundColor =\n            (isColor(encodingBackgroundColor) && encodingBackgroundColor) ||\n            (isColor(options.backgroundColor) && options.backgroundColor) ||\n            null;\n        // Click handler\n        const onValueClick = enableClickHandler(hasEventHandlers, mode)\n            ? getClickHandler(onEventTrigger, { value, deltaValue })\n            : null;\n        onComputedProps(backgroundColor ? { backgroundColor } : {});\n        return (\n            <ReactSingleValue\n                width={width}\n                height={height}\n                style={style}\n                // viz props from options (options < encoding)\n                {...options}\n                // viz props from encoding\n                majorColor={majorColor}\n                value={value}\n                deltaValue={deltaValue}\n                deltaColor={deltaColor}\n                graphData={graphData}\n                // viz props based on options and encoding\n                backgroundColor={backgroundColor}\n                showTrendIndicator={showTrendIndicator}\n                showSparkline={showSparkline}\n                // event handler\n                onValueClick={onValueClick}\n            />\n        );\n    }\n}\n\nexport default withVisualizationAndThemeHOCs({\n    enableBackgroundColorOption: true,\n    defaultBackgroundColor: enterprise.defaultBackgroundColor,\n    placeholder: <IconPlaceholder icon={<SingleValueIcon />} />,\n})(SingleValueComponent);\n","module.exports = require(\"@splunk/react-visualizations/SingleValue\");"],"sourceRoot":""}