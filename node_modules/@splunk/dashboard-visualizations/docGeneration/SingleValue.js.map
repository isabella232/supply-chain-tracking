{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@splunk/react-docs/DocExample\"","webpack:///external \"@splunk/dashboard-visualizations/common/OptionsDoc\"","webpack:///external \"@splunk/dashboard-visualizations/SingleValue\"","webpack:///external \"@splunk/dashboard-visualizations/common/EncodingDoc\"","webpack:///external \"@splunk/dashboard-visualizations/common/EventsDoc\"","webpack:///external \"@splunk/visualizations-shared/schemaUtils\"","webpack:///./src/visualizations/SingleValue/docs/examples/Basic.jsx?06c8","webpack:///./src/visualizations/SingleValue/docs/examples/FieldFoo.jsx?bbb0","webpack:///./src/visualizations/SingleValue/docs/examples/FieldBar.jsx?a601","webpack:///./src/visualizations/SingleValue/docs/examples/BackgroundColor.jsx?2331","webpack:///./src/visualizations/SingleValue/docs/examples/BackgroundColorWhite.jsx?fae5","webpack:///./src/visualizations/SingleValue/docs/examples/CustomFontSizes.jsx?1828","webpack:///./src/visualizations/SingleValue/docs/examples/NoSparkline.jsx?0d4d","webpack:///./src/visualizations/SingleValue/docs/examples/NoTrendIndicator.jsx?d13b","webpack:///./src/visualizations/SingleValue/docs/examples/NoThousandSeparators.jsx?c397","webpack:///./src/visualizations/SingleValue/docs/examples/TrendModePercent.jsx?cbf7","webpack:///./src/visualizations/SingleValue/docs/examples/Precision.jsx?73b9","webpack:///./src/visualizations/SingleValue/docs/examples/UnderLabel.jsx?0cfe","webpack:///./src/visualizations/SingleValue/docs/examples/UnitAfter.jsx?d054","webpack:///./src/visualizations/SingleValue/docs/examples/UnitBefore.jsx?3fb2","webpack:///./src/visualizations/SingleValue/docs/examples/NoTrendUnit.jsx?86fb","webpack:///./src/visualizations/SingleValue/docs/examples/TrendUnit.jsx?9905","webpack:///./src/visualizations/SingleValue/docs/examples/SparklineBefore.jsx?056b","webpack:///./src/visualizations/SingleValue/docs/examples/SparklineAfter.jsx?28dd","webpack:///./src/visualizations/SingleValue/docs/examples/SparklineAreaGraph.jsx?e251","webpack:///./src/visualizations/SingleValue/docs/examples/StrokeColor.jsx?f61d","webpack:///./src/visualizations/SingleValue/docs/examples/FillColor.jsx?4216","webpack:///./src/visualizations/SingleValue/docs/examples/SparklineNull.jsx?fb32","webpack:///./src/visualizations/SingleValue/docs/examples/SparklineNoNull.jsx?f1f6","webpack:///./src/visualizations/SingleValue/docs/examples/SparklineHighlight.jsx?eaf6","webpack:///./src/visualizations/SingleValue/docs/examples/ColorDataSeries.jsx?90ec","webpack:///./src/visualizations/SingleValue/docs/examples/ColorDataSeriesAreaGraph.jsx?2079","webpack:///./src/visualizations/SingleValue/docs/examples/EncodingColumnIndex.jsx?630a","webpack:///./src/visualizations/SingleValue/docs/examples/EncodingFormat.jsx?7ddd","webpack:///./src/visualizations/SingleValue/docs/examples/EncodingFormatMatch.jsx?3690","webpack:///./src/visualizations/SingleValue/docs/examples/EncodingFormatColumnIndex.jsx?9067","webpack:///./src/visualizations/SingleValue/docs/examples/EncodingFormatMatchMajorColor.jsx?6096","webpack:///./src/visualizations/SingleValue/docs/examples/Basic.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/FieldFoo.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/FieldBar.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/BackgroundColor.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/BackgroundColorWhite.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/CustomFontSizes.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/NoSparkline.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/NoTrendIndicator.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/NoThousandSeparators.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/TrendModePercent.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/Precision.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/UnderLabel.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/UnitAfter.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/UnitBefore.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/NoTrendUnit.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/TrendUnit.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/SparklineBefore.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/SparklineAfter.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/SparklineAreaGraph.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/StrokeColor.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/FillColor.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/SparklineNull.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/SparklineNoNull.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/SparklineHighlight.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/ColorDataSeries.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/ColorDataSeriesAreaGraph.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/EncodingColumnIndex.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/EncodingFormat.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/EncodingFormatMatch.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/EncodingFormatColumnIndex.jsx","webpack:///./src/visualizations/SingleValue/docs/examples/EncodingFormatMatchMajorColor.jsx","webpack:///./src/visualizations/SingleValue/docs/definition.js","webpack:///./src/visualizations/SingleValue/optionsSchema.js","webpack:///./src/visualizations/SingleValue/docs/index.jsx","webpack:///external \"@splunk/visualizations-shared/VisualizationDocPage\""],"names":["primary","data","columns","fields","name","meta","trend","backgroundColor","unit","underLabel","majorFontSize","deltaFontSize","showSparkline","showTrendIndicator","useThousandSeparators","trendDisplayMode","numberPrecision","unitPosition","useTrendUnits","sparklinePosition","showSparklineTooltip","sparklineAreaGraph","sparklineStrokeColor","sparklineFillColor","sparklineAcceptNullData","sparklineHighlightSegments","sparklineHighlightDots","fill","field","format","type","ranges","from","value","to","matches","match","defaultValue","requestParams","offset","count","totalCount","majorColor","encoding","desc","isRequired","events","description","default","pattern","getPattern","maximum","minimum","BasicExample","FieldFooExample","FieldBarExample","BackgroundColorExample","BackgroundColorWhiteExample","CustomFontSizesExample","NoSparklineExample","NoTrendIndicatorExample","NoThousandSeparatorsExample","TrendModePercentExample","NoTrendUnitExample","TrendUnitExample","PrecisionExample","UnderLabelExample","UnitAfterExample","UnitBeforeExample","SparklineBeforeExample","SparklineAfterExample","SparklineAreaGraphExample","StrokeColorExample","FillColorExample","SparklineNullExample","SparklineNoNullExample","SparklineHighLightExample","ColorDataSeriesExample","ColorDataSeriesAreaGraphExample","EncodingColumnIndexExample","EncodingFormatExample","EncodingFormatMatchExample","EncodingFormatColumnIndexExample","EncodingFormatMatchMajorColorExample","doc","optionsSchema"],"mappings":"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","file":"SingleValue.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 58);\n","module.exports = require(\"react\");","module.exports = require(\"@splunk/react-docs/DocExample\");","module.exports = require(\"@splunk/dashboard-visualizations/common/OptionsDoc\");","module.exports = require(\"@splunk/dashboard-visualizations/SingleValue\");","module.exports = require(\"@splunk/dashboard-visualizations/common/EncodingDoc\");","module.exports = require(\"@splunk/dashboard-visualizations/common/EventsDoc\");","module.exports = require(\"@splunk/visualizations-shared/schemaUtils\");","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{}}\\n        encoding={{}}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '2018-08-19T00:00:00.000+00:00',\\n                            '2018-08-20T00:00:00.000+00:00',\\n                            '2018-08-21T00:00:00.000+00:00',\\n                            '2018-08-22T00:00:00.000+00:00',\\n                            '2018-08-23T00:00:00.000+00:00',\\n                            '2018-08-24T00:00:00.000+00:00',\\n                            '2018-08-25T00:00:00.000+00:00',\\n                            '2018-08-26T00:00:00.000+00:00',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: '_time',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{}}\\n        encoding={{\\n            trend: 'primary.foo',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        ['1', '2', '3', '4', '5', '6', '7', '3200'],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: 'bar',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{}}\\n        encoding={{\\n            trend: 'primary.bar',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        ['1', '2', '3', '4', '5', '6', '7', '3200'],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: 'bar',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{\\n            backgroundColor: '#FF0000',\\n        }}\\n        encoding={{\\n            trend: 'primary.foo',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '2018-08-19T00:00:00.000+00:00',\\n                            '2018-08-20T00:00:00.000+00:00',\\n                            '2018-08-21T00:00:00.000+00:00',\\n                            '2018-08-22T00:00:00.000+00:00',\\n                            '2018-08-23T00:00:00.000+00:00',\\n                            '2018-08-24T00:00:00.000+00:00',\\n                            '2018-08-25T00:00:00.000+00:00',\\n                            '2018-08-26T00:00:00.000+00:00',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: '_time',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{\\n            backgroundColor: '#ffffff',\\n            unit: '%',\\n            underLabel: 'test under label',\\n        }}\\n        encoding={{\\n            trend: 'primary.foo',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '2018-08-19T00:00:00.000+00:00',\\n                            '2018-08-20T00:00:00.000+00:00',\\n                            '2018-08-21T00:00:00.000+00:00',\\n                            '2018-08-22T00:00:00.000+00:00',\\n                            '2018-08-23T00:00:00.000+00:00',\\n                            '2018-08-24T00:00:00.000+00:00',\\n                            '2018-08-25T00:00:00.000+00:00',\\n                            '2018-08-26T00:00:00.000+00:00',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: '_time',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{\\n            majorFontSize: 40,\\n            deltaFontSize: 30,\\n        }}\\n        encoding={{\\n            trend: 'primary.foo',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '2018-08-19T00:00:00.000+00:00',\\n                            '2018-08-20T00:00:00.000+00:00',\\n                            '2018-08-21T00:00:00.000+00:00',\\n                            '2018-08-22T00:00:00.000+00:00',\\n                            '2018-08-23T00:00:00.000+00:00',\\n                            '2018-08-24T00:00:00.000+00:00',\\n                            '2018-08-25T00:00:00.000+00:00',\\n                            '2018-08-26T00:00:00.000+00:00',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: '_time',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{\\n            showSparkline: false,\\n        }}\\n        encoding={{\\n            trend: 'primary.foo',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '2018-08-19T00:00:00.000+00:00',\\n                            '2018-08-20T00:00:00.000+00:00',\\n                            '2018-08-21T00:00:00.000+00:00',\\n                            '2018-08-22T00:00:00.000+00:00',\\n                            '2018-08-23T00:00:00.000+00:00',\\n                            '2018-08-24T00:00:00.000+00:00',\\n                            '2018-08-25T00:00:00.000+00:00',\\n                            '2018-08-26T00:00:00.000+00:00',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: '_time',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{\\n            showTrendIndicator: false,\\n        }}\\n        encoding={{\\n            trend: 'primary.foo',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '2018-08-19T00:00:00.000+00:00',\\n                            '2018-08-20T00:00:00.000+00:00',\\n                            '2018-08-21T00:00:00.000+00:00',\\n                            '2018-08-22T00:00:00.000+00:00',\\n                            '2018-08-23T00:00:00.000+00:00',\\n                            '2018-08-24T00:00:00.000+00:00',\\n                            '2018-08-25T00:00:00.000+00:00',\\n                            '2018-08-26T00:00:00.000+00:00',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: '_time',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{\\n            useThousandSeparators: false,\\n        }}\\n        encoding={{\\n            trend: 'primary.foo',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '2018-08-19T00:00:00.000+00:00',\\n                            '2018-08-20T00:00:00.000+00:00',\\n                            '2018-08-21T00:00:00.000+00:00',\\n                            '2018-08-22T00:00:00.000+00:00',\\n                            '2018-08-23T00:00:00.000+00:00',\\n                            '2018-08-24T00:00:00.000+00:00',\\n                            '2018-08-25T00:00:00.000+00:00',\\n                            '2018-08-26T00:00:00.000+00:00',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: '_time',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{\\n            trendDisplayMode: 'percent',\\n        }}\\n        encoding={{\\n            trend: 'primary.foo',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '2018-08-19T00:00:00.000+00:00',\\n                            '2018-08-20T00:00:00.000+00:00',\\n                            '2018-08-21T00:00:00.000+00:00',\\n                            '2018-08-22T00:00:00.000+00:00',\\n                            '2018-08-23T00:00:00.000+00:00',\\n                            '2018-08-24T00:00:00.000+00:00',\\n                            '2018-08-25T00:00:00.000+00:00',\\n                            '2018-08-26T00:00:00.000+00:00',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: '_time',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{\\n            numberPrecision: 2,\\n        }}\\n        encoding={{\\n            trend: 'primary.foo',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '2018-08-19T00:00:00.000+00:00',\\n                            '2018-08-20T00:00:00.000+00:00',\\n                            '2018-08-21T00:00:00.000+00:00',\\n                            '2018-08-22T00:00:00.000+00:00',\\n                            '2018-08-23T00:00:00.000+00:00',\\n                            '2018-08-24T00:00:00.000+00:00',\\n                            '2018-08-25T00:00:00.000+00:00',\\n                            '2018-08-26T00:00:00.000+00:00',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: '_time',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{\\n            underLabel: 'Under Label Test',\\n        }}\\n        encoding={{\\n            trend: 'primary.foo',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '2018-08-19T00:00:00.000+00:00',\\n                            '2018-08-20T00:00:00.000+00:00',\\n                            '2018-08-21T00:00:00.000+00:00',\\n                            '2018-08-22T00:00:00.000+00:00',\\n                            '2018-08-23T00:00:00.000+00:00',\\n                            '2018-08-24T00:00:00.000+00:00',\\n                            '2018-08-25T00:00:00.000+00:00',\\n                            '2018-08-26T00:00:00.000+00:00',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: '_time',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{\\n            unit: ' Total',\\n        }}\\n        encoding={{\\n            trend: 'primary.foo',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '2018-08-19T00:00:00.000+00:00',\\n                            '2018-08-20T00:00:00.000+00:00',\\n                            '2018-08-21T00:00:00.000+00:00',\\n                            '2018-08-22T00:00:00.000+00:00',\\n                            '2018-08-23T00:00:00.000+00:00',\\n                            '2018-08-24T00:00:00.000+00:00',\\n                            '2018-08-25T00:00:00.000+00:00',\\n                            '2018-08-26T00:00:00.000+00:00',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: '_time',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{\\n            unit: '$',\\n            unitPosition: 'before',\\n        }}\\n        encoding={{\\n            trend: 'primary.foo',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '2018-08-19T00:00:00.000+00:00',\\n                            '2018-08-20T00:00:00.000+00:00',\\n                            '2018-08-21T00:00:00.000+00:00',\\n                            '2018-08-22T00:00:00.000+00:00',\\n                            '2018-08-23T00:00:00.000+00:00',\\n                            '2018-08-24T00:00:00.000+00:00',\\n                            '2018-08-25T00:00:00.000+00:00',\\n                            '2018-08-26T00:00:00.000+00:00',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: '_time',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{}}\\n        encoding={{\\n            trend: 'primary.foo',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '13200'],\\n                        [\\n                            '2018-08-19T00:00:00.000+00:00',\\n                            '2018-08-20T00:00:00.000+00:00',\\n                            '2018-08-21T00:00:00.000+00:00',\\n                            '2018-08-22T00:00:00.000+00:00',\\n                            '2018-08-23T00:00:00.000+00:00',\\n                            '2018-08-24T00:00:00.000+00:00',\\n                            '2018-08-25T00:00:00.000+00:00',\\n                            '2018-08-26T00:00:00.000+00:00',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: '_time',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{\\n            useTrendUnits: true,\\n        }}\\n        encoding={{\\n            trend: 'primary.foo',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '13200'],\\n                        [\\n                            '2018-08-19T00:00:00.000+00:00',\\n                            '2018-08-20T00:00:00.000+00:00',\\n                            '2018-08-21T00:00:00.000+00:00',\\n                            '2018-08-22T00:00:00.000+00:00',\\n                            '2018-08-23T00:00:00.000+00:00',\\n                            '2018-08-24T00:00:00.000+00:00',\\n                            '2018-08-25T00:00:00.000+00:00',\\n                            '2018-08-26T00:00:00.000+00:00',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: '_time',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{\\n            sparklinePosition: 'before',\\n        }}\\n        encoding={{\\n            trend: 'primary.foo',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '2018-08-19T00:00:00.000+00:00',\\n                            '2018-08-20T00:00:00.000+00:00',\\n                            '2018-08-21T00:00:00.000+00:00',\\n                            '2018-08-22T00:00:00.000+00:00',\\n                            '2018-08-23T00:00:00.000+00:00',\\n                            '2018-08-24T00:00:00.000+00:00',\\n                            '2018-08-25T00:00:00.000+00:00',\\n                            '2018-08-26T00:00:00.000+00:00',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: '_time',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{\\n            sparklinePosition: 'after',\\n            showSparklineTooltip: true,\\n        }}\\n        encoding={{\\n            trend: 'primary.foo',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '2018-08-19T00:00:00.000+00:00',\\n                            '2018-08-20T00:00:00.000+00:00',\\n                            '2018-08-21T00:00:00.000+00:00',\\n                            '2018-08-22T00:00:00.000+00:00',\\n                            '2018-08-23T00:00:00.000+00:00',\\n                            '2018-08-24T00:00:00.000+00:00',\\n                            '2018-08-25T00:00:00.000+00:00',\\n                            '2018-08-26T00:00:00.000+00:00',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: '_time',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{\\n            sparklineAreaGraph: true,\\n        }}\\n        encoding={{\\n            trend: 'primary.foo',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '2018-08-19T00:00:00.000+00:00',\\n                            '2018-08-20T00:00:00.000+00:00',\\n                            '2018-08-21T00:00:00.000+00:00',\\n                            '2018-08-22T00:00:00.000+00:00',\\n                            '2018-08-23T00:00:00.000+00:00',\\n                            '2018-08-24T00:00:00.000+00:00',\\n                            '2018-08-25T00:00:00.000+00:00',\\n                            '2018-08-26T00:00:00.000+00:00',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: '_time',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{\\n            sparklineStrokeColor: '#FF0000',\\n        }}\\n        encoding={{\\n            trend: 'primary.foo',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '2018-08-19T00:00:00.000+00:00',\\n                            '2018-08-20T00:00:00.000+00:00',\\n                            '2018-08-21T00:00:00.000+00:00',\\n                            '2018-08-22T00:00:00.000+00:00',\\n                            '2018-08-23T00:00:00.000+00:00',\\n                            '2018-08-24T00:00:00.000+00:00',\\n                            '2018-08-25T00:00:00.000+00:00',\\n                            '2018-08-26T00:00:00.000+00:00',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: '_time',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{\\n            sparklineFillColor: '#0000FF',\\n            sparklineAreaGraph: true,\\n        }}\\n        encoding={{\\n            trend: 'primary.foo',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '2018-08-19T00:00:00.000+00:00',\\n                            '2018-08-20T00:00:00.000+00:00',\\n                            '2018-08-21T00:00:00.000+00:00',\\n                            '2018-08-22T00:00:00.000+00:00',\\n                            '2018-08-23T00:00:00.000+00:00',\\n                            '2018-08-24T00:00:00.000+00:00',\\n                            '2018-08-25T00:00:00.000+00:00',\\n                            '2018-08-26T00:00:00.000+00:00',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: '_time',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{}}\\n        encoding={{\\n            trend: 'primary.foo',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '2', '3', '4', null, '6', '7', '32'],\\n                        [\\n                            '2018-08-19T00:00:00.000+00:00',\\n                            '2018-08-20T00:00:00.000+00:00',\\n                            '2018-08-21T00:00:00.000+00:00',\\n                            '2018-08-22T00:00:00.000+00:00',\\n                            '2018-08-23T00:00:00.000+00:00',\\n                            '2018-08-24T00:00:00.000+00:00',\\n                            '2018-08-25T00:00:00.000+00:00',\\n                            '2018-08-26T00:00:00.000+00:00',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: '_time',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{\\n            sparklineAcceptNullData: false,\\n        }}\\n        encoding={{\\n            trend: 'primary.foo',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '2', '3', '4', null, '6', '7', '32'],\\n                        [\\n                            '2018-08-19T00:00:00.000+00:00',\\n                            '2018-08-20T00:00:00.000+00:00',\\n                            '2018-08-21T00:00:00.000+00:00',\\n                            '2018-08-22T00:00:00.000+00:00',\\n                            '2018-08-23T00:00:00.000+00:00',\\n                            '2018-08-24T00:00:00.000+00:00',\\n                            '2018-08-25T00:00:00.000+00:00',\\n                            '2018-08-26T00:00:00.000+00:00',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: '_time',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{\\n            sparklineHighlightSegments: 3,\\n            sparklineHighlightDots: 4,\\n            sparklineAreaGraph: true,\\n        }}\\n        encoding={{\\n            trend: 'primary.foo',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '2018-08-19T00:00:00.000+00:00',\\n                            '2018-08-20T00:00:00.000+00:00',\\n                            '2018-08-21T00:00:00.000+00:00',\\n                            '2018-08-22T00:00:00.000+00:00',\\n                            '2018-08-23T00:00:00.000+00:00',\\n                            '2018-08-24T00:00:00.000+00:00',\\n                            '2018-08-25T00:00:00.000+00:00',\\n                            '2018-08-26T00:00:00.000+00:00',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: '_time',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{}}\\n        encoding={{\\n            trend: 'primary.foo',\\n            fill: 'primary.bar',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '#FF0000',\\n                            '#00FFFF',\\n                            '#0000FF',\\n                            '#800080',\\n                            '#FFFF00',\\n                            '#FFA500',\\n                            '#A52A2A',\\n                            '#008000',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: 'bar',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{\\n            sparklineAreaGraph: true,\\n            sparklineFillColor: '#FF0000',\\n        }}\\n        encoding={{\\n            trend: 'primary.foo',\\n            fill: 'primary.bar',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '#FF0000',\\n                            '#00FFFF',\\n                            '#0000FF',\\n                            '#800080',\\n                            '#FFFF00',\\n                            '#FFA500',\\n                            '#A52A2A',\\n                            '#008000',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: 'bar',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{}}\\n        encoding={{\\n            trend: 'primary.foo',\\n            fill: 'primary[1][2]',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '#FF0000',\\n                            '#00FFFF',\\n                            '#0000FF',\\n                            '#800080',\\n                            '#FFFF00',\\n                            '#FFA500',\\n                            '#A52A2A',\\n                            '#008000',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: 'bar',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{}}\\n        encoding={{\\n            trend: 'primary.foo',\\n            fill: {\\n                field: 'primary.foo',\\n                format: {\\n                    type: 'rangevalue',\\n                    ranges: [\\n                        {\\n                            from: 5000,\\n                            value: '#A52A2A',\\n                        },\\n                        {\\n                            from: 1000,\\n                            to: 5000,\\n                            value: '#FFA500',\\n                        },\\n                        {\\n                            from: 500,\\n                            to: 1000,\\n                            value: '#FFFF00',\\n                        },\\n                        {\\n                            from: 100,\\n                            to: 500,\\n                            value: '#800080',\\n                        },\\n                        {\\n                            from: 1,\\n                            to: 100,\\n                            value: '#0000FF',\\n                        },\\n                        {\\n                            to: 1,\\n                            value: '#000000',\\n                        },\\n                    ],\\n                },\\n            },\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '#FF0000',\\n                            '#00FFFF',\\n                            '#0000FF',\\n                            '#800080',\\n                            '#FFFF00',\\n                            '#FFA500',\\n                            '#A52A2A',\\n                            '#008000',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: 'bar',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{}}\\n        encoding={{\\n            trend: 'primary.foo',\\n            fill: {\\n                field: 'primary.foo',\\n                format: {\\n                    type: 'matchvalue',\\n                    matches: [\\n                        {\\n                            match: 'apple',\\n                            value: '#FFA500',\\n                        },\\n                        {\\n                            match: 'grape',\\n                            value: '#FFFF00',\\n                        },\\n                        {\\n                            match: 'pear',\\n                            value: '#800080',\\n                        },\\n                        {\\n                            match: 'strawberry',\\n                            value: '#0000FF',\\n                        },\\n                        {\\n                            match: 'cherry',\\n                            value: '#A52A2A',\\n                        },\\n                    ],\\n                    defaultValue: '#00FFFF',\\n                },\\n            },\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    columns: [\\n                        [\\n                            'banana',\\n                            'apple',\\n                            'grape',\\n                            'pear',\\n                            'strawberry',\\n                            'raspberry',\\n                            'blueberry',\\n                            'cherry',\\n                        ],\\n                        [\\n                            '2018-08-19T00:00:00.000+00:00',\\n                            '2018-08-20T00:00:00.000+00:00',\\n                            '2018-08-21T00:00:00.000+00:00',\\n                            '2018-08-22T00:00:00.000+00:00',\\n                            '2018-08-23T00:00:00.000+00:00',\\n                            '2018-08-24T00:00:00.000+00:00',\\n                            '2018-08-25T00:00:00.000+00:00',\\n                            '2018-08-26T00:00:00.000+00:00',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: '_time',\\n                        },\\n                    ],\\n                },\\n                meta: { totalCount: 100 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{}}\\n        encoding={{\\n            trend: 'primary.foo',\\n            fill: {\\n                field: 'primary.foo[-3]',\\n                format: {\\n                    type: 'rangevalue',\\n                    ranges: [\\n                        {\\n                            from: 5000,\\n                            value: '#A52A2A',\\n                        },\\n                        {\\n                            from: 1000,\\n                            to: 5000,\\n                            value: '#FFA500',\\n                        },\\n                        {\\n                            from: 500,\\n                            to: 1000,\\n                            value: '#FFFF00',\\n                        },\\n                        {\\n                            from: 100,\\n                            to: 500,\\n                            value: '#800080',\\n                        },\\n                        {\\n                            from: 1,\\n                            to: 100,\\n                            value: '#0000FF',\\n                        },\\n                        {\\n                            to: 1,\\n                            value: '#000000',\\n                        },\\n                    ],\\n                },\\n            },\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '#FF0000',\\n                            '#00FFFF',\\n                            '#0000FF',\\n                            '#800080',\\n                            '#FFFF00',\\n                            '#FFA500',\\n                            '#A52A2A',\\n                            '#008000',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: 'bar',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\\n\\nexport default () => (\\n    <SingleValue\\n        options={{}}\\n        encoding={{\\n            trend: 'primary.foo',\\n            majorColor: {\\n                field: 'primary.foo',\\n                format: {\\n                    type: 'matchvalue',\\n                    matches: [\\n                        {\\n                            match: 'apple',\\n                            value: '#FFA500',\\n                        },\\n                        {\\n                            match: 'grape',\\n                            value: '#FFFF00',\\n                        },\\n                        {\\n                            match: 'pear',\\n                            value: '#800080',\\n                        },\\n                        {\\n                            match: 'strawberry',\\n                            value: '#0000FF',\\n                        },\\n                        {\\n                            match: 'cherry',\\n                            value: '#A52A2A',\\n                        },\\n                    ],\\n                    defaultValue: '#00FFFF',\\n                },\\n            },\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    columns: [\\n                        [\\n                            'banana',\\n                            'apple',\\n                            'grape',\\n                            'pear',\\n                            'strawberry',\\n                            'raspberry',\\n                            'blueberry',\\n                            'cherry',\\n                        ],\\n                        [\\n                            '2018-08-19T00:00:00.000+00:00',\\n                            '2018-08-20T00:00:00.000+00:00',\\n                            '2018-08-21T00:00:00.000+00:00',\\n                            '2018-08-22T00:00:00.000+00:00',\\n                            '2018-08-23T00:00:00.000+00:00',\\n                            '2018-08-24T00:00:00.000+00:00',\\n                            '2018-08-25T00:00:00.000+00:00',\\n                            '2018-08-26T00:00:00.000+00:00',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'foo',\\n                        },\\n                        {\\n                            name: '_time',\\n                        },\\n                    ],\\n                },\\n                meta: { totalCount: 100 },\\n            },\\n        }}\\n    />\\n);\\n\";","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{}}\n        encoding={{}}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{}}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        ['1', '2', '3', '4', '5', '6', '7', '3200'],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: 'bar',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{}}\n        encoding={{\n            trend: 'primary.bar',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        ['1', '2', '3', '4', '5', '6', '7', '3200'],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: 'bar',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            backgroundColor: '#FF0000',\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            backgroundColor: '#ffffff',\n            unit: '%',\n            underLabel: 'test under label',\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            majorFontSize: 40,\n            deltaFontSize: 30,\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            showSparkline: false,\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            showTrendIndicator: false,\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            useThousandSeparators: false,\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            trendDisplayMode: 'percent',\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            numberPrecision: 2,\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            underLabel: 'Under Label Test',\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            unit: ' Total',\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            unit: '$',\n            unitPosition: 'before',\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{}}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '13200'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            useTrendUnits: true,\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '13200'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            sparklinePosition: 'before',\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            sparklinePosition: 'after',\n            showSparklineTooltip: true,\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            sparklineAreaGraph: true,\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            sparklineStrokeColor: '#FF0000',\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            sparklineFillColor: '#0000FF',\n            sparklineAreaGraph: true,\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{}}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '2', '3', '4', null, '6', '7', '32'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            sparklineAcceptNullData: false,\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '2', '3', '4', null, '6', '7', '32'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            sparklineHighlightSegments: 3,\n            sparklineHighlightDots: 4,\n            sparklineAreaGraph: true,\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{}}\n        encoding={{\n            trend: 'primary.foo',\n            fill: 'primary.bar',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '#FF0000',\n                            '#00FFFF',\n                            '#0000FF',\n                            '#800080',\n                            '#FFFF00',\n                            '#FFA500',\n                            '#A52A2A',\n                            '#008000',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: 'bar',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            sparklineAreaGraph: true,\n            sparklineFillColor: '#FF0000',\n        }}\n        encoding={{\n            trend: 'primary.foo',\n            fill: 'primary.bar',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '#FF0000',\n                            '#00FFFF',\n                            '#0000FF',\n                            '#800080',\n                            '#FFFF00',\n                            '#FFA500',\n                            '#A52A2A',\n                            '#008000',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: 'bar',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{}}\n        encoding={{\n            trend: 'primary.foo',\n            fill: 'primary[1][2]',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '#FF0000',\n                            '#00FFFF',\n                            '#0000FF',\n                            '#800080',\n                            '#FFFF00',\n                            '#FFA500',\n                            '#A52A2A',\n                            '#008000',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: 'bar',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{}}\n        encoding={{\n            trend: 'primary.foo',\n            fill: {\n                field: 'primary.foo',\n                format: {\n                    type: 'rangevalue',\n                    ranges: [\n                        {\n                            from: 5000,\n                            value: '#A52A2A',\n                        },\n                        {\n                            from: 1000,\n                            to: 5000,\n                            value: '#FFA500',\n                        },\n                        {\n                            from: 500,\n                            to: 1000,\n                            value: '#FFFF00',\n                        },\n                        {\n                            from: 100,\n                            to: 500,\n                            value: '#800080',\n                        },\n                        {\n                            from: 1,\n                            to: 100,\n                            value: '#0000FF',\n                        },\n                        {\n                            to: 1,\n                            value: '#000000',\n                        },\n                    ],\n                },\n            },\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '#FF0000',\n                            '#00FFFF',\n                            '#0000FF',\n                            '#800080',\n                            '#FFFF00',\n                            '#FFA500',\n                            '#A52A2A',\n                            '#008000',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: 'bar',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{}}\n        encoding={{\n            trend: 'primary.foo',\n            fill: {\n                field: 'primary.foo',\n                format: {\n                    type: 'matchvalue',\n                    matches: [\n                        {\n                            match: 'apple',\n                            value: '#FFA500',\n                        },\n                        {\n                            match: 'grape',\n                            value: '#FFFF00',\n                        },\n                        {\n                            match: 'pear',\n                            value: '#800080',\n                        },\n                        {\n                            match: 'strawberry',\n                            value: '#0000FF',\n                        },\n                        {\n                            match: 'cherry',\n                            value: '#A52A2A',\n                        },\n                    ],\n                    defaultValue: '#00FFFF',\n                },\n            },\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    columns: [\n                        [\n                            'banana',\n                            'apple',\n                            'grape',\n                            'pear',\n                            'strawberry',\n                            'raspberry',\n                            'blueberry',\n                            'cherry',\n                        ],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: { totalCount: 100 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{}}\n        encoding={{\n            trend: 'primary.foo',\n            fill: {\n                field: 'primary.foo[-3]',\n                format: {\n                    type: 'rangevalue',\n                    ranges: [\n                        {\n                            from: 5000,\n                            value: '#A52A2A',\n                        },\n                        {\n                            from: 1000,\n                            to: 5000,\n                            value: '#FFA500',\n                        },\n                        {\n                            from: 500,\n                            to: 1000,\n                            value: '#FFFF00',\n                        },\n                        {\n                            from: 100,\n                            to: 500,\n                            value: '#800080',\n                        },\n                        {\n                            from: 1,\n                            to: 100,\n                            value: '#0000FF',\n                        },\n                        {\n                            to: 1,\n                            value: '#000000',\n                        },\n                    ],\n                },\n            },\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '#FF0000',\n                            '#00FFFF',\n                            '#0000FF',\n                            '#800080',\n                            '#FFFF00',\n                            '#FFA500',\n                            '#A52A2A',\n                            '#008000',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: 'bar',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{}}\n        encoding={{\n            trend: 'primary.foo',\n            majorColor: {\n                field: 'primary.foo',\n                format: {\n                    type: 'matchvalue',\n                    matches: [\n                        {\n                            match: 'apple',\n                            value: '#FFA500',\n                        },\n                        {\n                            match: 'grape',\n                            value: '#FFFF00',\n                        },\n                        {\n                            match: 'pear',\n                            value: '#800080',\n                        },\n                        {\n                            match: 'strawberry',\n                            value: '#0000FF',\n                        },\n                        {\n                            match: 'cherry',\n                            value: '#A52A2A',\n                        },\n                    ],\n                    defaultValue: '#00FFFF',\n                },\n            },\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    columns: [\n                        [\n                            'banana',\n                            'apple',\n                            'grape',\n                            'pear',\n                            'strawberry',\n                            'raspberry',\n                            'blueberry',\n                            'cherry',\n                        ],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: { totalCount: 100 },\n            },\n        }}\n    />\n);\n","export default {\n    encoding: [\n        {\n            name: 'trend',\n            type: '[number | string]',\n            desc: 'Specify the dataSource applied to the single value.',\n            defaultValue: 'primary[0]',\n            isRequired: 'true',\n        },\n        {\n            name: 'fill',\n            type: '[string]',\n            desc: `Specify the dataSource applied to the background color of the single value.\n                   Note: This overrides any specified background color if backgroundColor is specified.`,\n            isRequired: 'false',\n        },\n        {\n            name: 'majorColor',\n            type: '[string]',\n            desc: `Specify the dataSource applied to the font color of the single value.`,\n            isRequired: 'false',\n        },\n        {\n            name: 'deltaColor',\n            type: '[string]',\n            desc: `Specify the dataSource applied to the color of the trend indicator and trend value in the single value.`,\n            isRequired: 'false',\n        },\n    ],\n    events: [\n        {\n            name: 'value.click',\n            desc: 'trigger when user clicks major value',\n        },\n    ],\n};\n","import { COLOR_OR_TOKEN_PATTERN, getPattern } from '@splunk/visualizations-shared/schemaUtils';\n\nexport default {\n    unit: { description: 'Specify text to show next to the major value.', type: 'string' },\n    unitPosition: {\n        default: 'after',\n        description: 'Specify whether the unit text should appear before or after the major value.',\n        pattern: getPattern(['before', 'after']),\n        type: 'string',\n    },\n    underLabel: { description: 'Specify the text that appears below the major value.', type: 'string' },\n    backgroundColor: {\n        description:\n            'Specify the color to use for the background. The hex value format should be #FFFFFF. The default for light mode is \"#FFFFFF\". The default for dark mode is \"#171d21\". The default for prisma dark is \"#0b0c0e\".',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    showTrendIndicator: {\n        default: true,\n        description: 'Specify whether to show or hide the trend indicator.',\n        type: 'boolean',\n    },\n    useTrendUnits: {\n        default: false,\n        description:\n            'Specify whether to truncate the trend value to 2 significant digits. A magnitude unit will be displayed.',\n        type: 'boolean',\n    },\n    showSparkline: {\n        default: true,\n        description: 'Specify whether to show or hide the single value sparkline.',\n        type: 'boolean',\n    },\n    sparklinePosition: {\n        default: 'below',\n        description: 'Specify the location to display a sparkline.',\n        pattern: getPattern(['before', 'after', 'below']),\n        type: 'string',\n    },\n    sparklineFillColor: {\n        default: '#6F7A87',\n        description:\n            'Specify a color to use as the fill for the sparkline graph. The hex value format should be #FFFFFF.',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    sparklineStrokeColor: {\n        default: '#2F353C',\n        description:\n            'Specify a color to use for the sparkline stroke. The hex value format should be #FFFFFF.',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    showSparklineTooltip: {\n        default: false,\n        description: 'Show a tooltip to display values on the sparkline.',\n        type: 'boolean',\n    },\n    sparklineAreaGraph: {\n        default: false,\n        description: 'Specify whether to show the sparkline as an area graph rather than a line.',\n        type: 'boolean',\n    },\n    sparklineAcceptNullData: {\n        default: true,\n        description: 'Specify whether to convert null and non-numeric values in the sparkline to 0.',\n        type: 'boolean',\n    },\n    sparklineHighlightSegments: {\n        default: 0,\n        description: 'Specify the number of segments to be highlighted at the top of a sparkline area graph.',\n        type: 'number',\n    },\n    sparklineHighlightDots: {\n        default: 0,\n        description:\n            'Specify the number of markers, or dots, to display at the top of a sparkline area graph.',\n        type: 'number',\n    },\n    trendDisplayMode: {\n        default: 'absolute',\n        description: 'Specify whether the trend value is displayed as a percentage or an absolute count.',\n        pattern: getPattern(['percent', 'absolute']),\n        type: 'string',\n    },\n    numberPrecision: {\n        default: 0,\n        maximum: 20,\n        minimum: 0,\n        description:\n            'Specify the number of decimal places to display. For example, to display 3 decimal places, use a value of 3. The maximum value is 20.',\n        type: 'number',\n    },\n    useThousandSeparators: {\n        default: true,\n        description: 'Specify whether numeric values use commas as thousandths separaters.',\n        type: 'boolean',\n    },\n    majorFontSize: {\n        description:\n            'Specify the font size (px) for the major value. By default the major value font size is calculated dynamically based on the available space.',\n        type: 'number',\n    },\n    deltaFontSize: {\n        description:\n            'Specify the font size (px) for the delta value. By default the delta value font size is calculated dynamically based on the available space.',\n        type: 'number',\n    },\n};\n","import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\nimport VisualizationDocPage from '@splunk/visualizations-shared/VisualizationDocPage';\nimport EncodingDoc from '@splunk/dashboard-visualizations/common/EncodingDoc';\nimport EventsDoc from '@splunk/dashboard-visualizations/common/EventsDoc';\nimport OptionsDoc from '@splunk/dashboard-visualizations/common/OptionsDoc';\nimport DocExample from '@splunk/react-docs/DocExample';\n\nimport BasicCode from '!!raw-loader!./examples/Basic';\nimport FieldFooCode from '!!raw-loader!./examples/FieldFoo';\nimport FieldBarCode from '!!raw-loader!./examples/FieldBar';\nimport BackgroundColorCode from '!!raw-loader!./examples/BackgroundColor';\nimport BackgroundColorWhiteCode from '!!raw-loader!./examples/BackgroundColorWhite';\nimport CustomFontSizesCode from '!!raw-loader!./examples/CustomFontSizes';\nimport NoSparklineCode from '!!raw-loader!./examples/NoSparkline';\nimport NoTrendIndicatorCode from '!!raw-loader!./examples/NoTrendIndicator';\nimport NoThousandSeparatorsCode from '!!raw-loader!./examples/NoThousandSeparators';\nimport TrendModePercentCode from '!!raw-loader!./examples/TrendModePercent';\nimport PrecisionCode from '!!raw-loader!./examples/Precision';\nimport UnderLabelCode from '!!raw-loader!./examples/UnderLabel';\nimport UnitAfterCode from '!!raw-loader!./examples/UnitAfter';\nimport UnitBeforeCode from '!!raw-loader!./examples/UnitBefore';\nimport NoTrendUnitCode from '!!raw-loader!./examples/NoTrendUnit';\nimport TrendUnitCode from '!!raw-loader!./examples/TrendUnit';\nimport SparklineBeforeCode from '!!raw-loader!./examples/SparklineBefore';\nimport SparklineAfterCode from '!!raw-loader!./examples/SparklineAfter';\nimport SparklineAreaGraphCode from '!!raw-loader!./examples/SparklineAreaGraph';\nimport StrokeColorCode from '!!raw-loader!./examples/StrokeColor';\nimport FillColorCode from '!!raw-loader!./examples/FillColor';\nimport SparklineNullCode from '!!raw-loader!./examples/SparklineNull';\nimport SparklineNoNullCode from '!!raw-loader!./examples/SparklineNoNull';\nimport SparklineHighLightCode from '!!raw-loader!./examples/SparklineHighlight';\nimport ColorDataSeriesCode from '!!raw-loader!./examples/ColorDataSeries';\nimport ColorDataSeriesAreaGraphCode from '!!raw-loader!./examples/ColorDataSeriesAreaGraph';\nimport EncodingColumnIndexCode from '!!raw-loader!./examples/EncodingColumnIndex';\nimport EncodingFormatCode from '!!raw-loader!./examples/EncodingFormat';\nimport EncodingFormatMatchCode from '!!raw-loader!./examples/EncodingFormatMatch';\nimport EncodingFormatColumnIndexCode from '!!raw-loader!./examples/EncodingFormatColumnIndex';\nimport EncodingFormatMatchMajorColorCode from '!!raw-loader!./examples/EncodingFormatMatchMajorColor';\n\nimport BasicExample from './examples/Basic';\nimport FieldFooExample from './examples/FieldFoo';\nimport FieldBarExample from './examples/FieldBar';\nimport BackgroundColorExample from './examples/BackgroundColor';\nimport BackgroundColorWhiteExample from './examples/BackgroundColorWhite';\nimport CustomFontSizesExample from './examples/CustomFontSizes';\nimport NoSparklineExample from './examples/NoSparkline';\nimport NoTrendIndicatorExample from './examples/NoTrendIndicator';\nimport NoThousandSeparatorsExample from './examples/NoThousandSeparators';\nimport TrendModePercentExample from './examples/TrendModePercent';\nimport PrecisionExample from './examples/Precision';\nimport UnderLabelExample from './examples/UnderLabel';\nimport UnitAfterExample from './examples/UnitAfter';\nimport UnitBeforeExample from './examples/UnitBefore';\nimport NoTrendUnitExample from './examples/NoTrendUnit';\nimport TrendUnitExample from './examples/TrendUnit';\nimport SparklineBeforeExample from './examples/SparklineBefore';\nimport SparklineAfterExample from './examples/SparklineAfter';\nimport SparklineAreaGraphExample from './examples/SparklineAreaGraph';\nimport StrokeColorExample from './examples/StrokeColor';\nimport FillColorExample from './examples/FillColor';\nimport SparklineNullExample from './examples/SparklineNull';\nimport SparklineNoNullExample from './examples/SparklineNoNull';\nimport SparklineHighLightExample from './examples/SparklineHighlight';\nimport ColorDataSeriesExample from './examples/ColorDataSeries';\nimport ColorDataSeriesAreaGraphExample from './examples/ColorDataSeriesAreaGraph';\nimport EncodingColumnIndexExample from './examples/EncodingColumnIndex';\nimport EncodingFormatExample from './examples/EncodingFormat';\nimport EncodingFormatMatchExample from './examples/EncodingFormatMatch';\nimport EncodingFormatColumnIndexExample from './examples/EncodingFormatColumnIndex';\nimport EncodingFormatMatchMajorColorExample from './examples/EncodingFormatMatchMajorColor';\n\nimport doc from './definition';\nimport optionsSchema from '../optionsSchema';\n\nexport default () => (\n    <VisualizationDocPage\n        title=\"Dashboard Single Value\"\n        description=\"Wrapper around the Single Value Standard visualization that maps a datasource to values to display. This visualization has been upgraded in @splunk/visualizations/SingleValue and may be used in UDF.\"\n        examplesSection={[\n            <DocExample title=\"Basic Single Value\" key=\"basic\" code={BasicCode} example={BasicExample} />,\n            <DocExample\n                title=\"Encoding Field is foo\"\n                key=\"fieldfoo\"\n                code={FieldFooCode}\n                example={FieldFooExample}\n            />,\n            <DocExample\n                title=\"Encoding Field is bar\"\n                key=\"fieldbar\"\n                code={FieldBarCode}\n                example={FieldBarExample}\n            />,\n            <DocExample\n                title=\"Basic Single Value. Background Color is red\"\n                key=\"backgroundcolor\"\n                code={BackgroundColorCode}\n                example={BackgroundColorExample}\n            />,\n            <DocExample\n                title=\"Basic Single Value. Background Color is white\"\n                key=\"backgroundcolorwhite\"\n                code={BackgroundColorWhiteCode}\n                example={BackgroundColorWhiteExample}\n            />,\n            <DocExample\n                title=\"Major Font Size is 40, Delta Font Size is 30\"\n                key=\"customfontsizes\"\n                code={CustomFontSizesCode}\n                example={CustomFontSizesExample}\n            />,\n            <DocExample\n                title=\"Sparkline is disabled\"\n                key=\"nosparkline\"\n                code={NoSparklineCode}\n                example={NoSparklineExample}\n            />,\n            <DocExample\n                title=\"Trend Indicator is disabled\"\n                key=\"notrendindicator\"\n                code={NoTrendIndicatorCode}\n                example={NoTrendIndicatorExample}\n            />,\n            <DocExample\n                title=\"Thousand Separators is disabled\"\n                key=\"nothousandseparators\"\n                code={NoThousandSeparatorsCode}\n                example={NoThousandSeparatorsExample}\n            />,\n            <DocExample\n                title=\"Trend Display Mode is percent\"\n                key=\"trendmodepercent\"\n                code={TrendModePercentCode}\n                example={TrendModePercentExample}\n            />,\n            <DocExample\n                title=\"Trend Display Unit is disabled, default\"\n                key=\"notrendunit\"\n                code={NoTrendUnitCode}\n                example={NoTrendUnitExample}\n            />,\n            <DocExample\n                title=\"Trend Display Unit is enabled\"\n                key=\"trendunit\"\n                code={TrendUnitCode}\n                example={TrendUnitExample}\n            />,\n            <DocExample\n                title=\"Precision is 2\"\n                key=\"precision\"\n                code={PrecisionCode}\n                example={PrecisionExample}\n            />,\n            <DocExample\n                title=\"Under Label is specified\"\n                key=\"underlabel\"\n                code={UnderLabelCode}\n                example={UnderLabelExample}\n            />,\n            <DocExample\n                title=\"Unit is specified, Unit Position is after, default\"\n                key=\"unitafter\"\n                code={UnitAfterCode}\n                example={UnitAfterExample}\n            />,\n            <DocExample\n                title=\"Unit is specified, Unit Position is before\"\n                key=\"unitbefore\"\n                code={UnitBeforeCode}\n                example={UnitBeforeExample}\n            />,\n            <DocExample\n                title=\"Sparkline Position is before values\"\n                key=\"sparklinebefore\"\n                code={SparklineBeforeCode}\n                example={SparklineBeforeExample}\n            />,\n            <DocExample\n                title=\"Sparkline Position is after values, Sparkline Tooltip is on\"\n                key=\"sparklineafter\"\n                code={SparklineAfterCode}\n                example={SparklineAfterExample}\n            />,\n            <DocExample\n                title=\"Sparkline Area Graph is true\"\n                key=\"SparklineAreaGraph\"\n                code={SparklineAreaGraphCode}\n                example={SparklineAreaGraphExample}\n            />,\n            <DocExample\n                title=\"Sparkline Stroke Color is red\"\n                key=\"strokecolor\"\n                code={StrokeColorCode}\n                example={StrokeColorExample}\n            />,\n            <DocExample\n                title=\"Sparkline Fill Color is blue\"\n                key=\"fillcolor\"\n                code={FillColorCode}\n                example={FillColorExample}\n            />,\n            <DocExample\n                title=\"Sparkline Accept Null is enabled, default\"\n                key=\"sparklinenull\"\n                code={SparklineNullCode}\n                example={SparklineNullExample}\n            />,\n            <DocExample\n                title=\"Sparkline Accept Null is disabled\"\n                key=\"sparklinenonull\"\n                code={SparklineNoNullCode}\n                example={SparklineNoNullExample}\n            />,\n            <DocExample\n                title=\"Sparkline Highlight Segments is 3, Sparkline Highlight Dots is 4\"\n                key=\"sparklinehighlight\"\n                code={SparklineHighLightCode}\n                example={SparklineHighLightExample}\n            />,\n            <DocExample\n                title=\"Color data series specified\"\n                key=\"colordataseries\"\n                code={ColorDataSeriesCode}\n                example={ColorDataSeriesExample}\n            />,\n            <DocExample\n                title=\"Color data series specified, Sparkline Area Graph is true, Sparkline Fill Color is red\"\n                key=\"colordataseriesareagraph\"\n                code={ColorDataSeriesAreaGraphCode}\n                example={ColorDataSeriesAreaGraphExample}\n            />,\n            <DocExample\n                title=\"Encoding column index specified\"\n                key=\"encodingcolumnindex\"\n                code={EncodingColumnIndexCode}\n                example={EncodingColumnIndexExample}\n            />,\n            <DocExample\n                title=\"Encoding format specified\"\n                key=\"encodingformat\"\n                code={EncodingFormatCode}\n                example={EncodingFormatExample}\n            />,\n            <DocExample\n                title=\"Encoding format specified, match formatter used for fill color\"\n                key=\"encodingformatmatch\"\n                code={EncodingFormatMatchCode}\n                example={EncodingFormatMatchExample}\n            />,\n            <DocExample\n                title=\"Encoding format column index specified\"\n                key=\"encodingformatcolumnindex\"\n                code={EncodingFormatColumnIndexCode}\n                example={EncodingFormatColumnIndexExample}\n            />,\n            <DocExample\n                title=\"Encoding format specified, match formatter used for majorColor\"\n                key=\"encodingformatmatchmajorcolor\"\n                code={EncodingFormatMatchMajorColorCode}\n                example={EncodingFormatMatchMajorColorExample}\n            />,\n        ]}\n        encodingSection={<EncodingDoc encoding={doc.encoding} />}\n        optionSection={<OptionsDoc options={optionsSchema} />}\n        eventSection={\n            <EventsDoc\n                events={doc.events}\n                Visualization={SingleValue}\n                encoding={{}}\n                dsState={{\n                    primary: {\n                        data: {\n                            columns: [\n                                ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                                [\n                                    '2018-08-19T00:00:00.000+00:00',\n                                    '2018-08-20T00:00:00.000+00:00',\n                                    '2018-08-21T00:00:00.000+00:00',\n                                    '2018-08-22T00:00:00.000+00:00',\n                                    '2018-08-23T00:00:00.000+00:00',\n                                    '2018-08-24T00:00:00.000+00:00',\n                                    '2018-08-25T00:00:00.000+00:00',\n                                    '2018-08-26T00:00:00.000+00:00',\n                                ],\n                            ],\n                            fields: [\n                                {\n                                    name: 'foo',\n                                },\n                                {\n                                    name: '_time',\n                                },\n                            ],\n                        },\n                        meta: {},\n                    },\n                }}\n            />\n        }\n    />\n);\n","module.exports = require(\"@splunk/visualizations-shared/VisualizationDocPage\");"],"sourceRoot":""}