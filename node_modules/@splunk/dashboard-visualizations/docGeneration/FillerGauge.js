/*!
 * Copyright © 2018 Splunk Inc.
 * SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or
 * in part without a valid written license from Splunk Inc. is PROHIBITED.
 */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 69);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),

/***/ 1:
/***/ (function(module, exports) {

module.exports = require("@splunk/react-docs/DocExample");

/***/ }),

/***/ 10:
/***/ (function(module, exports) {

module.exports = require("@splunk/dashboard-visualizations/common/OptionsDoc");

/***/ }),

/***/ 12:
/***/ (function(module, exports) {

module.exports = require("@splunk/dashboard-visualizations/common/EncodingDoc");

/***/ }),

/***/ 2:
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/schemaUtils");

/***/ }),

/***/ 28:
/***/ (function(module, exports) {

module.exports = require("@splunk/dashboard-visualizations/FillerGauge");

/***/ }),

/***/ 69:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(0);
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);

// EXTERNAL MODULE: external "@splunk/visualizations-shared/VisualizationDocPage"
var VisualizationDocPage_ = __webpack_require__(9);
var VisualizationDocPage_default = /*#__PURE__*/__webpack_require__.n(VisualizationDocPage_);

// EXTERNAL MODULE: external "@splunk/dashboard-visualizations/common/EncodingDoc"
var EncodingDoc_ = __webpack_require__(12);
var EncodingDoc_default = /*#__PURE__*/__webpack_require__.n(EncodingDoc_);

// EXTERNAL MODULE: external "@splunk/dashboard-visualizations/common/OptionsDoc"
var OptionsDoc_ = __webpack_require__(10);
var OptionsDoc_default = /*#__PURE__*/__webpack_require__.n(OptionsDoc_);

// EXTERNAL MODULE: external "@splunk/react-docs/DocExample"
var DocExample_ = __webpack_require__(1);
var DocExample_default = /*#__PURE__*/__webpack_require__.n(DocExample_);

// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/FillerGauge/docs/examples/Basic.jsx
/* harmony default export */ var Basic = ("import React from 'react';\nimport FillerGauge from '@splunk/dashboard-visualizations/FillerGauge';\n\nexport default () => (\n    <FillerGauge\n        options={{}}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [{ name: 'count' }],\n                    columns: [['78']],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/FillerGauge/docs/examples/Horizontal.jsx
/* harmony default export */ var Horizontal = ("import React from 'react';\nimport FillerGauge from '@splunk/dashboard-visualizations/FillerGauge';\n\nexport default () => (\n    <FillerGauge\n        options={{\n            orientation: 'horizontal',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [{ name: 'count' }],\n                    columns: [['78']],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/FillerGauge/docs/examples/MajorUnit.jsx
/* harmony default export */ var MajorUnit = ("import React from 'react';\nimport FillerGauge from '@splunk/dashboard-visualizations/FillerGauge';\n\nexport default () => (\n    <FillerGauge\n        options={{ majorUnit: '25' }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [{ name: 'count' }],\n                    columns: [['78']],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/FillerGauge/docs/examples/NoLabels.jsx
/* harmony default export */ var NoLabels = ("import React from 'react';\nimport FillerGauge from '@splunk/dashboard-visualizations/FillerGauge';\n\nexport default () => (\n    <FillerGauge\n        options={{ showLabels: false }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [{ name: 'count' }],\n                    columns: [['78']],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/FillerGauge/docs/examples/NoValue.jsx
/* harmony default export */ var NoValue = ("import React from 'react';\nimport FillerGauge from '@splunk/dashboard-visualizations/FillerGauge';\n\nexport default () => (\n    <FillerGauge\n        options={{ showValue: false }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [{ name: 'count' }],\n                    columns: [['78']],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/FillerGauge/docs/examples/PercentageRange.jsx
/* harmony default export */ var PercentageRange = ("import React from 'react';\nimport FillerGauge from '@splunk/dashboard-visualizations/FillerGauge';\n\nexport default () => (\n    <FillerGauge\n        options={{ usePercentageRange: true }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [{ name: 'count' }],\n                    columns: [['78']],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/FillerGauge/docs/examples/PercentageValue.jsx
/* harmony default export */ var PercentageValue = ("import React from 'react';\nimport FillerGauge from '@splunk/dashboard-visualizations/FillerGauge';\n\nexport default () => (\n    <FillerGauge\n        options={{ usePercentageValue: true }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [{ name: 'count' }],\n                    columns: [['78']],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/FillerGauge/docs/examples/BackgroundColor.jsx
/* harmony default export */ var BackgroundColor = ("import React from 'react';\nimport FillerGauge from '@splunk/dashboard-visualizations/FillerGauge';\n\nexport default () => (\n    <FillerGauge\n        options={{ backgroundColor: '#0000FF' }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [{ name: 'count' }],\n                    columns: [['78']],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n");
// EXTERNAL MODULE: external "@splunk/dashboard-visualizations/FillerGauge"
var FillerGauge_ = __webpack_require__(28);
var FillerGauge_default = /*#__PURE__*/__webpack_require__.n(FillerGauge_);

// CONCATENATED MODULE: ./src/visualizations/FillerGauge/docs/examples/Basic.jsx


/* harmony default export */ var examples_Basic = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(FillerGauge_default.a, {
    options: {},
    dataSources: {
      primary: {
        requestParams: {
          offset: 0,
          count: 20
        },
        data: {
          fields: [{
            name: 'count'
          }],
          columns: [['78']]
        },
        meta: {
          totalCount: 20
        }
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/FillerGauge/docs/examples/Horizontal.jsx


/* harmony default export */ var examples_Horizontal = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(FillerGauge_default.a, {
    options: {
      orientation: 'horizontal'
    },
    dataSources: {
      primary: {
        requestParams: {
          offset: 0,
          count: 20
        },
        data: {
          fields: [{
            name: 'count'
          }],
          columns: [['78']]
        },
        meta: {
          totalCount: 20
        }
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/FillerGauge/docs/examples/MajorUnit.jsx


/* harmony default export */ var examples_MajorUnit = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(FillerGauge_default.a, {
    options: {
      majorUnit: '25'
    },
    dataSources: {
      primary: {
        requestParams: {
          offset: 0,
          count: 20
        },
        data: {
          fields: [{
            name: 'count'
          }],
          columns: [['78']]
        },
        meta: {
          totalCount: 20
        }
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/FillerGauge/docs/examples/NoLabels.jsx


/* harmony default export */ var examples_NoLabels = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(FillerGauge_default.a, {
    options: {
      showLabels: false
    },
    dataSources: {
      primary: {
        requestParams: {
          offset: 0,
          count: 20
        },
        data: {
          fields: [{
            name: 'count'
          }],
          columns: [['78']]
        },
        meta: {
          totalCount: 20
        }
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/FillerGauge/docs/examples/NoValue.jsx


/* harmony default export */ var examples_NoValue = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(FillerGauge_default.a, {
    options: {
      showValue: false
    },
    dataSources: {
      primary: {
        requestParams: {
          offset: 0,
          count: 20
        },
        data: {
          fields: [{
            name: 'count'
          }],
          columns: [['78']]
        },
        meta: {
          totalCount: 20
        }
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/FillerGauge/docs/examples/PercentageRange.jsx


/* harmony default export */ var examples_PercentageRange = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(FillerGauge_default.a, {
    options: {
      usePercentageRange: true
    },
    dataSources: {
      primary: {
        requestParams: {
          offset: 0,
          count: 20
        },
        data: {
          fields: [{
            name: 'count'
          }],
          columns: [['78']]
        },
        meta: {
          totalCount: 20
        }
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/FillerGauge/docs/examples/PercentageValue.jsx


/* harmony default export */ var examples_PercentageValue = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(FillerGauge_default.a, {
    options: {
      usePercentageValue: true
    },
    dataSources: {
      primary: {
        requestParams: {
          offset: 0,
          count: 20
        },
        data: {
          fields: [{
            name: 'count'
          }],
          columns: [['78']]
        },
        meta: {
          totalCount: 20
        }
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/FillerGauge/docs/examples/BackgroundColor.jsx


/* harmony default export */ var examples_BackgroundColor = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(FillerGauge_default.a, {
    options: {
      backgroundColor: '#0000FF'
    },
    dataSources: {
      primary: {
        requestParams: {
          offset: 0,
          count: 20
        },
        data: {
          fields: [{
            name: 'count'
          }],
          columns: [['78']]
        },
        meta: {
          totalCount: 20
        }
      }
    }
  });
});
// EXTERNAL MODULE: external "@splunk/visualizations-shared/schemaUtils"
var schemaUtils_ = __webpack_require__(2);

// CONCATENATED MODULE: ./src/visualizations/FillerGauge/optionsSchema.js

/* harmony default export */ var optionsSchema = ({
  backgroundColor: {
    description: 'Specify the color used for the background using a Hex Code. The default for enterprise light mode is "#FFFFFF". The default for enterprise dark mode is "#000000". The default for prisma dark mode is "#0B0C0E".',
    pattern: schemaUtils_["COLOR_OR_TOKEN_PATTERN"],
    type: 'string'
  },
  majorUnit: {
    default: 'auto',
    description: 'Specify, in pixels, the spacing between major tick marks.',
    type: ['number', 'string']
  },
  orientation: {
    default: 'vertical',
    description: 'Specify the axis orientation of the gauge.',
    pattern: Object(schemaUtils_["getPattern"])(['horizontal', 'vertical']),
    type: 'string'
  },
  showLabels: {
    default: true,
    description: 'Specify whether to display labels.',
    type: 'boolean'
  },
  showValue: {
    default: true,
    description: 'Specify whether the gauge value is displayed.',
    type: 'boolean'
  },
  usePercentageRange: {
    default: false,
    description: 'Specify whether to format gauge ranges as percentages.',
    type: 'boolean'
  },
  usePercentageValue: {
    default: false,
    description: 'Specify whether to format the gauge values as percentages.',
    type: 'boolean'
  }
});
// CONCATENATED MODULE: ./src/visualizations/FillerGauge/docs/definition.js
/* harmony default export */ var definition = ({
  encoding: [{
    name: 'value',
    type: 'number',
    desc: 'Specify the dataSource applied to the value of filler gauge.',
    defaultValue: 'primary[0][-1]',
    isRequired: 'true'
  }, {
    name: 'gaugeColor',
    type: 'string',
    desc: 'Specify the dataSource applied to the gauge color of the filler gauge.',
    isRequired: 'false'
  }],
  events: []
});
// CONCATENATED MODULE: ./src/visualizations/FillerGauge/docs/index.jsx























/* harmony default export */ var docs = __webpack_exports__["default"] = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(VisualizationDocPage_default.a, {
    title: "FillerGauge",
    examplesSection: [/*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Basic Filler Gauge",
      key: "basic",
      description: "Filler Gauge takes 100% width and 250px height by default.",
      code: Basic,
      example: examples_Basic
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Horizontal Gauge",
      key: "horizontal",
      description: "Sets the horizontal orientation of the gauge. Defaults to vertical.",
      code: Horizontal,
      example: examples_Horizontal
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "\u041Cajor Unit is 25",
      key: "major_unit",
      description: "Specifies, in pixels, the spacing of major tick marks.",
      code: MajorUnit,
      example: examples_MajorUnit
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "No Labels",
      key: "no_labels",
      description: "Gauge displays no labels. Defaults to true.",
      code: NoLabels,
      example: examples_NoLabels
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "No Value",
      key: "no_value",
      description: "Gauge displays no value. Defaults to true.",
      code: NoValue,
      example: examples_NoValue
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Percentage Range",
      key: "percentage_range",
      description: "Gauge displays range as percentages. Defaults to false.",
      code: PercentageRange,
      example: examples_PercentageRange
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Percentage Value",
      key: "percentage_value",
      description: "Gauge displays value as percentages. Defaults to false.",
      code: PercentageValue,
      example: examples_PercentageValue
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Background Color is blue",
      key: "background_color",
      description: "The HEX color code for chart background color is blue.",
      code: BackgroundColor,
      example: examples_BackgroundColor
    })],
    encodingSection: /*#__PURE__*/external_react_default.a.createElement(EncodingDoc_default.a, {
      encoding: definition.encoding
    }),
    optionSection: /*#__PURE__*/external_react_default.a.createElement(OptionsDoc_default.a, {
      options: optionsSchema
    })
  });
});

/***/ }),

/***/ 9:
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/VisualizationDocPage");

/***/ })

/******/ });
//# sourceMappingURL=FillerGauge.js.map