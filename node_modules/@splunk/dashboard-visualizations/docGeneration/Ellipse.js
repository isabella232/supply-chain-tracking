/*!
 * Copyright © 2018 Splunk Inc.
 * SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or
 * in part without a valid written license from Splunk Inc. is PROHIBITED.
 */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 68);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),

/***/ 1:
/***/ (function(module, exports) {

module.exports = require("@splunk/react-docs/DocExample");

/***/ }),

/***/ 10:
/***/ (function(module, exports) {

module.exports = require("@splunk/dashboard-visualizations/common/OptionsDoc");

/***/ }),

/***/ 12:
/***/ (function(module, exports) {

module.exports = require("@splunk/dashboard-visualizations/common/EncodingDoc");

/***/ }),

/***/ 14:
/***/ (function(module, exports) {

module.exports = require("@splunk/dashboard-visualizations/common/EventsDoc");

/***/ }),

/***/ 2:
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/schemaUtils");

/***/ }),

/***/ 22:
/***/ (function(module, exports) {

module.exports = require("@splunk/dashboard-visualizations/Ellipse");

/***/ }),

/***/ 68:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(0);
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);

// EXTERNAL MODULE: external "@splunk/visualizations-shared/VisualizationDocPage"
var VisualizationDocPage_ = __webpack_require__(9);
var VisualizationDocPage_default = /*#__PURE__*/__webpack_require__.n(VisualizationDocPage_);

// EXTERNAL MODULE: external "@splunk/dashboard-visualizations/common/EncodingDoc"
var EncodingDoc_ = __webpack_require__(12);
var EncodingDoc_default = /*#__PURE__*/__webpack_require__.n(EncodingDoc_);

// EXTERNAL MODULE: external "@splunk/dashboard-visualizations/common/EventsDoc"
var EventsDoc_ = __webpack_require__(14);
var EventsDoc_default = /*#__PURE__*/__webpack_require__.n(EventsDoc_);

// EXTERNAL MODULE: external "@splunk/dashboard-visualizations/common/OptionsDoc"
var OptionsDoc_ = __webpack_require__(10);
var OptionsDoc_default = /*#__PURE__*/__webpack_require__.n(OptionsDoc_);

// EXTERNAL MODULE: external "@splunk/react-docs/DocExample"
var DocExample_ = __webpack_require__(1);
var DocExample_default = /*#__PURE__*/__webpack_require__.n(DocExample_);

// EXTERNAL MODULE: external "@splunk/dashboard-visualizations/Ellipse"
var Ellipse_ = __webpack_require__(22);
var Ellipse_default = /*#__PURE__*/__webpack_require__.n(Ellipse_);

// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/Ellipse/docs/examples/Basic.jsx
/* harmony default export */ var Basic = ("import React from 'react';\nimport Ellipse from '@splunk/dashboard-visualizations/Ellipse';\n\nexport default () => <Ellipse />;\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/Ellipse/docs/examples/Stroke.jsx
/* harmony default export */ var Stroke = ("import React from 'react';\nimport Ellipse from '@splunk/dashboard-visualizations/Ellipse';\n\nexport default () => <Ellipse options={{ stroke: '#dc4e41' }} />;\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/Ellipse/docs/examples/StrokeWidth.jsx
/* harmony default export */ var StrokeWidth = ("import React from 'react';\nimport Ellipse from '@splunk/dashboard-visualizations/Ellipse';\n\nexport default () => <Ellipse options={{ strokeWidth: 5, strokeOpacity: 0.5 }} />;\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/Ellipse/docs/examples/Fill.jsx
/* harmony default export */ var Fill = ("import React from 'react';\nimport Ellipse from '@splunk/dashboard-visualizations/Ellipse';\n\nexport default () => <Ellipse options={{ fill: '#007abd' }} />;\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/Ellipse/docs/examples/FillOpacity.jsx
/* harmony default export */ var FillOpacity = ("import React from 'react';\nimport Ellipse from '@splunk/dashboard-visualizations/Ellipse';\n\nexport default () => <Ellipse options={{ fill: '#00ffff', fillOpacity: 0.5 }} />;\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/Ellipse/docs/examples/StrokeDasharray.jsx
/* harmony default export */ var StrokeDasharray = ("import React from 'react';\nimport Ellipse from '@splunk/dashboard-visualizations/Ellipse';\n\nexport default () => <Ellipse options={{ strokeDasharray: 5 }} />;\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/Ellipse/docs/examples/StrokeFillEncoding.jsx
/* harmony default export */ var StrokeFillEncoding = ("import React from 'react';\nimport Ellipse from '@splunk/dashboard-visualizations/Ellipse';\n\nexport default () => (\n    <Ellipse\n        options={{ strokeWidth: 5 }}\n        encoding={{\n            stroke: 'primary.color[3]',\n            fill: 'primary[1][-6]',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '#FF0000',\n                            '#00FFFF',\n                            '#0000FF',\n                            '#800080',\n                            '#FFFF00',\n                            '#FFA500',\n                            '#A52A2A',\n                            '#008000',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'color',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/Ellipse/docs/examples/FillEncoding.jsx
/* harmony default export */ var FillEncoding = ("import React from 'react';\nimport Ellipse from '@splunk/dashboard-visualizations/Ellipse';\n\nexport default () => (\n    <Ellipse\n        options={{}}\n        encoding={{\n            fill: 'primary[1][-6]',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '#FF0000',\n                            '#00FFFF',\n                            '#0000FF',\n                            '#800080',\n                            '#FFFF00',\n                            '#FFA500',\n                            '#A52A2A',\n                            '#008000',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'color',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/Ellipse/docs/examples/StrokeEncoding.jsx
/* harmony default export */ var StrokeEncoding = ("import React from 'react';\nimport Ellipse from '@splunk/dashboard-visualizations/Ellipse';\n\nexport default () => (\n    <Ellipse\n        options={{}}\n        encoding={{\n            stroke: 'primary.color[3]',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '#FF0000',\n                            '#00FFFF',\n                            '#0000FF',\n                            '#800080',\n                            '#FFFF00',\n                            '#FFA500',\n                            '#A52A2A',\n                            '#008000',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'color',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: ./src/visualizations/Ellipse/docs/examples/Basic.jsx


/* harmony default export */ var examples_Basic = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(Ellipse_default.a, null);
});
// CONCATENATED MODULE: ./src/visualizations/Ellipse/docs/examples/Stroke.jsx


/* harmony default export */ var examples_Stroke = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(Ellipse_default.a, {
    options: {
      stroke: '#dc4e41'
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/Ellipse/docs/examples/StrokeWidth.jsx


/* harmony default export */ var examples_StrokeWidth = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(Ellipse_default.a, {
    options: {
      strokeWidth: 5,
      strokeOpacity: 0.5
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/Ellipse/docs/examples/Fill.jsx


/* harmony default export */ var examples_Fill = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(Ellipse_default.a, {
    options: {
      fill: '#007abd'
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/Ellipse/docs/examples/FillOpacity.jsx


/* harmony default export */ var examples_FillOpacity = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(Ellipse_default.a, {
    options: {
      fill: '#00ffff',
      fillOpacity: 0.5
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/Ellipse/docs/examples/StrokeDasharray.jsx


/* harmony default export */ var examples_StrokeDasharray = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(Ellipse_default.a, {
    options: {
      strokeDasharray: 5
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/Ellipse/docs/examples/StrokeFillEncoding.jsx


/* harmony default export */ var examples_StrokeFillEncoding = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(Ellipse_default.a, {
    options: {
      strokeWidth: 5
    },
    encoding: {
      stroke: 'primary.color[3]',
      fill: 'primary[1][-6]'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['#FF0000', '#00FFFF', '#0000FF', '#800080', '#FFFF00', '#FFA500', '#A52A2A', '#008000']],
          fields: [{
            name: 'count'
          }, {
            name: 'color'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/Ellipse/docs/examples/FillEncoding.jsx


/* harmony default export */ var examples_FillEncoding = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(Ellipse_default.a, {
    options: {},
    encoding: {
      fill: 'primary[1][-6]'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['#FF0000', '#00FFFF', '#0000FF', '#800080', '#FFFF00', '#FFA500', '#A52A2A', '#008000']],
          fields: [{
            name: 'count'
          }, {
            name: 'color'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/Ellipse/docs/examples/StrokeEncoding.jsx


/* harmony default export */ var examples_StrokeEncoding = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(Ellipse_default.a, {
    options: {},
    encoding: {
      stroke: 'primary.color[3]'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['#FF0000', '#00FFFF', '#0000FF', '#800080', '#FFFF00', '#FFA500', '#A52A2A', '#008000']],
          fields: [{
            name: 'count'
          }, {
            name: 'color'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/Ellipse/docs/definition.js
/* harmony default export */ var definition = ({
  encoding: [{
    name: 'fill',
    type: '[string]',
    desc: 'Specify the dataSource applied to the fill color.',
    isRequired: 'false'
  }, {
    name: 'stroke',
    type: '[string]',
    desc: 'Specify the dataSource applied to the stroke color.',
    isRequired: 'false'
  }],
  events: [{
    name: 'ellipse.click',
    desc: 'triggered when user clicks the ellipse'
  }]
});
// EXTERNAL MODULE: external "@splunk/visualizations-shared/schemaUtils"
var schemaUtils_ = __webpack_require__(2);

// CONCATENATED MODULE: ./src/visualizations/Ellipse/optionsSchema.js

/* harmony default export */ var optionsSchema = ({
  stroke: {
    description: "Specify the color of the stroke using a Hex code such as \"#FF0000\". The default for enterprise light mode is \"#3C444D\". The default for enterprise dark mode is \"#C3CBD4\". The default for prisma dark mode is \"#ACACAD\".",
    pattern: schemaUtils_["COLOR_OR_TOKEN_PATTERN"],
    type: 'string'
  },
  strokeOpacity: {
    default: 1,
    description: 'Specify the opacity of the stroke. Choose a number in the range of 0 - 1 (inclusive). You can also express the value as a percentage. For example, "0.80" in source or "80%" in UI.',
    type: 'number'
  },
  strokeWidth: {
    default: 1,
    description: 'Specify the width of the stroke, in pixels, in the range of 1 - 25 (inclusive).',
    type: 'number'
  },
  fill: {
    description: "Specify the color fill using a Hex code such as \"#FF0000\". The default for enterprise light mode is \"#C3CBD4\". The default for enterprise dark mode is \"#31373E\". The default for prisma dark mode is \"#0B0C0E\".",
    pattern: schemaUtils_["COLOR_OR_TOKEN_PATTERN"],
    type: 'string'
  },
  fillOpacity: {
    default: 1,
    description: 'Specify the opacity of the fill. Choose a number in the range of 0 - 1 (inclusive). You can also express the value as a percentage. For example, "0.80" in source or "80%" in UI.',
    type: 'number'
  },
  strokeDasharray: {
    default: 0,
    description: 'Specify the size, in pixels, of dashes and spaces used to create a custom, stitched outline. The value you specify applies to both the dashes and the spaces.',
    type: 'number'
  }
});
// CONCATENATED MODULE: ./src/visualizations/Ellipse/docs/index.jsx




























function EllipseDoc() {
  return /*#__PURE__*/external_react_default.a.createElement(VisualizationDocPage_default.a, {
    title: "Ellipse",
    examplesSection: [/*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Basic Ellipse",
      key: "basic_Ellipse",
      description: "Default stroke, fill and opacity",
      code: Basic,
      example: examples_Basic
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Stroke Ellipse",
      key: "stroke_Ellipse",
      description: "Ellipse Stroke is red",
      code: Stroke,
      example: examples_Stroke
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Stroke Width and Opacity Ellipse",
      key: "stroke_width_Ellipse",
      description: "Ellipse Stroke Width is 5, Ellipse Stroke Opacity is 0.5",
      code: StrokeWidth,
      example: examples_StrokeWidth
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Fill Ellipse",
      key: "fill_Ellipse",
      description: "Ellipse Fill is blue",
      code: Fill,
      example: examples_Fill
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Fill and Opacity Ellipse",
      key: "fillopacity",
      description: "Ellipse Fill is cyan, Ellipse Fill Opacity is 0.5",
      code: FillOpacity,
      example: examples_FillOpacity
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Stroke Dash Array Ellipse",
      key: "stroke_dasharray_Ellipse",
      description: "Ellipse Stroke Dash Array is 5",
      code: StrokeDasharray,
      example: examples_StrokeDasharray
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Fill and Stroke Encoding",
      key: "strokefillencoding",
      description: "Fill Encoding is blue, Stroke Encoding is purple",
      code: StrokeFillEncoding,
      example: examples_StrokeFillEncoding
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Fill Encoding",
      key: "fill_encoding",
      description: "Fill Encoding is blue",
      code: FillEncoding,
      example: examples_FillEncoding
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Stroke Encoding",
      key: "stroke_encoding",
      description: "Stroke Encoding is purple",
      code: StrokeEncoding,
      example: examples_StrokeEncoding
    })],
    encodingSection: /*#__PURE__*/external_react_default.a.createElement(EncodingDoc_default.a, {
      encoding: definition.encoding
    }),
    optionSection: /*#__PURE__*/external_react_default.a.createElement(OptionsDoc_default.a, {
      options: optionsSchema
    }),
    eventSection: /*#__PURE__*/external_react_default.a.createElement(EventsDoc_default.a, {
      options: {},
      events: definition.events,
      Visualization: Ellipse_default.a,
      encoding: {},
      dsState: {
        primary: {
          data: {
            columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['#FF0000', '#00FFFF', '#0000FF', '#800080', '#FFFF00', '#FFA500', '#A52A2A', '#008000']],
            fields: [{
              name: 'count'
            }, {
              name: 'color'
            }]
          },
          meta: {}
        }
      }
    })
  });
}

/* harmony default export */ var docs = __webpack_exports__["default"] = (EllipseDoc);

/***/ }),

/***/ 9:
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/VisualizationDocPage");

/***/ })

/******/ });
//# sourceMappingURL=Ellipse.js.map