{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@splunk/react-docs/DocExample\"","webpack:///external \"@splunk/dashboard-visualizations/common/OptionsDoc\"","webpack:///external \"@splunk/dashboard-visualizations/common/EncodingDoc\"","webpack:///external \"@splunk/dashboard-visualizations/common/EventsDoc\"","webpack:///external \"@splunk/visualizations-shared/schemaUtils\"","webpack:///external \"@splunk/dashboard-visualizations/Rectangle\"","webpack:///./src/visualizations/Rectangle/docs/examples/Basic.jsx?19aa","webpack:///./src/visualizations/Rectangle/docs/examples/Stroke.jsx?5716","webpack:///./src/visualizations/Rectangle/docs/examples/StrokeWidth.jsx?165b","webpack:///./src/visualizations/Rectangle/docs/examples/Fill.jsx?7e5d","webpack:///./src/visualizations/Rectangle/docs/examples/FillOpacity.jsx?e438","webpack:///./src/visualizations/Rectangle/docs/examples/StrokeDasharray.jsx?7413","webpack:///./src/visualizations/Rectangle/docs/examples/CornerRadius.jsx?3799","webpack:///./src/visualizations/Rectangle/docs/examples/StrokeLinejoin.jsx?3ddd","webpack:///./src/visualizations/Rectangle/docs/examples/StrokeFillEncoding.jsx?9ab0","webpack:///./src/visualizations/Rectangle/docs/examples/FillEncoding.jsx?6298","webpack:///./src/visualizations/Rectangle/docs/examples/StrokeEncoding.jsx?b83b","webpack:///./src/visualizations/Rectangle/docs/examples/FillOpacity.jsx","webpack:///./src/visualizations/Rectangle/docs/examples/Basic.jsx","webpack:///./src/visualizations/Rectangle/docs/examples/Stroke.jsx","webpack:///./src/visualizations/Rectangle/docs/examples/StrokeWidth.jsx","webpack:///./src/visualizations/Rectangle/docs/examples/Fill.jsx","webpack:///./src/visualizations/Rectangle/docs/examples/StrokeDasharray.jsx","webpack:///./src/visualizations/Rectangle/docs/examples/CornerRadius.jsx","webpack:///./src/visualizations/Rectangle/docs/examples/StrokeLinejoin.jsx","webpack:///./src/visualizations/Rectangle/docs/examples/StrokeFillEncoding.jsx","webpack:///./src/visualizations/Rectangle/docs/examples/FillEncoding.jsx","webpack:///./src/visualizations/Rectangle/docs/examples/StrokeEncoding.jsx","webpack:///./src/visualizations/Rectangle/docs/definition.js","webpack:///./src/visualizations/Rectangle/optionsSchema.js","webpack:///./src/visualizations/Rectangle/docs/index.jsx","webpack:///external \"@splunk/visualizations-shared/VisualizationDocPage\""],"names":["fill","fillOpacity","stroke","strokeWidth","strokeOpacity","strokeDasharray","rx","ry","strokeLinejoin","primary","data","columns","fields","name","meta","encoding","type","desc","isRequired","events","description","pattern","default","BasicExample","StrokeExample","StrokeWidthExample","FillExample","FillOpacityExample","StrokeDasharrayExample","CornerRadiusExample","StrokeLinejoinExample","StrokeFillEncodingExample","FillEncodingExample","StrokeEncodingExample","doc","optionsSchema"],"mappings":"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","file":"Rectangle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 65);\n","module.exports = require(\"react\");","module.exports = require(\"@splunk/react-docs/DocExample\");","module.exports = require(\"@splunk/dashboard-visualizations/common/OptionsDoc\");","module.exports = require(\"@splunk/dashboard-visualizations/common/EncodingDoc\");","module.exports = require(\"@splunk/dashboard-visualizations/common/EventsDoc\");","module.exports = require(\"@splunk/visualizations-shared/schemaUtils\");","module.exports = require(\"@splunk/dashboard-visualizations/Rectangle\");","export default \"import React from 'react';\\nimport Rectangle from '@splunk/dashboard-visualizations/Rectangle';\\n\\nexport default () => <Rectangle options={{}} />;\\n\";","export default \"import React from 'react';\\nimport Rectangle from '@splunk/dashboard-visualizations/Rectangle';\\n\\nexport default () => <Rectangle options={{ stroke: '#dc4e41' }} />;\\n\";","export default \"import React from 'react';\\nimport Rectangle from '@splunk/dashboard-visualizations/Rectangle';\\n\\nexport default () => <Rectangle options={{ strokeWidth: 5, strokeOpacity: 0.5 }} />;\\n\";","export default \"import React from 'react';\\nimport Rectangle from '@splunk/dashboard-visualizations/Rectangle';\\n\\nexport default () => <Rectangle options={{ fill: '#007abd' }} />;\\n\";","export default \"import React from 'react';\\nimport Rectangle from '@splunk/dashboard-visualizations/Rectangle';\\n\\nexport default () => <Rectangle options={{ fill: '#00ffff', fillOpacity: 0.5 }} />;\\n\";","export default \"import React from 'react';\\nimport Rectangle from '@splunk/dashboard-visualizations/Rectangle';\\n\\nexport default () => <Rectangle options={{ strokeDasharray: 5 }} />;\\n\";","export default \"import React from 'react';\\nimport Rectangle from '@splunk/dashboard-visualizations/Rectangle';\\n\\nexport default () => <Rectangle options={{ rx: 3, ry: 3 }} />;\\n\";","export default \"import React from 'react';\\nimport Rectangle from '@splunk/dashboard-visualizations/Rectangle';\\n\\nexport default () => <Rectangle options={{ strokeLinejoin: 'bevel', strokeWidth: 10 }} />;\\n\";","export default \"import React from 'react';\\nimport Rectangle from '@splunk/dashboard-visualizations/Rectangle';\\n\\nexport default () => (\\n    <Rectangle\\n        options={{ strokeWidth: 5 }}\\n        encoding={{\\n            stroke: 'primary.color[3]',\\n            fill: 'primary[1][-6]',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '#FF0000',\\n                            '#00FFFF',\\n                            '#0000FF',\\n                            '#800080',\\n                            '#FFFF00',\\n                            '#FFA500',\\n                            '#A52A2A',\\n                            '#008000',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'color',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Rectangle from '@splunk/dashboard-visualizations/Rectangle';\\n\\nexport default () => (\\n    <Rectangle\\n        options={{}}\\n        encoding={{\\n            fill: 'primary[1][-6]',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '#FF0000',\\n                            '#00FFFF',\\n                            '#0000FF',\\n                            '#800080',\\n                            '#FFFF00',\\n                            '#FFA500',\\n                            '#A52A2A',\\n                            '#008000',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'color',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Rectangle from '@splunk/dashboard-visualizations/Rectangle';\\n\\nexport default () => (\\n    <Rectangle\\n        options={{}}\\n        encoding={{\\n            stroke: 'primary.color[3]',\\n        }}\\n        dataSources={{\\n            primary: {\\n                data: {\\n                    columns: [\\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\\n                        [\\n                            '#FF0000',\\n                            '#00FFFF',\\n                            '#0000FF',\\n                            '#800080',\\n                            '#FFFF00',\\n                            '#FFA500',\\n                            '#A52A2A',\\n                            '#008000',\\n                        ],\\n                    ],\\n                    fields: [\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'color',\\n                        },\\n                    ],\\n                },\\n                meta: {},\\n            },\\n        }}\\n    />\\n);\\n\";","import React from 'react';\nimport Rectangle from '@splunk/dashboard-visualizations/Rectangle';\n\nexport default () => <Rectangle options={{ fill: '#00ffff', fillOpacity: 0.5 }} />;\n","import React from 'react';\nimport Rectangle from '@splunk/dashboard-visualizations/Rectangle';\n\nexport default () => <Rectangle options={{}} />;\n","import React from 'react';\nimport Rectangle from '@splunk/dashboard-visualizations/Rectangle';\n\nexport default () => <Rectangle options={{ stroke: '#dc4e41' }} />;\n","import React from 'react';\nimport Rectangle from '@splunk/dashboard-visualizations/Rectangle';\n\nexport default () => <Rectangle options={{ strokeWidth: 5, strokeOpacity: 0.5 }} />;\n","import React from 'react';\nimport Rectangle from '@splunk/dashboard-visualizations/Rectangle';\n\nexport default () => <Rectangle options={{ fill: '#007abd' }} />;\n","import React from 'react';\nimport Rectangle from '@splunk/dashboard-visualizations/Rectangle';\n\nexport default () => <Rectangle options={{ strokeDasharray: 5 }} />;\n","import React from 'react';\nimport Rectangle from '@splunk/dashboard-visualizations/Rectangle';\n\nexport default () => <Rectangle options={{ rx: 3, ry: 3 }} />;\n","import React from 'react';\nimport Rectangle from '@splunk/dashboard-visualizations/Rectangle';\n\nexport default () => <Rectangle options={{ strokeLinejoin: 'bevel', strokeWidth: 10 }} />;\n","import React from 'react';\nimport Rectangle from '@splunk/dashboard-visualizations/Rectangle';\n\nexport default () => (\n    <Rectangle\n        options={{ strokeWidth: 5 }}\n        encoding={{\n            stroke: 'primary.color[3]',\n            fill: 'primary[1][-6]',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '#FF0000',\n                            '#00FFFF',\n                            '#0000FF',\n                            '#800080',\n                            '#FFFF00',\n                            '#FFA500',\n                            '#A52A2A',\n                            '#008000',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'color',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Rectangle from '@splunk/dashboard-visualizations/Rectangle';\n\nexport default () => (\n    <Rectangle\n        options={{}}\n        encoding={{\n            fill: 'primary[1][-6]',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '#FF0000',\n                            '#00FFFF',\n                            '#0000FF',\n                            '#800080',\n                            '#FFFF00',\n                            '#FFA500',\n                            '#A52A2A',\n                            '#008000',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'color',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Rectangle from '@splunk/dashboard-visualizations/Rectangle';\n\nexport default () => (\n    <Rectangle\n        options={{}}\n        encoding={{\n            stroke: 'primary.color[3]',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '#FF0000',\n                            '#00FFFF',\n                            '#0000FF',\n                            '#800080',\n                            '#FFFF00',\n                            '#FFA500',\n                            '#A52A2A',\n                            '#008000',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'color',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n","export default {\n    encoding: [\n        {\n            name: 'fill',\n            type: '[string]',\n            desc: 'Specify the dataSource applied to the fill color.',\n            isRequired: 'false',\n        },\n        {\n            name: 'stroke',\n            type: '[string]',\n            desc: 'Specify the dataSource applied to the stroke color.',\n            isRequired: 'false',\n        },\n    ],\n    events: [\n        {\n            name: 'rectangle.click',\n            desc: 'triggered when user clicks the ellipse',\n        },\n    ],\n};\n","import { COLOR_OR_TOKEN_PATTERN } from '@splunk/visualizations-shared/schemaUtils';\n\nexport default {\n    stroke: {\n        description: `Specify the color of the stroke using a Hex code such as \"#FF0000\". The default for enterprise light mode is \"#3C444D\". The default for enterprise dark mode is \"#C3CBD4\". The default for prisma dark mode is \"#ACACAD\".`,\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    strokeOpacity: {\n        default: 1,\n        description:\n            'Specify the opacity of the stroke. Choose a number in the range of 0 - 1 (inclusive). You can also express the value as a percentage. For example, \"0.80\" in source or \"80%\" in UI.',\n        type: 'number',\n    },\n    strokeWidth: {\n        default: 1,\n        description: 'Specify the width of the stroke, in pixels, in the range of 1 - 25 (inclusive).',\n        type: 'number',\n    },\n    fill: {\n        description: `Specify the color fill using a Hex code such as \"#FF0000\". The default for enterprise light mode is \"#C3CBD4\". The default for enterprise dark mode is \"#31373E\". The default for prisma dark mode is \"#0B0C0E\".`,\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    fillOpacity: {\n        default: 1,\n        description:\n            'Specify the opacity of the fill. Choose a number in the range of 0 - 1 (inclusive). You can also express the value as a percentage. For example, \"0.80\" in source or \"80%\" in UI.',\n        type: 'number',\n    },\n    strokeDasharray: {\n        default: 0,\n        description:\n            'Specify the size, in pixels, of dashes and spaces used to create a custom stitched outline. The value you specify applies to both the dashes and the spaces between them.',\n        type: 'number',\n    },\n    rx: {\n        default: 0,\n        description:\n            'Specify the curvature of the horizontal corner (or border) radius with an integer or a percent greater than or equal to zero.',\n        type: 'number',\n    },\n    ry: {\n        default: 0,\n        description:\n            'Specify the curvature of the vertical corner (or border) radius with an integer or a percent greater than or equal to zero.',\n        type: 'number',\n    },\n    strokeLinejoin: {\n        default: 'miter',\n        description:\n            'Specifies the shape to be used at the corners of paths when they are joined (arcs | bevel | miter | miter-clip | round)',\n        type: 'string',\n    },\n};\n","import React from 'react';\nimport VisualizationDocPage from '@splunk/visualizations-shared/VisualizationDocPage';\nimport EncodingDoc from '@splunk/dashboard-visualizations/common/EncodingDoc';\nimport EventsDoc from '@splunk/dashboard-visualizations/common/EventsDoc';\nimport OptionsDoc from '@splunk/dashboard-visualizations/common/OptionsDoc';\nimport DocExample from '@splunk/react-docs/DocExample';\nimport Rectangle from '@splunk/dashboard-visualizations/Rectangle';\n\nimport BasicExampleCode from '!!raw-loader!./examples/Basic';\nimport StrokeExampleCode from '!!raw-loader!./examples/Stroke';\nimport StrokeWidthExampleCode from '!!raw-loader!./examples/StrokeWidth';\nimport FillExampleCode from '!!raw-loader!./examples/Fill';\nimport FillOpacityExampleCode from '!!raw-loader!./examples/FillOpacity';\nimport StrokeDasharrayExampleCode from '!!raw-loader!./examples/StrokeDasharray';\nimport CornerRadiusExampleCode from '!!raw-loader!./examples/CornerRadius';\nimport StrokeLinejoinExampleCode from '!!raw-loader!./examples/StrokeLinejoin';\nimport StrokeFillEncodingCode from '!!raw-loader!./examples/StrokeFillEncoding';\nimport FillEncodingCode from '!!raw-loader!./examples/FillEncoding';\nimport StrokeEncodingCode from '!!raw-loader!./examples/StrokeEncoding';\n\nimport FillOpacityExample from './examples/FillOpacity';\nimport BasicExample from './examples/Basic';\nimport StrokeExample from './examples/Stroke';\nimport StrokeWidthExample from './examples/StrokeWidth';\nimport FillExample from './examples/Fill';\nimport StrokeDasharrayExample from './examples/StrokeDasharray';\nimport CornerRadiusExample from './examples/CornerRadius';\nimport StrokeLinejoinExample from './examples/StrokeLinejoin';\nimport StrokeFillEncodingExample from './examples/StrokeFillEncoding';\nimport FillEncodingExample from './examples/FillEncoding';\nimport StrokeEncodingExample from './examples/StrokeEncoding';\n\nimport doc from './definition';\nimport optionsSchema from '../optionsSchema';\n\nfunction RectangleDoc() {\n    return (\n        <VisualizationDocPage\n            title=\"Rectangle\"\n            examplesSection={[\n                <DocExample\n                    title=\"Basic Rectangle\"\n                    key=\"rectangle\"\n                    description=\"Default stroke, stroke width and fill\"\n                    code={BasicExampleCode}\n                    example={BasicExample}\n                />,\n                <DocExample\n                    title=\"Stroke Rectangle\"\n                    key=\"stroke_Rectangle\"\n                    description=\"Rectangle Stroke is red\"\n                    code={StrokeExampleCode}\n                    example={StrokeExample}\n                />,\n                <DocExample\n                    title=\"Stroke Width and Opacity Rectangle\"\n                    key=\"stroke_width_rectangle\"\n                    description=\"Rectangle Stroke Width is 5, Rectangle Stroke Opacity is 0.5\"\n                    code={StrokeWidthExampleCode}\n                    example={StrokeWidthExample}\n                />,\n                <DocExample\n                    title=\"Fill Rectangle\"\n                    key=\"fill_rectangle\"\n                    description=\"Rectangle Fill is blue\"\n                    code={FillExampleCode}\n                    example={FillExample}\n                />,\n                <DocExample\n                    title=\"Fill and Opacity Rectangle\"\n                    key=\"fillopacity\"\n                    description=\"Rectangle Fill is cyan, Rectangle Fill Opacity is 0.5\"\n                    code={FillOpacityExampleCode}\n                    example={FillOpacityExample}\n                />,\n                <DocExample\n                    title=\"Stroke Dash Array Rectangle\"\n                    key=\"stroke_dasharray_rectangle\"\n                    description=\"Rectangle Stroke Dash Array is 5\"\n                    code={StrokeDasharrayExampleCode}\n                    example={StrokeDasharrayExample}\n                />,\n                <DocExample\n                    title=\"Corner Radius Rectangle\"\n                    key=\"corner_radius_rectangle\"\n                    description=\"Rectangle Horizontal Corner Radius rx is 5, Rectangle Vertical Corner Radius ry is 5\"\n                    code={CornerRadiusExampleCode}\n                    example={CornerRadiusExample}\n                />,\n                <DocExample\n                    title=\"Stroke Line Join Rectangle\"\n                    key=\"stroke_linejoin_rectangle\"\n                    description=\"Rectangle Stroke Line Join is bevel\"\n                    code={StrokeLinejoinExampleCode}\n                    example={StrokeLinejoinExample}\n                />,\n                <DocExample\n                    title=\"Fill and Stroke Encoding\"\n                    key=\"strokefillencoding\"\n                    description=\"Fill Encoding is blue, Stroke Encoding is purple\"\n                    code={StrokeFillEncodingCode}\n                    example={StrokeFillEncodingExample}\n                />,\n                <DocExample\n                    title=\"Fill Encoding\"\n                    key=\"fill_encoding\"\n                    description=\"Fill Encoding is blue\"\n                    code={FillEncodingCode}\n                    example={FillEncodingExample}\n                />,\n                <DocExample\n                    title=\"Stroke Encoding\"\n                    key=\"stroke_encoding\"\n                    description=\"Stroke Encoding is purple\"\n                    code={StrokeEncodingCode}\n                    example={StrokeEncodingExample}\n                />,\n            ]}\n            encodingSection={<EncodingDoc encoding={doc.encoding} />}\n            optionSection={<OptionsDoc options={optionsSchema} />}\n            eventSection={\n                <EventsDoc\n                    options={{}}\n                    events={doc.events}\n                    Visualization={Rectangle}\n                    encoding={{}}\n                    dsState={{\n                        primary: {\n                            data: {\n                                columns: [\n                                    ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                                    [\n                                        '#FF0000',\n                                        '#00FFFF',\n                                        '#0000FF',\n                                        '#800080',\n                                        '#FFFF00',\n                                        '#FFA500',\n                                        '#A52A2A',\n                                        '#008000',\n                                    ],\n                                ],\n                                fields: [\n                                    {\n                                        name: 'count',\n                                    },\n                                    {\n                                        name: 'color',\n                                    },\n                                ],\n                            },\n                            meta: {},\n                        },\n                    }}\n                />\n            }\n        />\n    );\n}\n\nexport default RectangleDoc;\n","module.exports = require(\"@splunk/visualizations-shared/VisualizationDocPage\");"],"sourceRoot":""}