{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@splunk/react-docs/DocExample\"","webpack:///external \"@splunk/dashboard-visualizations/common/OptionsDoc\"","webpack:///external \"@splunk/dashboard-visualizations/common/EncodingDoc\"","webpack:///external \"@splunk/visualizations-shared/schemaUtils\"","webpack:///external \"@splunk/dashboard-visualizations/FillerGauge\"","webpack:///./src/visualizations/FillerGauge/docs/examples/Basic.jsx?86a3","webpack:///./src/visualizations/FillerGauge/docs/examples/Horizontal.jsx?d19e","webpack:///./src/visualizations/FillerGauge/docs/examples/MajorUnit.jsx?3fd8","webpack:///./src/visualizations/FillerGauge/docs/examples/NoLabels.jsx?041f","webpack:///./src/visualizations/FillerGauge/docs/examples/NoValue.jsx?0f80","webpack:///./src/visualizations/FillerGauge/docs/examples/PercentageRange.jsx?0013","webpack:///./src/visualizations/FillerGauge/docs/examples/PercentageValue.jsx?414a","webpack:///./src/visualizations/FillerGauge/docs/examples/BackgroundColor.jsx?7bf0","webpack:///./src/visualizations/FillerGauge/docs/examples/Basic.jsx","webpack:///./src/visualizations/FillerGauge/docs/examples/Horizontal.jsx","webpack:///./src/visualizations/FillerGauge/docs/examples/MajorUnit.jsx","webpack:///./src/visualizations/FillerGauge/docs/examples/NoLabels.jsx","webpack:///./src/visualizations/FillerGauge/docs/examples/NoValue.jsx","webpack:///./src/visualizations/FillerGauge/docs/examples/PercentageRange.jsx","webpack:///./src/visualizations/FillerGauge/docs/examples/PercentageValue.jsx","webpack:///./src/visualizations/FillerGauge/docs/examples/BackgroundColor.jsx","webpack:///./src/visualizations/FillerGauge/optionsSchema.js","webpack:///./src/visualizations/FillerGauge/docs/definition.js","webpack:///./src/visualizations/FillerGauge/docs/index.jsx","webpack:///external \"@splunk/visualizations-shared/VisualizationDocPage\""],"names":["primary","requestParams","offset","count","data","fields","name","columns","meta","totalCount","orientation","majorUnit","showLabels","showValue","usePercentageRange","usePercentageValue","backgroundColor","description","pattern","type","default","getPattern","encoding","desc","defaultValue","isRequired","events","BasicExample","HorizontalExample","MajorUnitExample","NoLabelsExample","NoValueExample","PercentageRangeExample","PercentageValueExample","BackgroundColorExample","doc","optionsSchema"],"mappings":";;;;;;;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;AClFA,kC;;;;;;;ACAA,0D;;;;;;;ACAA,+E;;;;;;;ACAA,gF;;;;;;;ACAA,sE;;;;;;;ACAA,yE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAe,qEAA2B,yEAAyE,kEAAkE,wBAAwB,wBAAwB,kCAAkC,uBAAuB,0BAA0B,gCAAgC,gBAAgB,6DAA6D,0BAA0B,iBAAiB,gBAAgB,aAAa,YAAY,GAAG,E;;ACA7e,0EAA2B,yEAAyE,gEAAgE,oDAAoD,wBAAwB,wBAAwB,kCAAkC,uBAAuB,0BAA0B,gCAAgC,gBAAgB,6DAA6D,0BAA0B,iBAAiB,gBAAgB,aAAa,YAAY,GAAG,E;;ACA/hB,yEAA2B,yEAAyE,gEAAgE,mBAAmB,wBAAwB,wBAAwB,kCAAkC,uBAAuB,0BAA0B,gCAAgC,gBAAgB,6DAA6D,0BAA0B,iBAAiB,gBAAgB,aAAa,YAAY,GAAG,E;;ACA9f,wEAA2B,yEAAyE,gEAAgE,qBAAqB,wBAAwB,wBAAwB,kCAAkC,uBAAuB,0BAA0B,gCAAgC,gBAAgB,6DAA6D,0BAA0B,iBAAiB,gBAAgB,aAAa,YAAY,GAAG,E;;ACAhgB,uEAA2B,yEAAyE,gEAAgE,oBAAoB,wBAAwB,wBAAwB,kCAAkC,uBAAuB,0BAA0B,gCAAgC,gBAAgB,6DAA6D,0BAA0B,iBAAiB,gBAAgB,aAAa,YAAY,GAAG,E;;ACA/f,+EAA2B,yEAAyE,gEAAgE,4BAA4B,wBAAwB,wBAAwB,kCAAkC,uBAAuB,0BAA0B,gCAAgC,gBAAgB,6DAA6D,0BAA0B,iBAAiB,gBAAgB,aAAa,YAAY,GAAG,E;;ACAvgB,+EAA2B,yEAAyE,gEAAgE,4BAA4B,wBAAwB,wBAAwB,kCAAkC,uBAAuB,0BAA0B,gCAAgC,gBAAgB,6DAA6D,0BAA0B,iBAAiB,gBAAgB,aAAa,YAAY,GAAG,E;;ACAvgB,+EAA2B,yEAAyE,gEAAgE,8BAA8B,wBAAwB,wBAAwB,kCAAkC,uBAAuB,0BAA0B,gCAAgC,gBAAgB,6DAA6D,0BAA0B,iBAAiB,gBAAgB,aAAa,YAAY,GAAG,E;;;;;;ACAxhB;AACA;AAEe;AAAA,sBACX;AACI,WAAO,EADX;AAEI,eAAW,EAAE;AACTA,aAAO,EAAE;AACLC,qBAAa,EAAE;AAAEC,gBAAM,EAAR;AAAaC,eAAK,EAAE;AAApB,SADV;AAELC,YAAI,EAAE;AACFC,gBAAM,EAAE,CAAC;AAAEC,gBAAI,EAAE;AAAR,WAAD,CADN;AAEFC,iBAAO,EAAE,CAAC,CAAD,IAAC,CAAD;AAFP,SAFD;AAMLC,YAAI,EAAE;AAAEC,oBAAU,EAAE;AAAd;AAND;AADA;AAFjB,IADW;AAAf,G;;ACHA;AACA;AAEe;AAAA,sBACX;AACI,WAAO,EAAE;AACLC,iBAAW,EAAE;AADR,KADb;AAII,eAAW,EAAE;AACTV,aAAO,EAAE;AACLC,qBAAa,EAAE;AAAEC,gBAAM,EAAR;AAAaC,eAAK,EAAE;AAApB,SADV;AAELC,YAAI,EAAE;AACFC,gBAAM,EAAE,CAAC;AAAEC,gBAAI,EAAE;AAAR,WAAD,CADN;AAEFC,iBAAO,EAAE,CAAC,CAAD,IAAC,CAAD;AAFP,SAFD;AAMLC,YAAI,EAAE;AAAEC,oBAAU,EAAE;AAAd;AAND;AADA;AAJjB,IADW;AAAf,G;;ACHA;AACA;AAEe;AAAA,sBACX;AACI,WAAO,EAAE;AAAEE,eAAS,EAAE;AAAb,KADb;AAEI,eAAW,EAAE;AACTX,aAAO,EAAE;AACLC,qBAAa,EAAE;AAAEC,gBAAM,EAAR;AAAaC,eAAK,EAAE;AAApB,SADV;AAELC,YAAI,EAAE;AACFC,gBAAM,EAAE,CAAC;AAAEC,gBAAI,EAAE;AAAR,WAAD,CADN;AAEFC,iBAAO,EAAE,CAAC,CAAD,IAAC,CAAD;AAFP,SAFD;AAMLC,YAAI,EAAE;AAAEC,oBAAU,EAAE;AAAd;AAND;AADA;AAFjB,IADW;AAAf,G;;ACHA;AACA;AAEe;AAAA,sBACX;AACI,WAAO,EAAE;AAAEG,gBAAU,EAAE;AAAd,KADb;AAEI,eAAW,EAAE;AACTZ,aAAO,EAAE;AACLC,qBAAa,EAAE;AAAEC,gBAAM,EAAR;AAAaC,eAAK,EAAE;AAApB,SADV;AAELC,YAAI,EAAE;AACFC,gBAAM,EAAE,CAAC;AAAEC,gBAAI,EAAE;AAAR,WAAD,CADN;AAEFC,iBAAO,EAAE,CAAC,CAAD,IAAC,CAAD;AAFP,SAFD;AAMLC,YAAI,EAAE;AAAEC,oBAAU,EAAE;AAAd;AAND;AADA;AAFjB,IADW;AAAf,G;;ACHA;AACA;AAEe;AAAA,sBACX;AACI,WAAO,EAAE;AAAEI,eAAS,EAAE;AAAb,KADb;AAEI,eAAW,EAAE;AACTb,aAAO,EAAE;AACLC,qBAAa,EAAE;AAAEC,gBAAM,EAAR;AAAaC,eAAK,EAAE;AAApB,SADV;AAELC,YAAI,EAAE;AACFC,gBAAM,EAAE,CAAC;AAAEC,gBAAI,EAAE;AAAR,WAAD,CADN;AAEFC,iBAAO,EAAE,CAAC,CAAD,IAAC,CAAD;AAFP,SAFD;AAMLC,YAAI,EAAE;AAAEC,oBAAU,EAAE;AAAd;AAND;AADA;AAFjB,IADW;AAAf,G;;ACHA;AACA;AAEe;AAAA,sBACX;AACI,WAAO,EAAE;AAAEK,wBAAkB,EAAE;AAAtB,KADb;AAEI,eAAW,EAAE;AACTd,aAAO,EAAE;AACLC,qBAAa,EAAE;AAAEC,gBAAM,EAAR;AAAaC,eAAK,EAAE;AAApB,SADV;AAELC,YAAI,EAAE;AACFC,gBAAM,EAAE,CAAC;AAAEC,gBAAI,EAAE;AAAR,WAAD,CADN;AAEFC,iBAAO,EAAE,CAAC,CAAD,IAAC,CAAD;AAFP,SAFD;AAMLC,YAAI,EAAE;AAAEC,oBAAU,EAAE;AAAd;AAND;AADA;AAFjB,IADW;AAAf,G;;ACHA;AACA;AAEe;AAAA,sBACX;AACI,WAAO,EAAE;AAAEM,wBAAkB,EAAE;AAAtB,KADb;AAEI,eAAW,EAAE;AACTf,aAAO,EAAE;AACLC,qBAAa,EAAE;AAAEC,gBAAM,EAAR;AAAaC,eAAK,EAAE;AAApB,SADV;AAELC,YAAI,EAAE;AACFC,gBAAM,EAAE,CAAC;AAAEC,gBAAI,EAAE;AAAR,WAAD,CADN;AAEFC,iBAAO,EAAE,CAAC,CAAD,IAAC,CAAD;AAFP,SAFD;AAMLC,YAAI,EAAE;AAAEC,oBAAU,EAAE;AAAd;AAND;AADA;AAFjB,IADW;AAAf,G;;ACHA;AACA;AAEe;AAAA,sBACX;AACI,WAAO,EAAE;AAAEO,qBAAe,EAAE;AAAnB,KADb;AAEI,eAAW,EAAE;AACThB,aAAO,EAAE;AACLC,qBAAa,EAAE;AAAEC,gBAAM,EAAR;AAAaC,eAAK,EAAE;AAApB,SADV;AAELC,YAAI,EAAE;AACFC,gBAAM,EAAE,CAAC;AAAEC,gBAAI,EAAE;AAAR,WAAD,CADN;AAEFC,iBAAO,EAAE,CAAC,CAAD,IAAC,CAAD;AAFP,SAFD;AAMLC,YAAI,EAAE;AAAEC,oBAAU,EAAE;AAAd;AAND;AADA;AAFjB,IADW;AAAf,G;;;;;ACHA;AAEe;AACXO,iBAAe,EAAE;AACbC,eAAW,EADE;AAGbC,WAAO,EAHM;AAIbC,QAAI,EAAE;AAJO,GADN;AAOXR,WAAS,EAAE;AACPS,WAAO,EADA;AAEPH,eAAW,EAFJ;AAGPE,QAAI,EAAE;AAHC,GAPA;AAYXT,aAAW,EAAE;AACTU,WAAO,EADE;AAETH,eAAW,EAFF;AAGTC,WAAO,EAAEG,kCAAU,CAAC,eAHX,UAGW,CAAD,CAHV;AAITF,QAAI,EAAE;AAJG,GAZF;AAkBXP,YAAU,EAAE;AAAEQ,WAAO,EAAT;AAAiBH,eAAW,EAA5B;AAAoEE,QAAI,EAAE;AAA1E,GAlBD;AAmBXN,WAAS,EAAE;AACPO,WAAO,EADA;AAEPH,eAAW,EAFJ;AAGPE,QAAI,EAAE;AAHC,GAnBA;AAwBXL,oBAAkB,EAAE;AAChBM,WAAO,EADS;AAEhBH,eAAW,EAFK;AAGhBE,QAAI,EAAE;AAHU,GAxBT;AA6BXJ,oBAAkB,EAAE;AAChBK,WAAO,EADS;AAEhBH,eAAW,EAFK;AAGhBE,QAAI,EAAE;AAHU;AA7BT,CAAf,E;;ACFe;AACXG,UAAQ,EAAE,CACN;AACIhB,QAAI,EADR;AAEIa,QAAI,EAFR;AAGII,QAAI,EAHR;AAIIC,gBAAY,EAJhB;AAKIC,cAAU,EAAE;AALhB,GADM,EAQN;AACInB,QAAI,EADR;AAEIa,QAAI,EAFR;AAGII,QAAI,EAHR;AAIIE,cAAU,EAAE;AAJhB,GARM,CADC;AAgBXC,QAAM,EAAE;AAhBG,CAAf,E;;ACAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEe;AAAA,sBACX;AACI,SAAK,EADT;AAEI,mBAAe,EAAE,cACb;AACI,WAAK,EADT;AAEI,SAAG,EAFP;AAGI,iBAAW,EAHf;AAII,UAAI,EAJR;AAKI,aAAO,EAAEC,cAAYA;AALzB,MADa,eAQb;AACI,WAAK,EADT;AAEI,SAAG,EAFP;AAGI,iBAAW,EAHf;AAII,UAAI,EAJR;AAKI,aAAO,EAAEC,mBAAiBA;AAL9B,MARa,eAeb;AACI,WAAK,EADT;AAEI,SAAG,EAFP;AAGI,iBAAW,EAHf;AAII,UAAI,EAJR;AAKI,aAAO,EAAEC,kBAAgBA;AAL7B,MAfa,eAsBb;AACI,WAAK,EADT;AAEI,SAAG,EAFP;AAGI,iBAAW,EAHf;AAII,UAAI,EAJR;AAKI,aAAO,EAAEC,iBAAeA;AAL5B,MAtBa,eA6Bb;AACI,WAAK,EADT;AAEI,SAAG,EAFP;AAGI,iBAAW,EAHf;AAII,UAAI,EAJR;AAKI,aAAO,EAAEC,gBAAcA;AAL3B,MA7Ba,eAoCb;AACI,WAAK,EADT;AAEI,SAAG,EAFP;AAGI,iBAAW,EAHf;AAII,UAAI,EAJR;AAKI,aAAO,EAAEC,wBAAsBA;AALnC,MApCa,eA2Cb;AACI,WAAK,EADT;AAEI,SAAG,EAFP;AAGI,iBAAW,EAHf;AAII,UAAI,EAJR;AAKI,aAAO,EAAEC,wBAAsBA;AALnC,MA3Ca,eAkDb;AACI,WAAK,EADT;AAEI,SAAG,EAFP;AAGI,iBAAW,EAHf;AAII,UAAI,EAJR;AAKI,aAAO,EAAEC,wBAAsBA;AALnC,MAlDa,CAFrB;AA4DI,mBAAe,eAAE;AAAa,cAAQ,EAAEC,UAAG,CAACb;AAA3B,MA5DrB;AA6DI,iBAAa,eAAE;AAAY,aAAO,EAAEc,aAAaA;AAAlC;AA7DnB,IADW;AAAf,G;;;;;;;AC3BA,+E","file":"FillerGauge.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 69);\n","module.exports = require(\"react\");","module.exports = require(\"@splunk/react-docs/DocExample\");","module.exports = require(\"@splunk/dashboard-visualizations/common/OptionsDoc\");","module.exports = require(\"@splunk/dashboard-visualizations/common/EncodingDoc\");","module.exports = require(\"@splunk/visualizations-shared/schemaUtils\");","module.exports = require(\"@splunk/dashboard-visualizations/FillerGauge\");","export default \"import React from 'react';\\nimport FillerGauge from '@splunk/dashboard-visualizations/FillerGauge';\\n\\nexport default () => (\\n    <FillerGauge\\n        options={{}}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [{ name: 'count' }],\\n                    columns: [['78']],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport FillerGauge from '@splunk/dashboard-visualizations/FillerGauge';\\n\\nexport default () => (\\n    <FillerGauge\\n        options={{\\n            orientation: 'horizontal',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [{ name: 'count' }],\\n                    columns: [['78']],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport FillerGauge from '@splunk/dashboard-visualizations/FillerGauge';\\n\\nexport default () => (\\n    <FillerGauge\\n        options={{ majorUnit: '25' }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [{ name: 'count' }],\\n                    columns: [['78']],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport FillerGauge from '@splunk/dashboard-visualizations/FillerGauge';\\n\\nexport default () => (\\n    <FillerGauge\\n        options={{ showLabels: false }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [{ name: 'count' }],\\n                    columns: [['78']],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport FillerGauge from '@splunk/dashboard-visualizations/FillerGauge';\\n\\nexport default () => (\\n    <FillerGauge\\n        options={{ showValue: false }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [{ name: 'count' }],\\n                    columns: [['78']],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport FillerGauge from '@splunk/dashboard-visualizations/FillerGauge';\\n\\nexport default () => (\\n    <FillerGauge\\n        options={{ usePercentageRange: true }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [{ name: 'count' }],\\n                    columns: [['78']],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport FillerGauge from '@splunk/dashboard-visualizations/FillerGauge';\\n\\nexport default () => (\\n    <FillerGauge\\n        options={{ usePercentageValue: true }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [{ name: 'count' }],\\n                    columns: [['78']],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport FillerGauge from '@splunk/dashboard-visualizations/FillerGauge';\\n\\nexport default () => (\\n    <FillerGauge\\n        options={{ backgroundColor: '#0000FF' }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [{ name: 'count' }],\\n                    columns: [['78']],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","import React from 'react';\nimport FillerGauge from '@splunk/dashboard-visualizations/FillerGauge';\n\nexport default () => (\n    <FillerGauge\n        options={{}}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [{ name: 'count' }],\n                    columns: [['78']],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport FillerGauge from '@splunk/dashboard-visualizations/FillerGauge';\n\nexport default () => (\n    <FillerGauge\n        options={{\n            orientation: 'horizontal',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [{ name: 'count' }],\n                    columns: [['78']],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport FillerGauge from '@splunk/dashboard-visualizations/FillerGauge';\n\nexport default () => (\n    <FillerGauge\n        options={{ majorUnit: '25' }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [{ name: 'count' }],\n                    columns: [['78']],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport FillerGauge from '@splunk/dashboard-visualizations/FillerGauge';\n\nexport default () => (\n    <FillerGauge\n        options={{ showLabels: false }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [{ name: 'count' }],\n                    columns: [['78']],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport FillerGauge from '@splunk/dashboard-visualizations/FillerGauge';\n\nexport default () => (\n    <FillerGauge\n        options={{ showValue: false }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [{ name: 'count' }],\n                    columns: [['78']],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport FillerGauge from '@splunk/dashboard-visualizations/FillerGauge';\n\nexport default () => (\n    <FillerGauge\n        options={{ usePercentageRange: true }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [{ name: 'count' }],\n                    columns: [['78']],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport FillerGauge from '@splunk/dashboard-visualizations/FillerGauge';\n\nexport default () => (\n    <FillerGauge\n        options={{ usePercentageValue: true }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [{ name: 'count' }],\n                    columns: [['78']],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport FillerGauge from '@splunk/dashboard-visualizations/FillerGauge';\n\nexport default () => (\n    <FillerGauge\n        options={{ backgroundColor: '#0000FF' }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [{ name: 'count' }],\n                    columns: [['78']],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import { COLOR_OR_TOKEN_PATTERN, getPattern } from '@splunk/visualizations-shared/schemaUtils';\n\nexport default {\n    backgroundColor: {\n        description:\n            'Specify the color used for the background using a Hex Code. The default for enterprise light mode is \"#FFFFFF\". The default for enterprise dark mode is \"#000000\". The default for prisma dark mode is \"#0B0C0E\".',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    majorUnit: {\n        default: 'auto',\n        description: 'Specify, in pixels, the spacing between major tick marks.',\n        type: ['number', 'string'],\n    },\n    orientation: {\n        default: 'vertical',\n        description: 'Specify the axis orientation of the gauge.',\n        pattern: getPattern(['horizontal', 'vertical']),\n        type: 'string',\n    },\n    showLabels: { default: true, description: 'Specify whether to display labels.', type: 'boolean' },\n    showValue: {\n        default: true,\n        description: 'Specify whether the gauge value is displayed.',\n        type: 'boolean',\n    },\n    usePercentageRange: {\n        default: false,\n        description: 'Specify whether to format gauge ranges as percentages.',\n        type: 'boolean',\n    },\n    usePercentageValue: {\n        default: false,\n        description: 'Specify whether to format the gauge values as percentages.',\n        type: 'boolean',\n    },\n};\n","export default {\n    encoding: [\n        {\n            name: 'value',\n            type: 'number',\n            desc: 'Specify the dataSource applied to the value of filler gauge.',\n            defaultValue: 'primary[0][-1]',\n            isRequired: 'true',\n        },\n        {\n            name: 'gaugeColor',\n            type: 'string',\n            desc: 'Specify the dataSource applied to the gauge color of the filler gauge.',\n            isRequired: 'false',\n        },\n    ],\n    events: [],\n};\n","import React from 'react';\nimport VisualizationDocPage from '@splunk/visualizations-shared/VisualizationDocPage';\nimport EncodingDoc from '@splunk/dashboard-visualizations/common/EncodingDoc';\nimport OptionsDoc from '@splunk/dashboard-visualizations/common/OptionsDoc';\nimport DocExample from '@splunk/react-docs/DocExample';\n\nimport BasicExampleCode from '!!raw-loader!./examples/Basic';\nimport HorizontalExampleCode from '!!raw-loader!./examples/Horizontal';\nimport MajorUnitExampleCode from '!!raw-loader!./examples/MajorUnit';\nimport NoLabelsExampleCode from '!!raw-loader!./examples/NoLabels';\nimport NoValueExampleCode from '!!raw-loader!./examples/NoValue';\nimport PercentageRangeExampleCode from '!!raw-loader!./examples/PercentageRange';\nimport PercentageValueExampleCode from '!!raw-loader!./examples/PercentageValue';\nimport BackgroundColorExampleCode from '!!raw-loader!./examples/BackgroundColor';\n\nimport BasicExample from './examples/Basic';\nimport HorizontalExample from './examples/Horizontal';\nimport MajorUnitExample from './examples/MajorUnit';\nimport NoLabelsExample from './examples/NoLabels';\nimport NoValueExample from './examples/NoValue';\nimport PercentageRangeExample from './examples/PercentageRange';\nimport PercentageValueExample from './examples/PercentageValue';\nimport BackgroundColorExample from './examples/BackgroundColor';\n\nimport optionsSchema from '../optionsSchema';\nimport doc from './definition';\n\nexport default () => (\n    <VisualizationDocPage\n        title=\"FillerGauge\"\n        examplesSection={[\n            <DocExample\n                title=\"Basic Filler Gauge\"\n                key=\"basic\"\n                description=\"Filler Gauge takes 100% width and 250px height by default.\"\n                code={BasicExampleCode}\n                example={BasicExample}\n            />,\n            <DocExample\n                title=\"Horizontal Gauge\"\n                key=\"horizontal\"\n                description=\"Sets the horizontal orientation of the gauge. Defaults to vertical.\"\n                code={HorizontalExampleCode}\n                example={HorizontalExample}\n            />,\n            <DocExample\n                title=\"Мajor Unit is 25\"\n                key=\"major_unit\"\n                description=\"Specifies, in pixels, the spacing of major tick marks.\"\n                code={MajorUnitExampleCode}\n                example={MajorUnitExample}\n            />,\n            <DocExample\n                title=\"No Labels\"\n                key=\"no_labels\"\n                description=\"Gauge displays no labels. Defaults to true.\"\n                code={NoLabelsExampleCode}\n                example={NoLabelsExample}\n            />,\n            <DocExample\n                title=\"No Value\"\n                key=\"no_value\"\n                description=\"Gauge displays no value. Defaults to true.\"\n                code={NoValueExampleCode}\n                example={NoValueExample}\n            />,\n            <DocExample\n                title=\"Percentage Range\"\n                key=\"percentage_range\"\n                description=\"Gauge displays range as percentages. Defaults to false.\"\n                code={PercentageRangeExampleCode}\n                example={PercentageRangeExample}\n            />,\n            <DocExample\n                title=\"Percentage Value\"\n                key=\"percentage_value\"\n                description=\"Gauge displays value as percentages. Defaults to false.\"\n                code={PercentageValueExampleCode}\n                example={PercentageValueExample}\n            />,\n            <DocExample\n                title=\"Background Color is blue\"\n                key=\"background_color\"\n                description=\"The HEX color code for chart background color is blue.\"\n                code={BackgroundColorExampleCode}\n                example={BackgroundColorExample}\n            />,\n        ]}\n        encodingSection={<EncodingDoc encoding={doc.encoding} />}\n        optionSection={<OptionsDoc options={optionsSchema} />}\n    />\n);\n","module.exports = require(\"@splunk/visualizations-shared/VisualizationDocPage\");"],"sourceRoot":""}