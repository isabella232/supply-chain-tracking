{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@splunk/react-docs/DocExample\"","webpack:///external \"@splunk/dashboard-visualizations/common/OptionsDoc\"","webpack:///external \"@splunk/visualizations-shared/schemaUtils\"","webpack:///external \"@splunk/dashboard-visualizations/Text\"","webpack:///./src/visualizations/Text/docs/examples/Basic.jsx?ac7f","webpack:///./src/visualizations/Text/docs/examples/FontFamily.jsx?d080","webpack:///./src/visualizations/Text/docs/examples/FontSize.jsx?aee7","webpack:///./src/visualizations/Text/docs/examples/FontWeight.jsx?1a15","webpack:///./src/visualizations/Text/docs/examples/LineHeight.jsx?97d0","webpack:///./src/visualizations/Text/docs/examples/Rotation.jsx?bcc0","webpack:///./src/visualizations/Text/docs/examples/TextColor.jsx?80ac","webpack:///./src/visualizations/Text/docs/examples/BackgroundColor.jsx?ceee","webpack:///./src/visualizations/Text/docs/examples/Basic.jsx","webpack:///./src/visualizations/Text/docs/examples/FontFamily.jsx","webpack:///./src/visualizations/Text/docs/examples/FontSize.jsx","webpack:///./src/visualizations/Text/docs/examples/FontWeight.jsx","webpack:///./src/visualizations/Text/docs/examples/LineHeight.jsx","webpack:///./src/visualizations/Text/docs/examples/Rotation.jsx","webpack:///./src/visualizations/Text/docs/examples/TextColor.jsx","webpack:///./src/visualizations/Text/docs/examples/BackgroundColor.jsx","webpack:///./src/visualizations/Text/optionsSchema.js","webpack:///./src/visualizations/Text/docs/index.jsx","webpack:///external \"@splunk/visualizations-shared/VisualizationDocPage\""],"names":["content","fontFamily","fontSize","fontWeight","lineHeight","rotation","textColor","backgroundColor","default","description","type","pattern","getPattern","COLOR_OR_TOKEN_PATTERN","BasicExample","FontFamilyExample","FontSizeExample","FontWeightExample","LineHeightExample","RotationExample","TextColorExample","BackgroundColorExample","optionsSchema"],"mappings":"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","file":"Text.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 70);\n","module.exports = require(\"react\");","module.exports = require(\"@splunk/react-docs/DocExample\");","module.exports = require(\"@splunk/dashboard-visualizations/common/OptionsDoc\");","module.exports = require(\"@splunk/visualizations-shared/schemaUtils\");","module.exports = require(\"@splunk/dashboard-visualizations/Text\");","export default \"import React from 'react';\\nimport Text from '@splunk/dashboard-visualizations/Text';\\n\\nexport default () => (\\n    <Text\\n        options={{\\n            content: 'Basic Example Text',\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Text from '@splunk/dashboard-visualizations/Text';\\n\\nexport default () => (\\n    <Text\\n        options={{\\n            content: 'Content Text',\\n            fontFamily: 'Times New Roman',\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Text from '@splunk/dashboard-visualizations/Text';\\n\\nexport default () => (\\n    <Text\\n        options={{\\n            content: 'Content Text',\\n            fontSize: 48,\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Text from '@splunk/dashboard-visualizations/Text';\\n\\nexport default () => (\\n    <Text\\n        options={{\\n            content: 'Content Text',\\n            fontWeight: 'bold',\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Text from '@splunk/dashboard-visualizations/Text';\\n\\nexport default () => (\\n    <Text\\n        options={{\\n            content: 'Content Text',\\n            lineHeight: 200,\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Text from '@splunk/dashboard-visualizations/Text';\\n\\nexport default () => (\\n    <Text\\n        options={{\\n            content: 'Content Text',\\n            lineHeight: 200,\\n            rotation: 10,\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Text from '@splunk/dashboard-visualizations/Text';\\n\\nexport default () => (\\n    <Text\\n        options={{\\n            content: 'Content Text',\\n            textColor: '#0000FF',\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Text from '@splunk/dashboard-visualizations/Text';\\n\\nexport default () => (\\n    <Text\\n        options={{\\n            content: 'Content Text',\\n            backgroundColor: '#008000',\\n        }}\\n    />\\n);\\n\";","import React from 'react';\nimport Text from '@splunk/dashboard-visualizations/Text';\n\nexport default () => (\n    <Text\n        options={{\n            content: 'Basic Example Text',\n        }}\n    />\n);\n","import React from 'react';\nimport Text from '@splunk/dashboard-visualizations/Text';\n\nexport default () => (\n    <Text\n        options={{\n            content: 'Content Text',\n            fontFamily: 'Times New Roman',\n        }}\n    />\n);\n","import React from 'react';\nimport Text from '@splunk/dashboard-visualizations/Text';\n\nexport default () => (\n    <Text\n        options={{\n            content: 'Content Text',\n            fontSize: 48,\n        }}\n    />\n);\n","import React from 'react';\nimport Text from '@splunk/dashboard-visualizations/Text';\n\nexport default () => (\n    <Text\n        options={{\n            content: 'Content Text',\n            fontWeight: 'bold',\n        }}\n    />\n);\n","import React from 'react';\nimport Text from '@splunk/dashboard-visualizations/Text';\n\nexport default () => (\n    <Text\n        options={{\n            content: 'Content Text',\n            lineHeight: 200,\n        }}\n    />\n);\n","import React from 'react';\nimport Text from '@splunk/dashboard-visualizations/Text';\n\nexport default () => (\n    <Text\n        options={{\n            content: 'Content Text',\n            lineHeight: 200,\n            rotation: 10,\n        }}\n    />\n);\n","import React from 'react';\nimport Text from '@splunk/dashboard-visualizations/Text';\n\nexport default () => (\n    <Text\n        options={{\n            content: 'Content Text',\n            textColor: '#0000FF',\n        }}\n    />\n);\n","import React from 'react';\nimport Text from '@splunk/dashboard-visualizations/Text';\n\nexport default () => (\n    <Text\n        options={{\n            content: 'Content Text',\n            backgroundColor: '#008000',\n        }}\n    />\n);\n","import { COLOR_OR_TOKEN_PATTERN, getPattern } from '@splunk/visualizations-shared/schemaUtils';\n\nexport default {\n    fontFamily: {\n        default: 'Splunk Platform Sans',\n        description:\n            'Specify the font family to be used. For example \"Comic Sans MS\". Note: the font needs to be available to your end user.',\n        type: 'string',\n    },\n    fontSize: { default: 24, description: 'Specify the font size in pixels.', type: 'number' },\n    fontWeight: {\n        default: 'normal',\n        description: 'Specify the font weight.',\n        pattern: getPattern(['normal', 'bold', 'light']),\n        type: 'string',\n    },\n    lineHeight: {\n        default: '120%',\n        description: 'Specify the line height for the text block.',\n        type: ['number', 'string'],\n    },\n    rotation: { default: 0, description: 'Specify the text angle in degrees.', type: 'number' },\n    textColor: {\n        description: `Specify the text color using Hex codes or RGBA values, such as \"#FF0000\" or \"rgba(25,12,13,0.1)\". The default for enterprise light mode is \"#171D21\". The default for enterprise dark mode is \"#FFFFFF\". The default for prisma dark mode is \"rgba(255, 255, 255, 0.7)\".`,\n        type: 'string',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n    },\n    backgroundColor: {\n        default: 'transparent',\n        description: 'Specify the background color using a Hex code such as \"#FF0000\".',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    content: { default: '', description: 'Specify the text content.', type: 'string' },\n};\n","import React from 'react';\nimport VisualizationDocPage from '@splunk/visualizations-shared/VisualizationDocPage';\nimport OptionsDoc from '@splunk/dashboard-visualizations/common/OptionsDoc';\nimport DocExample from '@splunk/react-docs/DocExample';\n\nimport BasicExampleCode from '!!raw-loader!./examples/Basic';\nimport FontFamilyCode from '!!raw-loader!./examples/FontFamily';\nimport FontSizeCode from '!!raw-loader!./examples/FontSize';\nimport FontWeightCode from '!!raw-loader!./examples/FontWeight';\nimport LineHeightCode from '!!raw-loader!./examples/LineHeight';\nimport RotationCode from '!!raw-loader!./examples/Rotation';\nimport TextColorCode from '!!raw-loader!./examples/TextColor';\nimport BackgroundColorCode from '!!raw-loader!./examples/BackgroundColor';\n\nimport BasicExample from './examples/Basic';\nimport FontFamilyExample from './examples/FontFamily';\nimport FontSizeExample from './examples/FontSize';\nimport FontWeightExample from './examples/FontWeight';\nimport LineHeightExample from './examples/LineHeight';\nimport RotationExample from './examples/Rotation';\nimport TextColorExample from './examples/TextColor';\nimport BackgroundColorExample from './examples/BackgroundColor';\n\nimport optionsSchema from '../optionsSchema';\n\nfunction TextDoc() {\n    return (\n        <VisualizationDocPage\n            title=\"Text\"\n            examplesSection={[\n                <DocExample\n                    title=\"Basic Text\"\n                    key=\"basic_text\"\n                    description=\"Default options, text content\"\n                    code={BasicExampleCode}\n                    example={BasicExample}\n                />,\n                <DocExample\n                    title=\"Font Family is Times New Roman\"\n                    key=\"fontfamily\"\n                    code={FontFamilyCode}\n                    example={FontFamilyExample}\n                />,\n                <DocExample\n                    title=\"Font Size is 48\"\n                    key=\"fontsize\"\n                    code={FontSizeCode}\n                    example={FontSizeExample}\n                />,\n                <DocExample\n                    title=\"Font Weight is bold\"\n                    key=\"fontweight\"\n                    code={FontWeightCode}\n                    example={FontWeightExample}\n                />,\n                <DocExample\n                    title=\"Line Height is 200\"\n                    key=\"lineheight\"\n                    code={LineHeightCode}\n                    example={LineHeightExample}\n                />,\n                <DocExample\n                    title=\"Line Height is 200, Rotation is 10\"\n                    key=\"rotation\"\n                    code={RotationCode}\n                    example={RotationExample}\n                />,\n                <DocExample\n                    title=\"Text Color is blue\"\n                    key=\"textcolor\"\n                    code={TextColorCode}\n                    example={TextColorExample}\n                />,\n                <DocExample\n                    title=\"Background Color is green\"\n                    key=\"backgroundcolor\"\n                    code={BackgroundColorCode}\n                    example={BackgroundColorExample}\n                />,\n            ]}\n            optionSection={<OptionsDoc options={optionsSchema} />}\n        />\n    );\n}\n\nexport default TextDoc;\n","module.exports = require(\"@splunk/visualizations-shared/VisualizationDocPage\");"],"sourceRoot":""}