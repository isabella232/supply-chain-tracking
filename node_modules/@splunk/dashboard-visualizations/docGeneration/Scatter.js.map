{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@splunk/react-docs/DocExample\"","webpack:///external \"@splunk/dashboard-visualizations/common/OptionsDoc\"","webpack:///external \"@splunk/dashboard-visualizations/common/EncodingDoc\"","webpack:///external \"@splunk/dashboard-visualizations/common/EventsDoc\"","webpack:///external \"@splunk/visualizations-shared/schemaUtils\"","webpack:///external \"@splunk/dashboard-visualizations/Scatter\"","webpack:///./src/visualizations/Scatter/docs/examples/Basic.jsx?0787","webpack:///./src/visualizations/Scatter/docs/examples/TitleVisibility.jsx?909c","webpack:///./src/visualizations/Scatter/docs/examples/TitleSpecified.jsx?ec14","webpack:///./src/visualizations/Scatter/docs/examples/SeriesColors.jsx?3262","webpack:///./src/visualizations/Scatter/docs/examples/FieldColors.jsx?0c07","webpack:///./src/visualizations/Scatter/docs/examples/BackgroundColor.jsx?a857","webpack:///./src/visualizations/Scatter/docs/examples/ForegroundColor.jsx?b0d0","webpack:///./src/visualizations/Scatter/docs/examples/FontColor.jsx?ad7c","webpack:///./src/visualizations/Scatter/docs/examples/Abbreviation.jsx?404d","webpack:///./src/visualizations/Scatter/docs/examples/AxisYScale.jsx?da07","webpack:///./src/visualizations/Scatter/docs/examples/AxisXScale.jsx?25ce","webpack:///./src/visualizations/Scatter/docs/examples/AxisYMinNumber.jsx?6e1a","webpack:///./src/visualizations/Scatter/docs/examples/AxisYMaxNumber.jsx?c8e6","webpack:///./src/visualizations/Scatter/docs/examples/AxisYMajorUnit.jsx?9d4d","webpack:///./src/visualizations/Scatter/docs/examples/AxisXMinNumber.jsx?d459","webpack:///./src/visualizations/Scatter/docs/examples/AxisXMaxNumber.jsx?9a3a","webpack:///./src/visualizations/Scatter/docs/examples/AxisXMajorUnit.jsx?18c1","webpack:///./src/visualizations/Scatter/docs/examples/AxisXLabelRotation.jsx?a853","webpack:///./src/visualizations/Scatter/docs/examples/AxisXVisibilityHide.jsx?2f63","webpack:///./src/visualizations/Scatter/docs/examples/AxisXVisibility.jsx?def3","webpack:///./src/visualizations/Scatter/docs/examples/AxisYVisibility.jsx?97bf","webpack:///./src/visualizations/Scatter/docs/examples/AxisYMajorTicks.jsx?beca","webpack:///./src/visualizations/Scatter/docs/examples/AxisXMajorTicks.jsx?f9d4","webpack:///./src/visualizations/Scatter/docs/examples/AxisYMinorTicks.jsx?2492","webpack:///./src/visualizations/Scatter/docs/examples/AxisXMinorTicks.jsx?83b1","webpack:///./src/visualizations/Scatter/docs/examples/AxisXTicksSize.jsx?09da","webpack:///./src/visualizations/Scatter/docs/examples/AxisYTicksSize.jsx?8907","webpack:///./src/visualizations/Scatter/docs/examples/LabelVisibility.jsx?604d","webpack:///./src/visualizations/Scatter/docs/examples/AxisXExtendRangeFalse.jsx?12bd","webpack:///./src/visualizations/Scatter/docs/examples/AxisXExtendRangeTrue.jsx?3baa","webpack:///./src/visualizations/Scatter/docs/examples/AxisYExtendRangeFalse.jsx?1c63","webpack:///./src/visualizations/Scatter/docs/examples/AxisYExtendRangeTrue.jsx?0c30","webpack:///./src/visualizations/Scatter/docs/examples/AxisYIncludeZeroFalse.jsx?a490","webpack:///./src/visualizations/Scatter/docs/examples/AxisYIncludeZeroTrue.jsx?b286","webpack:///./src/visualizations/Scatter/docs/examples/AxisXIncludeZeroFalse.jsx?cee6","webpack:///./src/visualizations/Scatter/docs/examples/AxisXIncludeZeroTrue.jsx?dafc","webpack:///./src/visualizations/Scatter/docs/examples/AxisXIntegerUnitFalse.jsx?1e3b","webpack:///./src/visualizations/Scatter/docs/examples/AxisXIntegerUnitTrue.jsx?5552","webpack:///./src/visualizations/Scatter/docs/examples/AxisYMajorGrid.jsx?0c46","webpack:///./src/visualizations/Scatter/docs/examples/AxisXMinorGrid.jsx?0021","webpack:///./src/visualizations/Scatter/docs/examples/AxisYMinorGrid.jsx?d97e","webpack:///./src/visualizations/Scatter/docs/examples/LegendPlacement.jsx?2269","webpack:///./src/visualizations/Scatter/docs/examples/LegendOverflowEnd.jsx?6c4e","webpack:///./src/visualizations/Scatter/docs/examples/LegendOverflowMiddle.jsx?ea75","webpack:///./src/visualizations/Scatter/docs/examples/MarkerSize.jsx?7132","webpack:///./src/visualizations/Scatter/docs/examples/Basic.jsx","webpack:///./src/visualizations/Scatter/docs/examples/TitleVisibility.jsx","webpack:///./src/visualizations/Scatter/docs/examples/TitleSpecified.jsx","webpack:///./src/visualizations/Scatter/docs/examples/SeriesColors.jsx","webpack:///./src/visualizations/Scatter/docs/examples/FieldColors.jsx","webpack:///./src/visualizations/Scatter/docs/examples/BackgroundColor.jsx","webpack:///./src/visualizations/Scatter/docs/examples/ForegroundColor.jsx","webpack:///./src/visualizations/Scatter/docs/examples/FontColor.jsx","webpack:///./src/visualizations/Scatter/docs/examples/Abbreviation.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisYScale.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisXScale.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisYMinNumber.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisYMaxNumber.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisYMajorUnit.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisXMinNumber.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisXMaxNumber.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisXMajorUnit.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisXLabelRotation.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisXVisibilityHide.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisXVisibility.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisYVisibility.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisYMajorTicks.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisXMajorTicks.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisYMinorTicks.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisXMinorTicks.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisXTicksSize.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisYTicksSize.jsx","webpack:///./src/visualizations/Scatter/docs/examples/LabelVisibility.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisXExtendRangeFalse.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisXExtendRangeTrue.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisYExtendRangeFalse.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisYExtendRangeTrue.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisYIncludeZeroFalse.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisYIncludeZeroTrue.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisXIncludeZeroFalse.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisXIncludeZeroTrue.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisXIntegerUnitFalse.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisXIntegerUnitTrue.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisYMajorGrid.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisXMinorGrid.jsx","webpack:///./src/visualizations/Scatter/docs/examples/AxisYMinorGrid.jsx","webpack:///./src/visualizations/Scatter/docs/examples/LegendPlacement.jsx","webpack:///./src/visualizations/Scatter/docs/examples/LegendOverflowEnd.jsx","webpack:///./src/visualizations/Scatter/docs/examples/LegendOverflowMiddle.jsx","webpack:///./src/visualizations/Scatter/docs/examples/MarkerSize.jsx","webpack:///./src/visualizations/Scatter/docs/definition.js","webpack:///./src/visualizations/Scatter/optionsSchema.js","webpack:///./src/visualizations/Scatter/docs/index.jsx","webpack:///external \"@splunk/visualizations-shared/VisualizationDocPage\""],"names":["category","x","y","primary","requestParams","offset","count","data","fields","name","columns","meta","totalCount","seriesColors","fieldColors","backgroundColor","foregroundColor","fontColor","encoding","type","desc","defaultValue","isRequired","events","description","default","pattern","getPattern","items","enum","BasicExample","TitleVisibilityExample","TitleSpecifiedExample","SeriesColorsExample","FieldColorsExample","BackgroundColorExample","ForegroundColorExample","FontColorExample","AbbreviationExample","AxisYScaleExample","AxisXScaleExample","AxisYMinNumberExample","AxisYMaxNumberExample","AxisYMajorUnitExample","AxisXMinNumberExample","AxisXMaxNumberExample","AxisXMajorUnitExample","AxisXLabelRotationExample","AxisXVisibilityHideExample","AxisXVisibilityExample","AxisYVisibilityExample","AxisYMajorTicksExample","AxisXMajorTicksExample","AxisYMinorTicksExample","AxisXMinorTicksExample","AxisXTicksSizeExample","AxisYTicksSizeExample","LabelVisibilityExample","AxisXExtendRangeFalseExample","AxisXExtendRangeTrueExample","AxisYExtendRangeFalseExample","AxisYExtendRangeTrueExample","AxisYIncludeZeroFalseExample","AxisYIncludeZeroTrueExample","AxisXIncludeZeroFalseExample","AxisXIncludeZeroTrueExample","AxisXIntegerUnitFalseExample","AxisXIntegerUnitTrueExample","AxisYMajorGridExample","AxisYMinorGridCExample","AxisXMinorGridExample","LegendPlacementExample","LegendOverflowMiddleExample","LegendOverflowEndExample","MarkerSizeExample","doc","optionsSchema"],"mappings":"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","file":"Scatter.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 53);\n","module.exports = require(\"react\");","module.exports = require(\"@splunk/react-docs/DocExample\");","module.exports = require(\"@splunk/dashboard-visualizations/common/OptionsDoc\");","module.exports = require(\"@splunk/dashboard-visualizations/common/EncodingDoc\");","module.exports = require(\"@splunk/dashboard-visualizations/common/EventsDoc\");","module.exports = require(\"@splunk/visualizations-shared/schemaUtils\");","module.exports = require(\"@splunk/dashboard-visualizations/Scatter\");","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{}}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisTitleY.visibility': 'collapsed',\\n            'axisTitleX.visibility': 'collapsed',\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisTitleY.text': 'Axis Y Total Bytes',\\n            'axisTitleX.text': 'Axis X Count',\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            seriesColors: ['#FF0000', '#0000FF', '#008000'],\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            fieldColors: { 200: '#008000', 201: '#FFA500', 401: '#0000FF', 404: '#808000' },\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            backgroundColor: '#008000',\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            foregroundColor: '#FF0000',\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            fontColor: '#0000FF',\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisY.abbreviation': 'auto',\\n            'axisX.abbreviation': 'auto',\\n            'axisX.maximumNumber': 9000,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '404',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisY.scale': 'log',\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisX.scale': 'log',\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisY.minimumNumber': 500,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisY.maximumNumber': 2000,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisLabelsY.majorUnit': 100,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisX.minimumNumber': 10,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisX.maximumNumber': 20,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisLabelsX.majorUnit': 5,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisLabelsX.majorLabelStyle.rotation': 45,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'gridLinesY.showMajorLines': false,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisLabelsX.axisVisibility': 'show',\\n            'gridLinesY.showMajorLines': false,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisLabelsY.axisVisibility': 'show',\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisLabelsY.axisVisibility': 'show',\\n            'axisLabelsY.majorTickVisibility': 'show',\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisLabelsX.majorTickVisibility': 'show',\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisLabelsY.axisVisibility': 'show',\\n            'axisLabelsY.minorTickVisibility': 'show',\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisLabelsX.minorTickVisibility': 'show',\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisLabelsX.majorTickVisibility': 'show',\\n            'axisLabelsX.majorTickSize': 15,\\n            'axisLabelsX.minorTickVisibility': 'show',\\n            'axisLabelsX.minorTickSize': 10,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisLabelsY.axisVisibility': 'show',\\n            'axisLabelsY.majorTickVisibility': 'show',\\n            'axisLabelsY.minorTickVisibility': 'show',\\n            'axisLabelsY.majorTickSize': 15,\\n            'axisLabelsY.minorTickSize': 10,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisLabelsX.majorLabelVisibility': 'hide',\\n            'axisLabelsY.majorLabelVisibility': 'hide',\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisLabelsX.extendsAxisRange': false,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisLabelsX.extendsAxisRange': true,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisLabelsY.extendsAxisRange': false,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisLabelsY.extendsAxisRange': true,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisY.includeZero': false,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisY.includeZero': true,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisX.includeZero': false,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisX.includeZero': true,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisLabelsX.integerUnits': false,\\n            'axisX.maximumNumber': 4,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'axisLabelsX.integerUnits': true,\\n            'axisX.maximumNumber': 4,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'gridLinesY.showMajorLines': false,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'gridLinesX.showMinorLines': true,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'gridLinesY.showMajorLines': false,\\n            'gridLinesY.showMinorLines': true,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'legend.placement': 'top',\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'legend.labelStyle.overflowMode': 'ellipsisEnd',\\n        }}\\n        encoding={{\\n            category: 'primary.category',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'category',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            'Gen Electric GE36',\\n                            'General Electric TF39 high bypass turbofan',\\n                            'Pratt & Whitney R-4360 Wasp Major',\\n                            'Allison V-1710',\\n                            'Sanford Alexander Moss',\\n                            'Armstrong Siddeley Jaguar IV (S)',\\n                            'BMW VI',\\n                            'Auguste Rateau',\\n                            'Bristol Mercury',\\n                            'P&Whitney R-4360',\\n                            'Sanford Alexander Moss',\\n                            'Jendrassik Cs-1',\\n                            'Gen Electric GE36',\\n                            'Bell X-1',\\n                            'P&Whitney R-4360',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{}}\\n        encoding={{\\n            category: 'primary.category',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'category',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            'Gen Electric GE36',\\n                            'General Electric TF39 high bypass turbofan',\\n                            'Pratt & Whitney R-4360 Wasp Major',\\n                            'Allison V-1710',\\n                            'Sanford Alexander Moss',\\n                            'Armstrong Siddeley Jaguar IV (S)',\\n                            'BMW VI',\\n                            'Auguste Rateau',\\n                            'Bristol Mercury',\\n                            'P&Whitney R-4360',\\n                            'Sanford Alexander Moss',\\n                            'Jendrassik Cs-1',\\n                            'Gen Electric GE36',\\n                            'Bell X-1',\\n                            'P&Whitney R-4360',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","export default \"import React from 'react';\\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\\n\\nexport default () => (\\n    <Scatter\\n        options={{\\n            'chart.markerSize': 8,\\n        }}\\n        encoding={{\\n            category: 'primary.status',\\n            x: 'primary.date_hour',\\n            y: 'primary.count',\\n        }}\\n        dataSources={{\\n            primary: {\\n                requestParams: { offset: 0, count: 20 },\\n                data: {\\n                    fields: [\\n                        {\\n                            name: 'date_hour',\\n                        },\\n                        {\\n                            name: 'count',\\n                        },\\n                        {\\n                            name: 'status',\\n                        },\\n                    ],\\n                    columns: [\\n                        [\\n                            '13',\\n                            '14',\\n                            '15',\\n                            '16',\\n                            '17',\\n                            '18',\\n                            '19',\\n                            '10',\\n                            '20',\\n                            '21',\\n                            '22',\\n                            '23',\\n                            '3',\\n                            '4',\\n                            '5',\\n                        ],\\n                        [\\n                            '1109',\\n                            '1108',\\n                            '1098',\\n                            '1088',\\n                            '1097',\\n                            '1086',\\n                            '1107',\\n                            '1090',\\n                            '1150',\\n                            '2100',\\n                            '1070',\\n                            '1097',\\n                            '1096',\\n                            '1107',\\n                            '1152',\\n                        ],\\n                        [\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '401',\\n                            '201',\\n                            '201',\\n                            '201',\\n                            '200',\\n                            '201',\\n                            '201',\\n                            '404',\\n                            '401',\\n                        ],\\n                    ],\\n                },\\n                meta: { totalCount: 20 },\\n            },\\n        }}\\n    />\\n);\\n\";","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{}}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisTitleY.visibility': 'collapsed',\n            'axisTitleX.visibility': 'collapsed',\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisTitleY.text': 'Axis Y Total Bytes',\n            'axisTitleX.text': 'Axis X Count',\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            seriesColors: ['#FF0000', '#0000FF', '#008000'],\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            fieldColors: { 200: '#008000', 201: '#FFA500', 401: '#0000FF', 404: '#808000' },\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            backgroundColor: '#008000',\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            foregroundColor: '#FF0000',\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            fontColor: '#0000FF',\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisY.abbreviation': 'auto',\n            'axisX.abbreviation': 'auto',\n            'axisX.maximumNumber': 9000,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '404',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisY.scale': 'log',\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisX.scale': 'log',\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisY.minimumNumber': 500,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisY.maximumNumber': 2000,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisLabelsY.majorUnit': 100,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisX.minimumNumber': 10,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisX.maximumNumber': 20,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisLabelsX.majorUnit': 5,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisLabelsX.majorLabelStyle.rotation': 45,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'gridLinesY.showMajorLines': false,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisLabelsX.axisVisibility': 'show',\n            'gridLinesY.showMajorLines': false,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisLabelsY.axisVisibility': 'show',\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisLabelsY.axisVisibility': 'show',\n            'axisLabelsY.majorTickVisibility': 'show',\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisLabelsX.majorTickVisibility': 'show',\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisLabelsY.axisVisibility': 'show',\n            'axisLabelsY.minorTickVisibility': 'show',\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisLabelsX.minorTickVisibility': 'show',\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisLabelsX.majorTickVisibility': 'show',\n            'axisLabelsX.majorTickSize': 15,\n            'axisLabelsX.minorTickVisibility': 'show',\n            'axisLabelsX.minorTickSize': 10,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisLabelsY.axisVisibility': 'show',\n            'axisLabelsY.majorTickVisibility': 'show',\n            'axisLabelsY.minorTickVisibility': 'show',\n            'axisLabelsY.majorTickSize': 15,\n            'axisLabelsY.minorTickSize': 10,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisLabelsX.majorLabelVisibility': 'hide',\n            'axisLabelsY.majorLabelVisibility': 'hide',\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisLabelsX.extendsAxisRange': false,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisLabelsX.extendsAxisRange': true,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisLabelsY.extendsAxisRange': false,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisLabelsY.extendsAxisRange': true,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisY.includeZero': false,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisY.includeZero': true,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisX.includeZero': false,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisX.includeZero': true,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisLabelsX.integerUnits': false,\n            'axisX.maximumNumber': 4,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'axisLabelsX.integerUnits': true,\n            'axisX.maximumNumber': 4,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'gridLinesY.showMajorLines': false,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'gridLinesX.showMinorLines': true,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'gridLinesY.showMajorLines': false,\n            'gridLinesY.showMinorLines': true,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'legend.placement': 'top',\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'legend.labelStyle.overflowMode': 'ellipsisEnd',\n        }}\n        encoding={{\n            category: 'primary.category',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'category',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            'Gen Electric GE36',\n                            'General Electric TF39 high bypass turbofan',\n                            'Pratt & Whitney R-4360 Wasp Major',\n                            'Allison V-1710',\n                            'Sanford Alexander Moss',\n                            'Armstrong Siddeley Jaguar IV (S)',\n                            'BMW VI',\n                            'Auguste Rateau',\n                            'Bristol Mercury',\n                            'P&Whitney R-4360',\n                            'Sanford Alexander Moss',\n                            'Jendrassik Cs-1',\n                            'Gen Electric GE36',\n                            'Bell X-1',\n                            'P&Whitney R-4360',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{}}\n        encoding={{\n            category: 'primary.category',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'category',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            'Gen Electric GE36',\n                            'General Electric TF39 high bypass turbofan',\n                            'Pratt & Whitney R-4360 Wasp Major',\n                            'Allison V-1710',\n                            'Sanford Alexander Moss',\n                            'Armstrong Siddeley Jaguar IV (S)',\n                            'BMW VI',\n                            'Auguste Rateau',\n                            'Bristol Mercury',\n                            'P&Whitney R-4360',\n                            'Sanford Alexander Moss',\n                            'Jendrassik Cs-1',\n                            'Gen Electric GE36',\n                            'Bell X-1',\n                            'P&Whitney R-4360',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\n\nexport default () => (\n    <Scatter\n        options={{\n            'chart.markerSize': 8,\n        }}\n        encoding={{\n            category: 'primary.status',\n            x: 'primary.date_hour',\n            y: 'primary.count',\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    fields: [\n                        {\n                            name: 'date_hour',\n                        },\n                        {\n                            name: 'count',\n                        },\n                        {\n                            name: 'status',\n                        },\n                    ],\n                    columns: [\n                        [\n                            '13',\n                            '14',\n                            '15',\n                            '16',\n                            '17',\n                            '18',\n                            '19',\n                            '10',\n                            '20',\n                            '21',\n                            '22',\n                            '23',\n                            '3',\n                            '4',\n                            '5',\n                        ],\n                        [\n                            '1109',\n                            '1108',\n                            '1098',\n                            '1088',\n                            '1097',\n                            '1086',\n                            '1107',\n                            '1090',\n                            '1150',\n                            '2100',\n                            '1070',\n                            '1097',\n                            '1096',\n                            '1107',\n                            '1152',\n                        ],\n                        [\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '401',\n                            '201',\n                            '201',\n                            '201',\n                            '200',\n                            '201',\n                            '201',\n                            '404',\n                            '401',\n                        ],\n                    ],\n                },\n                meta: { totalCount: 20 },\n            },\n        }}\n    />\n);\n","export default {\n    encoding: [\n        {\n            name: 'x',\n            type: '[number | string]',\n            desc: 'Specify the dataSource applied to the x-axis.',\n            defaultValue: 'primary[0]',\n            isRequired: 'true',\n        },\n        {\n            name: 'y',\n            type: '[number | string]',\n            desc: 'Specify the dataSource applied to the y-axis.',\n            defaultValue: 'primary[1]',\n            isRequired: 'true',\n        },\n        {\n            name: 'category',\n            type: '[number | string]',\n            desc: 'Specify a sequence of dataSource events to be plotted on the chart.',\n            defaultValue: 'primary[2]',\n            isRequired: 'false',\n        },\n    ],\n    events: [\n        {\n            name: 'point.click',\n            desc: 'trigger when user clicks a data point',\n        },\n        {\n            name: 'legend.click',\n            desc: 'trigger when user clicks a chart legend',\n        },\n    ],\n};\n","import { COLOR_OR_TOKEN_PATTERN, getPattern } from '@splunk/visualizations-shared/schemaUtils';\n\nexport default {\n    'axisTitleX.text': { description: 'Specify the title of the x-axis.', type: 'string' },\n    'axisTitleY.text': { description: 'Specify the title of the y-axis.', type: 'string' },\n    'axisTitleX.visibility': {\n        default: 'visible',\n        description: 'Specify whether to show the title of the x-axis.',\n        pattern: getPattern(['visible', 'collapsed']),\n        type: 'string',\n    },\n    'axisTitleY.visibility': {\n        default: 'visible',\n        description: 'Specify whether to show the title of the y-axis.',\n        pattern: getPattern(['visible', 'collapsed']),\n        type: 'string',\n    },\n    seriesColors: {\n        description: `Specify the Hex code for colors used for a series. For example, ['#FF0000', '#0000FF', '#008000'].\n            The default for light and dark mode is ['#1E93C6', '#F2B827', '#D6563C', '#6A5C9E', '#31A35F'].\n            The default for SCP mode is ['#A9F5E7', '#A870EF',  '#1E6271', '#45D4BA', '#602CA1',  '#9AE6F7', '#6CD0F0', '#2F8AA7',  '#422879', '#F29BAC', '#E85B79', '#C6335F',  '#FDAF93', '#FB865C', '#E9643A',  '#7EEFDA', '#26AA92', '#207865', '#C093F9', '#8747DA',  '#4EB2D2', '#912344',  '#AD3F20', '#D44C20', '#FFC34E',  '#95651D',  '#C0891E', '#ECAE11', '#FCD9A4', '#78062A'].\n            Note: Option type 'string' has been deprecated.`,\n        type: ['array', 'string'],\n        items: { type: 'string' },\n    },\n    fieldColors: {\n        description: `Specify the Hex code for color used for a field. For example: {'count': '#008000', 'percent': '#FFA500'}. Note: Option type 'string' has been deprecated.`,\n        type: ['object', 'string'],\n    },\n    backgroundColor: {\n        description: 'Specify the Hex code for color used for a background. For example: \"#0000FF\".',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    fontColor: {\n        description:\n            'Specify the Hex code for color used for fonts (axis labels, legends). For example: \"#0000FF\".',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    foregroundColor: {\n        description: 'Specify the Hex code for color used for a foreground. For example: \"#0000FF\".',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    'axisY.abbreviation': {\n        default: 'none',\n        description: 'Specify whether to abbrevite large y-axis values with the closest SI prefix.',\n        pattern: getPattern(['none', 'auto']),\n        type: 'string',\n    },\n    'axisX.abbreviation': {\n        default: 'none',\n        description: 'Specify whether to abbrevite large x-axis values with the closest SI prefix.',\n        pattern: getPattern(['none', 'auto']),\n        type: 'string',\n    },\n    'axisY.scale': {\n        default: 'linear',\n        description: 'Specify the type of scale that applies to a numerical y-axis.',\n        pattern: getPattern(['linear', 'log']),\n        type: 'string',\n    },\n    'axisX.scale': {\n        default: 'linear',\n        description: 'Specify the type of scale that applies to a numerical x-axis.',\n        pattern: getPattern(['linear', 'log']),\n        type: 'string',\n    },\n    'axisY.minimumNumber': {\n        default: 'auto',\n        description: 'Specify the minimum number for the visible y-axis.',\n        type: ['number', 'string'],\n    },\n    'axisX.minimumNumber': {\n        default: 'auto',\n        description: 'specify the minimum number for the visible x-axis.',\n        type: ['number', 'string'],\n    },\n    'axisY.maximumNumber': {\n        default: 'auto',\n        description: 'Specify the maximum number for the visible y-axis.',\n        type: ['number', 'string'],\n    },\n    'axisX.maximumNumber': {\n        default: 'auto',\n        description: 'Specify the maximum number for the visible x-axis.',\n        type: ['number', 'string'],\n    },\n    'axisLabelsY.majorUnit': {\n        default: 'auto',\n        description:\n            'Specify the spacing unit at which to place major tick marks along the numeric y-axis. By default, this value is automatically calculated based on the scale of the related axis.',\n        type: ['number', 'string'],\n    },\n    'axisLabelsX.majorUnit': {\n        default: 'auto',\n        description:\n            'Specify the spacing unit at which to place major tick marks along the numeric x-axis. By default, this value is automatically calculated based on the scale of the related axis.',\n        type: ['number', 'string'],\n    },\n    'axisLabelsX.majorLabelStyle.rotation': {\n        default: '0',\n        description: 'Specify the rotation of the axis label in degrees.',\n        enum: [-90, -45, 0, 45, 90],\n        type: 'number',\n    },\n    'axisLabelsY.axisVisibility': {\n        default: 'hide',\n        description: 'Specify whether the y-axis line is visible.',\n        pattern: getPattern(['show', 'hide']),\n        type: 'string',\n    },\n    'axisLabelsX.axisVisibility': {\n        default: 'hide',\n        description: 'Specify whether the x-axis line is visible.',\n        pattern: getPattern(['show', 'hide']),\n        type: 'string',\n    },\n    'axisLabelsX.majorTickVisibility': {\n        default: 'auto',\n        description: 'Specify whether major tick marks are visible on the x-axis.',\n        pattern: getPattern(['auto', 'show', 'hide']),\n        type: 'string',\n    },\n    'axisLabelsY.majorTickVisibility': {\n        default: 'auto',\n        description: 'Specify whether major tick marks are visible on the y-axis.',\n        pattern: getPattern(['auto', 'show', 'hide']),\n        type: 'string',\n    },\n    'axisLabelsY.minorTickVisibility': {\n        default: 'auto',\n        description: 'Specify whether minor tick marks are visible on the y-axis.',\n        pattern: getPattern(['auto', 'show', 'hide']),\n        type: 'string',\n    },\n    'axisLabelsX.minorTickVisibility': {\n        default: 'auto',\n        description: 'Specify whether minor tick marks are visible on the x-axis.',\n        pattern: getPattern(['auto', 'show', 'hide']),\n        type: 'string',\n    },\n    'axisLabelsY.majorTickSize': {\n        default: 6,\n        description: 'Specify whether major tick marks are visible on the y-axis.',\n        type: 'number',\n    },\n    'axisLabelsX.majorTickSize': {\n        default: 6,\n        description: 'Specify whether major tick marks are svisible on the x-axis.',\n        type: 'number',\n    },\n    'axisLabelsY.minorTickSize': {\n        default: 6,\n        description: 'Specify, in pixles, the size of minor tick marks on the y-axis.',\n        type: 'number',\n    },\n    'axisLabelsX.minorTickSize': {\n        default: 6,\n        description: 'Specify, in pixles, the size of minor tick marks on the x-axis.',\n        type: 'number',\n    },\n    'axisLabelsX.majorLabelVisibility': {\n        default: 'auto',\n        description: 'Specify whether major tick mark labels are visible on the x-axis.',\n        pattern: getPattern(['auto', 'show', 'hide']),\n        type: 'string',\n    },\n    'axisLabelsY.majorLabelVisibility': {\n        default: 'auto',\n        description: 'Specify whether major tick mark labels are visible on the y-axis.',\n        pattern: getPattern(['auto', 'show', 'hide']),\n        type: 'string',\n    },\n    'axisLabelsY.extendsAxisRange': {\n        default: true,\n        description: 'Specify whether the y-axis should be extended to snap to whole major tick marks.',\n        type: 'boolean',\n    },\n    'axisLabelsX.extendsAxisRange': {\n        default: true,\n        description: 'Specify whether the x-axis should be extended to snap to whole major tick marks.',\n        type: 'boolean',\n    },\n    'axisY.includeZero': {\n        default: false,\n        description: 'Specify whether the y-axis chart includes zero.',\n        type: 'boolean',\n    },\n    'axisX.includeZero': {\n        default: false,\n        description: 'Specify whether the x-axis chart includes zero.',\n        type: 'boolean',\n    },\n    'axisLabelsX.integerUnits': {\n        default: false,\n        description: 'Specify whether the major unit should be rounded to the nearest integer on the x-axis.',\n        type: 'boolean',\n    },\n    'gridLinesY.showMajorLines': {\n        default: true,\n        description: 'Specify whether major grid lines are visible on the y-axis.',\n        type: 'boolean',\n    },\n    'gridLinesY.showMinorLines': {\n        default: false,\n        description: 'Specify whether minor grid lines are visible on the y-axis.',\n        type: 'boolean',\n    },\n    'gridLinesX.showMinorLines': {\n        default: false,\n        description: 'Specify whether minor grid lines are visible on the x-axis.',\n        type: 'boolean',\n    },\n    'legend.placement': {\n        default: 'right',\n        description: 'Specify the location of the legend on the panel.',\n        pattern: getPattern(['right', 'left', 'top', 'bottom', 'none']),\n        type: 'string',\n    },\n    'legend.labelStyle.overflowMode': {\n        default: 'ellipsisMiddle',\n        description:\n            'Specify how to display legend labels when they overflow the layout boundaries by replacing overflow text with an ellipsis.',\n        pattern: getPattern(['ellipsisEnd', 'ellipsisMiddle', 'ellipsisStart', 'ellipsisNone']),\n        type: 'string',\n    },\n    'chart.markerSize': {\n        default: 4,\n        description: 'Specify the marker size of the scatter chart.',\n        type: 'number',\n    },\n    'chart.resultTruncationLimit': {\n        default: 50000,\n        description: 'Specify the number of data points rendered in a chart.',\n        type: 'number',\n    },\n};\n","import React from 'react';\nimport Scatter from '@splunk/dashboard-visualizations/Scatter';\nimport VisualizationDocPage from '@splunk/visualizations-shared/VisualizationDocPage';\nimport EncodingDoc from '@splunk/dashboard-visualizations/common/EncodingDoc';\nimport EventsDoc from '@splunk/dashboard-visualizations/common/EventsDoc';\nimport OptionsDoc from '@splunk/dashboard-visualizations/common/OptionsDoc';\nimport DocExample from '@splunk/react-docs/DocExample';\n\nimport BasicCode from '!!raw-loader!./examples/Basic';\nimport TitleVisibilityCode from '!!raw-loader!./examples/TitleVisibility';\nimport TitleSpecifiedCode from '!!raw-loader!./examples/TitleSpecified';\nimport SeriesColorsCode from '!!raw-loader!./examples/SeriesColors';\nimport FieldColorsCode from '!!raw-loader!./examples/FieldColors';\nimport BackgroundColorCode from '!!raw-loader!./examples/BackgroundColor';\nimport ForegroundColorCode from '!!raw-loader!./examples/ForegroundColor';\nimport FontColorCode from '!!raw-loader!./examples/FontColor';\nimport AbbreviationCode from '!!raw-loader!./examples/Abbreviation';\nimport AxisYScaleCode from '!!raw-loader!./examples/AxisYScale';\nimport AxisXScaleCode from '!!raw-loader!./examples/AxisXScale';\nimport AxisYMinNumberCode from '!!raw-loader!./examples/AxisYMinNumber';\nimport AxisYMaxNumberCode from '!!raw-loader!./examples/AxisYMaxNumber';\nimport AxisYMajorUnitCode from '!!raw-loader!./examples/AxisYMajorUnit';\nimport AxisXMinNumberCode from '!!raw-loader!./examples/AxisXMinNumber';\nimport AxisXMaxNumberCode from '!!raw-loader!./examples/AxisXMaxNumber';\nimport AxisXMajorUnitCode from '!!raw-loader!./examples/AxisXMajorUnit';\nimport AxisXLabelRotationCode from '!!raw-loader!./examples/AxisXLabelRotation';\nimport AxisXVisibilityHideCode from '!!raw-loader!./examples/AxisXVisibilityHide';\nimport AxisXVisibilityCode from '!!raw-loader!./examples/AxisXVisibility';\nimport AxisYVisibilityCode from '!!raw-loader!./examples/AxisYVisibility';\nimport AxisYMajorTicksCode from '!!raw-loader!./examples/AxisYMajorTicks';\nimport AxisXMajorTicksCode from '!!raw-loader!./examples/AxisXMajorTicks';\nimport AxisYMinorTicksCode from '!!raw-loader!./examples/AxisYMinorTicks';\nimport AxisXMinorTicksCode from '!!raw-loader!./examples/AxisXMinorTicks';\nimport AxisXTicksSizeCode from '!!raw-loader!./examples/AxisXTicksSize';\nimport AxisYTicksSizeCode from '!!raw-loader!./examples/AxisYTicksSize';\nimport LabelVisibilityCode from '!!raw-loader!./examples/LabelVisibility';\nimport AxisXExtendRangeFalseCode from '!!raw-loader!./examples/AxisXExtendRangeFalse';\nimport AxisXExtendRangeTrueCode from '!!raw-loader!./examples/AxisXExtendRangeTrue';\nimport AxisYExtendRangeFalseCode from '!!raw-loader!./examples/AxisYExtendRangeFalse';\nimport AxisYExtendRangeTrueCode from '!!raw-loader!./examples/AxisYExtendRangeTrue';\nimport AxisYIncludeZeroFalseCode from '!!raw-loader!./examples/AxisYIncludeZeroFalse';\nimport AxisYIncludeZeroTrueCode from '!!raw-loader!./examples/AxisYIncludeZeroTrue';\nimport AxisXIncludeZeroFalseCode from '!!raw-loader!./examples/AxisXIncludeZeroFalse';\nimport AxisXIncludeZeroTrueCode from '!!raw-loader!./examples/AxisXIncludeZeroTrue';\nimport AxisXIntegerUnitFalseCode from '!!raw-loader!./examples/AxisXIntegerUnitFalse';\nimport AxisXIntegerUnitTrueCode from '!!raw-loader!./examples/AxisXIntegerUnitTrue';\nimport AxisYMajorGridCode from '!!raw-loader!./examples/AxisYMajorGrid';\nimport AxisXMinorGridCode from '!!raw-loader!./examples/AxisXMinorGrid';\nimport AxisYMinorGridCode from '!!raw-loader!./examples/AxisYMinorGrid';\nimport LegendPlacementCode from '!!raw-loader!./examples/LegendPlacement';\nimport LegendOverflowEndCode from '!!raw-loader!./examples/LegendOverflowEnd';\nimport LegendOverflowMiddleCode from '!!raw-loader!./examples/LegendOverflowMiddle';\nimport MarkerSizeCode from '!!raw-loader!./examples/MarkerSize';\n\nimport BasicExample from './examples/Basic';\nimport TitleVisibilityExample from './examples/TitleVisibility';\nimport TitleSpecifiedExample from './examples/TitleSpecified';\nimport SeriesColorsExample from './examples/SeriesColors';\nimport FieldColorsExample from './examples/FieldColors';\nimport BackgroundColorExample from './examples/BackgroundColor';\nimport ForegroundColorExample from './examples/ForegroundColor';\nimport FontColorExample from './examples/FontColor';\nimport AbbreviationExample from './examples/Abbreviation';\nimport AxisYScaleExample from './examples/AxisYScale';\nimport AxisXScaleExample from './examples/AxisXScale';\nimport AxisYMinNumberExample from './examples/AxisYMinNumber';\nimport AxisYMaxNumberExample from './examples/AxisYMaxNumber';\nimport AxisYMajorUnitExample from './examples/AxisYMajorUnit';\nimport AxisXMinNumberExample from './examples/AxisXMinNumber';\nimport AxisXMaxNumberExample from './examples/AxisXMaxNumber';\nimport AxisXMajorUnitExample from './examples/AxisXMajorUnit';\nimport AxisXLabelRotationExample from './examples/AxisXLabelRotation';\nimport AxisXVisibilityHideExample from './examples/AxisXVisibilityHide';\nimport AxisXVisibilityExample from './examples/AxisXVisibility';\nimport AxisYVisibilityExample from './examples/AxisYVisibility';\nimport AxisYMajorTicksExample from './examples/AxisYMajorTicks';\nimport AxisXMajorTicksExample from './examples/AxisXMajorTicks';\nimport AxisYMinorTicksExample from './examples/AxisYMinorTicks';\nimport AxisXMinorTicksExample from './examples/AxisXMinorTicks';\nimport AxisXTicksSizeExample from './examples/AxisXTicksSize';\nimport AxisYTicksSizeExample from './examples/AxisYTicksSize';\nimport LabelVisibilityExample from './examples/LabelVisibility';\nimport AxisXExtendRangeFalseExample from './examples/AxisXExtendRangeFalse';\nimport AxisXExtendRangeTrueExample from './examples/AxisXExtendRangeTrue';\nimport AxisYExtendRangeFalseExample from './examples/AxisYExtendRangeFalse';\nimport AxisYExtendRangeTrueExample from './examples/AxisYExtendRangeTrue';\nimport AxisYIncludeZeroFalseExample from './examples/AxisYIncludeZeroFalse';\nimport AxisYIncludeZeroTrueExample from './examples/AxisYIncludeZeroTrue';\nimport AxisXIncludeZeroFalseExample from './examples/AxisXIncludeZeroFalse';\nimport AxisXIncludeZeroTrueExample from './examples/AxisXIncludeZeroTrue';\nimport AxisXIntegerUnitFalseExample from './examples/AxisXIntegerUnitFalse';\nimport AxisXIntegerUnitTrueExample from './examples/AxisXIntegerUnitTrue';\nimport AxisYMajorGridExample from './examples/AxisYMajorGrid';\nimport AxisXMinorGridExample from './examples/AxisXMinorGrid';\nimport AxisYMinorGridCExample from './examples/AxisYMinorGrid';\nimport LegendPlacementExample from './examples/LegendPlacement';\nimport LegendOverflowEndExample from './examples/LegendOverflowEnd';\nimport LegendOverflowMiddleExample from './examples/LegendOverflowMiddle';\nimport MarkerSizeExample from './examples/MarkerSize';\nimport doc from './definition';\nimport optionsSchema from '../optionsSchema';\n\nexport default () => (\n    <VisualizationDocPage\n        title=\"Scatter\"\n        examplesSection={[\n            <DocExample title=\"Basic Scatter\" key=\"basic\" code={BasicCode} example={BasicExample} />,\n            <DocExample\n                title=\"Title of Axis-Y and Axis-X is not visible\"\n                key=\"titlevisibility\"\n                code={TitleVisibilityCode}\n                example={TitleVisibilityExample}\n            />,\n            <DocExample\n                title=\"Title of Axis-Y and Axis-X specified\"\n                key=\"titlespecified\"\n                code={TitleSpecifiedCode}\n                example={TitleSpecifiedExample}\n            />,\n            <DocExample\n                title=\"Series Colors: Red, Blue and Green\"\n                key=\"seriescolors\"\n                code={SeriesColorsCode}\n                example={SeriesColorsExample}\n            />,\n            <DocExample\n                title=\"Field Colors: 200 - Green, 201 - Orange, 401 - Blue, 404 - Olive\"\n                key=\"fieldcolors\"\n                code={FieldColorsCode}\n                example={FieldColorsExample}\n            />,\n            <DocExample\n                title=\"Background Color - Green\"\n                key=\"backgroundcolor\"\n                code={BackgroundColorCode}\n                example={BackgroundColorExample}\n            />,\n            <DocExample\n                title=\"Foreground Color - Red\"\n                key=\"foregroundcolor\"\n                code={ForegroundColorCode}\n                example={ForegroundColorExample}\n            />,\n            <DocExample\n                title=\"Font Color - Blue\"\n                key=\"fontcolor\"\n                code={FontColorCode}\n                example={FontColorExample}\n            />,\n            <DocExample\n                title=\"Axis-Y Abbreviation - On, Axis-X Abbreviation - On\"\n                key=\"abbreviation\"\n                code={AbbreviationCode}\n                example={AbbreviationExample}\n            />,\n            <DocExample\n                title=\"Axis-Y Scale - Log\"\n                key=\"axisyscale\"\n                code={AxisYScaleCode}\n                example={AxisYScaleExample}\n            />,\n            <DocExample\n                title=\"Axis-X Scale - Log\"\n                key=\"axisxscale\"\n                code={AxisXScaleCode}\n                example={AxisXScaleExample}\n            />,\n            <DocExample\n                title=\"Axis-Y Minimum Number - 500\"\n                key=\"axisyminnumber\"\n                code={AxisYMinNumberCode}\n                example={AxisYMinNumberExample}\n            />,\n            <DocExample\n                title=\"Axis-Y Maximum Number - 2,000\"\n                key=\"axisymaxnumber\"\n                code={AxisYMaxNumberCode}\n                example={AxisYMaxNumberExample}\n            />,\n            <DocExample\n                title=\"Axis-Y Major Unit - 100\"\n                key=\"axisymajorunit\"\n                code={AxisYMajorUnitCode}\n                example={AxisYMajorUnitExample}\n            />,\n            <DocExample\n                title=\"Axis-X Minimum Number - 10\"\n                key=\"axisxminnumber\"\n                code={AxisXMinNumberCode}\n                example={AxisXMinNumberExample}\n            />,\n            <DocExample\n                title=\"Axis-X Maximum Number - 20\"\n                key=\"axisxmaxnumber\"\n                code={AxisXMaxNumberCode}\n                example={AxisXMaxNumberExample}\n            />,\n            <DocExample\n                title=\"Axis-X Major Unit - 5\"\n                key=\"axisxmajorunit\"\n                code={AxisXMajorUnitCode}\n                example={AxisXMajorUnitExample}\n            />,\n            <DocExample\n                title=\"Axis-X Label Rotation - 45\"\n                key=\"axisxlabelrotation\"\n                code={AxisXLabelRotationCode}\n                example={AxisXLabelRotationExample}\n            />,\n            <DocExample\n                title=\"Axis-X Visibility - Hide\"\n                key=\"axisxvisibilityhide\"\n                code={AxisXVisibilityHideCode}\n                example={AxisXVisibilityHideExample}\n            />,\n            <DocExample\n                title=\"Axis-X Visibility - Show\"\n                key=\"axisxvisibility\"\n                code={AxisXVisibilityCode}\n                example={AxisXVisibilityExample}\n            />,\n            <DocExample\n                title=\"Axis-Y Visibility - Show\"\n                key=\"axisyvisibility\"\n                code={AxisYVisibilityCode}\n                example={AxisYVisibilityExample}\n            />,\n            <DocExample\n                title=\"Axis-Y Major Ticks - Show\"\n                key=\"axisymajorticks\"\n                code={AxisYMajorTicksCode}\n                example={AxisYMajorTicksExample}\n            />,\n            <DocExample\n                title=\"Axis-X Major Ticks - Show\"\n                key=\"axisxmajorticks\"\n                code={AxisXMajorTicksCode}\n                example={AxisXMajorTicksExample}\n            />,\n            <DocExample\n                title=\"Axis-Y Minor Ticks - Show\"\n                key=\"axisyminorticks\"\n                code={AxisYMinorTicksCode}\n                example={AxisYMinorTicksExample}\n            />,\n            <DocExample\n                title=\"Axis-X Minor Ticks - Show\"\n                key=\"axisxminorticks\"\n                code={AxisXMinorTicksCode}\n                example={AxisXMinorTicksExample}\n            />,\n            <DocExample\n                title=\"Axis-X Major Tick Size - 15, Axis-X Minor Tick Size - 10\"\n                key=\"axisxticssize\"\n                code={AxisXTicksSizeCode}\n                example={AxisXTicksSizeExample}\n            />,\n            <DocExample\n                title=\"Axis-Y Major Tick Size - 15, Axis-Y Minor Tick Size - 10\"\n                key=\"axisyticssize\"\n                code={AxisYTicksSizeCode}\n                example={AxisYTicksSizeExample}\n            />,\n            <DocExample\n                title=\"Axis-X Major Label Visibility - Hide, Axis-Y Major Label Visibility - Hide\"\n                key=\"labelvisibility\"\n                code={LabelVisibilityCode}\n                example={LabelVisibilityExample}\n            />,\n            <DocExample\n                title=\"Axis-X Extend Range - False\"\n                key=\"axisxextendrangefalse\"\n                code={AxisXExtendRangeFalseCode}\n                example={AxisXExtendRangeFalseExample}\n            />,\n            <DocExample\n                title=\"Axis-X Extend Range - True\"\n                key=\"axisxextendrangeTrue\"\n                code={AxisXExtendRangeTrueCode}\n                example={AxisXExtendRangeTrueExample}\n            />,\n            <DocExample\n                title=\"Axis-Y Extend Range - False\"\n                key=\"axisyextendrangefalse\"\n                code={AxisYExtendRangeFalseCode}\n                example={AxisYExtendRangeFalseExample}\n            />,\n            <DocExample\n                title=\"Axis-Y Extend Range - True\"\n                key=\"axisyextendrangetrue\"\n                code={AxisYExtendRangeTrueCode}\n                example={AxisYExtendRangeTrueExample}\n            />,\n            <DocExample\n                title=\"Axis-Y Include Zero - False\"\n                key=\"axisyincludezerofalse\"\n                code={AxisYIncludeZeroFalseCode}\n                example={AxisYIncludeZeroFalseExample}\n            />,\n            <DocExample\n                title=\"Axis-Y Include Zero - True\"\n                key=\"axisyincludezerotrue\"\n                code={AxisYIncludeZeroTrueCode}\n                example={AxisYIncludeZeroTrueExample}\n            />,\n            <DocExample\n                title=\"Axis-X Include Zero - False\"\n                key=\"axisxincludezerofalse\"\n                code={AxisXIncludeZeroFalseCode}\n                example={AxisXIncludeZeroFalseExample}\n            />,\n            <DocExample\n                title=\"Axis-X Include Zero - True\"\n                key=\"axisxincludezerotrue\"\n                code={AxisXIncludeZeroTrueCode}\n                example={AxisXIncludeZeroTrueExample}\n            />,\n            <DocExample\n                title=\"Axis-X Integer Unit - False\"\n                key=\"axisxintegerunitfalse\"\n                code={AxisXIntegerUnitFalseCode}\n                example={AxisXIntegerUnitFalseExample}\n            />,\n            <DocExample\n                title=\"Axis-X Integer Unit - True\"\n                key=\"axisxintegerunittrue\"\n                code={AxisXIntegerUnitTrueCode}\n                example={AxisXIntegerUnitTrueExample}\n            />,\n            <DocExample\n                title=\"Axis-Y Major Grid - False\"\n                key=\"axisymajorgrid\"\n                code={AxisYMajorGridCode}\n                example={AxisYMajorGridExample}\n            />,\n            <DocExample\n                title=\"Axis-Y Minor Grid - True\"\n                key=\"axisyminorgrid\"\n                code={AxisYMinorGridCode}\n                example={AxisYMinorGridCExample}\n            />,\n            <DocExample\n                title=\"Axis-X Minor Grid - True\"\n                key=\"axisxminorgrid\"\n                code={AxisXMinorGridCode}\n                example={AxisXMinorGridExample}\n            />,\n            <DocExample\n                title=\"Legend Placement - Top\"\n                key=\"legendplacement\"\n                code={LegendPlacementCode}\n                example={LegendPlacementExample}\n            />,\n            <DocExample\n                title=\"Legend Overflow Mode - Middle\"\n                key=\"legendoverflowmiddle\"\n                code={LegendOverflowMiddleCode}\n                example={LegendOverflowMiddleExample}\n            />,\n            <DocExample\n                title=\"Legend Overflow Mode - End\"\n                key=\"legendoverflowend\"\n                code={LegendOverflowEndCode}\n                example={LegendOverflowEndExample}\n            />,\n            <DocExample\n                title=\"Marker Size - 8\"\n                key=\"markersize\"\n                code={MarkerSizeCode}\n                example={MarkerSizeExample}\n            />,\n        ]}\n        encodingSection={<EncodingDoc encoding={doc.encoding} />}\n        optionSection={<OptionsDoc options={optionsSchema} />}\n        eventSection={\n            <EventsDoc\n                encoding={{\n                    category: 'primary.status',\n                    x: 'primary.date_hour',\n                    y: 'primary.count',\n                }}\n                events={doc.events}\n                Visualization={Scatter}\n                dsState={{\n                    primary: {\n                        requestParams: { offset: 0, count: 20 },\n                        data: {\n                            fields: [\n                                {\n                                    name: 'date_hour',\n                                },\n                                {\n                                    name: 'count',\n                                },\n                                {\n                                    name: 'mode(status)',\n                                },\n                                {\n                                    name: 'status',\n                                },\n                            ],\n                            columns: [\n                                [\n                                    '13',\n                                    '14',\n                                    '15',\n                                    '16',\n                                    '17',\n                                    '18',\n                                    '19',\n                                    '10',\n                                    '20',\n                                    '21',\n                                    '22',\n                                    '23',\n                                    '3',\n                                    '4',\n                                    '5',\n                                ],\n                                [\n                                    '1109',\n                                    '1108',\n                                    '1098',\n                                    '1088',\n                                    '1097',\n                                    '1086',\n                                    '1107',\n                                    '1090',\n                                    '1150',\n                                    '2100',\n                                    '1070',\n                                    '1097',\n                                    '1096',\n                                    '1107',\n                                    '1152',\n                                ],\n                                [\n                                    '401',\n                                    '201',\n                                    '401',\n                                    '201',\n                                    '401',\n                                    '201',\n                                    '201',\n                                    '401',\n                                    '201',\n                                    '404',\n                                    '201',\n                                    '200',\n                                    '201',\n                                    '201',\n                                    '404',\n                                    '401',\n                                ],\n                                [\n                                    '401',\n                                    '201',\n                                    '401',\n                                    '201',\n                                    '401',\n                                    '201',\n                                    '201',\n                                    '401',\n                                    '201',\n                                    '201',\n                                    '201',\n                                    '200',\n                                    '201',\n                                    '201',\n                                    '404',\n                                    '401',\n                                ],\n                            ],\n                        },\n                        meta: { totalCount: 20 },\n                    },\n                }}\n            />\n        }\n    />\n);\n","module.exports = require(\"@splunk/visualizations-shared/VisualizationDocPage\");"],"sourceRoot":""}