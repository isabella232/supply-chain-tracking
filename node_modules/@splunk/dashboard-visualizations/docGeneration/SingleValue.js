/*!
 * Copyright © 2018 Splunk Inc.
 * SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or
 * in part without a valid written license from Splunk Inc. is PROHIBITED.
 */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 58);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),

/***/ 1:
/***/ (function(module, exports) {

module.exports = require("@splunk/react-docs/DocExample");

/***/ }),

/***/ 10:
/***/ (function(module, exports) {

module.exports = require("@splunk/dashboard-visualizations/common/OptionsDoc");

/***/ }),

/***/ 11:
/***/ (function(module, exports) {

module.exports = require("@splunk/dashboard-visualizations/SingleValue");

/***/ }),

/***/ 12:
/***/ (function(module, exports) {

module.exports = require("@splunk/dashboard-visualizations/common/EncodingDoc");

/***/ }),

/***/ 14:
/***/ (function(module, exports) {

module.exports = require("@splunk/dashboard-visualizations/common/EventsDoc");

/***/ }),

/***/ 2:
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/schemaUtils");

/***/ }),

/***/ 58:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(0);
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);

// EXTERNAL MODULE: external "@splunk/dashboard-visualizations/SingleValue"
var SingleValue_ = __webpack_require__(11);
var SingleValue_default = /*#__PURE__*/__webpack_require__.n(SingleValue_);

// EXTERNAL MODULE: external "@splunk/visualizations-shared/VisualizationDocPage"
var VisualizationDocPage_ = __webpack_require__(9);
var VisualizationDocPage_default = /*#__PURE__*/__webpack_require__.n(VisualizationDocPage_);

// EXTERNAL MODULE: external "@splunk/dashboard-visualizations/common/EncodingDoc"
var EncodingDoc_ = __webpack_require__(12);
var EncodingDoc_default = /*#__PURE__*/__webpack_require__.n(EncodingDoc_);

// EXTERNAL MODULE: external "@splunk/dashboard-visualizations/common/EventsDoc"
var EventsDoc_ = __webpack_require__(14);
var EventsDoc_default = /*#__PURE__*/__webpack_require__.n(EventsDoc_);

// EXTERNAL MODULE: external "@splunk/dashboard-visualizations/common/OptionsDoc"
var OptionsDoc_ = __webpack_require__(10);
var OptionsDoc_default = /*#__PURE__*/__webpack_require__.n(OptionsDoc_);

// EXTERNAL MODULE: external "@splunk/react-docs/DocExample"
var DocExample_ = __webpack_require__(1);
var DocExample_default = /*#__PURE__*/__webpack_require__.n(DocExample_);

// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/Basic.jsx
/* harmony default export */ var Basic = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{}}\n        encoding={{}}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/FieldFoo.jsx
/* harmony default export */ var FieldFoo = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{}}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        ['1', '2', '3', '4', '5', '6', '7', '3200'],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: 'bar',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/FieldBar.jsx
/* harmony default export */ var FieldBar = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{}}\n        encoding={{\n            trend: 'primary.bar',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        ['1', '2', '3', '4', '5', '6', '7', '3200'],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: 'bar',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/BackgroundColor.jsx
/* harmony default export */ var BackgroundColor = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            backgroundColor: '#FF0000',\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/BackgroundColorWhite.jsx
/* harmony default export */ var BackgroundColorWhite = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            backgroundColor: '#ffffff',\n            unit: '%',\n            underLabel: 'test under label',\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/CustomFontSizes.jsx
/* harmony default export */ var CustomFontSizes = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            majorFontSize: 40,\n            deltaFontSize: 30,\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/NoSparkline.jsx
/* harmony default export */ var NoSparkline = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            showSparkline: false,\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/NoTrendIndicator.jsx
/* harmony default export */ var NoTrendIndicator = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            showTrendIndicator: false,\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/NoThousandSeparators.jsx
/* harmony default export */ var NoThousandSeparators = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            useThousandSeparators: false,\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/TrendModePercent.jsx
/* harmony default export */ var TrendModePercent = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            trendDisplayMode: 'percent',\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/Precision.jsx
/* harmony default export */ var Precision = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            numberPrecision: 2,\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/UnderLabel.jsx
/* harmony default export */ var UnderLabel = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            underLabel: 'Under Label Test',\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/UnitAfter.jsx
/* harmony default export */ var UnitAfter = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            unit: ' Total',\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/UnitBefore.jsx
/* harmony default export */ var UnitBefore = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            unit: '$',\n            unitPosition: 'before',\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/NoTrendUnit.jsx
/* harmony default export */ var NoTrendUnit = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{}}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '13200'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/TrendUnit.jsx
/* harmony default export */ var TrendUnit = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            useTrendUnits: true,\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '13200'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/SparklineBefore.jsx
/* harmony default export */ var SparklineBefore = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            sparklinePosition: 'before',\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/SparklineAfter.jsx
/* harmony default export */ var SparklineAfter = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            sparklinePosition: 'after',\n            showSparklineTooltip: true,\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/SparklineAreaGraph.jsx
/* harmony default export */ var SparklineAreaGraph = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            sparklineAreaGraph: true,\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/StrokeColor.jsx
/* harmony default export */ var StrokeColor = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            sparklineStrokeColor: '#FF0000',\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/FillColor.jsx
/* harmony default export */ var FillColor = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            sparklineFillColor: '#0000FF',\n            sparklineAreaGraph: true,\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/SparklineNull.jsx
/* harmony default export */ var SparklineNull = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{}}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '2', '3', '4', null, '6', '7', '32'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/SparklineNoNull.jsx
/* harmony default export */ var SparklineNoNull = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            sparklineAcceptNullData: false,\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '2', '3', '4', null, '6', '7', '32'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/SparklineHighlight.jsx
/* harmony default export */ var SparklineHighlight = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            sparklineHighlightSegments: 3,\n            sparklineHighlightDots: 4,\n            sparklineAreaGraph: true,\n        }}\n        encoding={{\n            trend: 'primary.foo',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/ColorDataSeries.jsx
/* harmony default export */ var ColorDataSeries = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{}}\n        encoding={{\n            trend: 'primary.foo',\n            fill: 'primary.bar',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '#FF0000',\n                            '#00FFFF',\n                            '#0000FF',\n                            '#800080',\n                            '#FFFF00',\n                            '#FFA500',\n                            '#A52A2A',\n                            '#008000',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: 'bar',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/ColorDataSeriesAreaGraph.jsx
/* harmony default export */ var ColorDataSeriesAreaGraph = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{\n            sparklineAreaGraph: true,\n            sparklineFillColor: '#FF0000',\n        }}\n        encoding={{\n            trend: 'primary.foo',\n            fill: 'primary.bar',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '#FF0000',\n                            '#00FFFF',\n                            '#0000FF',\n                            '#800080',\n                            '#FFFF00',\n                            '#FFA500',\n                            '#A52A2A',\n                            '#008000',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: 'bar',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/EncodingColumnIndex.jsx
/* harmony default export */ var EncodingColumnIndex = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{}}\n        encoding={{\n            trend: 'primary.foo',\n            fill: 'primary[1][2]',\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '#FF0000',\n                            '#00FFFF',\n                            '#0000FF',\n                            '#800080',\n                            '#FFFF00',\n                            '#FFA500',\n                            '#A52A2A',\n                            '#008000',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: 'bar',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/EncodingFormat.jsx
/* harmony default export */ var EncodingFormat = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{}}\n        encoding={{\n            trend: 'primary.foo',\n            fill: {\n                field: 'primary.foo',\n                format: {\n                    type: 'rangevalue',\n                    ranges: [\n                        {\n                            from: 5000,\n                            value: '#A52A2A',\n                        },\n                        {\n                            from: 1000,\n                            to: 5000,\n                            value: '#FFA500',\n                        },\n                        {\n                            from: 500,\n                            to: 1000,\n                            value: '#FFFF00',\n                        },\n                        {\n                            from: 100,\n                            to: 500,\n                            value: '#800080',\n                        },\n                        {\n                            from: 1,\n                            to: 100,\n                            value: '#0000FF',\n                        },\n                        {\n                            to: 1,\n                            value: '#000000',\n                        },\n                    ],\n                },\n            },\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '#FF0000',\n                            '#00FFFF',\n                            '#0000FF',\n                            '#800080',\n                            '#FFFF00',\n                            '#FFA500',\n                            '#A52A2A',\n                            '#008000',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: 'bar',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/EncodingFormatMatch.jsx
/* harmony default export */ var EncodingFormatMatch = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{}}\n        encoding={{\n            trend: 'primary.foo',\n            fill: {\n                field: 'primary.foo',\n                format: {\n                    type: 'matchvalue',\n                    matches: [\n                        {\n                            match: 'apple',\n                            value: '#FFA500',\n                        },\n                        {\n                            match: 'grape',\n                            value: '#FFFF00',\n                        },\n                        {\n                            match: 'pear',\n                            value: '#800080',\n                        },\n                        {\n                            match: 'strawberry',\n                            value: '#0000FF',\n                        },\n                        {\n                            match: 'cherry',\n                            value: '#A52A2A',\n                        },\n                    ],\n                    defaultValue: '#00FFFF',\n                },\n            },\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    columns: [\n                        [\n                            'banana',\n                            'apple',\n                            'grape',\n                            'pear',\n                            'strawberry',\n                            'raspberry',\n                            'blueberry',\n                            'cherry',\n                        ],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: { totalCount: 100 },\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/EncodingFormatColumnIndex.jsx
/* harmony default export */ var EncodingFormatColumnIndex = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{}}\n        encoding={{\n            trend: 'primary.foo',\n            fill: {\n                field: 'primary.foo[-3]',\n                format: {\n                    type: 'rangevalue',\n                    ranges: [\n                        {\n                            from: 5000,\n                            value: '#A52A2A',\n                        },\n                        {\n                            from: 1000,\n                            to: 5000,\n                            value: '#FFA500',\n                        },\n                        {\n                            from: 500,\n                            to: 1000,\n                            value: '#FFFF00',\n                        },\n                        {\n                            from: 100,\n                            to: 500,\n                            value: '#800080',\n                        },\n                        {\n                            from: 1,\n                            to: 100,\n                            value: '#0000FF',\n                        },\n                        {\n                            to: 1,\n                            value: '#000000',\n                        },\n                    ],\n                },\n            },\n        }}\n        dataSources={{\n            primary: {\n                data: {\n                    columns: [\n                        ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                        [\n                            '#FF0000',\n                            '#00FFFF',\n                            '#0000FF',\n                            '#800080',\n                            '#FFFF00',\n                            '#FFA500',\n                            '#A52A2A',\n                            '#008000',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: 'bar',\n                        },\n                    ],\n                },\n                meta: {},\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: /builds/devplat/vision/node_modules/raw-loader/dist/cjs.js!./src/visualizations/SingleValue/docs/examples/EncodingFormatMatchMajorColor.jsx
/* harmony default export */ var EncodingFormatMatchMajorColor = ("import React from 'react';\nimport SingleValue from '@splunk/dashboard-visualizations/SingleValue';\n\nexport default () => (\n    <SingleValue\n        options={{}}\n        encoding={{\n            trend: 'primary.foo',\n            majorColor: {\n                field: 'primary.foo',\n                format: {\n                    type: 'matchvalue',\n                    matches: [\n                        {\n                            match: 'apple',\n                            value: '#FFA500',\n                        },\n                        {\n                            match: 'grape',\n                            value: '#FFFF00',\n                        },\n                        {\n                            match: 'pear',\n                            value: '#800080',\n                        },\n                        {\n                            match: 'strawberry',\n                            value: '#0000FF',\n                        },\n                        {\n                            match: 'cherry',\n                            value: '#A52A2A',\n                        },\n                    ],\n                    defaultValue: '#00FFFF',\n                },\n            },\n        }}\n        dataSources={{\n            primary: {\n                requestParams: { offset: 0, count: 20 },\n                data: {\n                    columns: [\n                        [\n                            'banana',\n                            'apple',\n                            'grape',\n                            'pear',\n                            'strawberry',\n                            'raspberry',\n                            'blueberry',\n                            'cherry',\n                        ],\n                        [\n                            '2018-08-19T00:00:00.000+00:00',\n                            '2018-08-20T00:00:00.000+00:00',\n                            '2018-08-21T00:00:00.000+00:00',\n                            '2018-08-22T00:00:00.000+00:00',\n                            '2018-08-23T00:00:00.000+00:00',\n                            '2018-08-24T00:00:00.000+00:00',\n                            '2018-08-25T00:00:00.000+00:00',\n                            '2018-08-26T00:00:00.000+00:00',\n                        ],\n                    ],\n                    fields: [\n                        {\n                            name: 'foo',\n                        },\n                        {\n                            name: '_time',\n                        },\n                    ],\n                },\n                meta: { totalCount: 100 },\n            },\n        }}\n    />\n);\n");
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/Basic.jsx


/* harmony default export */ var examples_Basic = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {},
    encoding: {},
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
          fields: [{
            name: 'foo'
          }, {
            name: '_time'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/FieldFoo.jsx


/* harmony default export */ var examples_FieldFoo = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {},
    encoding: {
      trend: 'primary.foo'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['1', '2', '3', '4', '5', '6', '7', '3200']],
          fields: [{
            name: 'foo'
          }, {
            name: 'bar'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/FieldBar.jsx


/* harmony default export */ var examples_FieldBar = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {},
    encoding: {
      trend: 'primary.bar'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['1', '2', '3', '4', '5', '6', '7', '3200']],
          fields: [{
            name: 'foo'
          }, {
            name: 'bar'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/BackgroundColor.jsx


/* harmony default export */ var examples_BackgroundColor = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {
      backgroundColor: '#FF0000'
    },
    encoding: {
      trend: 'primary.foo'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
          fields: [{
            name: 'foo'
          }, {
            name: '_time'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/BackgroundColorWhite.jsx


/* harmony default export */ var examples_BackgroundColorWhite = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {
      backgroundColor: '#ffffff',
      unit: '%',
      underLabel: 'test under label'
    },
    encoding: {
      trend: 'primary.foo'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
          fields: [{
            name: 'foo'
          }, {
            name: '_time'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/CustomFontSizes.jsx


/* harmony default export */ var examples_CustomFontSizes = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {
      majorFontSize: 40,
      deltaFontSize: 30
    },
    encoding: {
      trend: 'primary.foo'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
          fields: [{
            name: 'foo'
          }, {
            name: '_time'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/NoSparkline.jsx


/* harmony default export */ var examples_NoSparkline = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {
      showSparkline: false
    },
    encoding: {
      trend: 'primary.foo'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
          fields: [{
            name: 'foo'
          }, {
            name: '_time'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/NoTrendIndicator.jsx


/* harmony default export */ var examples_NoTrendIndicator = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {
      showTrendIndicator: false
    },
    encoding: {
      trend: 'primary.foo'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
          fields: [{
            name: 'foo'
          }, {
            name: '_time'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/NoThousandSeparators.jsx


/* harmony default export */ var examples_NoThousandSeparators = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {
      useThousandSeparators: false
    },
    encoding: {
      trend: 'primary.foo'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
          fields: [{
            name: 'foo'
          }, {
            name: '_time'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/TrendModePercent.jsx


/* harmony default export */ var examples_TrendModePercent = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {
      trendDisplayMode: 'percent'
    },
    encoding: {
      trend: 'primary.foo'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
          fields: [{
            name: 'foo'
          }, {
            name: '_time'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/Precision.jsx


/* harmony default export */ var examples_Precision = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {
      numberPrecision: 2
    },
    encoding: {
      trend: 'primary.foo'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
          fields: [{
            name: 'foo'
          }, {
            name: '_time'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/UnderLabel.jsx


/* harmony default export */ var examples_UnderLabel = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {
      underLabel: 'Under Label Test'
    },
    encoding: {
      trend: 'primary.foo'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
          fields: [{
            name: 'foo'
          }, {
            name: '_time'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/UnitAfter.jsx


/* harmony default export */ var examples_UnitAfter = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {
      unit: ' Total'
    },
    encoding: {
      trend: 'primary.foo'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
          fields: [{
            name: 'foo'
          }, {
            name: '_time'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/UnitBefore.jsx


/* harmony default export */ var examples_UnitBefore = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {
      unit: '$',
      unitPosition: 'before'
    },
    encoding: {
      trend: 'primary.foo'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
          fields: [{
            name: 'foo'
          }, {
            name: '_time'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/NoTrendUnit.jsx


/* harmony default export */ var examples_NoTrendUnit = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {},
    encoding: {
      trend: 'primary.foo'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '13200'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
          fields: [{
            name: 'foo'
          }, {
            name: '_time'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/TrendUnit.jsx


/* harmony default export */ var examples_TrendUnit = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {
      useTrendUnits: true
    },
    encoding: {
      trend: 'primary.foo'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '13200'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
          fields: [{
            name: 'foo'
          }, {
            name: '_time'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/SparklineBefore.jsx


/* harmony default export */ var examples_SparklineBefore = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {
      sparklinePosition: 'before'
    },
    encoding: {
      trend: 'primary.foo'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
          fields: [{
            name: 'foo'
          }, {
            name: '_time'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/SparklineAfter.jsx


/* harmony default export */ var examples_SparklineAfter = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {
      sparklinePosition: 'after',
      showSparklineTooltip: true
    },
    encoding: {
      trend: 'primary.foo'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
          fields: [{
            name: 'foo'
          }, {
            name: '_time'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/SparklineAreaGraph.jsx


/* harmony default export */ var examples_SparklineAreaGraph = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {
      sparklineAreaGraph: true
    },
    encoding: {
      trend: 'primary.foo'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
          fields: [{
            name: 'foo'
          }, {
            name: '_time'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/StrokeColor.jsx


/* harmony default export */ var examples_StrokeColor = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {
      sparklineStrokeColor: '#FF0000'
    },
    encoding: {
      trend: 'primary.foo'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
          fields: [{
            name: 'foo'
          }, {
            name: '_time'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/FillColor.jsx


/* harmony default export */ var examples_FillColor = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {
      sparklineFillColor: '#0000FF',
      sparklineAreaGraph: true
    },
    encoding: {
      trend: 'primary.foo'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
          fields: [{
            name: 'foo'
          }, {
            name: '_time'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/SparklineNull.jsx


/* harmony default export */ var examples_SparklineNull = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {},
    encoding: {
      trend: 'primary.foo'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '2', '3', '4', null, '6', '7', '32'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
          fields: [{
            name: 'foo'
          }, {
            name: '_time'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/SparklineNoNull.jsx


/* harmony default export */ var examples_SparklineNoNull = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {
      sparklineAcceptNullData: false
    },
    encoding: {
      trend: 'primary.foo'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '2', '3', '4', null, '6', '7', '32'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
          fields: [{
            name: 'foo'
          }, {
            name: '_time'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/SparklineHighlight.jsx


/* harmony default export */ var examples_SparklineHighlight = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {
      sparklineHighlightSegments: 3,
      sparklineHighlightDots: 4,
      sparklineAreaGraph: true
    },
    encoding: {
      trend: 'primary.foo'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
          fields: [{
            name: 'foo'
          }, {
            name: '_time'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/ColorDataSeries.jsx


/* harmony default export */ var examples_ColorDataSeries = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {},
    encoding: {
      trend: 'primary.foo',
      fill: 'primary.bar'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['#FF0000', '#00FFFF', '#0000FF', '#800080', '#FFFF00', '#FFA500', '#A52A2A', '#008000']],
          fields: [{
            name: 'foo'
          }, {
            name: 'bar'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/ColorDataSeriesAreaGraph.jsx


/* harmony default export */ var examples_ColorDataSeriesAreaGraph = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {
      sparklineAreaGraph: true,
      sparklineFillColor: '#FF0000'
    },
    encoding: {
      trend: 'primary.foo',
      fill: 'primary.bar'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['#FF0000', '#00FFFF', '#0000FF', '#800080', '#FFFF00', '#FFA500', '#A52A2A', '#008000']],
          fields: [{
            name: 'foo'
          }, {
            name: 'bar'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/EncodingColumnIndex.jsx


/* harmony default export */ var examples_EncodingColumnIndex = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {},
    encoding: {
      trend: 'primary.foo',
      fill: 'primary[1][2]'
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['#FF0000', '#00FFFF', '#0000FF', '#800080', '#FFFF00', '#FFA500', '#A52A2A', '#008000']],
          fields: [{
            name: 'foo'
          }, {
            name: 'bar'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/EncodingFormat.jsx


/* harmony default export */ var examples_EncodingFormat = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {},
    encoding: {
      trend: 'primary.foo',
      fill: {
        field: 'primary.foo',
        format: {
          type: 'rangevalue',
          ranges: [{
            from: 5000,
            value: '#A52A2A'
          }, {
            from: 1000,
            to: 5000,
            value: '#FFA500'
          }, {
            from: 500,
            to: 1000,
            value: '#FFFF00'
          }, {
            from: 100,
            to: 500,
            value: '#800080'
          }, {
            from: 1,
            to: 100,
            value: '#0000FF'
          }, {
            to: 1,
            value: '#000000'
          }]
        }
      }
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['#FF0000', '#00FFFF', '#0000FF', '#800080', '#FFFF00', '#FFA500', '#A52A2A', '#008000']],
          fields: [{
            name: 'foo'
          }, {
            name: 'bar'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/EncodingFormatMatch.jsx


/* harmony default export */ var examples_EncodingFormatMatch = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {},
    encoding: {
      trend: 'primary.foo',
      fill: {
        field: 'primary.foo',
        format: {
          type: 'matchvalue',
          matches: [{
            match: 'apple',
            value: '#FFA500'
          }, {
            match: 'grape',
            value: '#FFFF00'
          }, {
            match: 'pear',
            value: '#800080'
          }, {
            match: 'strawberry',
            value: '#0000FF'
          }, {
            match: 'cherry',
            value: '#A52A2A'
          }],
          defaultValue: '#00FFFF'
        }
      }
    },
    dataSources: {
      primary: {
        requestParams: {
          offset: 0,
          count: 20
        },
        data: {
          columns: [['banana', 'apple', 'grape', 'pear', 'strawberry', 'raspberry', 'blueberry', 'cherry'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
          fields: [{
            name: 'foo'
          }, {
            name: '_time'
          }]
        },
        meta: {
          totalCount: 100
        }
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/EncodingFormatColumnIndex.jsx


/* harmony default export */ var examples_EncodingFormatColumnIndex = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {},
    encoding: {
      trend: 'primary.foo',
      fill: {
        field: 'primary.foo[-3]',
        format: {
          type: 'rangevalue',
          ranges: [{
            from: 5000,
            value: '#A52A2A'
          }, {
            from: 1000,
            to: 5000,
            value: '#FFA500'
          }, {
            from: 500,
            to: 1000,
            value: '#FFFF00'
          }, {
            from: 100,
            to: 500,
            value: '#800080'
          }, {
            from: 1,
            to: 100,
            value: '#0000FF'
          }, {
            to: 1,
            value: '#000000'
          }]
        }
      }
    },
    dataSources: {
      primary: {
        data: {
          columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['#FF0000', '#00FFFF', '#0000FF', '#800080', '#FFFF00', '#FFA500', '#A52A2A', '#008000']],
          fields: [{
            name: 'foo'
          }, {
            name: 'bar'
          }]
        },
        meta: {}
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/examples/EncodingFormatMatchMajorColor.jsx


/* harmony default export */ var examples_EncodingFormatMatchMajorColor = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(SingleValue_default.a, {
    options: {},
    encoding: {
      trend: 'primary.foo',
      majorColor: {
        field: 'primary.foo',
        format: {
          type: 'matchvalue',
          matches: [{
            match: 'apple',
            value: '#FFA500'
          }, {
            match: 'grape',
            value: '#FFFF00'
          }, {
            match: 'pear',
            value: '#800080'
          }, {
            match: 'strawberry',
            value: '#0000FF'
          }, {
            match: 'cherry',
            value: '#A52A2A'
          }],
          defaultValue: '#00FFFF'
        }
      }
    },
    dataSources: {
      primary: {
        requestParams: {
          offset: 0,
          count: 20
        },
        data: {
          columns: [['banana', 'apple', 'grape', 'pear', 'strawberry', 'raspberry', 'blueberry', 'cherry'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
          fields: [{
            name: 'foo'
          }, {
            name: '_time'
          }]
        },
        meta: {
          totalCount: 100
        }
      }
    }
  });
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/definition.js
/* harmony default export */ var definition = ({
  encoding: [{
    name: 'trend',
    type: '[number | string]',
    desc: 'Specify the dataSource applied to the single value.',
    defaultValue: 'primary[0]',
    isRequired: 'true'
  }, {
    name: 'fill',
    type: '[string]',
    desc: "Specify the dataSource applied to the background color of the single value.\n                   Note: This overrides any specified background color if backgroundColor is specified.",
    isRequired: 'false'
  }, {
    name: 'majorColor',
    type: '[string]',
    desc: "Specify the dataSource applied to the font color of the single value.",
    isRequired: 'false'
  }, {
    name: 'deltaColor',
    type: '[string]',
    desc: "Specify the dataSource applied to the color of the trend indicator and trend value in the single value.",
    isRequired: 'false'
  }],
  events: [{
    name: 'value.click',
    desc: 'trigger when user clicks major value'
  }]
});
// EXTERNAL MODULE: external "@splunk/visualizations-shared/schemaUtils"
var schemaUtils_ = __webpack_require__(2);

// CONCATENATED MODULE: ./src/visualizations/SingleValue/optionsSchema.js

/* harmony default export */ var optionsSchema = ({
  unit: {
    description: 'Specify text to show next to the major value.',
    type: 'string'
  },
  unitPosition: {
    default: 'after',
    description: 'Specify whether the unit text should appear before or after the major value.',
    pattern: Object(schemaUtils_["getPattern"])(['before', 'after']),
    type: 'string'
  },
  underLabel: {
    description: 'Specify the text that appears below the major value.',
    type: 'string'
  },
  backgroundColor: {
    description: 'Specify the color to use for the background. The hex value format should be #FFFFFF. The default for light mode is "#FFFFFF". The default for dark mode is "#171d21". The default for prisma dark is "#0b0c0e".',
    pattern: schemaUtils_["COLOR_OR_TOKEN_PATTERN"],
    type: 'string'
  },
  showTrendIndicator: {
    default: true,
    description: 'Specify whether to show or hide the trend indicator.',
    type: 'boolean'
  },
  useTrendUnits: {
    default: false,
    description: 'Specify whether to truncate the trend value to 2 significant digits. A magnitude unit will be displayed.',
    type: 'boolean'
  },
  showSparkline: {
    default: true,
    description: 'Specify whether to show or hide the single value sparkline.',
    type: 'boolean'
  },
  sparklinePosition: {
    default: 'below',
    description: 'Specify the location to display a sparkline.',
    pattern: Object(schemaUtils_["getPattern"])(['before', 'after', 'below']),
    type: 'string'
  },
  sparklineFillColor: {
    default: '#6F7A87',
    description: 'Specify a color to use as the fill for the sparkline graph. The hex value format should be #FFFFFF.',
    pattern: schemaUtils_["COLOR_OR_TOKEN_PATTERN"],
    type: 'string'
  },
  sparklineStrokeColor: {
    default: '#2F353C',
    description: 'Specify a color to use for the sparkline stroke. The hex value format should be #FFFFFF.',
    pattern: schemaUtils_["COLOR_OR_TOKEN_PATTERN"],
    type: 'string'
  },
  showSparklineTooltip: {
    default: false,
    description: 'Show a tooltip to display values on the sparkline.',
    type: 'boolean'
  },
  sparklineAreaGraph: {
    default: false,
    description: 'Specify whether to show the sparkline as an area graph rather than a line.',
    type: 'boolean'
  },
  sparklineAcceptNullData: {
    default: true,
    description: 'Specify whether to convert null and non-numeric values in the sparkline to 0.',
    type: 'boolean'
  },
  sparklineHighlightSegments: {
    default: 0,
    description: 'Specify the number of segments to be highlighted at the top of a sparkline area graph.',
    type: 'number'
  },
  sparklineHighlightDots: {
    default: 0,
    description: 'Specify the number of markers, or dots, to display at the top of a sparkline area graph.',
    type: 'number'
  },
  trendDisplayMode: {
    default: 'absolute',
    description: 'Specify whether the trend value is displayed as a percentage or an absolute count.',
    pattern: Object(schemaUtils_["getPattern"])(['percent', 'absolute']),
    type: 'string'
  },
  numberPrecision: {
    default: 0,
    maximum: 20,
    minimum: 0,
    description: 'Specify the number of decimal places to display. For example, to display 3 decimal places, use a value of 3. The maximum value is 20.',
    type: 'number'
  },
  useThousandSeparators: {
    default: true,
    description: 'Specify whether numeric values use commas as thousandths separaters.',
    type: 'boolean'
  },
  majorFontSize: {
    description: 'Specify the font size (px) for the major value. By default the major value font size is calculated dynamically based on the available space.',
    type: 'number'
  },
  deltaFontSize: {
    description: 'Specify the font size (px) for the delta value. By default the delta value font size is calculated dynamically based on the available space.',
    type: 'number'
  }
});
// CONCATENATED MODULE: ./src/visualizations/SingleValue/docs/index.jsx







































































/* harmony default export */ var docs = __webpack_exports__["default"] = (function () {
  return /*#__PURE__*/external_react_default.a.createElement(VisualizationDocPage_default.a, {
    title: "Dashboard Single Value",
    description: "Wrapper around the Single Value Standard visualization that maps a datasource to values to display. This visualization has been upgraded in @splunk/visualizations/SingleValue and may be used in UDF.",
    examplesSection: [/*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Basic Single Value",
      key: "basic",
      code: Basic,
      example: examples_Basic
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Encoding Field is foo",
      key: "fieldfoo",
      code: FieldFoo,
      example: examples_FieldFoo
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Encoding Field is bar",
      key: "fieldbar",
      code: FieldBar,
      example: examples_FieldBar
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Basic Single Value. Background Color is red",
      key: "backgroundcolor",
      code: BackgroundColor,
      example: examples_BackgroundColor
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Basic Single Value. Background Color is white",
      key: "backgroundcolorwhite",
      code: BackgroundColorWhite,
      example: examples_BackgroundColorWhite
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Major Font Size is 40, Delta Font Size is 30",
      key: "customfontsizes",
      code: CustomFontSizes,
      example: examples_CustomFontSizes
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Sparkline is disabled",
      key: "nosparkline",
      code: NoSparkline,
      example: examples_NoSparkline
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Trend Indicator is disabled",
      key: "notrendindicator",
      code: NoTrendIndicator,
      example: examples_NoTrendIndicator
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Thousand Separators is disabled",
      key: "nothousandseparators",
      code: NoThousandSeparators,
      example: examples_NoThousandSeparators
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Trend Display Mode is percent",
      key: "trendmodepercent",
      code: TrendModePercent,
      example: examples_TrendModePercent
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Trend Display Unit is disabled, default",
      key: "notrendunit",
      code: NoTrendUnit,
      example: examples_NoTrendUnit
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Trend Display Unit is enabled",
      key: "trendunit",
      code: TrendUnit,
      example: examples_TrendUnit
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Precision is 2",
      key: "precision",
      code: Precision,
      example: examples_Precision
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Under Label is specified",
      key: "underlabel",
      code: UnderLabel,
      example: examples_UnderLabel
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Unit is specified, Unit Position is after, default",
      key: "unitafter",
      code: UnitAfter,
      example: examples_UnitAfter
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Unit is specified, Unit Position is before",
      key: "unitbefore",
      code: UnitBefore,
      example: examples_UnitBefore
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Sparkline Position is before values",
      key: "sparklinebefore",
      code: SparklineBefore,
      example: examples_SparklineBefore
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Sparkline Position is after values, Sparkline Tooltip is on",
      key: "sparklineafter",
      code: SparklineAfter,
      example: examples_SparklineAfter
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Sparkline Area Graph is true",
      key: "SparklineAreaGraph",
      code: SparklineAreaGraph,
      example: examples_SparklineAreaGraph
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Sparkline Stroke Color is red",
      key: "strokecolor",
      code: StrokeColor,
      example: examples_StrokeColor
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Sparkline Fill Color is blue",
      key: "fillcolor",
      code: FillColor,
      example: examples_FillColor
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Sparkline Accept Null is enabled, default",
      key: "sparklinenull",
      code: SparklineNull,
      example: examples_SparklineNull
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Sparkline Accept Null is disabled",
      key: "sparklinenonull",
      code: SparklineNoNull,
      example: examples_SparklineNoNull
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Sparkline Highlight Segments is 3, Sparkline Highlight Dots is 4",
      key: "sparklinehighlight",
      code: SparklineHighlight,
      example: examples_SparklineHighlight
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Color data series specified",
      key: "colordataseries",
      code: ColorDataSeries,
      example: examples_ColorDataSeries
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Color data series specified, Sparkline Area Graph is true, Sparkline Fill Color is red",
      key: "colordataseriesareagraph",
      code: ColorDataSeriesAreaGraph,
      example: examples_ColorDataSeriesAreaGraph
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Encoding column index specified",
      key: "encodingcolumnindex",
      code: EncodingColumnIndex,
      example: examples_EncodingColumnIndex
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Encoding format specified",
      key: "encodingformat",
      code: EncodingFormat,
      example: examples_EncodingFormat
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Encoding format specified, match formatter used for fill color",
      key: "encodingformatmatch",
      code: EncodingFormatMatch,
      example: examples_EncodingFormatMatch
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Encoding format column index specified",
      key: "encodingformatcolumnindex",
      code: EncodingFormatColumnIndex,
      example: examples_EncodingFormatColumnIndex
    }), /*#__PURE__*/external_react_default.a.createElement(DocExample_default.a, {
      title: "Encoding format specified, match formatter used for majorColor",
      key: "encodingformatmatchmajorcolor",
      code: EncodingFormatMatchMajorColor,
      example: examples_EncodingFormatMatchMajorColor
    })],
    encodingSection: /*#__PURE__*/external_react_default.a.createElement(EncodingDoc_default.a, {
      encoding: definition.encoding
    }),
    optionSection: /*#__PURE__*/external_react_default.a.createElement(OptionsDoc_default.a, {
      options: optionsSchema
    }),
    eventSection: /*#__PURE__*/external_react_default.a.createElement(EventsDoc_default.a, {
      events: definition.events,
      Visualization: SingleValue_default.a,
      encoding: {},
      dsState: {
        primary: {
          data: {
            columns: [['1', '62', '103', '308', '587', '876', '930', '1320'], ['2018-08-19T00:00:00.000+00:00', '2018-08-20T00:00:00.000+00:00', '2018-08-21T00:00:00.000+00:00', '2018-08-22T00:00:00.000+00:00', '2018-08-23T00:00:00.000+00:00', '2018-08-24T00:00:00.000+00:00', '2018-08-25T00:00:00.000+00:00', '2018-08-26T00:00:00.000+00:00']],
            fields: [{
              name: 'foo'
            }, {
              name: '_time'
            }]
          },
          meta: {}
        }
      }
    })
  });
});

/***/ }),

/***/ 9:
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/VisualizationDocPage");

/***/ })

/******/ });
//# sourceMappingURL=SingleValue.js.map