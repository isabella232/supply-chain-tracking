{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@splunk/ui-utils/i18n\"","webpack:///external \"@splunk/visualizations-shared/schemaUtils\"","webpack:///external \"react\"","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"@babel/runtime/helpers/getPrototypeOf\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"@splunk/dashboard-visualizations/common/BaseVisualization\"","webpack:///external \"@babel/runtime/helpers/inherits\"","webpack:///external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack:///external \"@babel/runtime/helpers/extends\"","webpack:///external \"@splunk/dashboard-visualizations/common/IconPlaceholder\"","webpack:///external \"@splunk/dashboard-visualizations/common/VisualizationEvent\"","webpack:///external \"@splunk/dashboard-visualizations/utils/enhancer\"","webpack:///external \"@splunk/visualization-themes/variables\"","webpack:///external \"@splunk/visualization-icons\"","webpack:///external \"lodash/get\"","webpack:///external \"@babel/runtime/helpers/toConsumableArray\"","webpack:///external \"@splunk/dashboard-visualizations/utils/dataUtils\"","webpack:///./src/utils/eventUtils.js","webpack:///external \"lodash/zip\"","webpack:///external \"@splunk/visualizations-shared/themeUtils\"","webpack:///external \"@splunk/visualizations-shared/simpleXMLOptions\"","webpack:///./src/utils/themeUtils.js","webpack:///./src/common/editorConfig/Axes.js","webpack:///./src/common/editorConfig/Legend.js","webpack:///external \"lodash/isEqual\"","webpack:///external \"lodash/findIndex\"","webpack:///external \"lodash/omit\"","webpack:///./src/utils/DataSet.js","webpack:///external \"lodash/isString\"","webpack:///external \"lodash/zipObject\"","webpack:///external \"@splunk/visualizations-shared/console\"","webpack:///./src/utils/propUtils.js","webpack:///external \"lodash/isPlainObject\"","webpack:///external \"@splunk/react-icons/BarBeside\"","webpack:///external \"@splunk/react-icons/BarStacked\"","webpack:///external \"@splunk/react-icons/BarStacked100\"","webpack:///external \"@splunk/visualization-encoding-parsers/ColumnParser\"","webpack:///external \"@splunk/react-visualizations/Column\"","webpack:///./src/visualizations/Column/optionsSchema.js","webpack:///./src/visualizations/Column/editorConfig.js","webpack:///./src/visualizations/Column/Column.jsx"],"names":["getClickHandler","eventName","onEventTrigger","originalEvent","payload","type","enableClickHandler","mode","axes","label","_","layout","option","editor","legend","editorProps","values","value","DataSet","fields","columns","isString","name","field","results","zipObject","rows","zip","index","findIndex","isEqual","dataSet","fieldList","rowSample","col","row","dataSourceType","data","get","annotationCategoryColor","annotationLabelEncoding","annotationColorEncoding","isPlainObject","annotationLabel","annotationColor","annotationObj","console","JSON","Array","Object","default","minimum","description","pattern","getPattern","enum","backgroundColor","fontColor","foregroundColor","seriesColors","items","fieldColors","columnGrouping","lineWidth","editorConfig","icon","ColumnComponent","dataSources","encoding","options","width","height","style","theme","hasEventHandlers","themeKey","getChartingThemeKey","columnProps","parse","truncationLimit","truncateParsedData","getAnnotationLabelAndColor","onPointClick","evt","onLegendClick","onRangeSelect","getPropsForSimpleXMLOptions","omit","BaseVisualization","propTypes","defaultProps","dataContract","initialDimension","optionsSchema","defaultBackgroundColor","enterprise","placeholder"],"mappings":"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","file":"Column.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 146);\n","module.exports = require(\"@splunk/ui-utils/i18n\");","module.exports = require(\"@splunk/visualizations-shared/schemaUtils\");","module.exports = require(\"react\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@splunk/dashboard-visualizations/common/BaseVisualization\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/extends\");","module.exports = require(\"@splunk/dashboard-visualizations/common/IconPlaceholder\");","module.exports = require(\"@splunk/dashboard-visualizations/common/VisualizationEvent\");","module.exports = require(\"@splunk/dashboard-visualizations/utils/enhancer\");","module.exports = require(\"@splunk/visualization-themes/variables\");","module.exports = require(\"@splunk/visualization-icons\");","module.exports = require(\"lodash/get\");","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"@splunk/dashboard-visualizations/utils/dataUtils\");","import VisualizationEvent from '@splunk/dashboard-visualizations/common/VisualizationEvent';\n\nexport const getClickHandler = (onEventTrigger, data, eventName = 'value.click') =>\n    typeof onEventTrigger === 'function' &&\n    (e =>\n        onEventTrigger(new VisualizationEvent({ originalEvent: e, payload: { ...data }, type: eventName })));\n\nexport const enableClickHandler = (hasEventHandlers, mode) => !!hasEventHandlers && mode === 'view';\n","module.exports = require(\"lodash/zip\");","module.exports = require(\"@splunk/visualizations-shared/themeUtils\");","module.exports = require(\"@splunk/visualizations-shared/simpleXMLOptions\");","export { getChartingThemeKey } from '@splunk/visualizations-shared/themeUtils';\n","import { _ } from '@splunk/ui-utils/i18n';\n\nconst axes = {\n    label: _('Axes'),\n    layout: [\n        [\n            {\n                label: _('X Axis title'),\n                option: 'axisTitleX.text',\n                editor: 'editor.text',\n            },\n        ],\n        [\n            {\n                label: _('Y Axis title'),\n                option: 'axisTitleY.text',\n                editor: 'editor.text',\n            },\n        ],\n    ],\n};\n\nexport default axes;\n","import { _ } from '@splunk/ui-utils/i18n';\n\nconst legend = {\n    label: _('Legend'),\n    layout: [\n        [\n            {\n                label: _('Position'),\n                option: 'legend.placement',\n                editor: 'editor.select',\n                editorProps: {\n                    values: [\n                        { label: _('Right'), value: 'right' },\n                        { label: _('Left'), value: 'left' },\n                        { label: _('Top'), value: 'top' },\n                        { label: _('Bottom'), value: 'bottom' },\n                        { label: _('None'), value: 'none' },\n                    ],\n                },\n            },\n        ],\n        [\n            {\n                label: _('Truncation'),\n                option: 'legend.labelStyle.overflowMode',\n                editor: 'editor.radioBar',\n                editorProps: {\n                    values: [\n                        { label: _('A...'), value: 'ellipsisEnd' },\n                        { label: _('A...Z'), value: 'ellipsisMiddle' },\n                        { label: _('...Z'), value: 'ellipsisStart' },\n                        { label: _('Off'), value: 'ellipsisNone' },\n                    ],\n                },\n            },\n        ],\n    ],\n};\n\nexport default legend;\n","module.exports = require(\"lodash/isEqual\");","module.exports = require(\"lodash/findIndex\");","module.exports = require(\"lodash/omit\");","import isEqual from 'lodash/isEqual';\nimport isString from 'lodash/isString';\nimport zip from 'lodash/zip';\nimport zipObject from 'lodash/zipObject';\nimport findIndex from 'lodash/findIndex';\n\n/**\n * @file\n * DataSet represent a set of 2 dimensional data\n */\nexport default class DataSet {\n    constructor(fields = [], columns = []) {\n        this.fields = fields.map(field => {\n            if (isString(field)) {\n                return {\n                    name: field,\n                };\n            }\n            return field;\n        });\n        this.columns = columns;\n    }\n\n    /**\n     * Returns a empty Dataset\n     *\n     * Examples:\n     * ```js\n     * const empty = DataSet.empty();\n     * ```\n     * @return {DataSet} DataSet\n     * @public\n     */\n    static empty() {\n        return new DataSet();\n    }\n\n    /**\n     * Construct a Dataset with data in json array format\n     *\n     * Examples:\n     * ```js\n     *  const dataset = DataSet.fromJSONArray(\n     *     [{ name: 'x' }, { name: 'y' }, { name: 'z' }],\n     *     [{ x: 'a', y: 4, z: 70 }, { x: 'b', y: 5, z: 80 }, { x: 'c', y: 6, z: 90 }]\n     *  );\n     * ```\n     * @return {DataSet} DataSet\n     * @public\n     */\n    static fromJSONArray(fields = [], results = []) {\n        let fieldList = fields;\n        if (fieldList == null || fieldList.length === 0) {\n            if (results.length > 0) {\n                const rowSample = results[0];\n                fieldList = Object.keys(rowSample).map(field => ({ name: field }));\n            } else {\n                fieldList = [];\n            }\n        }\n\n        const columns = fieldList.map(({ name }) =>\n            results.reduce((col, row) => {\n                // if a field is not present on a result entry we set it to null\n                col.push(row[name] === undefined ? null : row[name]);\n                return col;\n            }, [])\n        );\n\n        return new DataSet(fieldList, columns);\n    }\n\n    /**\n     * Construct a Dataset with data in json columns format\n     *\n     * Examples:\n     * ```js\n     *  const dataset = DataSet.fromJSONCols(\n     *     [{ name: 'x' }, { name: 'y' }, { name: 'z' }],\n     *     [['a', 'b', 'c'], [4, 5, 6], [70, 80, 90]];\n     *  );\n     * ```\n     * @return {DataSet} DataSet\n     * @public\n     */\n    static fromJSONCols(fields = [], columns = []) {\n        return new DataSet(fields, columns);\n    }\n\n    /**\n     * Construct a Dataset with data in json rows format\n     *\n     * Examples:\n     * ```js\n     *  const dataset = DataSet.fromJSONRows(\n     *     [{ name: 'x' }, { name: 'y' }, { name: 'z' }],\n     *     [['a', 4, 70], ['b', 5, 80], ['c', 6, 90]];\n     *  );\n     * ```\n     * @return {DataSet} DataSet\n     * @public\n     */\n    static fromJSONRows(fields = [], rows = []) {\n        return new DataSet(fields, zip(...rows));\n    }\n\n    /**\n     * Convert data to json array\n     * @return {Object} data in json array format\n     * @public\n     */\n    toJSONArray() {\n        return {\n            fields: this.fields,\n            results: zip(...this.columns).map(row =>\n                zipObject(\n                    this.fields.map(field => field.name),\n                    row\n                )\n            ),\n        };\n    }\n\n    /**\n     * Convert data to json columns\n     * @return {Object} data in json columns format\n     * @public\n     */\n    toJSONCols() {\n        const { fields, columns } = this;\n\n        return { fields, columns };\n    }\n\n    /**\n     * Convert data to json rows\n     * @return {Object} data in json rows format\n     * @public\n     */\n    toJSONRows() {\n        return {\n            fields: this.fields,\n            rows: zip(...this.columns),\n        };\n    }\n\n    /**\n     * List all fields\n     * @return {Object} fields array\n     * @public\n     */\n    getFields() {\n        return this.fields;\n    }\n\n    /**\n     * List data columns\n     * @return {Object} columns array\n     * @public\n     */\n    getColumns() {\n        return this.columns;\n    }\n\n    /**\n     *\n     * @param {String} fieldName\n     * @return {Object} column data\n     * @public\n     */\n    getColumnByField(fieldName) {\n        const index = findIndex(this.fields, ({ name }) => name === fieldName);\n        return this.columns[index];\n    }\n\n    /**\n     *\n     * @param {String} fieldName\n     * @return {Boolean}\n     * @public\n     */\n    hasField(fieldName) {\n        return findIndex(this.fields, ({ name }) => name === fieldName) !== -1;\n    }\n\n    /**\n     * @return {Boolean} true if DataSet has no data\n     * @public\n     */\n    isEmpty() {\n        return this.columns.length === 0;\n    }\n\n    /**\n     *\n     * @param {DataSet} dataSet DataSet to compare\n     * @return {Boolean} true if another dataset is equals to current one\n     * @public\n     */\n    equals(dataSet) {\n        return isEqual(this.fields, dataSet.fields) && isEqual(this.columns, dataSet.columns);\n    }\n}\n","module.exports = require(\"lodash/isString\");","module.exports = require(\"lodash/zipObject\");","module.exports = require(\"@splunk/visualizations-shared/console\");","import get from 'lodash/get';\nimport isPlainObject from 'lodash/isPlainObject';\nimport console from '@splunk/visualizations-shared/console';\nimport DataSet from './DataSet';\n\n// Todo: can be removed/refactored in the future if we have data contract parser for all visualizations\n// Some functions are still used by Gauges, we can remove them when gauges have been refreshed.\n/**\n * Returns a dataset instance based on data from props\n * @param {object} vizProps\n * @param {string} [dataSourceType='primary']\n * @returns {DataSet}\n */\nexport function getDataSet(vizProps, dataSourceType = 'primary') {\n    const data = get(vizProps, ['dataSources', dataSourceType, 'data']);\n    return data ? new DataSet(data.fields, data.columns) : null;\n}\n\n/**\n * Returns the request parameters for a dataSourceType in vizProps\n * @param {object} dataSourcesProps\n * @param {string} [dataSourceType='primary']\n * @returns {object}\n */\nexport function getRequestParams(vizProps, dataSourceType = 'primary') {\n    return get(vizProps, ['dataSources', dataSourceType, 'requestParams']);\n}\n\n/**\n * Returns the meta data for a dataSourceType in vizProps\n * @param {object} vizProps\n * @param {string} [dataSourceType='primary']\n * @returns {object}\n */\nexport function getMeta(vizProps, dataSourceType = 'primary') {\n    return get(vizProps, ['dataSources', dataSourceType, 'meta'], {});\n}\n\n/**\n * Returns the annotation label and color as arrays\n * If annotation.categoryColors is defined with labels, as an object in options, such as {\"Server Stop\":\"#FF0000\",\"Server Start\":\"00FF00\"},\n * parse annotation color and labels from options, otherwise from encoding.\n * @param {Object} input\n * @param {(Object|String)} input.annotationCategoryColor  annotation.categoryColors option\n * @param {Array} input.annotationLabelEncoding\n * @param {Array} input.annotationColorEncoding\n * @returns {Object} annotation\n * @returns {Array} annotation.annotationLabel\n * @returns {Array} annotation.annotationColor\n */\nexport function getAnnotationLabelAndColor({\n    annotationCategoryColor,\n    annotationLabelEncoding,\n    annotationColorEncoding,\n}) {\n    if (!isPlainObject(annotationCategoryColor) && typeof annotationCategoryColor !== 'string') {\n        return {\n            annotationLabel: annotationLabelEncoding,\n            annotationColor: annotationColorEncoding,\n        };\n    }\n\n    let annotationObj = annotationCategoryColor;\n\n    if (typeof annotationCategoryColor === 'string') {\n        console.warn(`The option type 'string' for 'annotation.categoryColors' has been deprecated.`);\n        try {\n            annotationObj = JSON.parse(annotationCategoryColor);\n        } catch (e) {\n            console.warn(`'annotation.categoryColors' option is not a valid JSON string.`);\n            return {\n                annotationLabel: annotationLabelEncoding,\n                annotationColor: annotationColorEncoding,\n            };\n        }\n    }\n\n    // If no annotationLabel is defined in encoding, generate a sequence of annotationLabel from the keys of annotation.categoryColor option.\n    const annotationLabel =\n        annotationLabelEncoding && Array.isArray(annotationLabelEncoding)\n            ? annotationLabelEncoding\n            : Object.keys(annotationObj);\n\n    // If annotationColor encoding and annotation.categoryColors option are both defined, take the colors defined in color option,\n    // and the remaining colors from the encoding if they are not defined in option.\n    // Or if annotationColor encoding is not defined, use annotation.categoryColors option to generate a color array.\n    let annotationColor;\n    if (annotationColorEncoding && Array.isArray(annotationColorEncoding)) {\n        annotationColor = [...annotationColorEncoding];\n        annotationLabel.forEach((label, i) => {\n            if (annotationObj[label]) {\n                annotationColor[i] = annotationObj[label];\n            }\n        });\n    } else {\n        annotationColor = annotationLabel.map(label => annotationObj[label]);\n    }\n\n    return {\n        annotationLabel,\n        annotationColor,\n    };\n}\n","module.exports = require(\"lodash/isPlainObject\");","module.exports = require(\"@splunk/react-icons/BarBeside\");","module.exports = require(\"@splunk/react-icons/BarStacked\");","module.exports = require(\"@splunk/react-icons/BarStacked100\");","module.exports = require(\"@splunk/visualization-encoding-parsers/ColumnParser\");","module.exports = require(\"@splunk/react-visualizations/Column\");","import { COLOR_OR_TOKEN_PATTERN, getPattern } from '@splunk/visualizations-shared/schemaUtils';\n\nexport default {\n    'axisLabelsX.maxLabelParts': {\n        default: 3,\n        minimum: 1,\n        description:\n            'Specify the maximum number of time-parts that a tick label will have (the 3 possible parts are year, month, time).',\n        type: 'number',\n    },\n    'annotation.categoryColors': {\n        description: `Specify mapping of Hex code for colors to annotation categories. For example: {'Server Stop':'#FF0000','Server Start':'00FF00'}. Note: Option type 'string' has been deprecated.`,\n        type: ['object', 'string'],\n    },\n    'axisLabelsX.axisVisibility': {\n        default: 'hide',\n        description: 'Specify whether to show the x-axis.',\n        pattern: getPattern(['show', 'hide']),\n        type: 'string',\n    },\n    'axisLabelsY.axisVisibility': {\n        default: 'hide',\n        description: 'Specify whether the y-axis line is visible.',\n        pattern: getPattern(['show', 'hide']),\n        type: 'string',\n    },\n    'axisLabelsY2.axisVisibility': {\n        default: 'hide',\n        description: 'Specify whether the y2-axis line is visible.',\n        pattern: getPattern(['show', 'hide']),\n        type: 'string',\n    },\n    'axisLabelsY.extendsAxisRange': {\n        default: true,\n        description: 'Specify whether the y-axis should be extended to include whole major tick marks.',\n        type: 'boolean',\n    },\n    'axisLabelsX.majorLabelStyle.rotation': {\n        default: '0',\n        description: 'Specify the rotation of the x-axis label in degrees.',\n        enum: [-90, -45, 0, 45, 90],\n        type: 'number',\n    },\n    'axisLabelsX.majorLabelVisibility': {\n        default: 'auto',\n        description: 'Specify whether labels for major tick marks are visible on the x-axis.',\n        pattern: getPattern(['auto', 'show', 'hide']),\n        type: 'string',\n    },\n    'axisLabelsY2.integerUnits': {\n        default: false,\n        description: 'Specify whether the major unit of the y2-axis is rounded to the nearest integer.',\n        type: 'boolean',\n    },\n    'axisLabelsY.majorLabelVisibility': {\n        default: 'auto',\n        description: 'Specify whether labels for major tick marks are visible on the y-axis.',\n        pattern: getPattern(['auto', 'show', 'hide']),\n        type: 'string',\n    },\n    'axisLabelsY2.majorLabelVisibility': {\n        default: 'auto',\n        description: 'Specify whether labels for major tick marks are visible on the y2-axis.',\n        pattern: getPattern(['auto', 'show', 'hide']),\n        type: 'string',\n    },\n    'axisLabelsX.majorTickSize': {\n        default: 6,\n        description: 'Specify the size, in pixels, of major tick marks on the x-axis.',\n        type: 'number',\n    },\n    'axisLabelsY.majorTickSize': {\n        default: 6,\n        description: 'Specify the size, in pixels, of major tick marks on the y-axis.',\n        type: 'number',\n    },\n    'axisLabelsY2.majorTickSize': {\n        default: 6,\n        description: 'Specify the size, in pixels, of major tick marks on the y2-axis.',\n        type: 'number',\n    },\n    'axisLabelsY.minorTickSize': {\n        default: 6,\n        description: 'Specify the size, in pixels, of minor tick marks on the y-axis.',\n        type: 'number',\n    },\n    'axisLabelsY2.minorTickSize': {\n        default: 6,\n        description: 'Specify the size, in pixels, of minor tick marks on the y2-axis.',\n        type: 'number',\n    },\n    'axisLabelsX.majorTickVisibility': {\n        default: 'auto',\n        description: 'Specify whether major tick marks on the x-axis are visible.',\n        pattern: getPattern(['auto', 'show', 'hide']),\n        type: 'string',\n    },\n    'axisLabelsY.majorTickVisibility': {\n        default: 'auto',\n        description: 'Specify whether major tick marks on the y-axis are visible.',\n        pattern: getPattern(['auto', 'show', 'hide']),\n        type: 'string',\n    },\n    'axisLabelsY2.majorTickVisibility': {\n        default: 'auto',\n        description: 'Specify whether major tick marks on the y2-axis are visible.',\n        pattern: getPattern(['auto', 'show', 'hide']),\n        type: 'string',\n    },\n    'axisLabelsY.majorUnit': {\n        default: 'auto',\n        description: 'Specify the spacing unit between major tick marks along the numeric y-axis.',\n        type: ['number', 'string'],\n    },\n    'axisLabelsY2.majorUnit': {\n        default: 'auto',\n        description: 'Specify the spacing unit between major tick marks along the numeric y2-axis.',\n        type: ['number', 'string'],\n    },\n    'axisLabelsY.minorTickVisibility': {\n        default: 'auto',\n        description: 'Specify whether minor tick marks on the y-axis are visible.',\n        pattern: getPattern(['auto', 'show', 'hide']),\n        type: 'string',\n    },\n    'axisLabelsY2.minorTickVisibility': {\n        default: 'auto',\n        description: 'Specify whether minor tick marks on the y2-axis are visible.',\n        pattern: getPattern(['auto', 'show', 'hide']),\n        type: 'string',\n    },\n    'axisY.abbreviation': {\n        default: 'none',\n        description: 'Specify whether to abbreviate large y-axis values with the closest SI prefix.',\n        pattern: getPattern(['none', 'auto']),\n        type: 'string',\n    },\n    'axisY2.abbreviation': {\n        default: 'none',\n        description: 'Specify whether to abbreviate large y2-axis values with the closest SI prefix.',\n        pattern: getPattern(['none', 'auto']),\n        type: 'string',\n    },\n    'axisY.includeZero': {\n        default: false,\n        description: 'Specify whether the y-axis range includes zero.',\n        type: 'boolean',\n    },\n    'axisY2.includeZero': {\n        default: false,\n        description: 'Specify whether the y2-axis range includes zero.',\n        type: 'boolean',\n    },\n    'axisY.maximumNumber': {\n        default: 'auto',\n        description: 'Specify the maximum number for the visible y-axis range.',\n        type: ['number', 'string'],\n    },\n    'axisY2.maximumNumber': {\n        default: 'auto',\n        description: 'Specify the maximum number for the visible y2-axis range.',\n        type: ['number', 'string'],\n    },\n    'axisY.minimumNumber': {\n        default: 'auto',\n        description: 'Specify the minimum number for the visible y-axis range.',\n        type: ['number', 'string'],\n    },\n    'axisY2.minimumNumber': {\n        default: 'auto',\n        description: 'Specify the minimum number for the visible y2-axis range.',\n        type: ['number', 'string'],\n    },\n    'axisY.scale': {\n        default: 'linear',\n        description: 'Specify the type of scale that applies to a numerical y-axis.',\n        pattern: getPattern(['linear', 'log']),\n        type: 'string',\n    },\n    'axisY2.scale': {\n        default: 'linear',\n        description: 'Specify the type of scale that applies to a numerical y2-axis.',\n        pattern: getPattern(['linear', 'log']),\n        type: 'string',\n    },\n    'axisTitleX.text': { description: 'Specify the title of the x-axis.', type: 'string' },\n    'axisTitleY.text': { description: 'Specify the title of the y-axis.', type: 'string' },\n    'axisTitleY2.text': { description: 'Specify the title of the y2-axis.', type: 'string' },\n    'axisTitleX.visibility': {\n        default: 'visible',\n        description: 'Specify whether to show the title of the x-axis.',\n        pattern: getPattern(['visible', 'collapsed']),\n        type: 'string',\n    },\n    'axisTitleY.visibility': {\n        default: 'visible',\n        description: 'Specify whether to show the title of the y-axis.',\n        pattern: getPattern(['visible', 'collapsed']),\n        type: 'string',\n    },\n    'axisTitleY2.visibility': {\n        default: 'visible',\n        description: 'Specify whether to show the title of the y2-axis.',\n        pattern: getPattern(['visible', 'collapsed']),\n        type: 'string',\n    },\n    'chart.resultTruncationLimit': {\n        default: 50000,\n        description: 'Specify the number of data points rendered in a chart.',\n        type: 'number',\n    },\n    backgroundColor: {\n        description: 'Specify the Hex code for color used for a background. For example: \"#0000FF\"',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    fontColor: {\n        description:\n            'Specify the Hex code for color used for fonts (axis labels, legends). For example: \"#0000FF\"',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    foregroundColor: {\n        description: 'Specify the Hex code for color used for a foreground. For example: \"#0000FF\".',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    seriesColors: {\n        description: `Specify the Hex code for colors used for a series. For example, ['#FF0000', '#0000FF', '#008000'].\n            The default for light and dark mode is ['#1E93C6', '#F2B827', '#D6563C', '#6A5C9E', '#31A35F'].\n            The default for SCP mode is ['#A9F5E7', '#A870EF',  '#1E6271', '#45D4BA', '#602CA1',  '#9AE6F7', '#6CD0F0', '#2F8AA7',  '#422879', '#F29BAC', '#E85B79', '#C6335F',  '#FDAF93', '#FB865C', '#E9643A',  '#7EEFDA', '#26AA92', '#207865', '#C093F9', '#8747DA',  '#4EB2D2', '#912344',  '#AD3F20', '#D44C20', '#FFC34E',  '#95651D',  '#C0891E', '#ECAE11', '#FCD9A4', '#78062A'].\n            Note: Option type 'string' has been deprecated.`,\n        type: ['array', 'string'],\n        items: { type: 'string' },\n    },\n    fieldColors: {\n        description: `Specify the Hex code for color used for a field. For example: {'count': '#008000', 'percent': '#FFA500'}. Note: Option type 'string' has been deprecated.`,\n        type: ['object', 'string'],\n    },\n    'chart.showDataLabels': {\n        default: 'none',\n        description:\n            'Specify whether bar, line, area, or column charts should display no labels, all labels, or only the min and max labels.',\n        pattern: getPattern(['none', 'all', 'minmax']),\n        type: 'string',\n    },\n    'data.fieldListMode': {\n        default: 'hide_show',\n        description: 'Specify the order in which to apply the fieldShowList and fieldHideList filters.',\n        pattern: getPattern(['show_hide', 'hide_show']),\n        type: 'string',\n    },\n    'data.fieldShowList': {\n        description: `Specify a list of fields to show in the results. For example: ['percent', 'count']. Note: Option type 'string' has been deprecated.`,\n        type: ['array', 'string'],\n        items: { type: 'string' },\n    },\n    'data.fieldHideList': {\n        description: `Specify a list of fields to hide in the results. For example: ['percent', 'count']. Note: Option type 'string' has been deprecated.`,\n        type: ['array', 'string'],\n        items: { type: 'string' },\n    },\n    'gridLinesX.showMajorLines': {\n        default: false,\n        description: 'Specify whether major grid lines are visible on the x-axis.',\n        type: 'boolean',\n    },\n    'gridLinesY.showMajorLines': {\n        default: true,\n        description: 'Specify whether major grid lines are visible on the y-axis.',\n        type: 'boolean',\n    },\n    'gridLinesY2.showMajorLines': {\n        default: true,\n        description: 'Specify whether major grid lines are visible on the y2-axis.',\n        type: 'boolean',\n    },\n    'gridLinesY.showMinorLines': {\n        default: false,\n        description: 'Specify whether minor grid lines are visible on the y-axis.',\n        type: 'boolean',\n    },\n    'gridLinesY2.showMinorLines': {\n        default: false,\n        description: 'Specify whether minor grid lines are visible on y2-axis.',\n        type: 'boolean',\n    },\n    'layout.splitSeries': {\n        default: false,\n        description:\n            'Set to \"true\" to split a multi-series chart into separate charts that are stacked from top to bottom; one for each series.',\n        type: 'boolean',\n    },\n    'layout.splitSeries.allowIndependentYRanges': {\n        default: false,\n        description: 'Specify whether split series charts have independent y-ranges.',\n        type: 'boolean',\n    },\n    'legend.labels': {\n        description: `Specify a list of labels to pre-populate the legend. For example: ['percent', 'count']. Note: Option type 'string' has been deprecated.`,\n        type: ['array', 'string'],\n        items: { type: 'string' },\n    },\n    'legend.labelStyle.overflowMode': {\n        default: 'ellipsisMiddle',\n        description:\n            'Specify how to display legend labels when they overflow the layout boundaries by replacing overflow text with an ellipsis.',\n        pattern: getPattern(['ellipsisEnd', 'ellipsisMiddle', 'ellipsisStart', 'ellipsisNone']),\n        type: 'string',\n    },\n    'legend.placement': {\n        default: 'right',\n        description: 'Specify the location of the legend on the panel.',\n        pattern: getPattern(['right', 'left', 'top', 'bottom', 'none']),\n        type: 'string',\n    },\n    'axisY2.enabled': {\n        default: false,\n        description: 'Enable a y2-axis for chart overlays.',\n        type: 'boolean',\n    },\n    'axisY2.fields': {\n        description: 'Specify a field that should be mapped to a second y-axis for chart overlays.',\n        type: 'string',\n    },\n    'chart.overlayFields': {\n        description:\n            'Specify a field or a list of space/comma-delimited fields that should be mapped to the y2-axis.',\n        type: 'string',\n    },\n    'chart.stackMode': {\n        default: 'default',\n        description: 'Specify stacking options for area, bar, and column charts.',\n        pattern: getPattern(['default', 'stacked', 'stacked100']),\n        type: 'string',\n    },\n    'chart.columnSpacing': {\n        description: 'Specifies, in pixels, the spacing between columns in a column chart.',\n        type: 'number',\n    },\n    'chart.seriesSpacing': {\n        description: 'Specify, in pixels, the spacing between clustered series in column and bar charts.',\n        type: 'number',\n    },\n    columnGrouping: {\n        default: 'default',\n        description:\n            'Specify the column grouping mode. If chart.stackMode is defined it will override grouping behavior',\n        pattern: getPattern(['default', 'overlay']),\n        type: 'string',\n    },\n    lineWidth: {\n        default: 2,\n        description: 'Specify the line width, in pixels, for chart overlay.',\n        type: 'number',\n    },\n};\n","import { _ } from '@splunk/ui-utils/i18n';\nimport BarBeside from '@splunk/react-icons/BarBeside';\nimport BarStacked from '@splunk/react-icons/BarStacked';\nimport BarStacked100 from '@splunk/react-icons/BarStacked100';\nimport AxesConfig from '../../common/editorConfig/Axes';\nimport LegendConfig from '../../common/editorConfig/Legend';\n\nconst editorConfig = [\n    {\n        label: _('General'),\n        layout: [\n            [\n                {\n                    label: _('Stack Mode'),\n                    option: 'chart.stackMode',\n                    editor: 'editor.radioBar',\n                    editorProps: {\n                        values: [\n                            { icon: BarBeside, label: _('Not stacked'), value: 'default' },\n                            { icon: BarStacked, label: _('Stacked'), value: 'stacked' },\n                            { icon: BarStacked100, label: _('Stacked 100%'), value: 'stacked100' },\n                        ],\n                    },\n                },\n            ],\n            [\n                {\n                    label: _('Show Data Values'),\n                    option: 'chart.showDataLabels',\n                    editor: 'editor.radioBar',\n                    editorProps: {\n                        values: [\n                            { label: _('Off'), value: 'none' },\n                            { label: _('On'), value: 'all' },\n                            { label: _('Min/Max'), value: 'minmax' },\n                        ],\n                    },\n                },\n            ],\n        ],\n    },\n    AxesConfig,\n    LegendConfig,\n];\n\nexport default editorConfig;\n","import React, { Component } from 'react';\nimport omit from 'lodash/omit';\nimport BaseVisualization from '@splunk/dashboard-visualizations/common/BaseVisualization';\nimport { truncateParsedData } from '@splunk/dashboard-visualizations/utils/dataUtils';\nimport { withVisualizationAndThemeHOCs } from '@splunk/dashboard-visualizations/utils/enhancer';\nimport ReactColumn from '@splunk/react-visualizations/Column';\nimport { parse, dataContract } from '@splunk/visualization-encoding-parsers/ColumnParser';\nimport { enterprise } from '@splunk/visualization-themes/variables';\nimport VisualizationEvent from '@splunk/dashboard-visualizations/common/VisualizationEvent';\nimport IconPlaceholder from '@splunk/dashboard-visualizations/common/IconPlaceholder';\nimport { Column as ColumnIcon } from '@splunk/visualization-icons';\nimport { getPropsForSimpleXMLOptions } from '@splunk/visualizations-shared/simpleXMLOptions';\nimport { getChartingThemeKey } from '../../utils/themeUtils';\nimport { getAnnotationLabelAndColor } from '../../utils/propUtils';\nimport { enableClickHandler } from '../../utils/eventUtils';\nimport optionsSchema from './optionsSchema';\nimport editorConfig from './editorConfig';\n\nexport class ColumnComponent extends Component {\n    static propTypes = BaseVisualization.propTypes;\n\n    static defaultProps = {\n        ...BaseVisualization.defaultProps,\n        height: 250,\n    };\n\n    static dataContract = dataContract;\n\n    static vizContract = {\n        initialDimension: {\n            width: 300,\n            height: 300,\n        },\n    };\n\n    static schema = optionsSchema;\n\n    static editor = editorConfig;\n\n    render() {\n        const {\n            dataSources,\n            encoding,\n            options,\n            width,\n            height,\n            style,\n            mode,\n            theme,\n            hasEventHandlers,\n        } = this.props;\n        const themeKey = getChartingThemeKey(theme);\n        let columnProps = parse(dataSources, encoding);\n        // todo: may need merge the truncateParsedData function with parse\n        const truncationLimit = options && options['chart.resultTruncationLimit'];\n        columnProps = truncateParsedData(columnProps, truncationLimit);\n        const { annotationLabel, annotationColor } = getAnnotationLabelAndColor({\n            annotationCategoryColor: options['annotation.categoryColors'],\n            annotationLabelEncoding: columnProps.annotationLabel,\n            annotationColorEncoding: columnProps.annotationColor,\n        });\n\n        const onPointClick = evt => {\n            if (enableClickHandler(hasEventHandlers, mode)) {\n                this.props.onEventTrigger(\n                    new VisualizationEvent({\n                        originalEvent: evt.originalEvent,\n                        payload: evt.payload,\n                        type: 'point.click',\n                    })\n                );\n            }\n        };\n\n        const onLegendClick = evt => {\n            if (enableClickHandler(hasEventHandlers, mode)) {\n                this.props.onEventTrigger(\n                    new VisualizationEvent({\n                        originalEvent: evt.originalEvent,\n                        payload: evt.payload,\n                        type: 'legend.click',\n                    })\n                );\n            }\n        };\n\n        const onRangeSelect = evt => {\n            if (enableClickHandler(hasEventHandlers, mode)) {\n                this.props.onEventTrigger(\n                    new VisualizationEvent({\n                        originalEvent: evt.originalEvent,\n                        payload: evt.payload,\n                        type: 'range.select',\n                    })\n                );\n            }\n        };\n\n        return (\n            <ReactColumn\n                width={width}\n                height={height}\n                style={style}\n                themeKey={themeKey}\n                x={columnProps.x}\n                y={columnProps.y}\n                y2={columnProps.y2}\n                annotationX={columnProps.annotationX}\n                annotationLabel={annotationLabel}\n                annotationColor={annotationColor}\n                xFieldName={columnProps.xFieldName}\n                yFieldName={columnProps.yFieldName}\n                y2FieldName={columnProps.y2FieldName}\n                onPointClick={onPointClick}\n                onLegendClick={onLegendClick}\n                onRangeSelect={onRangeSelect}\n                {...getPropsForSimpleXMLOptions(omit(options, ['annotation.categoryColors']))}\n            />\n        );\n    }\n}\n\nexport default withVisualizationAndThemeHOCs({\n    defaultBackgroundColor: enterprise.defaultBackgroundColor,\n    placeholder: <IconPlaceholder icon={<ColumnIcon />} />,\n})(ColumnComponent);\n"],"sourceRoot":""}