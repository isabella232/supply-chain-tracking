{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@splunk/visualizations-shared/schemaUtils\"","webpack:///./src/visualizations/Text/optionsSchema.js"],"names":["fontFamily","default","description","type","fontSize","fontWeight","pattern","getPattern","lineHeight","rotation","textColor","COLOR_OR_TOKEN_PATTERN","backgroundColor","content"],"mappings":";;;;;;;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;AClFA,sE;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAEe;AACXA,YAAU,EAAE;AACRC,WAAO,EADC;AAERC,eAAW,EAFH;AAIRC,QAAI,EAAE;AAJE,GADD;AAOXC,UAAQ,EAAE;AAAEH,WAAO,EAAT;AAAeC,eAAW,EAA1B;AAAgEC,QAAI,EAAE;AAAtE,GAPC;AAQXE,YAAU,EAAE;AACRJ,WAAO,EADC;AAERC,eAAW,EAFH;AAGRI,WAAO,EAAEC,4FAAU,CAAC,mBAHZ,OAGY,CAAD,CAHX;AAIRJ,QAAI,EAAE;AAJE,GARD;AAcXK,YAAU,EAAE;AACRP,WAAO,EADC;AAERC,eAAW,EAFH;AAGRC,QAAI,EAAE;AAHE,GAdD;AAmBXM,UAAQ,EAAE;AAAER,WAAO,EAAT;AAAcC,eAAW,EAAzB;AAAiEC,QAAI,EAAE;AAAvE,GAnBC;AAoBXO,WAAS,EAAE;AACPR,eAAW,EADJ;AAEPC,QAAI,EAFG;AAGPG,WAAO,EAAEK,gGAAsBA;AAHxB,GApBA;AAyBXC,iBAAe,EAAE;AACbX,WAAO,EADM;AAEbC,eAAW,EAFE;AAGbI,WAAO,EAHM;AAIbH,QAAI,EAAE;AAJO,GAzBN;AA+BXU,SAAO,EAAE;AAAEZ,WAAO,EAAT;AAAeC,eAAW,EAA1B;AAAyDC,QAAI,EAAE;AAA/D;AA/BE,CAAf,E","file":"Text.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","module.exports = require(\"@splunk/visualizations-shared/schemaUtils\");","import { COLOR_OR_TOKEN_PATTERN, getPattern } from '@splunk/visualizations-shared/schemaUtils';\n\nexport default {\n    fontFamily: {\n        default: 'Splunk Platform Sans',\n        description:\n            'Specify the font family to be used. For example \"Comic Sans MS\". Note: the font needs to be available to your end user.',\n        type: 'string',\n    },\n    fontSize: { default: 24, description: 'Specify the font size in pixels.', type: 'number' },\n    fontWeight: {\n        default: 'normal',\n        description: 'Specify the font weight.',\n        pattern: getPattern(['normal', 'bold', 'light']),\n        type: 'string',\n    },\n    lineHeight: {\n        default: '120%',\n        description: 'Specify the line height for the text block.',\n        type: ['number', 'string'],\n    },\n    rotation: { default: 0, description: 'Specify the text angle in degrees.', type: 'number' },\n    textColor: {\n        description: `Specify the text color using Hex codes or RGBA values, such as \"#FF0000\" or \"rgba(25,12,13,0.1)\". The default for enterprise light mode is \"#171D21\". The default for enterprise dark mode is \"#FFFFFF\". The default for prisma dark mode is \"rgba(255, 255, 255, 0.7)\".`,\n        type: 'string',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n    },\n    backgroundColor: {\n        default: 'transparent',\n        description: 'Specify the background color using a Hex code such as \"#FF0000\".',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    content: { default: '', description: 'Specify the text content.', type: 'string' },\n};\n"],"sourceRoot":""}