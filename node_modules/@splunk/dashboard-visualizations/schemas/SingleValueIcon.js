/*!
 * Copyright © 2018 Splunk Inc.
 * SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or
 * in part without a valid written license from Splunk Inc. is PROHIBITED.
 */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 19);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/schemaUtils");

/***/ }),

/***/ 19:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _splunk_visualizations_shared_schemaUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _splunk_visualizations_shared_schemaUtils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_splunk_visualizations_shared_schemaUtils__WEBPACK_IMPORTED_MODULE_0__);

/* harmony default export */ __webpack_exports__["default"] = ({
  unit: {
    description: 'Specify text to show next to the major value.',
    type: 'string'
  },
  unitPosition: {
    default: 'after',
    description: 'Specify whether the unit text should appear before or after the major value.',
    pattern: Object(_splunk_visualizations_shared_schemaUtils__WEBPACK_IMPORTED_MODULE_0__["getPattern"])(['before', 'after']),
    type: 'string'
  },
  underLabel: {
    description: 'Specify the text that appears below the major value.',
    type: 'string'
  },
  backgroundColor: {
    default: 'transparent',
    description: 'Specify the color to use for the background. The hex value format should be #FFFFFF.',
    pattern: _splunk_visualizations_shared_schemaUtils__WEBPACK_IMPORTED_MODULE_0__["COLOR_OR_TOKEN_PATTERN"],
    type: 'string'
  },
  showTrendIndicator: {
    default: true,
    description: 'Specify whether to show or hide the trend indicator.',
    type: 'boolean'
  },
  useTrendUnits: {
    default: false,
    description: 'Specify whether to truncate the trend value to 2 significant digits. A magnitude unit will be displayed.',
    type: 'boolean'
  },
  trendDisplayMode: {
    default: 'absolute',
    description: 'Specify whether the trend value is displayed as a percentage or an absolute count.',
    pattern: Object(_splunk_visualizations_shared_schemaUtils__WEBPACK_IMPORTED_MODULE_0__["getPattern"])(['percent', 'absolute']),
    type: 'string'
  },
  numberPrecision: {
    default: 0,
    maximum: 20,
    minimum: 0,
    description: 'Specify the number of decimal places to display. For example, to display 3 decimal places, use a value of 3. The maximum value is 20.',
    type: 'number'
  },
  useThousandSeparators: {
    default: true,
    description: 'Specify whether numeric values use commas as thousandths separaters.',
    type: 'boolean'
  },
  icon: {
    default: 'default',
    description: 'Specify an icon.',
    type: 'string'
  },
  iconPosition: {
    default: 'before',
    description: 'Specify where to display the icon in relation to the major value.',
    type: 'string'
  },
  iconOpacity: {
    default: 1,
    description: 'Specify the opacity for the icon using a number between 0 and 1 (inclusive).',
    type: 'number'
  },
  showValue: {
    default: true,
    description: 'Specify whether to enable or disable the value and trend indicator displays.',
    type: 'boolean'
  },
  showIcon: {
    default: true,
    description: 'Deprecated. Specify whether to enable or disable the icon display.',
    type: 'boolean'
  },
  color: {
    default: null,
    description: 'Deprecated. Please use iconColor to color icon, majorColor to color major value.',
    pattern: _splunk_visualizations_shared_schemaUtils__WEBPACK_IMPORTED_MODULE_0__["COLOR_OR_TOKEN_PATTERN"],
    type: 'string'
  },
  iconColor: {
    default: null,
    description: 'Specify the color for the icon. The hex value format should be #FFFFFF.',
    pattern: _splunk_visualizations_shared_schemaUtils__WEBPACK_IMPORTED_MODULE_0__["COLOR_OR_TOKEN_PATTERN"],
    type: 'string'
  },
  majorColor: {
    default: null,
    description: 'Specify the color for the major value. The hex value format should be #FFFFFF.',
    pattern: _splunk_visualizations_shared_schemaUtils__WEBPACK_IMPORTED_MODULE_0__["COLOR_OR_TOKEN_PATTERN"],
    type: 'string'
  },
  deltaColor: {
    default: null,
    description: 'Specify the delta value color using a Hex code. For example: "#FF0000".',
    pattern: _splunk_visualizations_shared_schemaUtils__WEBPACK_IMPORTED_MODULE_0__["COLOR_OR_TOKEN_PATTERN"],
    type: 'string'
  }
});

/***/ })

/******/ });
//# sourceMappingURL=SingleValueIcon.js.map