{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@splunk/ui-utils/i18n\"","webpack:///external \"@splunk/visualizations-shared/schemaUtils\"","webpack:///external \"react\"","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"@babel/runtime/helpers/getPrototypeOf\"","webpack:///external \"prop-types\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"styled-components\"","webpack:///external \"@babel/runtime/helpers/taggedTemplateLiteral\"","webpack:///external \"@babel/runtime/helpers/inherits\"","webpack:///external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack:///external \"@babel/runtime/helpers/extends\"","webpack:///external \"@splunk/visualizations-shared/style\"","webpack:///external \"@splunk/dashboard-visualizations/common/VisualizationEvent\"","webpack:///external \"@splunk/visualization-themes/variables\"","webpack:///external \"lodash/get\"","webpack:///external \"lodash\"","webpack:///external \"@splunk/visualizations-shared/colorUtils\"","webpack:///external \"lodash/isEmpty\"","webpack:///./src/utils/eventUtils.js","webpack:///external \"@splunk/visualization-encoding-parsers/SingleValueParser\"","webpack:///external \"@splunk/dashboard-visualizations/utils/paginationUtils\"","webpack:///external \"@splunk/visualizations-shared/Message\"","webpack:///external \"lodash/pick\"","webpack:///external \"@splunk/themes/getTheme\"","webpack:///external \"lodash/each\"","webpack:///./src/utils/enhancer.jsx","webpack:///external \"@babel/runtime/helpers/objectWithoutProperties\"","webpack:///external \"lodash/isUndefined\"","webpack:///external \"@splunk/visualizations-shared/SizeAwareWrapper\"","webpack:///external \"@splunk/visualizations-shared/SanitizeProps\"","webpack:///external \"@splunk/themes/getSettingsFromThemedProps\"","webpack:///external \"@splunk/visualization-encoding-parsers/ChoroplethParser\"","webpack:///./src/visualizations/Choropleth/Choropleth.tsx","webpack:///external \"@splunk/visualization-context/GeoContext\"","webpack:///external \"@splunk/react-visualizations/GeoJsonChoropleth\"","webpack:///./src/visualizations/Choropleth/optionsSchema.js","webpack:///./src/visualizations/Choropleth/editorConfig.js"],"names":["getClickHandler","eventName","onEventTrigger","originalEvent","payload","type","enableClickHandler","mode","Item","width","style","toPx","props","FixSizeItem","height","ItemContent","styled","FixSizeItemContent","Blocker","Cover","getEncodingBackgroundColor","isTypeOfSingleValue","isEmpty","parsed","parse","getDefaultThemedBackgroundColor","theme","themeVariables","getSettingsFromThemedProps","family","colorScheme","DefaultPlaceHolder","_","T","extendViz","extendProperties","each","pick","Viz","defaultShowPlaceholder","dataSources","loading","data","get","withPlaceholder","placeholder","shouldShowPlaceholder","Wrapper","show","withPaginator","VizHeightOffset","defaultPageable","Container","toDimension","getPaginationInformation","totalPages","currentPage","isPaging","requestParams","pageable","isUndefined","onRequestParamsChange","fixedHeight","PaginatorContainer","vizHeight","vizProps","renderPaginator","withBackgroundColor","defaultBackgroundColor","enableBackgroundColorOption","encoding","options","getTheme","defaultThemedBackgroundColor","encodingBackgroundColor","backgroundColor","isColor","overrideProps","containerDimension","withEventBlocker","withVisualizationHOCs","withVisualizationAndThemeHOCs","withTheme","withSanitizedOptions","rest","sanitizedOptions","sanitize","source","description","pattern","getPattern","projection","selector","default","fillColor","strokeColor","strokeHighlightColor","name","sourceBounds","logicalBounds","geoFeatureGroups","items","editorConfig"],"mappings":"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","file":"Choropleth.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 125);\n","module.exports = require(\"@splunk/ui-utils/i18n\");","module.exports = require(\"@splunk/visualizations-shared/schemaUtils\");","module.exports = require(\"react\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","module.exports = require(\"prop-types\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"styled-components\");","module.exports = require(\"@babel/runtime/helpers/taggedTemplateLiteral\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/extends\");","module.exports = require(\"@splunk/visualizations-shared/style\");","module.exports = require(\"@splunk/dashboard-visualizations/common/VisualizationEvent\");","module.exports = require(\"@splunk/visualization-themes/variables\");","module.exports = require(\"lodash/get\");","module.exports = require(\"lodash\");","module.exports = require(\"@splunk/visualizations-shared/colorUtils\");","module.exports = require(\"lodash/isEmpty\");","import VisualizationEvent from '@splunk/dashboard-visualizations/common/VisualizationEvent';\n\nexport const getClickHandler = (onEventTrigger, data, eventName = 'value.click') =>\n    typeof onEventTrigger === 'function' &&\n    (e =>\n        onEventTrigger(new VisualizationEvent({ originalEvent: e, payload: { ...data }, type: eventName })));\n\nexport const enableClickHandler = (hasEventHandlers, mode) => !!hasEventHandlers && mode === 'view';\n","module.exports = require(\"@splunk/visualization-encoding-parsers/SingleValueParser\");","module.exports = require(\"@splunk/dashboard-visualizations/utils/paginationUtils\");","module.exports = require(\"@splunk/visualizations-shared/Message\");","module.exports = require(\"lodash/pick\");","module.exports = require(\"@splunk/themes/getTheme\");","module.exports = require(\"lodash/each\");","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport T from 'prop-types';\nimport styled, { withTheme } from 'styled-components';\nimport get from 'lodash/get';\nimport pick from 'lodash/pick';\nimport each from 'lodash/each';\nimport isUndefined from 'lodash/isUndefined';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { _ } from '@splunk/ui-utils/i18n';\nimport { parse } from '@splunk/visualization-encoding-parsers/SingleValueParser';\nimport Message from '@splunk/visualizations-shared/Message';\nimport { toDimension, toPx } from '@splunk/visualizations-shared/style';\nimport SizeAwareWrapper from '@splunk/visualizations-shared/SizeAwareWrapper';\nimport {\n    renderPaginator,\n    getPaginationInformation,\n    FixedHeightPaginatorContainer,\n} from '@splunk/dashboard-visualizations/utils/paginationUtils';\nimport { sanitize } from '@splunk/visualizations-shared/SanitizeProps';\nimport { isColor } from '@splunk/visualizations-shared/colorUtils';\nimport getTheme from '@splunk/themes/getTheme';\nimport getSettingsFromThemedProps from '@splunk/themes/getSettingsFromThemedProps';\n\nconst Item = styled.div.attrs(({ width }) => ({\n    style: {\n        width: toPx(width),\n    },\n}))`\n    position: relative;\n    background-color: ${props => props.backgroundColor};\n`;\n\n// Use `.attrs()` for highly dynamic styles. Ref: https://github.com/styled-components/styled-components/issues/134#issuecomment-312415291\nconst FixSizeItem = styled.div.attrs(({ width, height }) => ({\n    style: {\n        ...(width && { width: toPx(width) }),\n        ...(height && { height: toPx(height) }),\n    },\n}))`\n    position: relative;\n    flex-direction: column;\n    flex: 1;\n    display: flex;\n    background-color: ${props => props.backgroundColor};\n`;\n\nconst ItemContent = styled.div`\n    position: relative;\n    min-height: 100px;\n    width: 100%;\n`;\n\nconst FixSizeItemContent = styled.div`\n    min-height: 0px;\n    flex: 1;\n    position: relative;\n`;\n\nconst Blocker = styled.div`\n    position: relative;\n    width: 100%;\n    height: 100%;\n`;\n\nconst Cover = styled.div`\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n`;\n\n/**\n * Todo: Need remove this function when we refactor `fill` encoding of Single Value not for background color.\n * Helper function. Necessary since not all Viz will have a background color derived from encoding.\n *\n * @param {*} dataSources\n * @param {*} encoding\n * @param {String} type Viz type\n * @returns {String} color\n */\nconst getEncodingBackgroundColor = (dataSources, encoding, type) => {\n    const isTypeOfSingleValue = vizType => ['viz.singlevalue', 'viz.singlevalueradial'].includes(vizType);\n    if (isTypeOfSingleValue(type) && !isEmpty(dataSources) && encoding) {\n        const parsed = parse(dataSources, encoding);\n        return parsed.backgroundColor || '';\n    }\n    return '';\n};\n\n/**\n * Internal helper to get the default themed background color for enhancer\n * enterprise.dark is using black; however enterprise.light and prisma use backgroundColorSidebar as per design\n * @param {Object} params.theme - theme context object containing the theme family, colorScheme, and density\n * @param {Object} params.themeVariables - all variables available to use for the given theme\n */\nconst getDefaultThemedBackgroundColor = ({ theme, themeVariables }) => {\n    const { family, colorScheme } = getSettingsFromThemedProps({ theme });\n    return family === 'enterprise' && colorScheme === 'dark'\n        ? themeVariables?.black\n        : themeVariables?.backgroundColorSidebar;\n};\n\n/**\n * default empty datasource placeholder\n * @param {Number} width\n * @param {Number} height\n */\nconst DefaultPlaceHolder = ({ width, height }) => (\n    <Message width={width} height={height} level=\"warning\" message={_('No DataSource Connected')} />\n);\nDefaultPlaceHolder.propTypes = {\n    /**\n     * width in pixel or string, defaults to 100%\n     */\n    width: T.oneOfType([T.string, T.number]),\n    /**\n     * height in pixel or string\n     */\n    height: T.oneOfType([T.string, T.number]),\n};\n\n/**\n * pass static props to new viz\n * @param {ReactElement} Base\n * @param {ReactElement} Viz\n */\nconst extendViz = (Base, Viz) => {\n    const extendProperties = ['dataContract', 'vizContract', 'propTypes', 'defaultProps', 'schema', 'editor'];\n    each(pick(Base, extendProperties), (v, k) => {\n        if (v) {\n            Viz[k] = v; // eslint-disable-line no-param-reassign\n        }\n    });\n};\n\n/**\n * display placeholder if no primary datasource is connected or\n * primary datasource does not have any search data\n * @param {Object} props\n */\nexport const defaultShowPlaceholder = props => {\n    const { dataSources, loading } = props;\n    if (loading || !dataSources || !dataSources.primary) {\n        return true;\n    }\n    const data = get(dataSources, 'primary.data');\n    return !data || !data.columns || !data.columns.length;\n};\n\n/**\n * HOC that renders a placeholder if viz does not connect to datasource\n * or datasource does not have any data\n * @param {ReactElement} placeholder placeholder react element\n * @param {Function} shouldShowPlaceholder a function return true/false to indicate if a placeholder should be rendered\n */\nexport const withPlaceholder = ({\n    placeholder = <DefaultPlaceHolder />,\n    shouldShowPlaceholder = defaultShowPlaceholder,\n}) => Visualization => {\n    const Wrapper = props => {\n        const show = shouldShowPlaceholder(props);\n        if (show) {\n            return React.cloneElement(placeholder, {\n                width: props.width,\n                height: props.height,\n            });\n        }\n        return <Visualization {...props} />;\n    };\n    extendViz(Visualization, Wrapper);\n    return Wrapper;\n};\n\n/**\n * HOC that renders the visualization with a Paginator component\n * @param {ReactElement} Visualization Visualization Element\n * @param {Number} VizHeightOffset Visualization specific value to reduce height by in order to make room for the Paginator\n * @param {Boolean} defaultPageable Visualization specific default value for whether pagination should be enabled\n */\nexport const withPaginator = ({ VizHeightOffset = 0, defaultPageable = false }) => Visualization => {\n    const Container = styled.div`\n        overflow: hidden;\n        position: relative;\n        ${props => toDimension(pick(props, ['width', 'height']))};\n    `;\n    const Wrapper = props => {\n        const { totalPages, currentPage, isPaging, requestParams } = getPaginationInformation(props);\n        const pageable =\n            props.options && !isUndefined(props.options.pageable) ? props.options.pageable : defaultPageable;\n        const { height, width, onRequestParamsChange } = props;\n\n        const fixedHeight = height != null;\n        const PaginatorContainer = fixedHeight ? FixedHeightPaginatorContainer : null;\n        const vizHeight = isPaging && pageable && VizHeightOffset ? height - VizHeightOffset : height;\n        const vizProps = { ...props, height: vizHeight };\n\n        return (\n            <Container data-test=\"paginator-wrapper\" width={width} height={height}>\n                <Visualization {...vizProps} />\n                {pageable &&\n                    renderPaginator({\n                        totalPages,\n                        currentPage,\n                        isPaging,\n                        requestParams,\n                        theme: props.theme,\n                        onRequestParamsChange,\n                        ...(fixedHeight && { PaginatorContainer }),\n                    })}\n            </Container>\n        );\n    };\n    extendViz(Visualization, Wrapper);\n    return Wrapper;\n};\n\n/**\n * HOC that renders a container that provides a background color and size\n * @param {Function|String} defaultBackgroundColor default background color for a viz\n * @param {Function|Boolean} enableBackgroundColorOption indicate whether backgroundColor in option should be applied if present\n * @param {ReactElement} Visualization\n */\nexport const withBackgroundColor = ({\n    defaultBackgroundColor,\n    enableBackgroundColorOption,\n}) => Visualization => {\n    const Wrapper = props => {\n        const { dataSources, encoding, options = {}, width, height, theme, type } = props;\n        // due to the computational nature of backgroundColor,\n        // we use getTheme and inspect the hardcoded internal to unconditionally pass dark prisma themes variables if no SplunkThemeProvider is present\n        // in this case, we default to transparent if no theme is present\n        // TODO: move away from hardcoded internal that may change\n        const themeVariables = theme?.splunkThemeV1 ? getTheme(theme?.splunkThemeV1) : {};\n        const defaultThemedBackgroundColor = getDefaultThemedBackgroundColor({ theme, themeVariables });\n        const encodingBackgroundColor = getEncodingBackgroundColor(dataSources, encoding, type);\n        const backgroundColor =\n            (isColor(encodingBackgroundColor) && encodingBackgroundColor) ||\n            (enableBackgroundColorOption && isColor(options.backgroundColor) && options.backgroundColor) ||\n            defaultThemedBackgroundColor ||\n            defaultBackgroundColor ||\n            'transparent';\n\n        return !height ? (\n            <Item data-test=\"item\" width={width} backgroundColor={backgroundColor}>\n                <ItemContent>\n                    <Visualization {...props} />\n                </ItemContent>\n            </Item>\n        ) : (\n            <FixSizeItem\n                data-test=\"fix-size-item\"\n                width={width}\n                height={height}\n                backgroundColor={backgroundColor}\n            >\n                <FixSizeItemContent>\n                    <SizeAwareWrapper>\n                        {containerDimension => {\n                            const overrideProps = {\n                                ...props,\n                                width: containerDimension.width,\n                                height: containerDimension.height,\n                            };\n                            return <Visualization {...overrideProps} />;\n                        }}\n                    </SizeAwareWrapper>\n                </FixSizeItemContent>\n            </FixSizeItem>\n        );\n    };\n    extendViz(Visualization, Wrapper);\n    return Wrapper;\n};\n\n/**\n * HOC that renders a cover layer in edit mode\n * @param {ReactElement} Visualization\n */\nexport const withEventBlocker = Visualization => {\n    const Wrapper = props => {\n        const { mode } = props;\n        return (\n            <Blocker>\n                <Visualization {...props} />\n                {mode === 'edit' && <Cover />}\n            </Blocker>\n        );\n    };\n    extendViz(Visualization, Wrapper);\n    return Wrapper;\n};\n\n/**\n * HOC combination for a generic viz\n * @param {Function|String} defaultBackgroundColor default background color for a viz\n * @param {Function|Boolean} enableBackgroundColorOption indicate whether backgroundColor in option should be applied if present-\n * @param {ReactElement} placeholder\n */\nexport const withVisualizationHOCs = ({\n    defaultBackgroundColor,\n    enableBackgroundColorOption = true,\n    placeholder,\n}) => Viz =>\n    withBackgroundColor({ defaultBackgroundColor, enableBackgroundColorOption })(\n        withPlaceholder({\n            placeholder,\n        })(withEventBlocker(Viz))\n    );\n\n/**\n * HOC combination for viz with theme information\n * @param {Function|Boolean} enableBackgroundColorOption indicate whether backgroundColor in option should be applied if present-\n * @param {Function|String} defaultBackgroundColor default background color for a viz\n * @param {ReactElement} placeholder\n */\nexport const withVisualizationAndThemeHOCs = ({\n    enableBackgroundColorOption,\n    defaultBackgroundColor,\n    placeholder,\n}) => Viz =>\n    // splunk-charting need to access theme prop, so we use additional withTheme hoc.\n    withTheme(\n        withVisualizationHOCs({ enableBackgroundColorOption, defaultBackgroundColor, placeholder })(Viz)\n    );\n\n/**\n * HOC that sanitizes options.\n * @param {ReactElement} Visualization\n */\nexport const withSanitizedOptions = Visualization => {\n    const Wrapper = props => {\n        const { options, ...rest } = props;\n        const sanitizedOptions = sanitize(options);\n        return <Visualization options={sanitizedOptions} {...rest} />;\n    };\n    extendViz(Visualization, Wrapper);\n    return Wrapper;\n};\n","module.exports = require(\"@babel/runtime/helpers/objectWithoutProperties\");","module.exports = require(\"lodash/isUndefined\");","module.exports = require(\"@splunk/visualizations-shared/SizeAwareWrapper\");","module.exports = require(\"@splunk/visualizations-shared/SanitizeProps\");","module.exports = require(\"@splunk/themes/getSettingsFromThemedProps\");","module.exports = require(\"@splunk/visualization-encoding-parsers/ChoroplethParser\");","import * as React from 'react';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport { get, omit } from 'lodash';\nimport GeoContext from '@splunk/visualization-context/GeoContext';\nimport Message from '@splunk/visualizations-shared/Message';\nimport { parse, dataContract } from '@splunk/visualization-encoding-parsers/ChoroplethParser';\nimport { withBackgroundColor } from '../../utils/enhancer';\nimport { enterprise } from '@splunk/visualization-themes/variables';\nimport GeoJsonChoropleth, { GeoJsonChoroplethProps } from '@splunk/react-visualizations/GeoJsonChoropleth';\n// @TODO geofeaturegroup should be moved to geojsonchoropleth in the future if possible\nimport { GeoFeatureGroup } from '@splunk/react-visualizations/SvgChoropleth';\nimport optionsSchema from './optionsSchema';\nimport VisualizationEvent from '../../common/VisualizationEvent';\nimport editor from './editorConfig';\nimport { enableClickHandler } from '../../utils/eventUtils';\n\nexport interface ChoroplethProps {\n    /**\n     * true indicate the visualization is loading data\n     */\n    loading: boolean;\n    /**\n     * display mode\n     */\n    mode: string;\n    /**\n     * width in pixel or string, defaults to 100%\n     */\n    width: any;\n    /**\n     * height in pixel or string\n     */\n    height: any;\n    /**\n     * Custom style on visualization\n     */\n    style: Record<string, unknown>;\n    /**\n     * visualization formatting options\n     */\n    options: {\n        name: string;\n        source: string;\n        projection: string;\n        sourceBounds: { lat: { min: number; max: number }; long: { min: number; max: number } };\n        logicalBounds: { x: { min: number; max: number }; y: { min: number; max: number } };\n        fillColor: string;\n        strokeColor: string;\n        strokeHighlightColor?: string;\n        backgroundColor?: string;\n        selector: string;\n        geoFeatureGroups?: GeoFeatureGroup[];\n    };\n    encoding: Record<string, unknown>;\n    /**\n     * datasource state which include data and request params, object key indicate the datasource type.\n     */\n    dataSources: Record<string, any>;\n    /**\n     * A callback to update formatting options\n     */\n    onOptionsChange(): void;\n    /*\n     * Inform viz if there are handlers listening to events\n     */\n    hasEventHandlers: boolean;\n    /**\n     * A callback to trigger event\n     */\n    onEventTrigger(event: VisualizationEvent): void;\n    /**\n     * A callback to request new data with updated request params\n     */\n    onRequestParamsChange(): void;\n}\n\ninterface ChoroplethState {\n    geoJson: { features: Record<string, unknown>[] };\n}\n\nexport class ChoroplethComponent extends React.Component<ChoroplethProps, ChoroplethState> {\n    public constructor(props: ChoroplethProps) {\n        super(props);\n        this.state = {\n            geoJson: null,\n        };\n    }\n\n    static contextType = GeoContext;\n    static dataContract = dataContract;\n    static schema = optionsSchema;\n    static editor = editor;\n\n    handleMapClick = (clickedCoords: any, featureId: string): void => {\n        const { hasEventHandlers, mode, onEventTrigger } = this.props;\n        if (enableClickHandler(hasEventHandlers, mode)) {\n            onEventTrigger({\n                originalEvent: null,\n                payload: { featureId, clickedCoords },\n                type: 'map.click',\n            });\n        }\n\n        return;\n    };\n\n    handleFeatureHover = (/* featureId: string */): void => {\n        // @TODO: implement\n        //if (featureId) {\n        //  this.props.onEventTrigger(new VisualizationEvent('map.hover', null, { featureId }));\n        //}\n    };\n\n    render(): JSX.Element {\n        const { encoding, dataSources, options, width, height } = this.props;\n        const { source } = options;\n        let data = { featureIDs: [], values: [], fill: [] };\n        let geoJson: any;\n        let geoFeatureGroups: GeoFeatureGroup[];\n\n        const geoRegistry = this.context;\n        if (!geoRegistry) {\n            return (\n                <Message\n                    data-test=\"choropleth-message\"\n                    width={width}\n                    height={height}\n                    message={_('No GeoRegistry provided in context')}\n                />\n            );\n        }\n\n        try {\n            geoJson = geoRegistry.getByURL(source);\n        } catch (e) {\n            return (\n                <Message\n                    data-test=\"choropleth-message\"\n                    width={width}\n                    height={height}\n                    level={e.level}\n                    message={_(e.message)}\n                />\n            );\n        }\n\n        // @TODO / @Note\n        // can we get rid of logicalBounds option and use\n        // width/height that is passed down from layout?\n        // insets might need to be configured differently\n        const xScaleFactor = width / options.logicalBounds.x.max;\n        const yScaleFactor = height / options.logicalBounds.y.max;\n        const logicalBounds = {\n            x: { min: 0, max: width },\n            y: { min: 0, max: height },\n        };\n\n        // scale the feature groups logicalBounds\n        // based on ratio of configured options to layout item dimensions\n        if (options.geoFeatureGroups) {\n            geoFeatureGroups = options.geoFeatureGroups.map(\n                (group): GeoFeatureGroup => {\n                    if (!group.logicalBounds) return group;\n                    return {\n                        ...group,\n                        logicalBounds: {\n                            x: {\n                                min: group.logicalBounds.x.min * xScaleFactor,\n                                max: group.logicalBounds.x.max * xScaleFactor,\n                            },\n                            y: {\n                                min: group.logicalBounds.y.min * yScaleFactor,\n                                max: group.logicalBounds.y.max * yScaleFactor,\n                            },\n                        },\n                    };\n                }\n            );\n        }\n        if (dataSources && get(dataSources, ['primary', 'data'])) {\n            const dataFromEncoding = omit(parse(dataSources, encoding), '_meta');\n            data = {\n                featureIDs: dataFromEncoding.featureId || [],\n                values: dataFromEncoding.value || [],\n                fill: dataFromEncoding.fill || [],\n            };\n        }\n\n        const choroplethProps: GeoJsonChoroplethProps = {\n            ...options,\n            data,\n            geoJson,\n            geoFeatureGroups,\n            logicalBounds,\n            onFeatureHover: this.handleFeatureHover,\n            onClick: this.handleMapClick,\n        };\n\n        return <GeoJsonChoropleth data-test=\"react-geo-json-choropleth\" {...choroplethProps} />;\n    }\n}\n\nexport default withBackgroundColor({\n    enableBackgroundColorOption: true,\n    defaultBackgroundColor: enterprise.defaultBackgroundColor,\n})(ChoroplethComponent);\n","module.exports = require(\"@splunk/visualization-context/GeoContext\");","module.exports = require(\"@splunk/react-visualizations/GeoJsonChoropleth\");","import { COLOR_OR_TOKEN_PATTERN, getPattern } from '@splunk/visualizations-shared/schemaUtils';\n\nexport default {\n    source: {\n        description: 'Source for the geo data.',\n        pattern: getPattern(['geo://default/us', 'geo://default/world']),\n        type: 'string',\n    },\n    projection: {\n        description: 'Specifies the map projection.',\n        pattern: getPattern(['mercator', 'equirectangular']),\n        type: 'string',\n    },\n    selector: { default: '.feature', description: 'Selector to get all features', type: 'string' },\n    fillColor: {\n        description: 'Specify the Hex code for fill color of features with no data. For example: \"#0000FF\".',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    strokeColor: {\n        description:\n            'Specify the Hex code for stroke color for all features that are not selected. For example: \"#0000FF\".',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    strokeHighlightColor: {\n        description:\n            'Specify the Hex code for stroke highlight color for all features that are selected. For example: \"#0000FF\".',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    backgroundColor: {\n        description:\n            'Specify the Hex code for the color used for the Choropleth background. For example: \"#0000FF\".',\n        pattern: COLOR_OR_TOKEN_PATTERN,\n        type: 'string',\n    },\n    name: { description: 'Name of the Visualization', type: 'string' },\n    sourceBounds: {\n        description:\n            'Specify the bounds of the geographic area as lat:{min:..., max:...}, long:{min:..., max:..}.',\n        type: 'object',\n    },\n    logicalBounds: {\n        description:\n            'Specify the logical bounds of the projected map as x:{min:..., max:...}, y:{min:..., max:..}.',\n        type: 'object',\n    },\n    geoFeatureGroups: {\n        type: 'array',\n        items: { type: 'object' },\n        description:\n            'A geo feature group consists of a name, logical bounds, sourcebounds and a featureMatcher, which consists of a property name and a regex to check against that property.',\n    },\n};\n","const editorConfig = [];\n\nexport default editorConfig;\n"],"sourceRoot":""}