{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@splunk/react-visualizations/utils/numberUtils\"","webpack:///external \"@splunk/moment\"","webpack:///external \"lodash\"","webpack:///./src/utils/timeUtils.js"],"names":["TIMESTAMP_FORMATS","year","month","day","hour","minute","second","millisecond","timeToMoment","t","isNumerial","parseNumber","moment","time","isNumber","computeGranularity","timeArray","defaultGranularity","granularity","each","formatTime"],"mappings":"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","file":"timeUtils.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 54);\n","module.exports = require(\"@splunk/react-visualizations/utils/numberUtils\");","module.exports = require(\"@splunk/moment\");","module.exports = require(\"lodash\");","import { each, isNumber } from 'lodash';\nimport moment from '@splunk/moment';\nimport { isNumerial, parseNumber } from '@splunk/react-visualizations/utils/numberUtils';\n\nconst TIMESTAMP_FORMATS = {\n    year: 'YYYY',\n    month: 'YYYY-MM',\n    day: 'YYYY-MM-DD',\n    hour: 'YYYY-MM-DD hh:00 A',\n    minute: 'YYYY-MM-DD hh:mm:00 A',\n    second: 'YYYY-MM-DD hh:mm:ss A',\n    millisecond: 'YYYY-MM-DD hh:mm:ss.SSS A',\n};\n\nconst timeToMoment = time => {\n    // try convert epoch time into number first\n    const t = isNumerial(time) ? parseNumber(time) : time;\n    // if splunk time zone is set, create time in splunk timezone and locale\n    if (moment.getDefaultSplunkTimezone()) {\n        return moment.newSplunkTime({ time: t });\n    }\n    // fallback to moment default\n    return isNumber(t) ? moment.unix(t) : moment(t);\n};\n\nexport const computeGranularity = (timeArray = [], defaultGranularity = 'second') => {\n    let granularity = defaultGranularity;\n    each(timeArray, time => {\n        const t = timeToMoment(time);\n        if (t.isValid()) {\n            if (t.millisecond() > 0) {\n                granularity = 'millisecond';\n            } else if (t.second() > 0) {\n                granularity = 'second';\n            } else if (t.minute() > 0) {\n                granularity = 'minute';\n            } else if (t.hour() > 0) {\n                granularity = 'hour';\n            } else if (t.date() > 1) {\n                granularity = 'day';\n            } else if (t.month() > 1) {\n                granularity = 'month';\n            } else if (t.year() > 1) {\n                granularity = 'year';\n            }\n        }\n    });\n    return granularity;\n};\n\nexport const formatTime = (timeStr, granularity = 'millisecond') => {\n    const time = timeToMoment(timeStr);\n    if (time.isValid()) {\n        return time.format(TIMESTAMP_FORMATS[granularity]);\n    }\n    return timeStr;\n};\n"],"sourceRoot":""}