{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@babel/runtime/helpers/toConsumableArray\"","webpack:///external \"lodash/zip\"","webpack:///external \"lodash/isEqual\"","webpack:///external \"lodash/findIndex\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"lodash/isString\"","webpack:///external \"lodash/zipObject\"","webpack:///./src/utils/DataSet.js","webpack:///external \"@splunk/react-visualizations/utils/numberUtils\"","webpack:///external \"lodash/each\"","webpack:///external \"lodash/isNull\"","webpack:///external \"lodash/slice\"","webpack:///./src/utils/dataUtils.js"],"names":["DataSet","fields","columns","isString","name","field","results","zipObject","rows","zip","index","findIndex","isEqual","dataSet","fieldList","rowSample","col","row","DATA_FIELD_REGEX","isDataField","isTimeField","fieldName","isSparklineArray","column","Array","isSparklineData","value","isNumericArray","numericCount","nonNullCount","each","v","isNull","isNumerial","truncateData","data","truncationLimit","truncatedResults","slice","formatData","ds","limit","parseInt","options","truncateParsedData","truncatedData","Object"],"mappings":"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","file":"dataUtils.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 46);\n","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"lodash/zip\");","module.exports = require(\"lodash/isEqual\");","module.exports = require(\"lodash/findIndex\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"lodash/isString\");","module.exports = require(\"lodash/zipObject\");","import isEqual from 'lodash/isEqual';\nimport isString from 'lodash/isString';\nimport zip from 'lodash/zip';\nimport zipObject from 'lodash/zipObject';\nimport findIndex from 'lodash/findIndex';\n\n/**\n * @file\n * DataSet represent a set of 2 dimensional data\n */\nexport default class DataSet {\n    constructor(fields = [], columns = []) {\n        this.fields = fields.map(field => {\n            if (isString(field)) {\n                return {\n                    name: field,\n                };\n            }\n            return field;\n        });\n        this.columns = columns;\n    }\n\n    /**\n     * Returns a empty Dataset\n     *\n     * Examples:\n     * ```js\n     * const empty = DataSet.empty();\n     * ```\n     * @return {DataSet} DataSet\n     * @public\n     */\n    static empty() {\n        return new DataSet();\n    }\n\n    /**\n     * Construct a Dataset with data in json array format\n     *\n     * Examples:\n     * ```js\n     *  const dataset = DataSet.fromJSONArray(\n     *     [{ name: 'x' }, { name: 'y' }, { name: 'z' }],\n     *     [{ x: 'a', y: 4, z: 70 }, { x: 'b', y: 5, z: 80 }, { x: 'c', y: 6, z: 90 }]\n     *  );\n     * ```\n     * @return {DataSet} DataSet\n     * @public\n     */\n    static fromJSONArray(fields = [], results = []) {\n        let fieldList = fields;\n        if (fieldList == null || fieldList.length === 0) {\n            if (results.length > 0) {\n                const rowSample = results[0];\n                fieldList = Object.keys(rowSample).map(field => ({ name: field }));\n            } else {\n                fieldList = [];\n            }\n        }\n\n        const columns = fieldList.map(({ name }) =>\n            results.reduce((col, row) => {\n                // if a field is not present on a result entry we set it to null\n                col.push(row[name] === undefined ? null : row[name]);\n                return col;\n            }, [])\n        );\n\n        return new DataSet(fieldList, columns);\n    }\n\n    /**\n     * Construct a Dataset with data in json columns format\n     *\n     * Examples:\n     * ```js\n     *  const dataset = DataSet.fromJSONCols(\n     *     [{ name: 'x' }, { name: 'y' }, { name: 'z' }],\n     *     [['a', 'b', 'c'], [4, 5, 6], [70, 80, 90]];\n     *  );\n     * ```\n     * @return {DataSet} DataSet\n     * @public\n     */\n    static fromJSONCols(fields = [], columns = []) {\n        return new DataSet(fields, columns);\n    }\n\n    /**\n     * Construct a Dataset with data in json rows format\n     *\n     * Examples:\n     * ```js\n     *  const dataset = DataSet.fromJSONRows(\n     *     [{ name: 'x' }, { name: 'y' }, { name: 'z' }],\n     *     [['a', 4, 70], ['b', 5, 80], ['c', 6, 90]];\n     *  );\n     * ```\n     * @return {DataSet} DataSet\n     * @public\n     */\n    static fromJSONRows(fields = [], rows = []) {\n        return new DataSet(fields, zip(...rows));\n    }\n\n    /**\n     * Convert data to json array\n     * @return {Object} data in json array format\n     * @public\n     */\n    toJSONArray() {\n        return {\n            fields: this.fields,\n            results: zip(...this.columns).map(row =>\n                zipObject(\n                    this.fields.map(field => field.name),\n                    row\n                )\n            ),\n        };\n    }\n\n    /**\n     * Convert data to json columns\n     * @return {Object} data in json columns format\n     * @public\n     */\n    toJSONCols() {\n        const { fields, columns } = this;\n\n        return { fields, columns };\n    }\n\n    /**\n     * Convert data to json rows\n     * @return {Object} data in json rows format\n     * @public\n     */\n    toJSONRows() {\n        return {\n            fields: this.fields,\n            rows: zip(...this.columns),\n        };\n    }\n\n    /**\n     * List all fields\n     * @return {Object} fields array\n     * @public\n     */\n    getFields() {\n        return this.fields;\n    }\n\n    /**\n     * List data columns\n     * @return {Object} columns array\n     * @public\n     */\n    getColumns() {\n        return this.columns;\n    }\n\n    /**\n     *\n     * @param {String} fieldName\n     * @return {Object} column data\n     * @public\n     */\n    getColumnByField(fieldName) {\n        const index = findIndex(this.fields, ({ name }) => name === fieldName);\n        return this.columns[index];\n    }\n\n    /**\n     *\n     * @param {String} fieldName\n     * @return {Boolean}\n     * @public\n     */\n    hasField(fieldName) {\n        return findIndex(this.fields, ({ name }) => name === fieldName) !== -1;\n    }\n\n    /**\n     * @return {Boolean} true if DataSet has no data\n     * @public\n     */\n    isEmpty() {\n        return this.columns.length === 0;\n    }\n\n    /**\n     *\n     * @param {DataSet} dataSet DataSet to compare\n     * @return {Boolean} true if another dataset is equals to current one\n     * @public\n     */\n    equals(dataSet) {\n        return isEqual(this.fields, dataSet.fields) && isEqual(this.columns, dataSet.columns);\n    }\n}\n","module.exports = require(\"@splunk/react-visualizations/utils/numberUtils\");","module.exports = require(\"lodash/each\");","module.exports = require(\"lodash/isNull\");","module.exports = require(\"lodash/slice\");","import each from 'lodash/each';\nimport isNull from 'lodash/isNull';\nimport slice from 'lodash/slice';\nimport { isNumerial } from '@splunk/react-visualizations/utils/numberUtils';\nimport DataSet from './DataSet';\n\nconst DATA_FIELD_REGEX = /^[^_]|^_time$|^_raw$/;\n\nexport const isDataField = fieldName => DATA_FIELD_REGEX.test(fieldName);\nexport const isTimeField = fieldName =>\n    fieldName === '_time' || fieldName === 'earliest_time' || fieldName === 'latest_time';\n/**\n *\n * @param {*} column\n */\nexport const isSparklineArray = column =>\n    column.length > 0 && Array.isArray(column[0]) && column[0][0] === '##__SPARKLINE__##';\n/**\n *\n * @param {*} value\n */\nexport const isSparklineData = value => Array.isArray(value) && value[0] === '##__SPARKLINE__##';\n\n/**\n * Checks if a list of values can be considered \"numeric\"\n * @param {array} values\n * @returns {boolean} true if half or more of the non-null values can be parsed to a float.\n * @public\n */\nexport const isNumericArray = values => {\n    let numericCount = 0;\n    let nonNullCount = 0;\n\n    each(values, value => {\n        // in the case of multivalue fields, use the first value\n        let v = value;\n        if (Array.isArray(value)) {\n            v = value.length > 0 ? value[0] : null;\n        }\n        if (isNull(v)) {\n            return;\n        }\n        nonNullCount += 1;\n        if (isNumerial(v)) {\n            numericCount += 1;\n        }\n    });\n    if (nonNullCount === 0) {\n        return false;\n    }\n    return numericCount >= nonNullCount / 2;\n};\n\n/**\n * Truncate DataSet to limit result\n * @param {data} array of 2 dimensional data\n * @param {truncationLimit} integer\n */\nexport const truncateData = (data, truncationLimit) => {\n    if (data.columns[0] && truncationLimit > 0 && data.columns[0].length > truncationLimit) {\n        const { fields, results } = data.toJSONArray();\n        const truncatedResults = slice(results, 0, truncationLimit);\n        return DataSet.fromJSONArray(fields, truncatedResults);\n    }\n    return data;\n};\n\n// todo: need remove after breaking out all visualizations\n/**\n * formatData checks for null value and resultTruncationLimit option\n * @param {dataSet} set of 2 dimensional data\n * @param {options} charting options\n *\n */\nexport const formatData = (dataSet, options) => {\n    if (dataSet == null) {\n        return null;\n    }\n    let ds = dataSet;\n    const limit = parseInt(options['chart.resultTruncationLimit'], 10);\n    if (limit > 0) {\n        ds = truncateData(dataSet, limit);\n    }\n    return ds;\n};\n\n// todo: this function may need go to parser in the future. DataSet can be removed when this function go to parser\n/**\n * truncateParsedData truncate the label and value for the parsed dataset\n * @param {dataSet}\n * @param {truncationLimit} options['chart.resultTruncationLimit']\n *\n */\nexport const truncateParsedData = (dataSet, truncationLimit) => {\n    if (!dataSet) {\n        return null;\n    }\n\n    const limit = parseInt(truncationLimit, 10);\n    if (!limit || limit <= 0) {\n        return dataSet;\n    }\n\n    const truncatedData = {};\n    Object.keys(dataSet).forEach(key => {\n        if (dataSet[key] && Array.isArray(dataSet[key])) {\n            truncatedData[key] = dataSet[key].slice(0, limit);\n        } else {\n            truncatedData[key] = dataSet[key];\n        }\n    });\n    return truncatedData;\n};\n"],"sourceRoot":""}