{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@babel/runtime/helpers/toConsumableArray\"","webpack:///external \"lodash/isString\"","webpack:///external \"lodash/zipObject\"","webpack:///./src/utils/DataSet.js","webpack:///external \"lodash/zip\"","webpack:///external \"lodash/isEqual\"","webpack:///external \"lodash/findIndex\"","webpack:///./src/utils/testHelper.js","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"@babel/runtime/helpers/createClass\""],"names":["DataSet","fields","columns","isString","name","field","results","zipObject","rows","zip","index","findIndex","isEqual","dataSet","fieldList","rowSample","col","row","inputDataset","originalData","truncatedData","getOriginalDataSet","getTruncatedDataSet","getBaseVisualizationProps","dataSources","width","height","mode","options","style","hasEventHandlers","onOptionsChange","expect","onEventTrigger","onRequestParamsChange","visualizationApiRef","onSelected","onComputedProps","dataSourcesForChoroplethViz","primary","data","dataSourcesForTimeViz","requestParams","offset","count","groupby_rank","meta","totalCount","annotation","dataSourcesForRelationViz","dataSourcesForPieViz","dataSourcesWithNumAndColor"],"mappings":"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","file":"testHelper.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 52);\n","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"lodash/isString\");","module.exports = require(\"lodash/zipObject\");","import isEqual from 'lodash/isEqual';\nimport isString from 'lodash/isString';\nimport zip from 'lodash/zip';\nimport zipObject from 'lodash/zipObject';\nimport findIndex from 'lodash/findIndex';\n\n/**\n * @file\n * DataSet represent a set of 2 dimensional data\n */\nexport default class DataSet {\n    constructor(fields = [], columns = []) {\n        this.fields = fields.map(field => {\n            if (isString(field)) {\n                return {\n                    name: field,\n                };\n            }\n            return field;\n        });\n        this.columns = columns;\n    }\n\n    /**\n     * Returns a empty Dataset\n     *\n     * Examples:\n     * ```js\n     * const empty = DataSet.empty();\n     * ```\n     * @return {DataSet} DataSet\n     * @public\n     */\n    static empty() {\n        return new DataSet();\n    }\n\n    /**\n     * Construct a Dataset with data in json array format\n     *\n     * Examples:\n     * ```js\n     *  const dataset = DataSet.fromJSONArray(\n     *     [{ name: 'x' }, { name: 'y' }, { name: 'z' }],\n     *     [{ x: 'a', y: 4, z: 70 }, { x: 'b', y: 5, z: 80 }, { x: 'c', y: 6, z: 90 }]\n     *  );\n     * ```\n     * @return {DataSet} DataSet\n     * @public\n     */\n    static fromJSONArray(fields = [], results = []) {\n        let fieldList = fields;\n        if (fieldList == null || fieldList.length === 0) {\n            if (results.length > 0) {\n                const rowSample = results[0];\n                fieldList = Object.keys(rowSample).map(field => ({ name: field }));\n            } else {\n                fieldList = [];\n            }\n        }\n\n        const columns = fieldList.map(({ name }) =>\n            results.reduce((col, row) => {\n                // if a field is not present on a result entry we set it to null\n                col.push(row[name] === undefined ? null : row[name]);\n                return col;\n            }, [])\n        );\n\n        return new DataSet(fieldList, columns);\n    }\n\n    /**\n     * Construct a Dataset with data in json columns format\n     *\n     * Examples:\n     * ```js\n     *  const dataset = DataSet.fromJSONCols(\n     *     [{ name: 'x' }, { name: 'y' }, { name: 'z' }],\n     *     [['a', 'b', 'c'], [4, 5, 6], [70, 80, 90]];\n     *  );\n     * ```\n     * @return {DataSet} DataSet\n     * @public\n     */\n    static fromJSONCols(fields = [], columns = []) {\n        return new DataSet(fields, columns);\n    }\n\n    /**\n     * Construct a Dataset with data in json rows format\n     *\n     * Examples:\n     * ```js\n     *  const dataset = DataSet.fromJSONRows(\n     *     [{ name: 'x' }, { name: 'y' }, { name: 'z' }],\n     *     [['a', 4, 70], ['b', 5, 80], ['c', 6, 90]];\n     *  );\n     * ```\n     * @return {DataSet} DataSet\n     * @public\n     */\n    static fromJSONRows(fields = [], rows = []) {\n        return new DataSet(fields, zip(...rows));\n    }\n\n    /**\n     * Convert data to json array\n     * @return {Object} data in json array format\n     * @public\n     */\n    toJSONArray() {\n        return {\n            fields: this.fields,\n            results: zip(...this.columns).map(row =>\n                zipObject(\n                    this.fields.map(field => field.name),\n                    row\n                )\n            ),\n        };\n    }\n\n    /**\n     * Convert data to json columns\n     * @return {Object} data in json columns format\n     * @public\n     */\n    toJSONCols() {\n        const { fields, columns } = this;\n\n        return { fields, columns };\n    }\n\n    /**\n     * Convert data to json rows\n     * @return {Object} data in json rows format\n     * @public\n     */\n    toJSONRows() {\n        return {\n            fields: this.fields,\n            rows: zip(...this.columns),\n        };\n    }\n\n    /**\n     * List all fields\n     * @return {Object} fields array\n     * @public\n     */\n    getFields() {\n        return this.fields;\n    }\n\n    /**\n     * List data columns\n     * @return {Object} columns array\n     * @public\n     */\n    getColumns() {\n        return this.columns;\n    }\n\n    /**\n     *\n     * @param {String} fieldName\n     * @return {Object} column data\n     * @public\n     */\n    getColumnByField(fieldName) {\n        const index = findIndex(this.fields, ({ name }) => name === fieldName);\n        return this.columns[index];\n    }\n\n    /**\n     *\n     * @param {String} fieldName\n     * @return {Boolean}\n     * @public\n     */\n    hasField(fieldName) {\n        return findIndex(this.fields, ({ name }) => name === fieldName) !== -1;\n    }\n\n    /**\n     * @return {Boolean} true if DataSet has no data\n     * @public\n     */\n    isEmpty() {\n        return this.columns.length === 0;\n    }\n\n    /**\n     *\n     * @param {DataSet} dataSet DataSet to compare\n     * @return {Boolean} true if another dataset is equals to current one\n     * @public\n     */\n    equals(dataSet) {\n        return isEqual(this.fields, dataSet.fields) && isEqual(this.columns, dataSet.columns);\n    }\n}\n","module.exports = require(\"lodash/zip\");","module.exports = require(\"lodash/isEqual\");","module.exports = require(\"lodash/findIndex\");","/* eslint-env jest */\nimport DataSet from './DataSet';\n\nconst inputDataset = {\n    fields: [{ name: '_time' }, { name: '_raw' }, { name: 'foo2' }, { name: 'foo3' }, { name: 'foo4' }],\n    columns: [\n        [\n            '2018-05-02T18:10:46.000-07:00',\n            '2018-05-02T18:11:47.000-07:00',\n            '2018-05-02T18:12:48.000-07:00',\n            '2018-05-02T18:13:49.000-07:00',\n            '2018-05-02T18:15:59.000-07:00',\n        ],\n        ['2', '10', '13', '60', '43'],\n        ['1', '1', '1', '1', '1'],\n        ['2', '30', '16', '10', '48'],\n        ['2', '20', '0', null, '42'],\n    ],\n};\n\nconst originalData = new DataSet(inputDataset.fields, inputDataset.columns);\n\nconst truncatedData = {\n    fields: [{ name: '_time' }, { name: '_raw' }, { name: 'foo2' }, { name: 'foo3' }, { name: 'foo4' }],\n    columns: [\n        ['2018-05-02T18:10:46.000-07:00', '2018-05-02T18:11:47.000-07:00'],\n        ['2', '10'],\n        ['1', '1'],\n        ['2', '30'],\n        ['2', '20'],\n    ],\n};\n\nexport const getOriginalDataSet = () => originalData;\n\nexport const getTruncatedDataSet = () => truncatedData;\n\n/*\n * get expected base visualization props for unit test\n * @params {Object} dataSources\n * @returns {Object} props\n */\nexport const getBaseVisualizationProps = dataSources => ({\n    dataSources,\n    width: '100%',\n    height: 250,\n    mode: 'view',\n    options: {},\n    style: {},\n    hasEventHandlers: false,\n    onOptionsChange: expect.any(Function),\n    onEventTrigger: expect.any(Function),\n    onRequestParamsChange: expect.any(Function),\n    visualizationApiRef: expect.any(Function),\n    onSelected: expect.any(Function),\n    onComputedProps: expect.any(Function),\n});\n\n/*\n * dataSources for choropleth visualization in unit test\n */\nexport const dataSourcesForChoroplethViz = {\n    primary: {\n        data: {\n            fields: [\n                {\n                    name: 'country',\n                },\n                {\n                    name: 'value',\n                },\n            ],\n            columns: [\n                ['United States', 'Russia', 'Australia', 'Brazil', 'Japan', 'China', 'India', 'Canada'],\n                [17, 3, 65, 385, 69, 9, 142, 23],\n            ],\n        },\n    },\n};\n\n/*\n * dataSources for time visualization in unit test\n */\nexport const dataSourcesForTimeViz = {\n    primary: {\n        requestParams: { offset: 0, count: 20 },\n        data: {\n            fields: [{ name: '_time', groupby_rank: '0' }, { name: 'count' }, { name: '_span' }],\n            columns: [\n                [\n                    '2018-05-02T18:15:46.000-07:00',\n                    '2018-05-02T18:15:47.000-07:00',\n                    '2018-05-02T18:15:48.000-07:00',\n                    '2018-05-02T18:15:49.000-07:00',\n                    '2018-05-02T18:15:50.000-07:00',\n                ],\n                ['2', '10', '13', '60', '43'],\n                ['1', '1', '1', '1', '1'],\n            ],\n        },\n        meta: { totalCount: 20 },\n    },\n    annotation: {\n        requestParams: { offset: 0, count: 20 },\n        data: {\n            fields: [\n                { name: '_time', groupby_rank: '0' },\n                { name: 'annotation_label' },\n                { name: 'annotation_color' },\n            ],\n            columns: [\n                [\n                    '2018-05-02T18:11:50.000-07:00',\n                    '2018-05-02T18:13:25.000-07:00',\n                    '2018-05-02T18:14:30.000-07:00',\n                ],\n                ['houston, we have a problem', 'just close the jira', 'looking good now'],\n                ['#f44271', '#f4a941', '#41f49a'],\n            ],\n        },\n        meta: { totalCount: 20 },\n    },\n};\n\n/*\n * dataSources for bubble, scatter, punchcard visualization in unit test\n */\nexport const dataSourcesForRelationViz = {\n    primary: {\n        requestParams: { offset: 0, count: 20 },\n        data: {\n            fields: [\n                {\n                    name: 'date_hour',\n                },\n                {\n                    name: 'count',\n                },\n                {\n                    name: 'mode(status)',\n                },\n                {\n                    name: 'status',\n                },\n            ],\n            columns: [\n                ['13', '14', '15', '16', '17'],\n                ['1109', '1108', '1098', '1088', '1097'],\n                ['404', '200', '401', '201', '401'],\n                ['401', '201', '401', '201', '401'],\n            ],\n        },\n        meta: { totalCount: 20 },\n    },\n};\n\n/*\n * dataSources for pie visualization in unit test\n */\nexport const dataSourcesForPieViz = {\n    primary: {\n        requestParams: { offset: 0, count: 20 },\n        data: {\n            fields: [{ name: 'component' }, { name: 'count' }],\n            columns: [\n                ['January', 'February', 'March', 'April', 'May'],\n                ['1', '1', '1', '2', '10'],\n            ],\n        },\n        meta: { totalCount: 20 },\n    },\n};\n\n/*\n * dataSources for shape, gauge, and single value visualization in unit test\n */\nexport const dataSourcesWithNumAndColor = {\n    primary: {\n        data: {\n            columns: [\n                ['1', '62', '103', '308', '587', '876', '930', '1320'],\n                ['#FF0000', '#00FFFF', '#0000FF', '#800080', '#FFFF00', '#FFA500', '#A52A2A', '#008000'],\n                ['1320', '102', '103', '98', '587', '345', '123', '98'],\n            ],\n            fields: [\n                {\n                    name: 'count',\n                },\n                {\n                    name: 'color',\n                },\n                {\n                    name: 'number',\n                },\n            ],\n        },\n        meta: {},\n    },\n};\n","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/createClass\");"],"sourceRoot":""}