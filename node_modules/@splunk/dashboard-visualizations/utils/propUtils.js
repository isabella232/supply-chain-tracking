/*!
 * Copyright © 2018 Splunk Inc.
 * SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or
 * in part without a valid written license from Splunk Inc. is PROHIBITED.
 */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 51);
/******/ })
/************************************************************************/
/******/ ({

/***/ 1:
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/toConsumableArray");

/***/ }),

/***/ 10:
/***/ (function(module, exports) {

module.exports = require("lodash/isString");

/***/ }),

/***/ 11:
/***/ (function(module, exports) {

module.exports = require("lodash/zipObject");

/***/ }),

/***/ 12:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return DataSet; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(4);
/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var lodash_isString__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(10);
/* harmony import */ var lodash_isString__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_isString__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var lodash_zip__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(2);
/* harmony import */ var lodash_zip__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lodash_zip__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var lodash_zipObject__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(11);
/* harmony import */ var lodash_zipObject__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash_zipObject__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var lodash_findIndex__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(5);
/* harmony import */ var lodash_findIndex__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(lodash_findIndex__WEBPACK_IMPORTED_MODULE_7__);








/**
 * @file
 * DataSet represent a set of 2 dimensional data
 */

var DataSet = /*#__PURE__*/function () {
  function DataSet() {
    var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    var columns = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, DataSet);

    this.fields = fields.map(function (field) {
      if (lodash_isString__WEBPACK_IMPORTED_MODULE_4___default()(field)) {
        return {
          name: field
        };
      }

      return field;
    });
    this.columns = columns;
  }
  /**
   * Returns a empty Dataset
   *
   * Examples:
   * ```js
   * const empty = DataSet.empty();
   * ```
   * @return {DataSet} DataSet
   * @public
   */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(DataSet, [{
    key: "toJSONArray",
    value:
    /**
     * Convert data to json array
     * @return {Object} data in json array format
     * @public
     */
    function toJSONArray() {
      var _this = this;

      return {
        fields: this.fields,
        results: lodash_zip__WEBPACK_IMPORTED_MODULE_5___default.a.apply(void 0, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(this.columns)).map(function (row) {
          return lodash_zipObject__WEBPACK_IMPORTED_MODULE_6___default()(_this.fields.map(function (field) {
            return field.name;
          }), row);
        })
      };
    }
    /**
     * Convert data to json columns
     * @return {Object} data in json columns format
     * @public
     */

  }, {
    key: "toJSONCols",
    value: function toJSONCols() {
      var fields = this.fields,
          columns = this.columns;
      return {
        fields: fields,
        columns: columns
      };
    }
    /**
     * Convert data to json rows
     * @return {Object} data in json rows format
     * @public
     */

  }, {
    key: "toJSONRows",
    value: function toJSONRows() {
      return {
        fields: this.fields,
        rows: lodash_zip__WEBPACK_IMPORTED_MODULE_5___default.a.apply(void 0, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(this.columns))
      };
    }
    /**
     * List all fields
     * @return {Object} fields array
     * @public
     */

  }, {
    key: "getFields",
    value: function getFields() {
      return this.fields;
    }
    /**
     * List data columns
     * @return {Object} columns array
     * @public
     */

  }, {
    key: "getColumns",
    value: function getColumns() {
      return this.columns;
    }
    /**
     *
     * @param {String} fieldName
     * @return {Object} column data
     * @public
     */

  }, {
    key: "getColumnByField",
    value: function getColumnByField(fieldName) {
      var index = lodash_findIndex__WEBPACK_IMPORTED_MODULE_7___default()(this.fields, function (_ref) {
        var name = _ref.name;
        return name === fieldName;
      });
      return this.columns[index];
    }
    /**
     *
     * @param {String} fieldName
     * @return {Boolean}
     * @public
     */

  }, {
    key: "hasField",
    value: function hasField(fieldName) {
      return lodash_findIndex__WEBPACK_IMPORTED_MODULE_7___default()(this.fields, function (_ref2) {
        var name = _ref2.name;
        return name === fieldName;
      }) !== -1;
    }
    /**
     * @return {Boolean} true if DataSet has no data
     * @public
     */

  }, {
    key: "isEmpty",
    value: function isEmpty() {
      return this.columns.length === 0;
    }
    /**
     *
     * @param {DataSet} dataSet DataSet to compare
     * @return {Boolean} true if another dataset is equals to current one
     * @public
     */

  }, {
    key: "equals",
    value: function equals(dataSet) {
      return lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default()(this.fields, dataSet.fields) && lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default()(this.columns, dataSet.columns);
    }
  }], [{
    key: "empty",
    value: function empty() {
      return new DataSet();
    }
    /**
     * Construct a Dataset with data in json array format
     *
     * Examples:
     * ```js
     *  const dataset = DataSet.fromJSONArray(
     *     [{ name: 'x' }, { name: 'y' }, { name: 'z' }],
     *     [{ x: 'a', y: 4, z: 70 }, { x: 'b', y: 5, z: 80 }, { x: 'c', y: 6, z: 90 }]
     *  );
     * ```
     * @return {DataSet} DataSet
     * @public
     */

  }, {
    key: "fromJSONArray",
    value: function fromJSONArray() {
      var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      var results = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
      var fieldList = fields;

      if (fieldList == null || fieldList.length === 0) {
        if (results.length > 0) {
          var rowSample = results[0];
          fieldList = Object.keys(rowSample).map(function (field) {
            return {
              name: field
            };
          });
        } else {
          fieldList = [];
        }
      }

      var columns = fieldList.map(function (_ref3) {
        var name = _ref3.name;
        return results.reduce(function (col, row) {
          // if a field is not present on a result entry we set it to null
          col.push(row[name] === undefined ? null : row[name]);
          return col;
        }, []);
      });
      return new DataSet(fieldList, columns);
    }
    /**
     * Construct a Dataset with data in json columns format
     *
     * Examples:
     * ```js
     *  const dataset = DataSet.fromJSONCols(
     *     [{ name: 'x' }, { name: 'y' }, { name: 'z' }],
     *     [['a', 'b', 'c'], [4, 5, 6], [70, 80, 90]];
     *  );
     * ```
     * @return {DataSet} DataSet
     * @public
     */

  }, {
    key: "fromJSONCols",
    value: function fromJSONCols() {
      var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      var columns = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
      return new DataSet(fields, columns);
    }
    /**
     * Construct a Dataset with data in json rows format
     *
     * Examples:
     * ```js
     *  const dataset = DataSet.fromJSONRows(
     *     [{ name: 'x' }, { name: 'y' }, { name: 'z' }],
     *     [['a', 4, 70], ['b', 5, 80], ['c', 6, 90]];
     *  );
     * ```
     * @return {DataSet} DataSet
     * @public
     */

  }, {
    key: "fromJSONRows",
    value: function fromJSONRows() {
      var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      var rows = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
      return new DataSet(fields, lodash_zip__WEBPACK_IMPORTED_MODULE_5___default.a.apply(void 0, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(rows)));
    }
  }]);

  return DataSet;
}();



/***/ }),

/***/ 14:
/***/ (function(module, exports) {

module.exports = require("lodash/get");

/***/ }),

/***/ 2:
/***/ (function(module, exports) {

module.exports = require("lodash/zip");

/***/ }),

/***/ 24:
/***/ (function(module, exports) {

module.exports = require("@splunk/visualizations-shared/console");

/***/ }),

/***/ 4:
/***/ (function(module, exports) {

module.exports = require("lodash/isEqual");

/***/ }),

/***/ 45:
/***/ (function(module, exports) {

module.exports = require("lodash/isPlainObject");

/***/ }),

/***/ 5:
/***/ (function(module, exports) {

module.exports = require("lodash/findIndex");

/***/ }),

/***/ 51:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDataSet", function() { return getDataSet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRequestParams", function() { return getRequestParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMeta", function() { return getMeta; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAnnotationLabelAndColor", function() { return getAnnotationLabelAndColor; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(45);
/* harmony import */ var lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _splunk_visualizations_shared_console__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(24);
/* harmony import */ var _splunk_visualizations_shared_console__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_splunk_visualizations_shared_console__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _DataSet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(12);




 // Todo: can be removed/refactored in the future if we have data contract parser for all visualizations
// Some functions are still used by Gauges, we can remove them when gauges have been refreshed.

/**
 * Returns a dataset instance based on data from props
 * @param {object} vizProps
 * @param {string} [dataSourceType='primary']
 * @returns {DataSet}
 */

function getDataSet(vizProps) {
  var dataSourceType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'primary';
  var data = lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(vizProps, ['dataSources', dataSourceType, 'data']);
  return data ? new _DataSet__WEBPACK_IMPORTED_MODULE_4__["default"](data.fields, data.columns) : null;
}
/**
 * Returns the request parameters for a dataSourceType in vizProps
 * @param {object} dataSourcesProps
 * @param {string} [dataSourceType='primary']
 * @returns {object}
 */

function getRequestParams(vizProps) {
  var dataSourceType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'primary';
  return lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(vizProps, ['dataSources', dataSourceType, 'requestParams']);
}
/**
 * Returns the meta data for a dataSourceType in vizProps
 * @param {object} vizProps
 * @param {string} [dataSourceType='primary']
 * @returns {object}
 */

function getMeta(vizProps) {
  var dataSourceType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'primary';
  return lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(vizProps, ['dataSources', dataSourceType, 'meta'], {});
}
/**
 * Returns the annotation label and color as arrays
 * If annotation.categoryColors is defined with labels, as an object in options, such as {"Server Stop":"#FF0000","Server Start":"00FF00"},
 * parse annotation color and labels from options, otherwise from encoding.
 * @param {Object} input
 * @param {(Object|String)} input.annotationCategoryColor  annotation.categoryColors option
 * @param {Array} input.annotationLabelEncoding
 * @param {Array} input.annotationColorEncoding
 * @returns {Object} annotation
 * @returns {Array} annotation.annotationLabel
 * @returns {Array} annotation.annotationColor
 */

function getAnnotationLabelAndColor(_ref) {
  var annotationCategoryColor = _ref.annotationCategoryColor,
      annotationLabelEncoding = _ref.annotationLabelEncoding,
      annotationColorEncoding = _ref.annotationColorEncoding;

  if (!lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_2___default()(annotationCategoryColor) && typeof annotationCategoryColor !== 'string') {
    return {
      annotationLabel: annotationLabelEncoding,
      annotationColor: annotationColorEncoding
    };
  }

  var annotationObj = annotationCategoryColor;

  if (typeof annotationCategoryColor === 'string') {
    _splunk_visualizations_shared_console__WEBPACK_IMPORTED_MODULE_3___default.a.warn("The option type 'string' for 'annotation.categoryColors' has been deprecated.");

    try {
      annotationObj = JSON.parse(annotationCategoryColor);
    } catch (e) {
      _splunk_visualizations_shared_console__WEBPACK_IMPORTED_MODULE_3___default.a.warn("'annotation.categoryColors' option is not a valid JSON string.");
      return {
        annotationLabel: annotationLabelEncoding,
        annotationColor: annotationColorEncoding
      };
    }
  } // If no annotationLabel is defined in encoding, generate a sequence of annotationLabel from the keys of annotation.categoryColor option.


  var annotationLabel = annotationLabelEncoding && Array.isArray(annotationLabelEncoding) ? annotationLabelEncoding : Object.keys(annotationObj); // If annotationColor encoding and annotation.categoryColors option are both defined, take the colors defined in color option,
  // and the remaining colors from the encoding if they are not defined in option.
  // Or if annotationColor encoding is not defined, use annotation.categoryColors option to generate a color array.

  var annotationColor;

  if (annotationColorEncoding && Array.isArray(annotationColorEncoding)) {
    annotationColor = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(annotationColorEncoding);
    annotationLabel.forEach(function (label, i) {
      if (annotationObj[label]) {
        annotationColor[i] = annotationObj[label];
      }
    });
  } else {
    annotationColor = annotationLabel.map(function (label) {
      return annotationObj[label];
    });
  }

  return {
    annotationLabel: annotationLabel,
    annotationColor: annotationColor
  };
}

/***/ }),

/***/ 8:
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/classCallCheck");

/***/ }),

/***/ 9:
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/createClass");

/***/ })

/******/ });
//# sourceMappingURL=propUtils.js.map