{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"styled-components\"","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"lodash\"","webpack:///external \"@babel/runtime/helpers/inherits\"","webpack:///external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack:///external \"@babel/runtime/helpers/getPrototypeOf\"","webpack:///./src/visualizations/SvgChoropleth/SvgChoropleth.tsx"],"names":[],"mappings":"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","file":"SvgChoropleth.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 29);\n","module.exports = require(\"react\");","module.exports = require(\"styled-components\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"lodash\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","import * as React from 'react';\nimport { get, isEqual } from 'lodash';\nimport { ISvgFeatureCollection } from './src/utils/ISvgFeatureCollection';\nimport { DataPoint } from './src/utils/ICoordinateTransformation';\nimport styled from 'styled-components';\n\nexport const DATA_ATTRIBUTE = 'data-value';\n\nexport interface SvgChoroplethProps {\n    featureCollection: ISvgFeatureCollection;\n    data: { featureIDs: string[]; fill: string[]; values: any[] };\n    fillColor: string;\n    strokeColor: string;\n    strokeHighlightColor?: string;\n    backgroundColor?: string;\n    selector: string;\n    onFeatureHover: (params: { featureId: string; value: any; label?: string }) => void;\n    onClick?: (sourceCoordinates: DataPoint, featureId: string) => void;\n}\n\nexport interface SvgChoroplethState {\n    svgNode: React.ReactNode;\n}\n\nexport { GeoFeatureGroup } from './src/utils/GeoTypes';\n\ninterface StyledSvgChoroplethProps {\n    readonly backgroundColor: string;\n}\n\nconst StyledSvgChoropleth = styled.div<StyledSvgChoroplethProps>`\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    background-color: ${(props): string => props.backgroundColor};\n`;\n\nexport default class SvgChoropleth extends React.Component<SvgChoroplethProps, SvgChoroplethState> {\n    containerRef: React.RefObject<HTMLDivElement> = React.createRef();\n    //lastFeatureStroke: string;\n    svgDom: SVGElement;\n    highlightedCountry: SVGElement = null;\n\n    constructor(props: SvgChoroplethProps) {\n        super(props);\n        const { featureCollection } = props;\n        this.state = { svgNode: featureCollection.getSvgNode(this.registerSvg) };\n    }\n\n    shouldComponentUpdate(nextProps: Readonly<SvgChoroplethProps>, nextState: SvgChoroplethState): boolean {\n        const shouldUpdate =\n            !isEqual(nextState.svgNode, this.state.svgNode) || !isEqual(nextProps, this.props);\n        return shouldUpdate;\n    }\n\n    componentDidUpdate(prevProps): void {\n        if (this.props !== prevProps) {\n            if (prevProps.featureCollection !== this.props.featureCollection) {\n                this.setState({\n                    svgNode: this.props.featureCollection.getSvgNode(this.registerSvg),\n                });\n            } else {\n                this.updateSvg(this.props);\n            }\n        }\n    }\n\n    /**\n     * this method renders a copy of the polygon on top of all the others, with a highlighted boundary.\n     * Technically we don't render in on top of ALL the others. There are three totally landlocked countries,\n     * the first of which in our geojson file is Lesotho. These are also the last three countries in the geojson\n     * file. So when we insert the highlight shape into the dom, we inert it *before* these three countries.\n     * So the highlight for South Africa will not cover up Lesotho.\n     * @param {SVGElement} el\n     */\n    highlightCountry(el: SVGElement): void {\n        if (this.highlightedCountry) {\n            return; // do not add more than one hovered element at a time\n        }\n\n        const firstLandlockedCountry = this.svgDom.querySelector(`#Lesotho`);\n        const parent = el.parentNode;\n        const clone: SVGElement = el.cloneNode(true) as SVGElement;\n        const strokeColor = this.props.strokeHighlightColor || '#000';\n        clone.style.stroke = strokeColor;\n        this.highlightedCountry = clone;\n\n        parent.insertBefore(clone, firstLandlockedCountry);\n    }\n\n    unHighlightCountry(): void {\n        if (this.highlightedCountry) {\n            this.svgDom.removeChild(this.highlightedCountry);\n        }\n        this.highlightedCountry = null;\n    }\n\n    getLocalCoords = (clientX: number, clientY: number): { x: number; y: number } => {\n        const rect = this.containerRef.current.getBoundingClientRect();\n        const physX = rect.left;\n        const physY = rect.top;\n        return { x: clientX - physX, y: clientY - physY };\n    };\n\n    handleMapClick = (event: React.MouseEvent<HTMLInputElement>): void => {\n        const { clientX, clientY } = event;\n        const pos = this.getLocalCoords(clientX, clientY);\n        const { featureCollection, onClick } = this.props;\n        const clickedCoords: DataPoint = featureCollection.transformation.transformBack(pos);\n        const feature: SVGSVGElement = event.target as SVGSVGElement;\n        const wholeFeature: SVGElement = feature.id ? feature : (feature.parentNode as SVGElement);\n        if (onClick) {\n            onClick(clickedCoords, wholeFeature.id);\n        }\n    };\n\n    handleFeatureEnter = (ev: MouseEvent): void => {\n        const feature: SVGSVGElement = ev.target as SVGSVGElement;\n\n        if (!feature.id && !feature.ownerSVGElement) {\n            return;\n        }\n\n        const wholeFeature: SVGElement = feature.id ? feature : (feature.parentNode as SVGElement);\n        //remove the highlighted country IF we are entering a different country\n        if (this.highlightedCountry && wholeFeature.id !== this.highlightedCountry.id) {\n            this.unHighlightCountry();\n        }\n        this.highlightCountry(wholeFeature);\n\n        if (this.props.onFeatureHover) {\n            this.props.onFeatureHover({\n                featureId: wholeFeature.id,\n                label: wholeFeature.getAttribute('label_en'),\n                value: wholeFeature.getAttribute(DATA_ATTRIBUTE),\n            });\n        }\n    };\n\n    handleFeatureLeave = (ev: MouseEvent): void => {\n        const feature: SVGSVGElement = ev.target as SVGSVGElement;\n\n        if (!feature.id && !feature.ownerSVGElement) {\n            return;\n        }\n\n        // 'wholeFeature' means the SVG <g> (group) of multipolygon features\n        const wholeFeature: SVGElement = feature.id ? feature : (feature.parentNode as SVGElement);\n        //handling feature leaving should always only deal with the highlighted feature\n        if (wholeFeature !== this.highlightedCountry) {\n            return;\n        }\n        this.unHighlightCountry();\n        //wholeFeature.style.stroke = this.lastFeatureStroke;\n\n        if (this.props.onFeatureHover) {\n            this.props.onFeatureHover({ featureId: null, value: null, label: null });\n        }\n    };\n\n    registerSvg = (el: SVGSVGElement): void => {\n        if (!el) return;\n\n        this.svgDom = el;\n\n        const { selector = '.feature', strokeColor, fillColor } = this.props;\n\n        this.svgDom.onmouseover = this.handleFeatureEnter;\n        this.svgDom.onmouseout = this.handleFeatureLeave;\n\n        this.svgDom.querySelectorAll(selector).forEach((node: HTMLElement): void => {\n            node.style.stroke = strokeColor;\n            node.style.fill = fillColor;\n        });\n\n        this.updateSvg(this.props);\n    };\n\n    updateSvg(props: SvgChoroplethProps): void {\n        if (!this.svgDom) {\n            return;\n        }\n\n        const { selector = '.feature', fillColor, data } = props;\n\n        if (!data) {\n            return;\n        }\n        const dataHashMap = {};\n\n        data.featureIDs.forEach((alias, index): void => {\n            const featureId = this.getFeatureId(alias);\n            dataHashMap[featureId] = { fill: data.fill[index], value: data.values[index] };\n        });\n        this.svgDom.querySelectorAll(selector).forEach((node: HTMLElement): void => {\n            const nodeData = dataHashMap[node.id];\n            node.style.fill = get(nodeData, 'fill') || fillColor;\n            const value = get(nodeData, 'value');\n            if (value) {\n                node.setAttribute(DATA_ATTRIBUTE, value);\n            } else {\n                node.removeAttribute(DATA_ATTRIBUTE);\n            }\n        });\n    }\n\n    //allows a provided alias like 'US-CA' to get mapped to 'California' which is the element id for the SVG shape\n    private getFeatureId(alias: string): string {\n        return this.props.featureCollection.resolveAlias(alias);\n    }\n\n    render(): JSX.Element {\n        const { backgroundColor = 'transparent' } = this.props;\n        // note: for some reason, onclick event can't be triggered on dashboard. So change it to onMouseDown\n        return (\n            <StyledSvgChoropleth\n                data-test=\"styled-svg-choropleth\"\n                backgroundColor={backgroundColor}\n                onMouseDown={this.handleMapClick}\n                ref={this.containerRef}\n            >\n                {this.state.svgNode}\n            </StyledSvgChoropleth>\n        );\n    }\n}\n"],"sourceRoot":""}