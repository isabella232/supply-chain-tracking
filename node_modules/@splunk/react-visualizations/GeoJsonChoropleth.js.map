{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@splunk/visualizations-shared/SanitizeProps\"","webpack:///external \"@babel/runtime/helpers/toConsumableArray\"","webpack:///external \"styled-components\"","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"lodash\"","webpack:///external \"@babel/runtime/helpers/inherits\"","webpack:///external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack:///external \"@babel/runtime/helpers/getPrototypeOf\"","webpack:///./src/visualizations/SvgChoropleth/src/utils/ICoordinateTransformation.ts","webpack:///./src/visualizations/SvgChoropleth/SvgChoropleth.tsx","webpack:///./src/visualizations/SvgChoropleth/src/utils/CoordinateTransformation.ts","webpack:///external \"@babel/runtime/helpers/slicedToArray\"","webpack:///./src/visualizations/SvgChoropleth/src/utils/TransformationChain.ts","webpack:///./src/visualizations/SvgChoropleth/src/utils/BoundsUtils.ts","webpack:///./src/visualizations/GeoJsonChoropleth/GeoJsonChoropleth.tsx","webpack:///external \"@babel/runtime/helpers/assertThisInitialized\"","webpack:///external \"@splunk/themes/pick\"","webpack:///external \"@splunk/themes/variables\"","webpack:///./src/visualizations/SvgChoropleth/src/utils/GeoJsonFeatureCollection.ts","webpack:///./src/visualizations/SvgChoropleth/src/utils/MercatorTransformation.ts","webpack:///./src/visualizations/SvgChoropleth/src/utils/GeometryStreamSVGRenderer.ts","webpack:///external \"@babel/runtime/helpers/get\"","webpack:///./src/visualizations/SvgChoropleth/src/utils/BoundsCollector.ts","webpack:///./src/visualizations/SvgChoropleth/src/utils/NodeTreeReactGenerator.ts","webpack:///external \"lodash/camelCase\"","webpack:///./src/visualizations/SvgChoropleth/src/utils/LinearTransformation.ts","webpack:///./src/visualizations/SvgChoropleth/src/utils/Scale.ts","webpack:///external \"@turf/bbox-clip\""],"names":[],"mappings":"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","file":"GeoJsonChoropleth.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 42);\n","module.exports = require(\"react\");","module.exports = require(\"@splunk/visualizations-shared/SanitizeProps\");","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"styled-components\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"lodash\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","import { mapValues, cloneDeep } from 'lodash';\nimport { Interval } from './Scale';\nimport { isEqual } from 'lodash';\n\nexport interface Dimension {\n    unit: string;\n}\nexport interface Space {\n    [axis: string]: Dimension;\n}\nexport interface DataPoint {\n    [axis: string]: number;\n}\nexport interface Bounds {\n    [axis: string]: Interval;\n}\n\nexport const screenSpace: Space = { x: { unit: 'pixel' }, y: { unit: 'pixel' } };\n\nexport const geoSpace: Space = {\n    lat: { unit: '°' },\n    long: { unit: '°' },\n};\n\nexport const logicalSpace: Space = {\n    x: { unit: null },\n    y: { unit: null },\n};\n\nexport const flipBounds = function (bounds: Bounds, flipAxis: string[]): Bounds {\n    const result = cloneDeep(bounds);\n    flipAxis.forEach((axis): void => {\n        result[axis].min = bounds[axis].max;\n        result[axis].max = bounds[axis].min;\n    });\n    return result;\n};\n\nexport default interface ICoordinateTransformation {\n    sourceSpace: Space;\n    targetSpace: Space;\n\n    /**\n     *\n     * @param sourcePoint - coords in source space\n     * @return coords in target dimensions\n     */\n    transform(sourcePoint: DataPoint): DataPoint;\n\n    /**\n     *\n     * @param  targetPoint - coords in target space\n     * @return coords in source dimensions\n     */\n    transformBack(targetPoint: DataPoint): DataPoint;\n\n    /**\n     * returns a new TransformationChain without modifying this Transformation or Chain\n     * @param {ICoordinateTransformation} transformation\n     * @return {ICoordinateTransformation}\n     */\n    appendTransformation(transformation: ICoordinateTransformation): ICoordinateTransformation;\n}\n\nexport const visibleSourceBounds = function visibleSourceBounds(\n    transformation: ICoordinateTransformation,\n    targetBounds: Bounds\n): Bounds {\n    const minTargetCoordinates = mapValues(targetBounds, (interval: Interval): number => interval.min);\n    const maxTargetCoordinates = mapValues(targetBounds, (interval: Interval): number => interval.max);\n\n    const minSourceCoordinates = transformation.transformBack(minTargetCoordinates);\n    const maxSourceCoordinates = transformation.transformBack(maxTargetCoordinates);\n\n    const result: Bounds = {};\n    Object.keys(transformation.sourceSpace).forEach((axis): void => {\n        result[axis] = { min: minSourceCoordinates[axis], max: maxSourceCoordinates[axis] };\n    });\n\n    return result;\n};\n\n/**\n * TODO: this is a suboptimal function name. It should be called transformBoundingBox. It's also a very\n * strange way to go about it. Impl seems counterintuitive\n * @param {ICoordinateTransformation} transformation\n * @param {Bounds} sourceBounds\n * @returns {Bounds}\n */\nexport const calculatedTargetBounds = function visibleSourceBounds(\n    transformation: ICoordinateTransformation,\n    sourceBounds: Bounds\n): Bounds {\n    const minSourceCoordinates = mapValues(sourceBounds, (interval: Interval): number => interval.min);\n    const maxSourceCoordinates = mapValues(sourceBounds, (interval: Interval): number => interval.max);\n\n    const minTargetCoordinates = transformation.transform(minSourceCoordinates);\n    const maxTargetCoordinates = transformation.transform(maxSourceCoordinates);\n\n    const result: Bounds = {};\n    Object.keys(transformation.targetSpace).forEach((axis): void => {\n        result[axis] = { min: minTargetCoordinates[axis], max: maxTargetCoordinates[axis] };\n    });\n\n    return result;\n};\n\nexport function isSpaceCompatible(s1: Space, s2: Space): boolean {\n    return isEqual(s1, s2);\n}\n","import * as React from 'react';\nimport { get, isEqual } from 'lodash';\nimport { ISvgFeatureCollection } from './src/utils/ISvgFeatureCollection';\nimport { DataPoint } from './src/utils/ICoordinateTransformation';\nimport styled from 'styled-components';\n\nexport const DATA_ATTRIBUTE = 'data-value';\n\nexport interface SvgChoroplethProps {\n    featureCollection: ISvgFeatureCollection;\n    data: { featureIDs: string[]; fill: string[]; values: any[] };\n    fillColor: string;\n    strokeColor: string;\n    strokeHighlightColor?: string;\n    backgroundColor?: string;\n    selector: string;\n    onFeatureHover: (params: { featureId: string; value: any; label?: string }) => void;\n    onClick?: (sourceCoordinates: DataPoint, featureId: string) => void;\n}\n\nexport interface SvgChoroplethState {\n    svgNode: React.ReactNode;\n}\n\nexport { GeoFeatureGroup } from './src/utils/GeoTypes';\n\ninterface StyledSvgChoroplethProps {\n    readonly backgroundColor: string;\n}\n\nconst StyledSvgChoropleth = styled.div<StyledSvgChoroplethProps>`\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    background-color: ${(props): string => props.backgroundColor};\n`;\n\nexport default class SvgChoropleth extends React.Component<SvgChoroplethProps, SvgChoroplethState> {\n    containerRef: React.RefObject<HTMLDivElement> = React.createRef();\n    //lastFeatureStroke: string;\n    svgDom: SVGElement;\n    highlightedCountry: SVGElement = null;\n\n    constructor(props: SvgChoroplethProps) {\n        super(props);\n        const { featureCollection } = props;\n        this.state = { svgNode: featureCollection.getSvgNode(this.registerSvg) };\n    }\n\n    shouldComponentUpdate(nextProps: Readonly<SvgChoroplethProps>, nextState: SvgChoroplethState): boolean {\n        const shouldUpdate =\n            !isEqual(nextState.svgNode, this.state.svgNode) || !isEqual(nextProps, this.props);\n        return shouldUpdate;\n    }\n\n    componentDidUpdate(prevProps): void {\n        if (this.props !== prevProps) {\n            if (prevProps.featureCollection !== this.props.featureCollection) {\n                this.setState({\n                    svgNode: this.props.featureCollection.getSvgNode(this.registerSvg),\n                });\n            } else {\n                this.updateSvg(this.props);\n            }\n        }\n    }\n\n    /**\n     * this method renders a copy of the polygon on top of all the others, with a highlighted boundary.\n     * Technically we don't render in on top of ALL the others. There are three totally landlocked countries,\n     * the first of which in our geojson file is Lesotho. These are also the last three countries in the geojson\n     * file. So when we insert the highlight shape into the dom, we inert it *before* these three countries.\n     * So the highlight for South Africa will not cover up Lesotho.\n     * @param {SVGElement} el\n     */\n    highlightCountry(el: SVGElement): void {\n        if (this.highlightedCountry) {\n            return; // do not add more than one hovered element at a time\n        }\n\n        const firstLandlockedCountry = this.svgDom.querySelector(`#Lesotho`);\n        const parent = el.parentNode;\n        const clone: SVGElement = el.cloneNode(true) as SVGElement;\n        const strokeColor = this.props.strokeHighlightColor || '#000';\n        clone.style.stroke = strokeColor;\n        this.highlightedCountry = clone;\n\n        parent.insertBefore(clone, firstLandlockedCountry);\n    }\n\n    unHighlightCountry(): void {\n        if (this.highlightedCountry) {\n            this.svgDom.removeChild(this.highlightedCountry);\n        }\n        this.highlightedCountry = null;\n    }\n\n    getLocalCoords = (clientX: number, clientY: number): { x: number; y: number } => {\n        const rect = this.containerRef.current.getBoundingClientRect();\n        const physX = rect.left;\n        const physY = rect.top;\n        return { x: clientX - physX, y: clientY - physY };\n    };\n\n    handleMapClick = (event: React.MouseEvent<HTMLInputElement>): void => {\n        const { clientX, clientY } = event;\n        const pos = this.getLocalCoords(clientX, clientY);\n        const { featureCollection, onClick } = this.props;\n        const clickedCoords: DataPoint = featureCollection.transformation.transformBack(pos);\n        const feature: SVGSVGElement = event.target as SVGSVGElement;\n        const wholeFeature: SVGElement = feature.id ? feature : (feature.parentNode as SVGElement);\n        if (onClick) {\n            onClick(clickedCoords, wholeFeature.id);\n        }\n    };\n\n    handleFeatureEnter = (ev: MouseEvent): void => {\n        const feature: SVGSVGElement = ev.target as SVGSVGElement;\n\n        if (!feature.id && !feature.ownerSVGElement) {\n            return;\n        }\n\n        const wholeFeature: SVGElement = feature.id ? feature : (feature.parentNode as SVGElement);\n        //remove the highlighted country IF we are entering a different country\n        if (this.highlightedCountry && wholeFeature.id !== this.highlightedCountry.id) {\n            this.unHighlightCountry();\n        }\n        this.highlightCountry(wholeFeature);\n\n        if (this.props.onFeatureHover) {\n            this.props.onFeatureHover({\n                featureId: wholeFeature.id,\n                label: wholeFeature.getAttribute('label_en'),\n                value: wholeFeature.getAttribute(DATA_ATTRIBUTE),\n            });\n        }\n    };\n\n    handleFeatureLeave = (ev: MouseEvent): void => {\n        const feature: SVGSVGElement = ev.target as SVGSVGElement;\n\n        if (!feature.id && !feature.ownerSVGElement) {\n            return;\n        }\n\n        // 'wholeFeature' means the SVG <g> (group) of multipolygon features\n        const wholeFeature: SVGElement = feature.id ? feature : (feature.parentNode as SVGElement);\n        //handling feature leaving should always only deal with the highlighted feature\n        if (wholeFeature !== this.highlightedCountry) {\n            return;\n        }\n        this.unHighlightCountry();\n        //wholeFeature.style.stroke = this.lastFeatureStroke;\n\n        if (this.props.onFeatureHover) {\n            this.props.onFeatureHover({ featureId: null, value: null, label: null });\n        }\n    };\n\n    registerSvg = (el: SVGSVGElement): void => {\n        if (!el) return;\n\n        this.svgDom = el;\n\n        const { selector = '.feature', strokeColor, fillColor } = this.props;\n\n        this.svgDom.onmouseover = this.handleFeatureEnter;\n        this.svgDom.onmouseout = this.handleFeatureLeave;\n\n        this.svgDom.querySelectorAll(selector).forEach((node: HTMLElement): void => {\n            node.style.stroke = strokeColor;\n            node.style.fill = fillColor;\n        });\n\n        this.updateSvg(this.props);\n    };\n\n    updateSvg(props: SvgChoroplethProps): void {\n        if (!this.svgDom) {\n            return;\n        }\n\n        const { selector = '.feature', fillColor, data } = props;\n\n        if (!data) {\n            return;\n        }\n        const dataHashMap = {};\n\n        data.featureIDs.forEach((alias, index): void => {\n            const featureId = this.getFeatureId(alias);\n            dataHashMap[featureId] = { fill: data.fill[index], value: data.values[index] };\n        });\n        this.svgDom.querySelectorAll(selector).forEach((node: HTMLElement): void => {\n            const nodeData = dataHashMap[node.id];\n            node.style.fill = get(nodeData, 'fill') || fillColor;\n            const value = get(nodeData, 'value');\n            if (value) {\n                node.setAttribute(DATA_ATTRIBUTE, value);\n            } else {\n                node.removeAttribute(DATA_ATTRIBUTE);\n            }\n        });\n    }\n\n    //allows a provided alias like 'US-CA' to get mapped to 'California' which is the element id for the SVG shape\n    private getFeatureId(alias: string): string {\n        return this.props.featureCollection.resolveAlias(alias);\n    }\n\n    render(): JSX.Element {\n        const { backgroundColor = 'transparent' } = this.props;\n        // note: for some reason, onclick event can't be triggered on dashboard. So change it to onMouseDown\n        return (\n            <StyledSvgChoropleth\n                data-test=\"styled-svg-choropleth\"\n                backgroundColor={backgroundColor}\n                onMouseDown={this.handleMapClick}\n                ref={this.containerRef}\n            >\n                {this.state.svgNode}\n            </StyledSvgChoropleth>\n        );\n    }\n}\n","import ICoordinateTransformation, { DataPoint, isSpaceCompatible, Space } from './ICoordinateTransformation';\nimport TransformationChain from './TransformationChain';\n\nexport default abstract class CoordinateTransformation implements ICoordinateTransformation {\n    public sourceSpace: Space;\n    public targetSpace: Space;\n    static readonly INCOMPATIBLE_SPACES_ERROR =\n        \"incompatible transformation (appended source space doesn't match chain's output space)\";\n\n    protected constructor(sourceSpace: Space, targetSpace: Space) {\n        this.sourceSpace = sourceSpace;\n        this.targetSpace = targetSpace;\n    }\n\n    public appendTransformation(transformation: ICoordinateTransformation): ICoordinateTransformation {\n        if (!isSpaceCompatible(this.targetSpace, transformation.sourceSpace)) {\n            throw new Error(CoordinateTransformation.INCOMPATIBLE_SPACES_ERROR);\n        }\n        return new TransformationChain([this, transformation]);\n    }\n\n    abstract transform(sourcePoint: DataPoint): DataPoint;\n\n    abstract transformBack(sourcePoint: DataPoint): DataPoint;\n}\n","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","import { isEqual, last } from 'lodash';\nimport ICoordinateTransformation, { DataPoint, Space } from './ICoordinateTransformation';\n\nexport default class TransformationChain implements ICoordinateTransformation {\n    public sourceSpace: Space;\n    public targetSpace: Space;\n\n    public transformations: ICoordinateTransformation[];\n\n    public constructor(transformations: ICoordinateTransformation[]) {\n        this.transformations = [...transformations];\n        this.sourceSpace = transformations[0].sourceSpace;\n        this.targetSpace = last(transformations).targetSpace;\n    }\n\n    public appendTransformation(transformation: ICoordinateTransformation): TransformationChain {\n        if (!isEqual(transformation.sourceSpace, last(this.transformations).targetSpace)) {\n            throw new Error(`Can't chain transformations with incompatible spaces \n            ${JSON.stringify(last(this.transformations).targetSpace)} -> ${JSON.stringify(\n                transformation.sourceSpace\n            )}`);\n        }\n        return new TransformationChain([...this.transformations, transformation]);\n    }\n\n    public transform(logicalCoords: DataPoint): DataPoint {\n        let currentCoords = logicalCoords;\n        this.transformations.forEach((transformation): void => {\n            currentCoords = transformation.transform(currentCoords);\n        });\n        return currentCoords;\n    }\n\n    public transformBack(physicalCoords: DataPoint): DataPoint {\n        let currentCoords = physicalCoords;\n        for (let idx = this.transformations.length - 1; idx >= 0; idx--) {\n            currentCoords = this.transformations[idx].transformBack(currentCoords);\n        }\n        return currentCoords;\n    }\n}\n","import { Bounds, DataPoint } from './ICoordinateTransformation';\nimport { Interval } from './Scale';\n\nexport default class BoundsUtils {\n    /**\n     * checks if a line segment [dp1, dp2] is fully within a Bounds\n     * @param {Bounds} bounds\n     * @param {DataPoint} dp1\n     * @param {DataPoint} dp2\n     * @returns {boolean}\n     */\n    public static contains(bounds: Bounds, dp1: DataPoint, dp2: DataPoint): boolean {\n        return BoundsUtils.withinInterval(bounds, dp1) && BoundsUtils.withinInterval(bounds, dp2);\n    }\n\n    /**\n     * returns a turf BBox from Bounds.\n     * @param {Bounds} bounds Interval keys must be 'lat' and 'long'\n     * @returns {number[]} formatted in single array as [long.min, lat.min, long.max, lat.max]\n     */\n    public static toTurfBBox(bounds: Bounds): number[] {\n        const { long, lat } = bounds;\n        return [long.min, lat.min, long.max, lat.max];\n    }\n\n    /**\n     * tells if the number is within the inclusive Interval\n     * @param {Interval} interval\n     * @param {number} v\n     * @returns {boolean}\n     */\n    public static within(interval: Interval, v: number): boolean {\n        return interval.min <= v && interval.max >= v;\n    }\n\n    /**\n     * returns the distance from interval min to max\n     * @param {Interval} interval\n     * @returns {number}\n     */\n    public static distance(interval: Interval): number {\n        return interval.max - interval.min;\n    }\n\n    /**\n     * A very special-purposed utility method that creates CSS style from the Bounds.\n     * The 2-dimensional rectangular bounds are converted top, left, width, height\n     * @param {Bounds} must use 'x' and 'y' axis and assumes x and y are screen-oriented with zero,zero being the top left\n     * @returns {object}\n     */\n    public static logicalBoundsToCssStyle(logicalBounds: Bounds): Record<string, unknown> {\n        if (!logicalBounds) {\n            return {};\n        }\n        const xInterval = logicalBounds['x'];\n        const yInterval = logicalBounds['y'];\n        // use GeoJsonFeatureGrpup f's Bounds to create a CSS inline style to position the inset using a div\n        return {\n            position: 'absolute',\n            top: yInterval.min,\n            left: xInterval.min,\n            width: BoundsUtils.distance(xInterval),\n            height: BoundsUtils.distance(yInterval),\n            border: 'solid 1px',\n        };\n    }\n\n    private static withinInterval(bounds: Bounds, dp: DataPoint): boolean {\n        const axis = Object.keys(dp)[0];\n        return BoundsUtils.within(bounds[axis], dp[axis]);\n    }\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { omit, get, includes } from 'lodash';\nimport pick from '@splunk/themes/pick';\nimport variables from '@splunk/themes/variables';\nimport { withSanitizedProps } from '@splunk/visualizations-shared/SanitizeProps';\nimport SvgChoropleth, { SvgChoroplethProps } from '../SvgChoropleth';\nimport { Bounds, DataPoint } from '../SvgChoropleth/src/utils/ICoordinateTransformation';\nimport GeoJsonFeatureCollection from '../SvgChoropleth/src/utils/GeoJsonFeatureCollection';\nimport { GeoFeatureGroup } from '../SvgChoropleth/src/utils/GeoTypes';\nimport BoundsUtils from '../SvgChoropleth/src/utils/BoundsUtils';\n\nexport interface GeoJsonChoroplethProps {\n    name: string;\n    geoJson: { features: Record<string, unknown>[] };\n    data: { featureIDs: string[]; values: any[]; fill: string[] };\n    projection: string;\n    sourceBounds: Bounds;\n    logicalBounds: Bounds;\n    fillColor: string;\n    strokeColor: string;\n    strokeHighlightColor?: string;\n    backgroundColor?: string;\n    selector: string;\n    onFeatureHover?: (featureId: string) => void;\n    onClick?: (sourceCoordinates: DataPoint, featureId: string) => void;\n    geoFeatureGroups?: GeoFeatureGroup[];\n    theme?: Record<string, unknown>;\n}\n\nexport interface GeoJsonChoroplethState {\n    featureCollections: GeoJsonFeatureCollection[];\n    toolTip: { label; value };\n}\n\nexport const LABEL_FONT_SIZE = 14;\n\nexport const round2 = function round2(value: number): number {\n    return Math.round(value * 100) / 100;\n};\n\n// todo: maybe can refactor to use `computeTextSize` in @splunk/visualizations-shared/domUtils.js\nexport const estimateTextWidth = function estimateTextWidth(text: string, fontsize: number): number {\n    if (text == null) {\n        return 0;\n    }\n    const avgLowerCaseWidth = 0.55 * fontsize;\n    const avgUpperCaseWidth = 0.7 * fontsize;\n    let length = 0;\n    for (let pos = 0; pos < text.length; pos += 1) {\n        const c = text.charAt(pos);\n        if (includes('Iij.,;:!lt/', c)) {\n            length += 0.2 * fontsize;\n        } else if (c === '_') {\n            length += 0.8 * fontsize;\n        } else {\n            length += c === c.toUpperCase() ? avgUpperCaseWidth : avgLowerCaseWidth;\n        }\n    }\n    return length;\n};\n\n// todo: maybe can refactor to use `formatNumber` in ../utils/numberUtils\nexport const valueText = function valueText(value: number): string {\n    if (value === 0) {\n        return '0';\n    }\n\n    if (typeof value === 'string') {\n        return value;\n    }\n\n    const magnitude = Math.floor(Math.log10(Math.abs(value)) / 3);\n    const divisor = Math.pow(10, 3 * magnitude);\n\n    const suffixList = ['', 'k', 'm', 'bn', 'tn', 'qn'];\n    const suffix = magnitude < 0 ? `/${suffixList[-magnitude]}` : suffixList[magnitude];\n\n    return `${round2(value / divisor)}${suffix}`;\n};\n\nexport function createFeatureCollections(props: GeoJsonChoroplethProps): GeoJsonFeatureCollection[] {\n    const { sourceBounds, logicalBounds, projection, geoJson, geoFeatureGroups } = props;\n    const featureCollections = [];\n    if (geoFeatureGroups) {\n        geoFeatureGroups.forEach((g: GeoFeatureGroup): void => {\n            featureCollections.push(\n                new GeoJsonFeatureCollection(\n                    `${props.name}.${g.name}`,\n                    logicalBounds,\n                    projection,\n                    geoJson,\n                    g,\n                    sourceBounds\n                )\n            );\n        });\n    } else {\n        featureCollections.push(\n            new GeoJsonFeatureCollection(\n                props.name,\n                logicalBounds,\n                projection,\n                geoJson,\n                undefined,\n                sourceBounds\n            )\n        );\n    }\n    return featureCollections;\n}\n\nclass TTArgType {\n    reference: React.Ref<any>;\n    left: number;\n    top: number;\n    label: string;\n    value: any;\n}\n\nconst TooltipBubble = styled.div.attrs(() => ({\n    key: 'bubble',\n}))<{\n    maxTextWidth: number;\n}>`\n    background-color: ${pick({\n        enterprise: {\n            light: variables.white, // #171d21, so enterpriseDark.defaultBackgroundColor\n            dark: '#27292e', // enterpriseBackgroundColor\n        },\n        prisma: variables.backgroundColorPopup,\n    })};\n    border-radius: 5px;\n    padding: 5px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    box-shadow: 0px 5px 14px 0 rgba(0, 0, 100, 0.12);\n    width: ${props => props.maxTextWidth}px;\n    transition: width 100ms;\n`;\n\nconst TooltipLabel = styled.div.attrs(() => ({\n    'data-test': 'geojson-choropleth-tooltip-label',\n}))<{\n    maxTextWidth: number;\n}>`\n    margin-bottom: 2px;\n    width: ${props => props.maxTextWidth}px;\n    text-align: center;\n    color: ${pick({\n        enterprise: {\n            // unfortunately cannot access variables.textGray directly colors since variables are theme-aware\n            light: 'rgba(0, 0, 0, 0.65)', // equivalent to enterpriseDark.textGray\n            dark: 'rgba(255, 255, 255, 0.7)', // equivalent to enterprise.textGray\n        },\n        prisma: variables.contentColorDefault,\n    })};\n`;\n\nconst ArrowDown = styled.div`\n    position: relative;\n    top: -1px;\n    width: 0px;\n    height: 0px;\n    border-left: 8px solid transparent;\n    border-right: 8px solid transparent;\n    border-top: 8px solid\n        ${pick({\n            enterprise: {\n                light: variables.white, // #171d21, so enterpriseDark.defaultBackgroundColor\n                dark: '#27292e', // enterpriseBackgroundColor\n            },\n            prisma: variables.backgroundColorPopup,\n        })};\n`;\n\nconst TooltipValue = styled.div.attrs(() => ({\n    'data-test': 'geojson-choropleth-tooltip-value',\n}))`\n    color: ${pick({\n        enterprise: {\n            // unfortunately cannot access variables.textGray directly colors since variables are theme-aware\n            light: '#2c2c2c', // equivalent to enterpriseDark.textGray\n            dark: 'rgba(255, 255, 255, 0.98)', // equivalent to enterprise.textGray\n        },\n        prisma: variables.contentColorActive,\n    })};\n`;\n\ninterface GeoJsonChoroplethContainerProps {\n    backgroundColor: string;\n}\n\nconst GeoJsonChoroplethContainer = styled.div.attrs(() => ({\n    'data-test': 'geojson-choropleth-container',\n}))<GeoJsonChoroplethContainerProps>`\n    background-color: ${props =>\n        props.backgroundColor ||\n        pick({\n            enterprise: {\n                dark: variables.black,\n                light: variables.backgroundColorSidebar,\n            },\n            prisma: variables.backgroundColorSidebar,\n        })};\n    position: relative;\n`;\n\nconst ToolTip = function ToolTip(arg: TTArgType): React.ReactElement {\n    const { reference, left, top, label, value } = arg;\n\n    const maxTextWidth =\n        Math.max(estimateTextWidth(label, LABEL_FONT_SIZE), estimateTextWidth(value, LABEL_FONT_SIZE)) + 10;\n\n    return (\n        <div\n            key=\"tooltip\"\n            ref={reference}\n            style={{\n                position: 'absolute',\n                top,\n                left,\n                pointerEvents: 'none',\n                visibility: label || value ? 'visible' : 'hidden',\n            }}\n        >\n            <div\n                style={{\n                    position: 'relative',\n                    left: '-50%',\n                    top: '-56px',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'flex-start',\n                    fontSize: LABEL_FONT_SIZE,\n                }}\n            >\n                <TooltipBubble maxTextWidth={maxTextWidth}>\n                    <TooltipLabel maxTextWidth={maxTextWidth}> {label} </TooltipLabel>\n                    <TooltipValue>{valueText(value)}</TooltipValue>\n                </TooltipBubble>\n                <ArrowDown />\n            </div>\n        </div>\n    );\n};\n\nclass GeoJsonChoropleth extends React.Component<GeoJsonChoroplethProps, GeoJsonChoroplethState> {\n    containerRef: React.RefObject<HTMLDivElement> = React.createRef();\n    toolTipRef: React.RefObject<HTMLDivElement> = React.createRef();\n    cursorPos: { x: number; y: number };\n\n    constructor(props) {\n        super(props);\n        this.state = { featureCollections: createFeatureCollections(props), toolTip: null };\n        this.cursorPos = { x: 0, y: 0 };\n\n        this.handleMouseMove = this.handleMouseMove.bind(this);\n        this.handleFeatureHover = this.handleFeatureHover.bind(this);\n    }\n\n    componentDidUpdate(prevProps): void {\n        const { sourceBounds, logicalBounds, projection, geoJson } = this.props;\n        if (\n            prevProps.geoJson !== geoJson ||\n            prevProps.sourceBounds !== sourceBounds ||\n            prevProps.logicalBounds !== logicalBounds ||\n            prevProps.projection !== projection\n        ) {\n            this.setState({ featureCollections: createFeatureCollections(this.props) });\n        }\n    }\n\n    getLocalCoords(clientX: number, clientY: number): { x: number; y: number } {\n        const rect = this.containerRef.current.getBoundingClientRect();\n        const physX = rect.left;\n        const physY = rect.top;\n        const scaleX = this.containerRef.current.offsetWidth / rect.width;\n        const scaleY = this.containerRef.current.offsetHeight / rect.height;\n        return { x: (clientX - physX) * scaleX, y: (clientY - physY) * scaleY };\n    }\n\n    handleMouseMove(ev: React.MouseEvent<HTMLDivElement, MouseEvent>): void {\n        this.cursorPos = this.getLocalCoords(ev.clientX, ev.clientY);\n        if (this.toolTipRef.current) {\n            this.toolTipRef.current.style.left = `${this.cursorPos.x}px`;\n            this.toolTipRef.current.style.top = `${this.cursorPos.y}px`;\n        }\n    }\n\n    handleFeatureHover({ featureId, value, label }): void {\n        if (featureId) {\n            this.setState({ toolTip: { label: label || featureId, value: value || '-no data-' } });\n        } else {\n            this.setState({ toolTip: null });\n        }\n\n        const externalHandler = this.props.onFeatureHover;\n        if (externalHandler) {\n            externalHandler(featureId);\n        }\n    }\n\n    public render(): React.ReactElement {\n        const children = [];\n        const relevantProps = omit(this.props, ['sourceBounds', 'logicalBounds', 'projection']);\n        const { toolTip } = this.state;\n\n        // create one child SvgChoropleth for each GeoJsonFeatureCollection\n        this.state.featureCollections.forEach((f: GeoJsonFeatureCollection): void => {\n            const props: SvgChoroplethProps = {\n                ...relevantProps,\n                onFeatureHover: this.handleFeatureHover,\n                featureCollection: f,\n            };\n            const svgChoropleth = React.createElement(SvgChoropleth, props);\n            let style = {};\n            const logicalBounds = get(f, ['group', 'logicalBounds']);\n            if (logicalBounds) {\n                style = BoundsUtils.logicalBoundsToCssStyle(logicalBounds);\n            }\n            children.push(React.createElement('div', { key: f.name, style }, svgChoropleth));\n        });\n        return (\n            <GeoJsonChoroplethContainer\n                ref={this.containerRef}\n                onMouseMove={this.handleMouseMove}\n                backgroundColor={this.props.backgroundColor}\n            >\n                {children}\n                {\n                    <ToolTip\n                        reference={this.toolTipRef}\n                        left={this.cursorPos.x}\n                        top={this.cursorPos.y}\n                        label={get(toolTip, 'label')}\n                        value={get(toolTip, 'value')}\n                    />\n                }\n            </GeoJsonChoroplethContainer>\n        );\n    }\n}\n\nexport default withSanitizedProps(GeoJsonChoropleth);\n","module.exports = require(\"@babel/runtime/helpers/assertThisInitialized\");","module.exports = require(\"@splunk/themes/pick\");","module.exports = require(\"@splunk/themes/variables\");","import { ISvgFeatureCollection } from './ISvgFeatureCollection';\nimport { MercatorTransformation } from './MercatorTransformation';\nimport { GeometryStreamSVGRenderer, IdentityTransform } from './GeometryStreamSVGRenderer';\nimport ICoordinateTransformation, {\n    Bounds,\n    calculatedTargetBounds,\n    flipBounds,\n    logicalSpace,\n} from './ICoordinateTransformation';\nimport LinearTransformation from './LinearTransformation';\nimport TransformationChain from './TransformationChain';\nimport { GeometryStream } from './GeometryStream';\nimport { GeoFeatureGroup } from './GeoTypes';\nimport { get } from 'lodash';\nimport BoundsUtils from './BoundsUtils';\nimport * as turf from '@turf/helpers';\nimport bboxClip from '@turf/bbox-clip';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const MATCH_ALL_FEATUREGROUP_MATCHER = (feature: Record<string, unknown>): boolean => true;\nexport function featureGroupMatcher(g: GeoFeatureGroup): (feature: Record<string, any>) => boolean {\n    if (!g || !g.featureMatcher || !g.featureMatcher.regex || !g.featureMatcher.property) {\n        // if no matcher things defined, then we are not filtering features, and therefore should match all\n        // eslint-disable-next-line\n        return MATCH_ALL_FEATUREGROUP_MATCHER;\n    }\n\n    const matcher = new RegExp(g.featureMatcher.regex);\n    return (feature: Record<string, any>): boolean => {\n        const val = get(feature, ['properties', g.featureMatcher.property]);\n        if (!val) {\n            return false;\n        }\n        return matcher.test(val);\n    };\n}\n\nexport const DEFAULT_LOGICAL_BOUNDS = { x: { min: 0, max: 800 }, y: { min: 0, max: 600 } }; // default logical bounds\n\n// same as with sourceBounds, logical bound can be global or local to the FeatureGroup. They also need to have defaults\n// which are provided here.\nexport function pickLogicalBnds(globalLogicalBnds: Bounds, g: GeoFeatureGroup): Bounds {\n    if (g && g.logicalBounds) {\n        return g.logicalBounds;\n    }\n    if (globalLogicalBnds) {\n        return globalLogicalBnds;\n    }\n\n    return DEFAULT_LOGICAL_BOUNDS;\n}\n\nexport function ring(\n    coords: number[][],\n    renderer: GeometryStream,\n    bounds?: Bounds,\n    props?: Record<string, unknown>\n): void {\n    //polygon coords is array of number array\n    renderer.beginNode('polygon', props);\n    for (let i = 0; i < coords.length; i++) {\n        const [long, lat] = coords[i];\n        if (bounds && !BoundsUtils.contains(bounds, { long }, { lat })) {\n            // the polygon is not entirely contained by the bounds. We must cancel (remove) the polygon along with any\n            // points that were previously added to it.\n            renderer.cancelNode();\n            console.warn(`out-of-bounds polygon dropped: ${JSON.stringify(props)}`);\n            return; // bail ... we don't need to endNode() since we cancelled it\n        } else {\n            renderer.addPoint({ long, lat });\n        }\n    }\n    renderer.endNode();\n}\n\nexport function polygon(coords: number[][][], renderer: GeometryStream, bounds?: Bounds): void {\n    //polygon coords is array of number array\n    for (let poly = 0; poly < coords.length; poly++) {\n        ring(coords[poly], renderer, bounds);\n    }\n}\n\nexport function renderGeoJsonFeature(\n    feature: Record<string, any>,\n    renderer: GeometryStream,\n    bounds?: Bounds\n): void {\n    const bbox: turf.BBox = bounds ? (BoundsUtils.toTurfBBox(bounds) as turf.BBox) : undefined;\n    const type = feature['geometry'].type;\n\n    if (get(feature, ['properties', 'name']) === 'Antarctica') {\n        //skip shapes that cannot be mercator projected\n        //no-op\n        return;\n    }\n    // demo hack...\n    const props = feature['properties'];\n    if (props.iso_3166_2) {\n        props.id = props.iso_3166_2;\n    } else {\n        props.id = props.name;\n    }\n    props.className = 'feature';\n    // end demo hack\n    switch (type) {\n        case 'MultiPolygon': {\n            renderer.beginNode('g', props); //svg has groups ('g') but no polygon\n            feature = bbox ? bboxClip(feature as turf.MultiPolygon, bbox) : feature;\n            const multis = get(feature, ['geometry', 'coordinates']);\n            multis.forEach((multi: number[][][]): void => polygon(multi, renderer, bounds));\n            renderer.endNode();\n            break;\n        }\n        case 'Polygon': {\n            feature = bbox ? bboxClip(feature as turf.Polygon, bbox) : feature;\n            const rings = get(feature, ['geometry', 'coordinates']);\n            rings.forEach((r: number[][]): void => ring(r, renderer, bounds, props));\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geojson type: ' + type);\n        }\n    }\n}\n\nfunction computeBounds(\n    geoJson: Record<string, any>,\n    matcher: (feature: Record<string, unknown>) => boolean\n): Bounds {\n    //replace the renderer with one that is configured only to compute logicalBounds (for performance)\n    const boundsComputer = new GeometryStreamSVGRenderer();\n    boundsComputer.computeBoundsOnly = true;\n    geoJson['features'].forEach((feature: Record<string, unknown>): void => {\n        if (matcher(feature)) {\n            renderGeoJsonFeature(feature, boundsComputer);\n        }\n    });\n    return boundsComputer.getBounds();\n}\n\n// the source bounds can be provided globally for all feature groups, or they can be provided within a FeatureGroup\n// or they can be omitted entirely which means they must be computed by parsing the geoJson\nfunction pickSrcBnds(\n    geoJson: Record<string, unknown>,\n    g: GeoFeatureGroup,\n    globalSrcBnds: Bounds,\n    featureMatcher: (feature: Record<string, unknown>) => boolean\n): Bounds {\n    if (g && g.sourceBounds) {\n        return g.sourceBounds; // return FeatureGroup \"local\" sourceBounds if they exist.\n    }\n\n    if (globalSrcBnds) {\n        return globalSrcBnds; // return global bounds if they exist\n    }\n\n    // ...'auto' compute the source bounds from the data.\n    const b = computeBounds(geoJson, featureMatcher); //automatically compute sourceBounds if not provided\n    if (!b) {\n        throw new Error(\n            `Could not determine bounds for geoFeatureGroup name='${this.name}' (no features matched)`\n        );\n    }\n    return b;\n}\n\nexport default class GeoJsonFeatureCollection implements ISvgFeatureCollection {\n    public name: string;\n    private readonly sourceBounds: Bounds;\n    public logicalBounds: Bounds;\n    private projectionType: string;\n    public transformation: ICoordinateTransformation;\n    private geoJson: { features: Record<string, unknown>[] };\n    private readonly group: GeoFeatureGroup;\n    private readonly featureMatcher: (feature: Record<string, unknown>) => boolean;\n    private aliases: Map<string, string>;\n\n    public constructor(\n        name: string,\n        globalLogicalBnds: Bounds,\n        projectionType: string,\n        geoJson: { features: Record<string, unknown>[] },\n        g?: GeoFeatureGroup,\n        globalSrcBounds?: Bounds\n    ) {\n        this.name = name;\n        this.projectionType = projectionType || 'mercator';\n        this.geoJson = geoJson;\n        this.group = g;\n        this.featureMatcher = featureGroupMatcher(g);\n        this.logicalBounds = pickLogicalBnds(globalLogicalBnds, g);\n        this.sourceBounds = pickSrcBnds(geoJson, g, globalSrcBounds, this.featureMatcher);\n        const minLat = this.sourceBounds.lat.min;\n        const maxLat = this.sourceBounds.lat.max;\n\n        let projection: ICoordinateTransformation;\n\n        switch (projectionType) {\n            case 'equirectangular':\n                projection = new IdentityTransform();\n                break;\n            case 'mercator':\n                if (Math.abs(minLat) > 85 || Math.abs(maxLat) > 85) {\n                    throw new Error(\n                        `Invalid latitude boundaries for mercator projection : ${minLat}/${maxLat}`\n                    );\n                }\n                projection = new MercatorTransformation();\n                break;\n            default: {\n                throw new Error('Unsupported projection: ' + projectionType);\n            }\n        }\n        const projectedBounds = calculatedTargetBounds(projection, this.sourceBounds);\n        const scaleTransformation = new LinearTransformation(\n            logicalSpace,\n            logicalSpace,\n            flipBounds(projectedBounds, ['y']),\n            this.logicalBounds,\n            null,\n            true\n        );\n        this.transformation = new TransformationChain([projection, scaleTransformation]);\n    }\n\n    public contains(x: number, y: number): boolean {\n        const bounds = get(this.group, ['logicalBounds']);\n        if (!bounds) {\n            return true;\n        }\n        // return whether or not the x,y mouse screen location is inside this feature collection\n        return BoundsUtils.contains(bounds, { x }, { y });\n    }\n\n    public getSvgNode(ref: (el: SVGSVGElement) => void): React.ReactNode {\n        const { features } = this.geoJson;\n        const renderer = new GeometryStreamSVGRenderer(this.transformation);\n        renderer.beginNode('svg', {\n            ref, //remember, 'ref' is a special attribute in react. It's a callback function called on node creation\n            height: BoundsUtils.distance(this.logicalBounds.y),\n            width: BoundsUtils.distance(this.logicalBounds.x),\n        });\n        features.forEach((feature: Record<string, unknown>): void => {\n            if (this.featureMatcher(feature)) {\n                renderGeoJsonFeature(feature, renderer, this.sourceBounds);\n            }\n        });\n        renderer.endNode();\n        return renderer.getRoot();\n    }\n\n    public resolveAlias(alias: string): string {\n        if (!this.aliases) {\n            this.aliases = GeoJsonFeatureCollection.makeAliasMap(this.geoJson.features); //memoize\n        }\n\n        const { aliases } = this;\n        if (aliases) {\n            return aliases.get(alias.toLocaleLowerCase()) || alias;\n        }\n        return alias;\n    }\n\n    static makeAliasMap(features: Record<string, any>[]): Map<string, string> {\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        return features.reduce((aliases: Map<string, string>, feature: Record<string, any>) => {\n            const geoJsonProperties = feature['properties'];\n            const name = geoJsonProperties.iso_3166_2;\n            // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n            Object.keys(geoJsonProperties).forEach(k => {\n                k != name && aliases.set(geoJsonProperties[k].toLowerCase(), name); // alias all the other properies to the name property\n            });\n            return aliases;\n        }, new Map()) as Map<string, string>;\n    }\n}\n","import { DataPoint, geoSpace, logicalSpace } from './ICoordinateTransformation';\nimport CoordinateTransformation from './CoordinateTransformation';\n\n// transform converts degrees to an x,y mercator map whose units are radians. InverseTransform goes from radians on the x,y map back to degrees.\n\nexport class MercatorTransformation extends CoordinateTransformation {\n    public constructor() {\n        super(geoSpace, logicalSpace);\n    }\n\n    public transformBack(coord: DataPoint): DataPoint {\n        const { x, y } = coord;\n        return {\n            long: (x * 180) / Math.PI,\n            lat: ((2 * Math.atan(Math.exp(y)) - Math.PI / 2) * 180) / Math.PI,\n        };\n    }\n\n    public transform(coord: DataPoint): DataPoint {\n        let { lat, long } = coord;\n        if (long > 180) {\n            console.warn(`Mercator projection: Truncating illegal longitude to 180: long`);\n            long = 180;\n        }\n        if (long < -180) {\n            console.warn(`Mercator projection: Truncating illegal longitude to -180: long`);\n            long = -180;\n        }\n        if (lat > 85) {\n            console.warn(`Mercator projection: Truncating illegal latitude to 85: lat`);\n            lat = 85;\n        }\n        if (lat < -85) {\n            console.warn(`Mercator projection: Truncating illegal latitude to -85: lat`);\n            lat = -85;\n        }\n        return {\n            x: (Math.PI * long) / 180,\n            y: Math.log(Math.tan(Math.PI / 4 + ((lat / 180) * Math.PI) / 2)),\n        };\n    }\n}\n","import { GeometryStream } from './GeometryStream';\nimport ICoordinateTransformation, {\n    geoSpace,\n    logicalSpace,\n    DataPoint,\n    Bounds,\n} from './ICoordinateTransformation';\nimport CoordinateTransformation from './CoordinateTransformation';\nimport BoundsCollector from './BoundsCollector';\nimport { NodeTreeReactGenerator } from './NodeTreeReactGenerator';\n\n// fixme TODO: should the identity transform really have different source and target spaces? That's a bit confusing\n// as one would expect the identity transform could be inserted anywhere in a TransformationChain\nexport class IdentityTransform extends CoordinateTransformation {\n    public constructor() {\n        super(geoSpace, logicalSpace);\n    }\n\n    public transform(sourceCoords: DataPoint): DataPoint {\n        return { x: sourceCoords.long, y: sourceCoords.lat };\n    }\n\n    public transformBack(targetCoords: DataPoint): DataPoint {\n        return { lat: targetCoords.y, long: targetCoords.x };\n    }\n}\n\nexport class GeometryStreamSVGRenderer extends NodeTreeReactGenerator implements GeometryStream {\n    public transformer: ICoordinateTransformation = new IdentityTransform();\n    public computeBoundsOnly = false;\n\n    private boundsCollector = new BoundsCollector();\n\n    public constructor(transformer?: ICoordinateTransformation) {\n        super();\n        if (transformer) {\n            this.transformer = transformer;\n        }\n    }\n\n    public addPoint(p: DataPoint): void {\n        this.boundsCollector.addPoint(p);\n        if (this.computeBoundsOnly) {\n            return;\n        }\n        const el = super.peek();\n        const points = el.attributes['points'];\n        if (points) {\n            el.attributes['points'] += ' ';\n        } else {\n            el.attributes['points'] = ''; // initialize\n        }\n        const { x, y } = this.transformer.transform(p);\n        /*\n        if(!x || !y){\n            throw new Error(\"DataPoint did not contain an x and y coordinate (cannot be rendered to SVG).: \" + JSON.stringify(p));\n        }\n         */\n        el.attributes['points'] += x + ',' + y; // FIXME TODO probably should not look for hard coded x and y in DataPoint\n    }\n\n    public beginNode(name: string, attributes = {}): void {\n        if (this.computeBoundsOnly) {\n            return;\n        }\n        return super.beginNode(name, attributes);\n    }\n\n    public endNode(): void {\n        if (this.computeBoundsOnly) {\n            return;\n        }\n        super.endNode();\n    }\n\n    // automatically compute the logicalBounds based on the points that were added. This is 'auto' style of bounding box.\n    public getBounds(): Bounds {\n        return this.boundsCollector.getBounds();\n    }\n\n    public clear(): void {\n        super.clear();\n        this.boundsCollector = new BoundsCollector();\n    }\n}\n","module.exports = require(\"@babel/runtime/helpers/get\");","import { Bounds, DataPoint } from './ICoordinateTransformation';\nimport { Interval } from './Scale';\n\nexport default class BoundsCollector {\n    public intervals: { [axis: string]: Interval } = {};\n\n    public getBounds(): Bounds {\n        return Object.keys(this.intervals).length > 0 ? this.intervals : undefined;\n    }\n\n    // expand the Bounds if the added point is outside the Bounds.\n    // Since we don't know what they axes will be for a given DataPoint\n    public addPoint(p: DataPoint): void {\n        Object.keys(p).forEach((axis: string): void => {\n            let interval: Interval = this.intervals[axis];\n            if (!interval) {\n                interval = { min: p[axis], max: p[axis] };\n                this.intervals[axis] = interval;\n            }\n            if (p[axis] < interval.min) {\n                interval.min = p[axis];\n            }\n            if (p[axis] > interval.max) {\n                interval.max = p[axis];\n            }\n        });\n    }\n}\n","import * as React from 'react';\nimport camelCase = require('lodash/camelCase');\nimport { SerializedTreeRenderer } from './SerializedTreeRenderer';\n\n/**\n * This class represents the structure of a React element.\n */\nexport class ElementStructure {\n    public name: string;\n    public attributes: Record<string, unknown> = {};\n    public children: React.ReactNode[] = [];\n    public textContent; // a node may have childen, or text content\n\n    /**\n     * @constructor\n     * @param {string} name - the element's tag name\n     * @param {object} attributes - the element's attributes\n     * @param {string} textContent - optional text content for a node\n     */\n    constructor(name: string, attributes = {}, textContent?: string) {\n        this.name = name;\n        this.attributes = ElementStructure.processStyleAttributes(attributes);\n        this.textContent = textContent;\n    }\n\n    private static processStyleAttributes(a: Record<string, any>): Record<string, any> {\n        if (a['style']) {\n            a['style'] = ElementStructure.parseStyle(a['style']);\n        }\n        return a;\n    }\n\n    /**\n     * In react, the style attribute is an object, not an inline css style string. This function converts inline css\n     * style string into discrete key-value object that plays nicely with react.\n     * @param {string} style\n     * @returns {object}\n     */\n    private static parseStyle(style: string): Record<string, unknown> {\n        const o = {};\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        style.split(';').forEach(s => {\n            const [k, v] = s.split(':');\n            o[camelCase(k)] = v;\n        });\n        return o;\n    }\n}\n\n/**\n * This class is used to build up a node tree. The node tree is turned into a ReactNode when the root node of the\n * tree is closed (aka  the closing tag).\n */\nexport class NodeTreeReactGenerator implements SerializedTreeRenderer {\n    protected _root: React.ReactElement;\n    protected _stack: ElementStructure[] = [];\n    decorator: (el: React.ReactElement) => React.ReactElement; //useful to wrap elements in tooltips\n\n    /**\n     * This method is called to indicate an opening element tag.\n     * @param {string} name - the element's tag name\n     * @param {object} attributes - the element's attributes\n     * @param {string} textContent - optional text content for a node\n     */\n    beginNode(name: string, attributes = {}, textContent?: string): void {\n        const attrCopy = { key: Math.random() };\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        Object.keys(attributes).forEach(k => {\n            if (k.startsWith('data-')) {\n                attrCopy[k] = attributes[k];\n            } else {\n                attrCopy[camelCase(k)] = attributes[k];\n            }\n        });\n\n        this._stack.push(new ElementStructure(name, attrCopy, textContent));\n    }\n\n    /**\n     * This method closes a tag. When a tag is closed its ElementStructure is converted to a ReactNode and added to the set of\n     * child nodes tracked by the parent's ElementStructure. If the tag being closed is the root node, then the _root\n     * is set and we are done, having created the ReactNode representing the entire tree.\n     */\n    endNode(): void {\n        const popped = this._stack.pop();\n        const { name, attributes, children, textContent } = popped;\n        const el = this.peek();\n        let reactNode: React.ReactElement = null;\n        if (children.length === 0) {\n            if (textContent) {\n                reactNode = React.createElement(name, attributes, textContent);\n            } else {\n                reactNode = React.createElement(name, attributes);\n            }\n        } else {\n            if (textContent) {\n                throw new Error(`textContent can't be mixed with children on node ${name}`);\n            }\n            reactNode = React.createElement(name, attributes, children);\n        }\n\n        if (this.decorator) {\n            reactNode = this.decorator(reactNode);\n        }\n\n        if (el) {\n            el.children.push(reactNode);\n        } else {\n            this._root = reactNode;\n        }\n    }\n\n    protected peek(): ElementStructure {\n        if (this._stack.length === 0) {\n            return null;\n        }\n        return this._stack[this._stack.length - 1];\n    }\n\n    /**\n     * Returns the ReactNode representing the entire tree, or throws Error if tree is not fully processed.\n     * @returns {React.ReactElement}\n     */\n    public getRoot(): React.ReactElement {\n        if (this._root) {\n            return this._root;\n        } else {\n            throw new Error(\n                `Can't compute ReactElement until root node has been closed. Node stack: ${this._stack}`\n            );\n        }\n    }\n\n    /**\n     * Clears internal structures so this instance can be used to process a new tree.\n     */\n    public clear(): void {\n        this._stack = [];\n        this._root = null;\n    }\n\n    /**\n     * Allows the current tag and all its children to be erased.\n     */\n    public cancelNode(): void {\n        this._stack.pop();\n    }\n}\n","module.exports = require(\"lodash/camelCase\");","import { mapValues } from 'lodash';\nimport { Bounds, DataPoint, Space } from './ICoordinateTransformation';\nimport { Interval, Scale, toInterval } from './Scale';\nimport CoordinateTransformation from './CoordinateTransformation';\n\nconst sign =\n    Math.sign ||\n    function (n: number): number {\n        if (n < 0) return -1;\n        if (n > 0) return 1;\n        return 0;\n    };\n\nconst signedDistance = function distance(interval: Interval): number {\n    return interval.max - interval.min;\n};\n\nconst direction = function direction(interval: Interval): number {\n    return sign(interval.max - interval.min);\n};\n\nexport interface BoundsInfo {\n    sourceBounds: Bounds;\n    scaleFactors: DataPoint;\n}\n\nexport const createBoundsInfo = function createBoundsInfo(\n    sourceBounds: Bounds,\n    transformation: LinearTransformation\n): BoundsInfo {\n    return {\n        sourceBounds: sourceBounds,\n        scaleFactors: mapValues(transformation.scales, (scale: Scale): number => scale.scaleFactor),\n    };\n};\n\nexport default class LinearTransformation extends CoordinateTransformation {\n    private targetCoordinate: { [sourceCoordinate: string]: string } = {};\n    private sourceCoordinate: { [targetCoordinate: string]: string } = {};\n    public scales: { [key: string]: Scale };\n    private readonly preserveAspectRatio: boolean;\n\n    public constructor(\n        sourceDimensions: Space,\n        targetDimensions: Space,\n        sourceBounds?: Bounds,\n        targetBounds?: Bounds,\n        mapping?: { [sourceName: string]: string },\n        preserveAspectRatio = true\n    ) {\n        super(sourceDimensions, targetDimensions);\n\n        this.preserveAspectRatio = preserveAspectRatio;\n        this.scales = {};\n        Object.keys(sourceDimensions).forEach((sourceCoordinate): void => {\n            const targetCoordinate = mapping ? mapping[sourceCoordinate] : sourceCoordinate;\n            this.scales[sourceCoordinate] = new Scale();\n            this.targetCoordinate[sourceCoordinate] = targetCoordinate;\n            this.sourceCoordinate[targetCoordinate] = sourceCoordinate;\n        });\n        if (sourceBounds && targetBounds) {\n            this.fit(sourceBounds, targetBounds);\n        }\n    }\n\n    private fit(\n        sourceRanges: Bounds,\n        targetRanges: { [key: string]: number | Interval }\n    ): LinearTransformation {\n        if (this.preserveAspectRatio) {\n            return this.fitUndistorted(sourceRanges, targetRanges);\n        } else {\n            return this.fitIndependently(sourceRanges, targetRanges);\n        }\n    }\n\n    private fitUndistorted(\n        sourceRanges: Bounds,\n        targetRanges: { [key: string]: number | Interval }\n    ): LinearTransformation {\n        let minScale = Number.MAX_VALUE;\n        Object.keys(sourceRanges).forEach((dimension): void => {\n            const targetDimension = this.targetCoordinate[dimension];\n            if (!targetRanges[targetDimension]) {\n                throw new Error(`Missing targetRanges for dimension ${targetDimension}`);\n            }\n            const range = sourceRanges[dimension];\n            const sourceDistance = Math.abs(range.max - range.min);\n            const targetBounds = toInterval(targetRanges[targetDimension]);\n            minScale = Math.min(minScale, Math.abs(signedDistance(targetBounds)) / sourceDistance);\n        });\n\n        Object.keys(sourceRanges).forEach((dimension): void => {\n            const targetDimension = this.targetCoordinate[dimension];\n            this.scales[dimension].update(\n                minScale * direction(toInterval(sourceRanges[targetDimension])),\n                sourceRanges[dimension].min\n            );\n        });\n        return this;\n    }\n\n    private fitIndependently(\n        sourceRanges: Bounds,\n        targetRanges: { [key: string]: Interval | number }\n    ): LinearTransformation {\n        Object.keys(sourceRanges).forEach((dimension): void => {\n            const targetDimension = this.targetCoordinate[dimension];\n            if (!targetRanges[targetDimension]) {\n                throw new Error(`Missing parameter targetRanges for dimension ${dimension}`);\n            }\n            this.scales[dimension].fit(sourceRanges[dimension], targetRanges[targetDimension]);\n        });\n        return this;\n    }\n\n    public transform(sourcePoint: DataPoint): DataPoint {\n        const result: DataPoint = {};\n        Object.keys(this.sourceSpace).forEach(\n            (dimension): number =>\n                (result[this.targetCoordinate[dimension]] = this.scales[dimension].source2Target(\n                    sourcePoint[dimension]\n                ))\n        );\n        return result;\n    }\n\n    public transformBack(targetPoint: DataPoint): DataPoint {\n        const result: DataPoint = {};\n        Object.keys(this.targetSpace).forEach((coordinate): void => {\n            const sourceCoordinate = this.sourceCoordinate[coordinate];\n            result[sourceCoordinate] = this.scales[sourceCoordinate].target2Source(targetPoint[coordinate]);\n        });\n        return result;\n    }\n\n    public zoomCoordinate(\n        dimension: string,\n        physicalCenter: number,\n        factor: number,\n        minScale?: number,\n        maxScale?: number\n    ): LinearTransformation {\n        const scale = this.scales[this.sourceCoordinate[dimension]];\n        const currentScale = scale.scaleFactor;\n\n        const newScale = Math.min(\n            maxScale || Number.MAX_VALUE,\n            Math.max(currentScale * factor, minScale || 0)\n        );\n\n        const targetCenter = scale.target2Source(physicalCenter);\n        scale.zoomAroundSource(targetCenter, newScale);\n\n        return this;\n    }\n\n    public zoomAroundTarget(\n        targetCenter: { x: number; y: number },\n        factor: number,\n        minScale?: number,\n        maxScale?: number\n    ): LinearTransformation {\n        const currentScale = this.scales['x'].scaleFactor;\n\n        const newScale = Math.min(\n            maxScale || Number.MAX_VALUE,\n            Math.max(currentScale * factor, minScale || 0)\n        );\n\n        const sourceCenter = this.transformBack(targetCenter);\n\n        ['x', 'y'].forEach((axis): void => {\n            const dimension = this.sourceCoordinate[axis];\n            this.scales[dimension].zoomAroundSource(sourceCenter[dimension], newScale);\n        });\n        return this;\n    }\n\n    public moveTargetWindowBy(delta: DataPoint): LinearTransformation {\n        ['x', 'y'].forEach((axis): void => {\n            const dimension = this.sourceCoordinate[axis];\n            if (delta[axis] != null) {\n                this.scales[dimension].moveTargetBy(delta[axis]);\n            }\n        });\n        return this;\n    }\n\n    public getTransformString(): string {\n        const dx = -this.scales.x.offset * this.scales.x.scaleFactor;\n        const dy = -this.scales.y.offset * this.scales.y.scaleFactor;\n        return `translate(${dx}px, ${dy}px) scale(${this.scales.x.scaleFactor})`;\n    }\n}\n","export interface Interval {\n    min: number;\n    max: number;\n    resolution?: number;\n}\nconst isInterval = function isInterval(object: Interval | number): boolean {\n    return object['min'] != null && object['max'] != null;\n};\n\nexport const toInterval = function toInterval(object: Interval | number): Interval {\n    if (isInterval(object)) {\n        return object as Interval;\n    }\n\n    return { min: 0, max: object as number };\n};\n\nexport class Scale {\n    /**\n     * beginning of the target window in source coordinates\n     */\n    public offset: number;\n    public scaleFactor: number;\n\n    public constructor() {\n        this.offset = 0;\n        this.scaleFactor = 1;\n    }\n\n    /**\n     *\n     * @param {number} scaleFactor the ratio of target per source\n     * @param {number} targetStart The source coordinate for which the target coordinate is 0\n     * @return {this}\n     */\n    public update(scaleFactor: number, targetStart: number): Scale {\n        this.offset = targetStart;\n        this.scaleFactor = scaleFactor;\n        return this;\n    }\n\n    public source2Target(sourceCoord: number): number {\n        return (sourceCoord - this.offset) * this.scaleFactor;\n    }\n\n    public target2Source(targetCoord: number): number {\n        return targetCoord / this.scaleFactor + this.offset;\n    }\n\n    /**\n     * updates the scale and offset so that the specified source range is mapped to the target range.\n     * If a number is specified as the target range, it is interpreted as the width of an interval starting at 0.\n     * @param {Interval} sourceRange\n     * @param {Interval | number} targetRange\n     */\n    public fit(sourceRange: Interval, targetRange: Interval | number): void {\n        const targetDistance = sourceRange.max - sourceRange.min;\n        const interval = toInterval(targetRange);\n\n        const sourceDistance = interval.max - interval.min;\n        const sourceOffset = interval.min;\n\n        const scale = sourceDistance / targetDistance;\n        this.update(scale, sourceRange.min - (sourceOffset || 0) / scale);\n    }\n\n    /**\n     * adjusts scale factor and offset so that the target value for the specified source center does not change\n     * @param {number} sourceCenter\n     * @param {number} newScale\n     */\n    public zoomAroundSource(sourceCenter: number, newScale: number): void {\n        this.offset =\n            (sourceCenter * (newScale - this.scaleFactor) + this.offset * this.scaleFactor) / newScale;\n        this.scaleFactor = newScale;\n    }\n\n    /**\n     * moves the target range by the specified amount in target coordinates\n     * @param {number} deltaTarget\n     */\n    public moveTargetBy(deltaTarget: number): void {\n        this.offset += deltaTarget / this.scaleFactor;\n    }\n}\n","module.exports = require(\"@turf/bbox-clip\");"],"sourceRoot":""}