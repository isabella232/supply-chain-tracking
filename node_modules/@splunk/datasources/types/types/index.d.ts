import type { DataSet } from '@splunk/datasource-utils';
export declare type Status = 'queued' | 'parsing' | 'running' | 'paused' | 'finalizing' | 'failed' | 'done' | 'canceled';
export interface RequestParams {
    count?: number;
    offset?: number;
    sort?: {
        [field: string]: 'none' | 'desc' | 'asc';
    };
    source?: 'results_preview' | 'results' | 'events' | 'summary' | 'timeline';
    requireTotalCount?: boolean;
    progress?: boolean;
    [key: string]: unknown;
}
export interface Meta {
    percentComplete?: number;
    totalCount?: number;
    lastUpdated?: string;
    status?: Status;
    [key: string]: unknown;
}
export interface ObservableData {
    data: DataSet;
    meta?: Meta;
    requestParams?: RequestParams;
}
export declare type ErrorLevel = 'info' | 'warning' | 'error';
export interface Error {
    level?: ErrorLevel;
    message: string;
}
export interface State {
    data: Record<string, unknown>;
    meta?: Meta;
}
export interface Observer {
    next(state: State): void;
    error(error: Error): void;
    complete(): void;
}
//# sourceMappingURL=index.d.ts.map