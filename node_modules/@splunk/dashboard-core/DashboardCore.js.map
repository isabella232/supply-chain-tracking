{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"prop-types\"","webpack:///external \"lodash/get\"","webpack:///./src/state/redux/definition.js","webpack:///./src/state/sagas/sagaActions.js","webpack:///./src/state/redux/tokens.js","webpack:///external \"styled-components\"","webpack:///external \"react-redux\"","webpack:///external \"redux-actions\"","webpack:///./src/utils/token.ts","webpack:///./src/contexts/RegistryContext.tsx","webpack:///external \"@splunk/dashboard-utils/console\"","webpack:///external \"lodash/isEmpty\"","webpack:///external \"@splunk/ui-utils/i18n\"","webpack:///external \"lodash/isEqual\"","webpack:///external \"redux-saga/effects\"","webpack:///external \"lodash/pick\"","webpack:///external \"@splunk/dashboard-definition/DashboardDefinition\"","webpack:///external \"@splunk/dashboard-utils\"","webpack:///external \"lodash/each\"","webpack:///external \"lodash/isFunction\"","webpack:///./src/state/redux/mode.js","webpack:///external \"@splunk/dashboard-ui/Message\"","webpack:///./src/state/redux/input.js","webpack:///external \"lodash/omit\"","webpack:///./src/state/redux/editor.js","webpack:///./src/utils/datasource.js","webpack:///external \"@splunk/dashboard-ui/customThemeVariables\"","webpack:///external \"lodash/cloneDeep\"","webpack:///external \"reselect\"","webpack:///external \"@splunk/dashboard-utils/jsonEqual\"","webpack:///./src/state/redux/fullscreen.js","webpack:///./src/components/DataSourceConsumer.jsx","webpack:///external \"@splunk/themes\"","webpack:///external \"@splunk/dashboard-context\"","webpack:///./src/utils/input.js","webpack:///external \"lodash/memoize\"","webpack:///external \"@splunk/dashboard-utils/token\"","webpack:///./src/state/redux/index.js","webpack:///external \"redux-saga\"","webpack:///./src/state/redux/resetStore.js","webpack:///external \"@splunk/dashboard-utils/search\"","webpack:///./src/contexts/DashboardCoreApiContext.js","webpack:///external \"@splunk/dashboard-ui/ErrorBoundary\"","webpack:///./src/components/VizStatusBar.jsx","webpack:///./src/contexts/ActionMenusContext.tsx","webpack:///./src/extensions/DashboardLifecycleEvent.js","webpack:///./src/DashboardCore.jsx","webpack:///external \"lodash/merge\"","webpack:///external \"@splunk/dashboard-definition/DashboardSchema\"","webpack:///external \"@splunk/dashboard-ui/utils/presetUtils\"","webpack:///external \"memoize-one\"","webpack:///./src/preset/Preset.js","webpack:///external \"lodash/defaultsDeep\"","webpack:///external \"lodash/transform\"","webpack:///external \"@splunk/datasources/SnapshotDataSource\"","webpack:///./src/state/sagas/index.js","webpack:///./src/state/sagas/inputSaga.js","webpack:///external \"lodash/inRange\"","webpack:///external \"lodash/values\"","webpack:///external \"lodash/without\"","webpack:///external \"lodash/clone\"","webpack:///external \"lodash/uniq\"","webpack:///external \"lodash/keys\"","webpack:///external \"redux\"","webpack:///./src/state/redux/middlewares/changeMonitor.js","webpack:///./src/state/redux/middlewares/actionListener.js","webpack:///./src/state/redux/global.js","webpack:///./src/state/sagas/eventSaga.js","webpack:///external \"@splunk/dashboard-utils/url\"","webpack:///./src/events/DefaultInputHandler.ts","webpack:///./src/state/sagas/editingSaga.js","webpack:///./src/state/sagas/dataSourceSaga.js","webpack:///./src/state/sagas/migrationSaga.js","webpack:///external \"@splunk/dashboard-utils/migration\"","webpack:///./src/events/EventRegistry.ts","webpack:///./src/extensions/ApiRegistry.js","webpack:///./src/datasources/DataSourceRegistry.js","webpack:///external \"lodash/bind\"","webpack:///external \"hash-it\"","webpack:///external \"@splunk/datasource-utils/BaseChainUtils\"","webpack:///./src/datasources/DataSourceController.js","webpack:///external \"rxjs\"","webpack:///external \"lodash/once\"","webpack:///./src/datasources/Subscription.js","webpack:///external \"@splunk/datasource-utils/DataSet\"","webpack:///./src/datasources/RefreshScheduler.js","webpack:///external \"lodash/isFinite\"","webpack:///external \"lodash/isString\"","webpack:///external \"@splunk/dashboard-utils/time\"","webpack:///./src/datasources/RiskyCommandController.js","webpack:///./src/containers/connected/ConnectedDashboardContainer.jsx","webpack:///./src/containers/DashboardContainer.jsx","webpack:///./src/components/DashboardLayout.jsx","webpack:///external \"@splunk/themes/mixins\"","webpack:///external \"@splunk/dashboard-ui/SizeAwareWrapper\"","webpack:///external \"@splunk/dashboard-utils/style\"","webpack:///external \"@splunk/dashboard-utils/layout\"","webpack:///external \"@splunk/dashboard-context/CanvasContext\"","webpack:///./src/containers/connected/ConnectedLayoutContainer.jsx","webpack:///./src/containers/layouts/LayoutContainer.jsx","webpack:///./src/containers/connected/ConnectedVisualizationContainer.jsx","webpack:///./src/containers/VisualizationContainer.tsx","webpack:///external \"lodash/map\"","webpack:///external \"react-full-screen\"","webpack:///./src/components/DataSourceComposer.jsx","webpack:///external \"react-composer\"","webpack:///./src/containers/VisualizationContent.tsx","webpack:///external \"@splunk/dashboard-telemetry\"","webpack:///external \"@splunk/dashboard-ui/utils/colorUtils\"","webpack:///external \"@splunk/dashboard-ui\"","webpack:///external \"@splunk/dashboard-utils/riskyCommandUtils\"","webpack:///./src/components/VizProgressBar.jsx","webpack:///external \"@splunk/react-ui/Progress\"","webpack:///./src/components/VizTitleAndDescription.tsx","webpack:///./src/components/VizWaitingForInput.jsx","webpack:///external \"@splunk/dashboard-icons/Input\"","webpack:///external \"@splunk/react-icons/SVG\"","webpack:///./src/components/VizStatusIcon.jsx","webpack:///external \"@splunk/dashboard-ui/SearchStatusIcon\"","webpack:///./src/utils/visualization.ts","webpack:///./src/containers/SelectableContainer.tsx","webpack:///./src/containers/connected/ConnectedLineContainer.jsx","webpack:///./src/containers/LineContainer.jsx","webpack:///./src/containers/layouts/GlobalInputContainer.jsx","webpack:///external \"@splunk/dashboard-layouts/InputLayout\"","webpack:///./src/containers/connected/ConnectedInputContainer.jsx","webpack:///./src/containers/InputContainer.jsx","webpack:///./src/containers/InputContent.jsx","webpack:///external \"react-sortable-hoc\"","webpack:///./src/extensions/DashboardCorePlugin.js","webpack:///./src/extensions/CancellableDashboardLifecycleEvent.js","webpack:///./src/extensions/DashboardCoreApi.ts","webpack:///external \"lodash/some\"","webpack:///external \"@splunk/datasource-utils\"","webpack:///./src/utils/snapshot.js","webpack:///external \"lodash/uniqueId\"","webpack:///./src/hooks/useTokensWithUrl.ts","webpack:///external \"@splunk/dashboard-ui/hooks/useEventCallback\""],"names":[],"mappings":"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","file":"DashboardCore.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 47);\n","module.exports = require(\"react\");","module.exports = require(\"prop-types\");","module.exports = require(\"lodash/get\");","import values from 'lodash/values';\nimport pick from 'lodash/pick';\nimport isEqual from 'lodash/isEqual';\nimport omit from 'lodash/omit';\nimport without from 'lodash/without';\nimport isEmpty from 'lodash/isEmpty';\nimport clone from 'lodash/clone';\nimport uniq from 'lodash/uniq';\nimport { createAction, handleActions } from 'redux-actions';\nimport DashboardDefinition from '@splunk/dashboard-definition/DashboardDefinition';\nimport { createSelector } from 'reselect';\nimport { selectSubmittedTokens } from './tokens';\nimport {\n    replaceTokenForVisualization,\n    replaceTokenForDataSources,\n    replaceTokenForLayout,\n} from '../../utils/token';\n\n/**\n * Actions\n */\nexport const updateDefinition = createAction('UPDATE_DEFINITION');\nexport const addVisualization = createAction(\n    'ADD_VISUALIZATION',\n    (vizId, vizDef, dsId, dsDef) => ({\n        vizId,\n        vizDef,\n        dsId,\n        dsDef,\n    })\n);\nexport const updateVisualization = createAction('UPDATE_VISUALIZATION');\nexport const removeDataSourceFromVisualization = createAction(\n    'REMOVE_DATA_SOURCE_FROM_VISUALIZATION'\n);\nexport const updateVizOptions = createAction(\n    'UPDATE_VIZ_OPTIONS',\n    (id, options) => ({\n        id,\n        options,\n    })\n);\nexport const updateVizTitle = createAction('UPDATE_VIZ_TITLE', (id, title) => ({\n    id,\n    title,\n}));\nexport const updateVizDescription = createAction(\n    'UPDATE_VIZ_DESCRIPTION',\n    (id, description) => ({\n        id,\n        description,\n    })\n);\nexport const updateLayoutOptions = createAction('UPDATE_LAYOUT_OPTIONS');\nexport const updateLayoutStructure = createAction('UPDATE_LAYOUT_STRUCTURE');\nexport const updateInputStructure = createAction('UPDATE_INPUT_STRUCTURE');\nexport const updateInput = createAction('UPDATE_INPUT');\n\nconst empty = {};\n\n/**\n * Selectors\n */\nexport const selectDefinition = (state) => state.definition;\n\nexport const selectDefaults = createSelector(\n    [selectDefinition],\n    (def) => def.defaults\n);\n\n// Raw selectors retrieve parts of the definition without modifications\nconst selectLayoutRaw = createSelector(\n    [selectDefinition],\n    (def) => def?.layout || empty\n);\n\nconst selectVisualizationsRaw = createSelector(\n    [selectDefinition],\n    (def) => def.visualizations\n);\n\nconst selectDataSourcesRaw = createSelector(\n    [selectDefinition],\n    (def) => def.dataSources\n);\n\nconst selectVisualizationRaw = (state, id) =>\n    selectVisualizationsRaw(state)[id];\n\nexport const selectLayout = createSelector(\n    [selectLayoutRaw, selectVisualizationsRaw],\n    (layout, visualizations) => {\n        const { structure = [] } = layout;\n        const items = new Set();\n\n        let hasDuplicate = false;\n        // Remove items that are duplicated, or do not appear in visualizations\n        const updatedStructure = structure.filter((item) => {\n            if (!items.has(item.item) && visualizations[item.item]) {\n                items.add(item.item);\n                return true;\n            }\n\n            hasDuplicate = true;\n            return false;\n        });\n\n        if (hasDuplicate) {\n            return {\n                ...layout,\n                structure: updatedStructure,\n            };\n        }\n\n        // this is an optimization that avoids re-renders for components that use `layout` as prop\n        return layout;\n    }\n);\n\nexport const selectResolvedLayout = createSelector(\n    [selectLayout, selectSubmittedTokens],\n    replaceTokenForLayout\n);\n\n// Flatten only the viz you need instead of the entire definition\nconst selectFlattenedVisualization = createSelector(\n    [selectVisualizationRaw, selectDefaults],\n    (vizDef, defaults) =>\n        DashboardDefinition.flattenVisualizations(\n            { [vizDef.id]: vizDef },\n            defaults\n        )[vizDef.id]\n);\n\n// dataSources configs aren't flattened in viz, so we don't need the flattened def\nconst selectDSIds = createSelector([selectVisualizationRaw], (vizDef) =>\n    values(vizDef?.dataSources || {})\n);\n\n// Filter down to only the datasource definitions used by the visualization\nconst selectDataSourcesForVizRaw = createSelector(\n    [selectDataSourcesRaw, selectDSIds],\n    (dataSources, dsIds) => pick(dataSources, dsIds)\n);\n\n// Flatten only the datasources used by the visualization\nconst selectFlattenedDataSourcesForViz = createSelector(\n    [selectDataSourcesForVizRaw, selectDefaults],\n    DashboardDefinition.flattenDataSources\n);\n\n/**\n * The following are factory methods to generate unique selectors for a visualization\n * Potential Improvement: selectSubmittedTokensUsedBy*\n * Note: replaceTokenFor* is memoized against used tokens already\n */\nexport const selectVisualizationDefinitionFactory = () =>\n    createSelector(\n        [selectFlattenedVisualization, selectSubmittedTokens],\n        replaceTokenForVisualization\n    );\n\nexport const selectDataSourceDefinitionForVizFactory = () =>\n    createSelector(\n        [selectFlattenedDataSourcesForViz, selectSubmittedTokens],\n        replaceTokenForDataSources\n    );\n\n/**\n * The following are not optimized but are kept for backwards compatibility\n * until all usage of them can be removed\n */\n// this is an optimization to avoid re-renders for components that use dataSources as props\nlet dataSourcesWithDefaultsCache;\nexport const selectDataSources = (state) => {\n    const { dataSources } = selectDefinition(state);\n    const defaults = selectDefaults(state);\n    const dataSourcesWithDefaults = DashboardDefinition.flattenDataSources(\n        dataSources,\n        defaults\n    );\n    if (!isEqual(dataSourcesWithDefaults, dataSourcesWithDefaultsCache)) {\n        dataSourcesWithDefaultsCache = dataSourcesWithDefaults;\n    }\n    return dataSourcesWithDefaultsCache;\n};\n\nlet visualizationsWithDefaultsCache;\nexport const selectVisualizations = (state) => {\n    const { visualizations } = selectDefinition(state);\n    const defaults = selectDefaults(state);\n    const visualizationsWithDefaults = DashboardDefinition.flattenVisualizations(\n        visualizations,\n        defaults\n    );\n    if (!isEqual(visualizationsWithDefaults, visualizationsWithDefaultsCache)) {\n        visualizationsWithDefaultsCache = visualizationsWithDefaults;\n    }\n    return visualizationsWithDefaultsCache;\n};\n\nexport const selectDataSource = (state, dsId) => selectDataSources(state)[dsId];\nexport const selectVisualization = (state, vizId) =>\n    selectVisualizations(state)[vizId];\nexport const selectInputs = (state) => selectDefinition(state).inputs;\nexport const selectInput = (state, inputId) => selectInputs(state)[inputId];\nexport const selectTitle = (state) => selectDefinition(state).title;\n\nexport const selectDataSourcesForViz = (state, id) => {\n    const viz = selectVisualization(state, id);\n    const dataSourceIds = values(viz.dataSources || {});\n    return pick(selectDataSources(state), dataSourceIds);\n};\n\nexport const selectDataSourcesForInput = (state, id) => {\n    const input = selectInput(state, id);\n    const dataSourceIds = values(input.dataSources || {});\n    return pick(selectDataSources(state), dataSourceIds);\n};\n\n/**\n * Compares two objects for changed values, and replays changes onto a third object\n * @param {Object} obj\n * @param {Object} obj.obj1 The original unmodified object, e.g. the flattened def from state\n * @param {Object} obj.obj2 The new modified object, e.g. a flattened def with changes\n * @param {Object} [obj.rootObj={}] The configuration object that acts as the root definition, e.g. has not had defaults flattened on it\n * @param {String[]} [obj.omitKeys=[]] Keys to ignore when checking for changes\n */\nexport const objectDiff = ({\n    obj1 = {}, // original obj\n    obj2 = {}, // updated obj\n    rootObj = {}, // non-flattened obj\n    omitKeys = [], // don't process these keys\n}) => {\n    // Find all keys in both objects, excluding some\n    const keys = without(\n        uniq(Object.keys(obj1).concat(Object.keys(obj2))),\n        ...omitKeys\n    );\n    const result = clone(rootObj);\n\n    keys.forEach((key) => {\n        if (!isEqual(obj1[key], obj2[key])) {\n            // key was deleted\n            if (!Object.prototype.hasOwnProperty.call(obj2, key)) {\n                delete result[key];\n            } else {\n                result[key] = obj2[key];\n            }\n        }\n    });\n\n    return result;\n};\n\n/**\n * Reducer\n */\nexport default handleActions(\n    {\n        [updateDefinition]: (state, { payload }) => payload,\n        [updateVisualization]: (state, { payload: { id, vizDefinition } }) => {\n            const def = DashboardDefinition.fromJSON(state);\n            const flattenedDef = def.getVisualizationWithFlattenedDefaults(id);\n            let updatedDef = vizDefinition;\n\n            // if vizDefinition is callback, use it to to receive the updated definition\n            if (typeof vizDefinition === 'function') {\n                const updateVizDefinition = vizDefinition;\n                updatedDef = updateVizDefinition(def.getVisualization(id));\n            }\n\n            // Since this viz changed type, we'll just pass it directly through\n            // TODO: we may want to check against flattened defaults for the new viz type later\n            if (flattenedDef.type !== updatedDef.type) {\n                return {\n                    ...state,\n                    visualizations: {\n                        ...state.visualizations,\n                        [id]: updatedDef,\n                    },\n                };\n            }\n\n            // get root level changes\n            const mergedDef = objectDiff({\n                obj1: flattenedDef,\n                obj2: updatedDef,\n                rootObj: def.getVisualization(id),\n                omitKeys: ['options', 'context'],\n            });\n            // changed options\n            mergedDef.options = objectDiff({\n                obj1: flattenedDef.options,\n                obj2: updatedDef.options,\n                rootObj: mergedDef.options ?? {},\n            });\n            // changed context\n            mergedDef.context = objectDiff({\n                obj1: flattenedDef.context,\n                obj2: updatedDef.context,\n                rootObj: mergedDef.context ?? {},\n            });\n            // Remove empty objects\n            if (isEmpty(mergedDef.options)) {\n                delete mergedDef.options;\n            }\n            if (isEmpty(mergedDef.context)) {\n                delete mergedDef.context;\n            }\n\n            return {\n                ...state,\n                visualizations: {\n                    ...state.visualizations,\n                    [id]: mergedDef,\n                },\n            };\n        },\n        [removeDataSourceFromVisualization]: (\n            state,\n            { payload: { vizId, dsBindingType } }\n        ) => ({\n            ...state,\n            visualizations: {\n                ...state.visualizations,\n                [vizId]: {\n                    ...state.visualizations[vizId],\n                    dataSources: omit(\n                        state.visualizations[vizId].dataSources,\n                        dsBindingType\n                    ),\n                },\n            },\n        }),\n        [updateVizOptions]: (\n            state,\n            { payload: { id, options: newOptions } }\n        ) => ({\n            ...state,\n            visualizations: {\n                ...state.visualizations,\n                [id]: {\n                    ...state.visualizations[id],\n                    options: {\n                        ...state.visualizations[id].options,\n                        ...newOptions,\n                    },\n                },\n            },\n        }),\n        [updateVizTitle]: (state, { payload: { id, title: newTitle } }) => {\n            const trimmedTitle = newTitle && newTitle.trim();\n            if (!trimmedTitle) {\n                const nextDefinition = {\n                    ...state,\n                };\n                delete nextDefinition.visualizations[id].title;\n                return nextDefinition;\n            }\n            return {\n                ...state,\n                visualizations: {\n                    ...state.visualizations,\n                    [id]: {\n                        ...state.visualizations[id],\n                        title: trimmedTitle,\n                    },\n                },\n            };\n        },\n        [updateVizDescription]: (\n            state,\n            { payload: { id, description: newDescription } }\n        ) => {\n            const trimmedDescription = newDescription && newDescription.trim();\n            if (!trimmedDescription) {\n                const nextDefinition = {\n                    ...state,\n                };\n                delete nextDefinition.visualizations[id].description;\n                return nextDefinition;\n            }\n            return {\n                ...state,\n                visualizations: {\n                    ...state.visualizations,\n                    [id]: {\n                        ...state.visualizations[id],\n                        description: trimmedDescription,\n                    },\n                },\n            };\n        },\n        [updateLayoutStructure]: (state, { payload: layoutStructure }) => ({\n            ...state,\n            layout: {\n                ...state.layout,\n                structure: layoutStructure,\n            },\n        }),\n        [updateInputStructure]: (state, { payload: inputStructure }) => ({\n            ...state,\n            layout: {\n                ...state.layout,\n                globalInputs: inputStructure,\n            },\n        }),\n        [updateInput]: (state, { payload: { id, inputDefinition } }) => {\n            let updatedInput = inputDefinition;\n\n            // if inputDefinition is a callback, use it to get the updated definition\n            if (typeof inputDefinition === 'function') {\n                const def = DashboardDefinition.fromJSON(state);\n                const updateInputDefinition = inputDefinition;\n                updatedInput = updateInputDefinition(def.getInput(id));\n            }\n\n            return {\n                ...state,\n                inputs: {\n                    ...state.inputs,\n                    [id]: updatedInput,\n                },\n            };\n        },\n        [updateLayoutOptions]: (state, { payload }) => ({\n            ...state,\n            layout: {\n                ...state.layout,\n                options: payload,\n            },\n        }),\n    },\n    {}\n);\n","/* eslint-disable import/prefer-default-export */\nimport { createAction } from 'redux-actions';\n\n/**\n * Actions that communicate with Saga, these actions will not update redux store directly (no reducer)\n */\nexport const initialize = createAction('SAGA_INITIALIZE');\nexport const teardown = createAction('SAGA_TEARDOWN');\n\nexport const removeVisualizations = createAction('REMOVE_VISUALIZATIONS');\nexport const createVisualization = createAction('CREATE_VISUALIZATIONS');\nexport const cloneVisualizations = createAction('CLONE_VISUALIZATIONS');\nexport const adjustVisualizationOrder = createAction(\n    'ADJUST_VIZ_ORDER',\n    (from, to) => ({\n        from,\n        to,\n    })\n);\n\nexport const updateVizRequestParams = createAction(\n    'UPDATE_VIZ_REQUEST_PARAMS',\n    (vizId, dataSourceType, newRequestParams) => ({\n        vizId,\n        dataSourceType,\n        newRequestParams,\n    })\n);\n\nexport const triggerEvent = createAction(\n    'EVENT_TRIGGERED',\n    (targetId, eventType, eventPayload, eventId) => ({\n        targetId,\n        eventType,\n        eventPayload,\n        eventId,\n    })\n);\n\nexport const createInput = createAction('CREATE_INPUT');\nexport const adjustInputOrder = createAction('ADJUST_INPUT_ORDER');\nexport const inputValueChanged = createAction(\n    'INPUT_VALUE_CHANGED',\n    (id, newValue, eventId) => ({\n        id,\n        value: newValue,\n        eventId,\n    })\n);\nexport const removeInput = createAction('REMOVE_INPUT');\n\nexport const definitionChanged = createAction('DEFINITION_CHANGED');\nexport const submittedTokenChanged = createAction('SUBMITTED_TOKEN_CHANGED');\nexport const inputChanged = createAction('INPUT_CHANGED');\nexport const selectedItemChanged = createAction('SELECTED_ITEM_CHANGED');\n\nexport const migrateDashboard = createAction('MIGRATE_DASHBOARD');\n","import get from 'lodash/get';\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\nimport omit from 'lodash/omit';\nimport isEmpty from 'lodash/isEmpty';\nimport { createSelector } from 'reselect';\nimport { createAction, handleActions } from 'redux-actions';\n\nconst isNullOrUndefined = (val) => val === null || val === undefined;\n\n/**\n * Actions\n */\nexport const setToken = createAction(\n    'SET_TOKEN',\n    (tokens, namespace = 'default', submit = true) => ({\n        tokens,\n        namespace,\n        submit,\n    })\n);\nexport const unsetToken = createAction(\n    'UNSET_TOKEN',\n    (tokenName, namespace = 'default', submit = true) => ({\n        tokenName,\n        namespace,\n        submit,\n    })\n);\nexport const updateTokens = createAction(\n    'UPDATE_TOKENS',\n    (tokens, submit = true) => ({\n        tokens,\n        submit,\n    })\n);\n\nexport const submitTokens = createAction(\n    'SUBMIT_TOKENS',\n    (namespace = 'default') => ({\n        namespace,\n    })\n);\n\n// this is an optimization that avoid re-renders\nconst noTokens = {};\n\n/**\n * Selectors\n */\nexport const selectTokens = (state) => state?.tokens || noTokens;\nexport const selectSubmittedTokens = createSelector(\n    [selectTokens],\n    (tokens) => tokens?.submitted || noTokens\n);\nexport const selectStashedTokens = createSelector(\n    [selectTokens],\n    (tokens) => tokens?.stashed || noTokens\n);\n\n/**\n * Reducers\n */\nexport default handleActions(\n    {\n        [updateTokens]: (state, { payload = {} }) => {\n            const { tokens, submit } = payload;\n            const space = submit ? 'submitted' : 'stashed';\n\n            if (isEqual(state[space], tokens)) {\n                return state;\n            }\n\n            const readOnlyTokenNamespacesArray = Array.from(\n                state.readOnlyTokenNamespaces\n            );\n            const writableTokens = omit(tokens, readOnlyTokenNamespacesArray);\n            const currentReadOnlyTokens = pick(\n                state[space],\n                readOnlyTokenNamespacesArray\n            );\n\n            return {\n                ...state,\n                [space]: {\n                    // only update tokens that are writable\n                    ...currentReadOnlyTokens,\n                    ...writableTokens,\n                },\n            };\n        },\n        [setToken]: (state, { payload }) => {\n            const { tokens, namespace, submit } = payload;\n            const space = submit ? 'submitted' : 'stashed';\n\n            const currentTokens = get(state, [space, namespace]);\n\n            if (\n                state.readOnlyTokenNamespaces.has(namespace) ||\n                isEqual(pick(currentTokens, Object.keys(tokens)), tokens)\n            ) {\n                return state;\n            }\n\n            return {\n                ...state,\n                [space]: {\n                    ...state[space],\n                    [namespace]: {\n                        ...currentTokens,\n                        ...tokens,\n                    },\n                },\n            };\n        },\n        [unsetToken]: (state, { payload }) => {\n            const { tokenName, namespace, submit } = payload;\n            const space = submit ? 'submitted' : 'stashed';\n            const currentTokens = get(state, [space, namespace], {});\n            const { readOnlyTokenNamespaces } = state;\n\n            const tokensToUnset = {};\n            if (typeof tokenName === 'string') {\n                if (!isNullOrUndefined(currentTokens[tokenName])) {\n                    tokensToUnset[tokenName] = null;\n                }\n            } else if (Array.isArray(tokenName)) {\n                tokenName.forEach((token) => {\n                    if (!isNullOrUndefined(currentTokens[token])) {\n                        tokensToUnset[token] = null;\n                    }\n                });\n            }\n\n            if (\n                isEmpty(tokensToUnset) ||\n                readOnlyTokenNamespaces.has(namespace)\n            ) {\n                return state;\n            }\n\n            return {\n                ...state,\n                [space]: {\n                    ...state[space],\n                    [namespace]: {\n                        ...currentTokens,\n                        ...tokensToUnset,\n                    },\n                },\n            };\n        },\n        [submitTokens]: (state, { payload }) => {\n            // move tokens from stashed to submitted\n            const { namespace } = payload;\n            const tobeSubmit = get(state, ['stashed', namespace], {});\n\n            if (\n                state.readOnlyTokenNamespaces.has(namespace) ||\n                isEmpty(tobeSubmit)\n            ) {\n                // nothing to submit\n                return state;\n            }\n\n            return {\n                ...state,\n                stashed: {\n                    ...state.stashed,\n                    [namespace]: {},\n                },\n                submitted: {\n                    ...state.submitted,\n                    [namespace]: {\n                        ...get(state, ['submitted', namespace]),\n                        ...tobeSubmit,\n                    },\n                },\n            };\n        },\n    },\n    {\n        stashed: {},\n        submitted: {},\n    }\n);\n","module.exports = require(\"styled-components\");","module.exports = require(\"react-redux\");","module.exports = require(\"redux-actions\");","/* eslint-disable no-unused-vars */\nimport each from 'lodash/each';\nimport pick from 'lodash/pick';\nimport keys from 'lodash/keys';\nimport memoize from 'lodash/memoize';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport isEqual from '@splunk/dashboard-utils/jsonEqual';\nimport {\n    replaceTokens,\n    replaceTokensForObject,\n    safeReplaceTokensForObject,\n    hasTokensInObject,\n    extractTokensFromObject,\n} from '@splunk/dashboard-utils/token';\nimport type { DataSourceDefinition } from '@splunk/dashboard-types';\nimport omit from 'lodash/omit';\n\nexport const ERROR_LEVEL_INFO = 'info';\nexport const ERROR_LEVEL_ERROR = 'error';\nexport const WAITING_FOR_INPUT_MSG = _('Waiting for input...');\n\n// example: const tokens = { default: { token1: 'value' } };\nexport type Tokens = Record<string, Record<string, string>>;\n\n/**\n * resolver that takes the memoized function arguments (def, token), extracts the tokens used in the def\n * and returns the stringified def + extracted tokens, which is used as a cache key\n * @param {Object} def Viz/Layout/Input/Datasources definition\n * @param {Object} tokens\n * @returns {String}\n */\nexport const memoizeResolver = (def: unknown, tokens: Tokens = {}): string => {\n    const parsedTokens: Tokens = {};\n    extractTokensFromObject(def).forEach(\n        ({ namespace, name }: { namespace: string; name: string }) => {\n            if (tokens[namespace] && tokens[namespace][name]) {\n                if (!(namespace in parsedTokens)) {\n                    parsedTokens[namespace] = {};\n                }\n                parsedTokens[namespace][name] = tokens[namespace][name];\n            }\n        }\n    );\n    return JSON.stringify([def, parsedTokens]);\n};\n\nexport const replaceTokenForDataSources = memoize(\n    (\n        dataSourceDefs: Record<string, DataSourceDefinition>,\n        tokens: Tokens = {}\n    ) => {\n        const resolved: Record<string, unknown> = {};\n        each(dataSourceDefs, (def, id) => {\n            const rawOptions = dataSourceDefs[id].options;\n            if (rawOptions == null) {\n                return;\n            }\n\n            const resolvedOptions = replaceTokensForObject(\n                rawOptions,\n                tokens\n            ) as typeof rawOptions;\n            if (hasTokensInObject(resolvedOptions)) {\n                resolved[id] = {\n                    type: '_ds.snapshot_',\n                    options: {\n                        errorLevel: ERROR_LEVEL_INFO,\n                        error: WAITING_FOR_INPUT_MSG,\n                    },\n                };\n            } else {\n                resolved[id] = {\n                    ...dataSourceDefs[id],\n                    options: resolvedOptions,\n                };\n            }\n        });\n        return resolved;\n    },\n    memoizeResolver\n);\n\nexport const replaceTokenForInput = memoize((inputDef, tokens = {}) => {\n    return {\n        ...inputDef,\n        title: replaceTokens(inputDef.title, tokens),\n        options: replaceTokensForObject(inputDef.options, tokens),\n    };\n}, memoizeResolver);\n\nexport const replaceTokenForVisualization = memoize((vizDef, tokens = {}) => {\n    return {\n        ...vizDef,\n        title: replaceTokens(vizDef.title, tokens),\n        description: replaceTokens(vizDef.description, tokens),\n        options: replaceTokensForObject(vizDef.options, tokens),\n        context: replaceTokensForObject(vizDef.context, tokens),\n    };\n}, memoizeResolver);\n\nexport const replaceTokenForLayout = memoize((layout = {}, tokens = {}) => {\n    return {\n        ...layout,\n        options: safeReplaceTokensForObject(layout.options, tokens, [\n            'backgroundImage.src',\n        ]),\n    };\n}, memoizeResolver);\n\nexport const contains = (tokens = {}, subset = {}): boolean =>\n    isEqual(subset, pick(tokens, keys(subset)));\n// Return the key/value pairs in tokens that are not in omitTokens\nexport const filterExisting = <T>(tokens = {}, omitTokens = {}): Partial<T> =>\n    omit(tokens, keys(omitTokens));\n","import React, { createContext, useContext, useMemo } from 'react';\nimport type DataSourceRegistry from '../datasources/DataSourceRegistry';\nimport type EventRegistry from '../events/EventRegistry';\nimport type ApiRegistry from '../extensions/ApiRegistry';\nimport type Preset from '../preset/Preset';\n\ninterface RegistryContextValue {\n    apiRegistry: ApiRegistry;\n    eventRegistry: EventRegistry;\n    dataSourceRegistry: DataSourceRegistry;\n    preset: Preset;\n}\n\ninterface RegistryContextProviderProps extends RegistryContextValue {\n    children: React.ReactElement;\n}\n\nconst RegistryContext = createContext<RegistryContextValue | null>(null);\n\nconst RegistryContextProvider = ({\n    apiRegistry,\n    eventRegistry,\n    dataSourceRegistry,\n    preset,\n    children,\n}: RegistryContextProviderProps): JSX.Element => {\n    const value = useMemo(\n        () => ({\n            apiRegistry,\n            eventRegistry,\n            dataSourceRegistry,\n            preset,\n        }),\n        [apiRegistry, eventRegistry, dataSourceRegistry, preset]\n    );\n\n    return (\n        <RegistryContext.Provider value={value}>\n            {children}\n        </RegistryContext.Provider>\n    );\n};\n\nexport const useRegistry: () => RegistryContextValue = () => {\n    const ctx = useContext(RegistryContext);\n    if (ctx === null) {\n        throw new Error(\n            'useRegistry can only be used in a component that is a child of a RegistryContextProvider'\n        );\n    }\n\n    return ctx;\n};\n\nexport { RegistryContext as default, RegistryContextProvider };\n","module.exports = require(\"@splunk/dashboard-utils/console\");","module.exports = require(\"lodash/isEmpty\");","module.exports = require(\"@splunk/ui-utils/i18n\");","module.exports = require(\"lodash/isEqual\");","module.exports = require(\"redux-saga/effects\");","module.exports = require(\"lodash/pick\");","module.exports = require(\"@splunk/dashboard-definition/DashboardDefinition\");","module.exports = require(\"@splunk/dashboard-utils\");","module.exports = require(\"lodash/each\");","module.exports = require(\"lodash/isFunction\");","import { createAction, handleActions } from 'redux-actions';\n\n/**\n * Actions\n */\nexport const switchMode = createAction('SWITCH_MODE');\n\n/**\n *\n */\nexport const selectMode = (state) => state.mode;\n\n/**\n * Reducer\n */\nexport default handleActions(\n    {\n        [switchMode]: (state, { payload }) => payload,\n    },\n    'view'\n);\n","module.exports = require(\"@splunk/dashboard-ui/Message\");","import get from 'lodash/get';\nimport { createAction, handleActions } from 'redux-actions';\n\nexport const setInputState = createAction('SET_INPUT_STATE');\nexport const updateInputState = createAction(\n    'UPDATE_INPUT_STATE',\n    (id, state) => ({ id, state })\n);\n\nexport const selectInputState = (state) => state.inputState;\n\nexport const selectInputValue = (state, inputId) =>\n    get(state, ['inputState', inputId, 'value']);\n/**\n * reducer\n */\nexport default handleActions(\n    {\n        [setInputState]: (currentState, { payload }) => payload,\n        [updateInputState]: (currentState, { payload: { id, state } }) => ({\n            ...currentState,\n            [id]: state,\n        }),\n    },\n    {}\n);\n","module.exports = require(\"lodash/omit\");","import isEqual from 'lodash/isEqual';\nimport { createAction, handleActions } from 'redux-actions';\nimport { createSelector } from 'reselect';\n\nexport const updateSelectedItems = createAction('UPDATE_SELECTED_ITEMS');\n\nexport const selectEditor = (state) => state.editor;\n\n// this is an optimization to avoid re-renders for components that use selectedItems as prop\nconst noSelectedItems = [];\nexport const selectSelectedItems = (state) => {\n    return selectEditor(state).selectedItems || noSelectedItems;\n};\n\nconst selectVizId = (_, vizId) => vizId;\nexport const makeSelectIsSelected = () => {\n    return createSelector(\n        [selectSelectedItems, selectVizId],\n        (selectedItems, vizId) =>\n            !!selectedItems.find((item) => item.id === vizId)\n    );\n};\n\nexport default handleActions(\n    {\n        [updateSelectedItems]: (state, { payload: selectItems }) => {\n            if (isEqual(state.selectedItems, selectItems)) {\n                return state;\n            }\n            return {\n                ...state,\n                selectedItems: selectItems,\n            };\n        },\n    },\n    {\n        selectedItem: noSelectedItems,\n    }\n);\n","/* eslint-disable no-param-reassign */\nimport get from 'lodash/get';\nimport isFunction from 'lodash/isFunction';\nimport DataSet from '@splunk/datasource-utils/DataSet';\n\nconst emptyInitialRequestParams = {};\n\n/**\n * Compute initial request params for given visualization and dataSource\n * @param {Object} config\n * @param {String} config.bindingType dataSource binding type\n * @param {Object} config.consumerModule module from preset\n * @param {Object} config.options current visualization/input options\n * @private\n */\nexport const findInitialRequestParams = ({\n    bindingType = 'primary',\n    consumerModule,\n    options = {},\n} = {}) => {\n    if (consumerModule == null) {\n        return emptyInitialRequestParams;\n    }\n    const initialRequestParams =\n        get(consumerModule, [\n            'config',\n            'dataContract',\n            'initialRequestParams',\n            bindingType,\n        ]) ||\n        get(consumerModule, 'initialRequestParams', emptyInitialRequestParams);\n\n    if (isFunction(initialRequestParams)) {\n        return initialRequestParams(options);\n    }\n    return initialRequestParams;\n};\n\nexport const formatData = (data) => {\n    if (data == null) {\n        return DataSet.empty().toJSONCols();\n    }\n    if (data.constructor === DataSet) {\n        return data.toJSONCols(); // we use json cols by default\n    }\n    if (data.fields && data.columns) {\n        return data;\n    }\n    return null; // return null as invalid data\n};\n","module.exports = require(\"@splunk/dashboard-ui/customThemeVariables\");","module.exports = require(\"lodash/cloneDeep\");","module.exports = require(\"reselect\");","module.exports = require(\"@splunk/dashboard-utils/jsonEqual\");","import { createAction, handleActions } from 'redux-actions';\n\n/**\n * Actions\n */\nexport const toggleFullscreen = createAction('TOGGLE_FULLSCREEN');\n\n/**\n *\n */\nexport const selectFullscreenElement = (state) => state.fullscreenElement;\n\n/**\n * Reducer\n */\nexport default handleActions(\n    {\n        [toggleFullscreen]: (state, { payload }) => payload,\n    },\n    null\n);\n","import { Component } from 'react';\nimport T from 'prop-types';\nimport isEqual from '@splunk/dashboard-utils/jsonEqual';\nimport RegistryContext from '../contexts/RegistryContext';\n\nconst INITIAL_STATE = {\n    error: null,\n    requestParams: null,\n    data: null,\n    meta: null,\n};\n\n/**\n * A DataSource Consumer react component, data/error will be exposed via a render prop\n */\nclass DataSourceConsumer extends Component {\n    static propTypes = {\n        /**\n         * Consumer Id, should either be viz id or input id\n         */\n        consumerId: T.string.isRequired,\n        /**\n         * initial request params.\n         */\n        initialRequestParams: T.object,\n        /**\n         * binding type such as `primary`, `annotation`\n         */\n        bindingType: T.string.isRequired,\n        /**\n         * DataSource definition\n         */\n        dataSource: T.object.isRequired,\n        /**\n         * DataSource id\n         */\n        dataSourceId: T.string.isRequired,\n        /**\n         * render prop\n         */\n        children: T.func,\n    };\n\n    static contextType = RegistryContext;\n\n    static defaultProps = {\n        initialRequestParams: {\n            offset: 0,\n            count: 1000,\n        },\n        children: () => {},\n    };\n\n    constructor(props, context) {\n        super(props, context);\n        this.dataSourceRegistry = context.dataSourceRegistry;\n        this.state = INITIAL_STATE;\n    }\n\n    componentDidUpdate = async (prevProps) => {\n        if (this.shouldResetSubscription(prevProps)) {\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState(INITIAL_STATE);\n            if (this.sub) {\n                this.sub.cancel();\n            }\n            if (this.statusSub) {\n                this.statusSub.unsubscribe();\n            }\n            await this.createSubscription();\n        }\n    };\n\n    componentWillUnmount() {\n        // cancel existing subscriptions\n        if (this.sub) {\n            this.sub.cancel();\n        }\n    }\n\n    /**\n     * create DataSource subscription. This creates a Consumer - DataSource binding.\n     */\n    createSubscription = async () => {\n        try {\n            const {\n                consumerId,\n                dataSourceId,\n                initialRequestParams,\n            } = this.props;\n            this.dsController = this.dataSourceRegistry.allocate({\n                dataSourceId,\n            });\n\n            this.sub = await this.dsController.subscribe({\n                consumerId,\n                initialRequestParams,\n            });\n            this.sub.subscribeToData({\n                onData: this.handleData,\n                onError: this.handleError,\n            });\n\n            this.statusSub = this.dsController\n                .getStatusObservable()\n                .subscribe(({ meta, error }) => {\n                    if (error) {\n                        this.handleError({ meta, ...error });\n                    } else {\n                        this.setState({ meta });\n                    }\n                });\n        } catch (ex) {\n            this.handleError({\n                level: 'error',\n                message: ex.message,\n            });\n        }\n    };\n\n    /**\n     * Basically if DataSource definition changes, we need to reset the subscription\n     */\n    shouldResetSubscription = (prevProps) => {\n        const { dataSource, dataSourceId } = this.props;\n        if (dataSourceId !== prevProps.dataSourceId) {\n            return true;\n        }\n        if (!isEqual(dataSource, prevProps.dataSource)) {\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * set data\n     */\n    handleData = ({ requestParams, data, meta }) => {\n        this.setState({\n            error: null,\n            requestParams,\n            data,\n            meta,\n        });\n    };\n\n    /**\n     * set error\n     */\n    handleError = ({ level, message, meta }) => {\n        this.setState({\n            error: {\n                level,\n                message,\n            },\n            meta,\n        });\n    };\n\n    /**\n     * update request params via subscription\n     */\n    updateRequestParams = (newRequestParams) => {\n        if (this.sub) {\n            this.sub.updateRequestParams(newRequestParams);\n        }\n    };\n\n    componentDidMount = async () => {\n        await this.createSubscription();\n    };\n\n    /**\n     * Refresh data source controller.\n     *\n     * Note this is different from refreshing subscription.\n     * - refresh data source controller will create a new search job.\n     * - refresh subscription will only fetch the search results of current search job.\n     */\n    refreshDataSourceController = (payload) => {\n        if (this.dsController) {\n            this.setState(INITIAL_STATE);\n            this.dsController.refresh(payload);\n        }\n    };\n\n    render() {\n        const { error, requestParams, data, meta } = this.state;\n        const { bindingType, children } = this.props;\n        // set loading = true when no error and data\n        const loading = error == null && data == null;\n        return children({\n            loading,\n            requestParams,\n            updateRequestParams: this.updateRequestParams,\n            refresh: this.refreshDataSourceController,\n            data,\n            meta,\n            bindingType,\n            error,\n        });\n    }\n}\n\nexport default DataSourceConsumer;\n","module.exports = require(\"@splunk/themes\");","module.exports = require(\"@splunk/dashboard-context\");","import each from 'lodash/each';\nimport get from 'lodash/get';\n\nexport const isInputEmpty = (value) => value == null || value === '';\n\n/**\n * compute new input state given the new input definition, for input has no changes, this is a noop.\n * removed input will be removed from state.\n * newly added input will be add to state with initial value computed.\n * @param {*} currentInputState\n * @param {Object[]} inputDefs\n * @param {Object} submittedTokens object containing namespaces with their respective set tokens\n * @param {Preset} preset\n */\nexport const createInputState = ({\n    currentInputState,\n    inputDefs,\n    submittedTokens,\n    preset,\n    isReset = false, // If we're resetting it means we may want the value from the inputs submittedToken\n}) => {\n    const newState = {};\n    each(inputDefs, ({ options = {}, type }, k) => {\n        const input = preset ? preset.findInput(type) : null;\n        let inputValue = get(currentInputState, [k, 'value']);\n        const { defaultValue } = options;\n\n        // If there is a token binding present, set input value from that binding\n        const tokenNamespace = get(options, 'tokenNamespace', 'default');\n        const tokenName = get(options, 'token');\n        const tokenValue =\n            input && input.tokensToValue\n                ? input.tokensToValue({\n                      tokens: submittedTokens,\n                      tokenName,\n                      tokenNamespace,\n                  })\n                : get(submittedTokens, [tokenNamespace, tokenName]);\n\n        if ((isInputEmpty(inputValue) || isReset) && tokenValue) {\n            // if input is empty or we're resetting AND there is a token binding for the input's token\n            inputValue = tokenValue;\n        } else if (isInputEmpty(inputValue) && defaultValue) {\n            // if there is no token binding, use default if it exists\n            inputValue = defaultValue;\n        }\n        newState[k] = {\n            value: inputValue,\n        };\n    });\n    return newState;\n};\n\n/**\n * Compute the new state given a new value triggered from input\n * @method createNextState\n * @param {*} currentState\n * @param {*} value\n * @param {Object} [inputDef={}]\n * @param {Object} [inputDef.options={}]\n */\nexport const createNextState = ({ value, inputDef: { options = {} } }) => {\n    let nextvalue = value;\n    if (isInputEmpty(nextvalue) && options.defaultValue != null) {\n        nextvalue = options.defaultValue;\n    }\n    return {\n        value: nextvalue,\n    };\n};\n","module.exports = require(\"lodash/memoize\");","module.exports = require(\"@splunk/dashboard-utils/token\");","/* eslint-disable no-underscore-dangle */\nimport {\n    createStore as createReduxStore,\n    combineReducers,\n    applyMiddleware,\n    compose,\n} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport changeMonitor from './middlewares/changeMonitor';\nimport actionListener from './middlewares/actionListener';\nimport definitionReducer from './definition';\nimport tokensReducer from './tokens';\nimport modeReducer from './mode';\nimport fullscreenReducer from './fullscreen';\nimport editorReducer from './editor';\nimport globalReducer from './global';\nimport inputStateReducer from './input';\nimport resetStoreAction from './resetStore';\n\nexport const resetStore = resetStoreAction;\n\nconst rootReducer = combineReducers({\n    message: globalReducer,\n    mode: modeReducer,\n    fullscreenElement: fullscreenReducer,\n    definition: definitionReducer,\n    tokens: tokensReducer,\n    editor: editorReducer,\n    inputState: inputStateReducer,\n});\n\nconst reducer = (state, action) => {\n    if (action.type === resetStoreAction.toString()) {\n        return action.payload;\n    }\n    return rootReducer(state, action);\n};\n\nexport default function createStore({\n    initialState = {},\n    actionListenerDefs = {},\n    rootSaga,\n}) {\n    const sagaMiddleware = createSagaMiddleware();\n    const middlewares = [\n        changeMonitor,\n        actionListener(actionListenerDefs),\n        sagaMiddleware,\n    ];\n    let composeEnhancers = compose;\n\n    // eslint-disable-next-line no-undef\n    if (process.env.NODE_ENV !== 'production') {\n        if (\n            typeof window === 'object' &&\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n        ) {\n            composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n                name: 'Dashboard Core',\n            });\n        }\n    }\n    const enhancers = [applyMiddleware(...middlewares)];\n    const store = createReduxStore(\n        reducer,\n        initialState,\n        composeEnhancers(...enhancers)\n    );\n    sagaMiddleware.run(rootSaga);\n    return store;\n}\n","module.exports = require(\"redux-saga\");","import { createAction } from 'redux-actions';\n\nexport default createAction('RESET');\n","module.exports = require(\"@splunk/dashboard-utils/search\");","import { createContext } from 'react';\n\nconst DashboardCoreApiContext = createContext();\n\nexport const DashboardCoreApiProvider = DashboardCoreApiContext.Provider;\nexport const DashboardCoreApiConsumer = DashboardCoreApiContext.Consumer;\nexport default DashboardCoreApiContext;\n","module.exports = require(\"@splunk/dashboard-ui/ErrorBoundary\");","import React from 'react';\nimport T from 'prop-types';\nimport styled from 'styled-components';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport { customThemeVariables } from '@splunk/dashboard-ui/customThemeVariables';\n\nexport const STATUSBAR_HEIGHT = 20;\n\nconst StatusBarContainer = styled.div.attrs(() => ({\n    'data-test': 'status-bar-container',\n}))`\n    height: ${STATUSBAR_HEIGHT}px;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    padding-left: 12px;\n    padding-right: 36px;\n    background-color: ${(props) =>\n        props.backgroundColor || customThemeVariables.vizPanelBackgroundColor};\n    /* Fix sub-pixel gaps between elements when scaled */\n    box-shadow: 0 -1px 1px 0 ${(props) => props.backgroundColor || customThemeVariables.vizPanelBackgroundColor};\n    overflow: hidden;\n`;\n\nconst RiskyWarningStatusContainer = styled.div.attrs(() => ({\n    'data-test': 'risky-command-status-container',\n}))`\n    text-align: right;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n`;\n\nconst ActionRequiredText = styled.span`\n    font-weight: 500;\n    padding-right: 6px;\n`;\n\nconst VizStatusBar = ({ backgroundColor, hasRiskyCommand }) => {\n    if (!hasRiskyCommand) {\n        return <StatusBarContainer backgroundColor={backgroundColor} />;\n    }\n\n    return (\n        <StatusBarContainer backgroundColor={backgroundColor}>\n            <RiskyWarningStatusContainer>\n                <ActionRequiredText>{_('Action Required:')}</ActionRequiredText>\n                <span>\n                    {_('Click here to review the query before running')}\n                </span>\n            </RiskyWarningStatusContainer>\n        </StatusBarContainer>\n    );\n};\n\nVizStatusBar.propTypes = {\n    backgroundColor: T.string,\n    hasRiskyCommand: T.bool,\n};\n\nVizStatusBar.defaultProps = {\n    hasRiskyCommand: false,\n};\n\nexport default VizStatusBar;\n","import { createContext, useContext } from 'react';\n\nconst ActionMenusContext = createContext<JSX.Element[] | null>(null);\n\nexport const ActionMenusContextProvider = ActionMenusContext.Provider;\n\nexport const useActionMenus: () => JSX.Element[] = () => {\n    const ctx = useContext(ActionMenusContext);\n    if (ctx === null) {\n        throw new Error(\n            'useActionMenus can only be used in a component that is a child of a ActionMenusContextProvider'\n        );\n    }\n\n    return ctx;\n};\n\nexport default ActionMenusContext;\n","/**\n * Base event\n */\nexport default class DashboardLifecycleEvent {\n    constructor(payload) {\n        Object.assign(this, payload);\n    }\n}\n","/* eslint-disable react/no-unused-prop-types,class-methods-use-this */\nimport isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\nimport cloneDeep from 'lodash/cloneDeep';\nimport merge from 'lodash/merge';\nimport React, { PureComponent } from 'react';\nimport T from 'prop-types';\nimport DashboardContext from '@splunk/dashboard-context';\nimport DashboardDefinition from '@splunk/dashboard-definition/DashboardDefinition';\nimport { createSchemaBasedOnPresets } from '@splunk/dashboard-definition/DashboardSchema';\nimport { withUpdatedPreset } from '@splunk/dashboard-ui/utils/presetUtils';\nimport console from '@splunk/dashboard-utils/console';\nimport {\n    shallowEqual,\n    getWindowLocationSearch,\n    mapURLToTokens,\n} from '@splunk/dashboard-utils';\nimport { Provider } from 'react-redux';\nimport memoizeOne from 'memoize-one';\nimport Preset from './preset/Preset';\nimport createSaga from './state/sagas';\nimport createStore, { resetStore } from './state/redux';\nimport EventRegistry from './events/EventRegistry';\nimport ApiRegistry from './extensions/ApiRegistry';\nimport DataSourceRegistry from './datasources/DataSourceRegistry';\nimport { RegistryContextProvider } from './contexts/RegistryContext';\nimport { DashboardCoreApiProvider } from './contexts/DashboardCoreApiContext';\nimport DashboardContainer from './containers/connected/ConnectedDashboardContainer';\nimport { createDashboardPlugin } from './extensions/DashboardCorePlugin';\nimport { createDashboardApi } from './extensions/DashboardCoreApi';\nimport {\n    initialize,\n    teardown,\n    submittedTokenChanged,\n    definitionChanged,\n    selectedItemChanged,\n} from './state/sagas/sagaActions';\nimport { useTokensWithUrl } from './hooks/useTokensWithUrl';\nimport { ActionMenusContextProvider } from './contexts/ActionMenusContext';\n\nconst formatValidateError = ({ instancePath, message }) =>\n    `${instancePath}: ${message}`;\nconst noop = () => undefined;\nconst empty = {};\n\nexport class DashboardCore extends PureComponent {\n    static displayName = 'DashboardCore';\n\n    static contextType = DashboardContext;\n\n    static propTypes = {\n        /**\n         *  The dashboard definition json object\n         */\n        definition: T.object,\n\n        /**\n         * Dashboard Mode. ('view' or 'edit')\n         */\n        mode: T.string,\n\n        /**\n         * Callback to signal definition change\n         */\n        onDefinitionChange: T.func,\n\n        /**\n         * selected visualizations or inputs\n         */\n        selectedItems: T.arrayOf(\n            T.shape({\n                id: T.string.isRequired,\n                type: T.oneOf(['block', 'line', 'input']).isRequired,\n            })\n        ),\n\n        /**\n         * Callback when visualizations or inputs are selected\n         */\n        onItemsSelect: T.func,\n\n        /**\n         *  datasource context\n         */\n        dataSourceContext: T.object,\n\n        /**\n         * Supply a custom token binding for the dashboard. If this is provided, and\n         * every time it changes, the token binding of the dashboard is reset.\n         */\n        tokenBinding: T.object,\n\n        /**\n         * A callback for when the tokenBinding change\n         */\n        onTokenBindingChange: T.func,\n\n        /**\n         * Optionally add a dashboard lifecycle plugin which allows to hook\n         * into certain lifecycle events of the dashboard by providing\n         * callback functions.\n         */\n        dashboardCorePlugin: T.shape({\n            /**\n             * Called when the dashboard is initialized\n             */\n            onInitialize: T.func,\n            /**\n             * Called when an event triggered\n             */\n            onEventTrigger: T.func,\n            /**\n             * Called when navigation will occur\n             */\n            onLinkToUrl: T.func,\n        }),\n\n        /**\n         * Hook to retrieve a reference to the dashboard lifecycle API, which\n         * allows programmatic interaction with the dashboard.\n         */\n        dashboardCoreApiRef: T.func,\n\n        /**\n         * Dashboard Preset\n         */\n        preset: T.shape({\n            layouts: T.objectOf(T.elementType),\n            visualizations: T.objectOf(T.elementType),\n            dataSources: T.objectOf(T.elementType),\n            inputs: T.objectOf(T.elementType),\n            eventHandlers: T.objectOf(T.func),\n        }),\n        /**\n         * width in pixel or string, defaults to 100%\n         */\n        width: T.oneOfType([T.string, T.number]),\n\n        /**\n         * height in pixel or string, defaults to 600px\n         */\n        height: T.oneOfType([T.string, T.number]),\n        /**\n         * viz action menus\n         */\n        actionMenus: T.arrayOf(T.element),\n        /**\n         * metadata for logging purposes\n         */\n        metadata: T.object,\n        /**\n         * whether gridlines should be displayed in edit mode\n         */\n        showGrid: T.bool,\n        /**\n         * Called when validation fails\n         */\n        onValidationError: T.func,\n        /**\n         * Called when migration is done\n         */\n        onMigrationDone: T.func,\n        /**\n         * Set of readonly token namespaces. Tokens in these namespaces cannot be modified from their initial tokenBinding values.\n         */\n        readOnlyTokenNamespaces: T.instanceOf(Set),\n    };\n\n    static defaultProps = {\n        mode: 'view',\n        showGrid: true,\n        definition: {},\n        width: '100%',\n        height: 600, // default height to 600px\n        actionMenus: [],\n        selectedItems: [],\n        dashboardCoreApiRef: noop,\n        onDefinitionChange: noop,\n        onItemsSelect: noop,\n        onTokenBindingChange: noop,\n        onMigrationDone: noop,\n        readOnlyTokenNamespaces: new Set(),\n    };\n    // reference DashboardContext\n\n    /**\n     * inject dashboard api if it's missing\n     */\n    cloneActionMenus = memoizeOne(\n        (menus) =>\n            menus.map((item) => {\n                if (!item.props.dashboardApi) {\n                    return React.cloneElement(item, {\n                        dashboardApi: this.dashboardCoreApi,\n                    });\n                }\n                return item;\n            }),\n        shallowEqual\n    );\n\n    constructor(props, ...args) {\n        super(props, ...args);\n        const {\n            preset,\n            dashboardCorePlugin,\n            dataSourceContext,\n            definition,\n            readOnlyTokenNamespaces,\n            tokenBinding,\n            onTokenBindingChange,\n            onMigrationDone,\n        } = props;\n\n        // instantiate event registry and preset\n        this.eventRegistry = new EventRegistry();\n        this.apiRegistry = new ApiRegistry();\n        this.preset = new Preset(preset);\n\n        this.dashboardPlugin = createDashboardPlugin(dashboardCorePlugin);\n\n        this.dataSourceRegistry = new DataSourceRegistry({\n            preset: this.preset,\n            dataSourceContext:\n                dataSourceContext || this.context?.dataSourceContext || {},\n        });\n        // bootstrap store and saga\n        const rootSaga = createSaga({\n            dashboardPlugin: this.dashboardPlugin,\n            preset: this.preset,\n            eventRegistry: this.eventRegistry,\n            apiRegistry: this.apiRegistry,\n            dataSourceRegistry: this.dataSourceRegistry,\n            onMigrationDone,\n        });\n\n        // Lowest priority\n        const originalBinding = tokenBinding ?? {};\n\n        // Middle priority\n        const defaultTokens = DashboardDefinition.fromJSON(\n            definition\n        ).getDefaultStaticTokens(readOnlyTokenNamespaces);\n\n        // High priority\n        // TODO: if we ever support non-\"default\" namespaces in the URL, ensure that readOnlyTokenNamespaces are not read\n        const urlTokens = mapURLToTokens({\n            search: getWindowLocationSearch(),\n        });\n\n        const mergedTokens = {};\n        // merge up all the tokens. mutates mergedTokens\n        merge(mergedTokens, originalBinding, defaultTokens, urlTokens);\n\n        // Prevent default from being an empty object, screwing up the following comparison on initial load (see mapURLToTokens)\n        if (isEmpty(mergedTokens.default)) {\n            delete mergedTokens.default;\n        }\n\n        // If there are tokens in the url and they don't match what is already set we need to fix that\n        if (!isEmpty(mergedTokens) && !isEqual(originalBinding, mergedTokens)) {\n            onTokenBindingChange(mergedTokens);\n        }\n\n        this.store = createStore({\n            initialState: this.getInitialStoreState({\n                ...props,\n                tokenBinding: mergedTokens,\n            }),\n            actionListenerDefs: this.getActionListeners(),\n            rootSaga,\n        });\n        this.dashboardCoreApi = createDashboardApi({\n            store: this.store,\n            apiRegistry: this.apiRegistry,\n            dataSourceRegistry: this.dataSourceRegistry,\n        });\n\n        this.dataSourceRegistry.subscribeToStore(this.store);\n        // kickoff the data source update loop\n        this.store.dispatch(initialize());\n    }\n\n    componentDidMount() {\n        // passing out the dashboard api so that consumer can use it to control dashboard core.\n        this.props.dashboardCoreApiRef(this.dashboardCoreApi);\n        this.dashboardPlugin.invokePluginCallback('onInitialize', {});\n    }\n\n    componentDidUpdate(prevProps) {\n        const didDefinitionChange =\n            this.props.definition !== prevProps.definition;\n        const newStore = {\n            ...this.store.getState(),\n            ...this.getInitialStoreState({\n                ...this.props,\n                didDefinitionChange,\n            }),\n        };\n        this.store.dispatch(resetStore(newStore));\n    }\n\n    componentWillUnmount() {\n        this.apiRegistry.teardown();\n        this.eventRegistry.teardown();\n        // signal saga to be teardown\n        this.store.dispatch(teardown());\n        // remove the reference to dashboardApi\n        this.props.dashboardCoreApiRef(null);\n        this.dataSourceRegistry.teardown();\n    }\n\n    handleSchemaErrors({\n        preset,\n        definition,\n        didDefinitionChange,\n        onValidationError,\n        metadata,\n    }) {\n        try {\n            const schema = createSchemaBasedOnPresets(preset);\n            const setSchemaErrors = definition.setSchema(schema);\n            if (setSchemaErrors) {\n                if (didDefinitionChange) {\n                    if (typeof onValidationError === 'function') {\n                        onValidationError(setSchemaErrors.message);\n                    } else {\n                        console.error(setSchemaErrors.message);\n                    }\n                }\n\n                const logger = this.context?.logger;\n                if (logger && typeof logger.error === 'function') {\n                    logger.error({\n                        message: setSchemaErrors.message,\n                        metadata,\n                    });\n                }\n                return true;\n            }\n        } catch (e) {\n            console.error('Schema Error:', e);\n            return true;\n        }\n        return false;\n    }\n\n    handleValidationErrors({\n        definition,\n        didDefinitionChange,\n        onValidationError,\n        metadata,\n    }) {\n        try {\n            const validationErrors = definition.validate();\n            if (Array.isArray(validationErrors) && validationErrors.length) {\n                if (didDefinitionChange) {\n                    const handleError =\n                        typeof onValidationError === 'function'\n                            ? onValidationError\n                            : console.error;\n                    validationErrors.forEach((e) => {\n                        handleError(formatValidateError(e));\n                    });\n                }\n\n                const logger = this.context?.logger;\n                if (logger && typeof logger.error === 'function') {\n                    validationErrors.forEach((e) =>\n                        logger.error({\n                            message: formatValidateError(e),\n                            metadata,\n                        })\n                    );\n                }\n            }\n        } catch (e) {\n            console.error('Validation Error:', e);\n        }\n    }\n\n    getInitialStoreState({\n        definition: rawDefinition,\n        selectedItems,\n        onValidationError,\n        preset,\n        metadata,\n        mode,\n        tokenBinding,\n        readOnlyTokenNamespaces,\n        didDefinitionChange = true,\n    }) {\n        const definition = DashboardDefinition.fromJSON(rawDefinition);\n        const submittedTokenBinding = cloneDeep(tokenBinding) || empty;\n\n        const state = {\n            mode,\n            definition: definition.toJSON(),\n            tokens: {\n                readOnlyTokenNamespaces: new Set(readOnlyTokenNamespaces),\n                submitted: submittedTokenBinding,\n            },\n            editor: {\n                selectedItems,\n            },\n        };\n        const validationProps = {\n            preset,\n            definition,\n            didDefinitionChange,\n            onValidationError,\n            metadata,\n        };\n        if (!this.handleSchemaErrors(validationProps)) {\n            this.handleValidationErrors(validationProps);\n        }\n        return state;\n    }\n\n    getActionListeners() {\n        return {\n            [submittedTokenChanged]: () => {\n                const { tokens = {} } = this.store.getState();\n                this.props.onTokenBindingChange(\n                    cloneDeep(tokens.submitted) || {}\n                );\n            },\n            [definitionChanged]: () => {\n                const { definition } = this.store.getState();\n                this.props.onDefinitionChange(definition);\n            },\n            [selectedItemChanged]: () => {\n                const { onItemsSelect } = this.props;\n                const { editor = {} } = this.store.getState();\n                // Give editable components a chance to save their state before the visualization(s) change.\n                if (window.document.hasFocus()) {\n                    window.document.activeElement.blur();\n                }\n\n                onItemsSelect(editor.selectedItems);\n            },\n        };\n    }\n\n    render() {\n        const { width, height, actionMenus, showGrid } = this.props;\n        const { featureFlags = {} } = this.context;\n\n        return (\n            <Provider store={this.store}>\n                <RegistryContextProvider\n                    preset={this.preset}\n                    eventRegistry={this.eventRegistry}\n                    apiRegistry={this.apiRegistry}\n                    dataSourceRegistry={this.dataSourceRegistry}\n                >\n                    <DashboardCoreApiProvider value={this.dashboardCoreApi}>\n                        {featureFlags.enableTokensInUrl && (\n                            <TokensToUrl preset={this.preset} />\n                        )}\n                        <ActionMenusContextProvider\n                            value={this.cloneActionMenus(actionMenus)}\n                        >\n                            <DashboardContainer\n                                width={width}\n                                height={height}\n                                showGrid={showGrid}\n                            />\n                        </ActionMenusContextProvider>\n                    </DashboardCoreApiProvider>\n                </RegistryContextProvider>\n            </Provider>\n        );\n    }\n}\n\n// Once dashboardCore is a functional component we can drop this pseudo component and just use the hook\nconst TokensToUrl = ({ preset }) => {\n    useTokensWithUrl({ preset });\n\n    return null;\n};\n\nexport default withUpdatedPreset(DashboardCore);\n","module.exports = require(\"lodash/merge\");","module.exports = require(\"@splunk/dashboard-definition/DashboardSchema\");","module.exports = require(\"@splunk/dashboard-ui/utils/presetUtils\");","module.exports = require(\"memoize-one\");","import defaultsDeep from 'lodash/defaultsDeep';\nimport transform from 'lodash/transform';\nimport get from 'lodash/get';\nimport React from 'react';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport SnapshotDataSource from '@splunk/datasources/SnapshotDataSource';\nimport Message from '@splunk/dashboard-ui/Message';\nimport cloneDeep from 'lodash/cloneDeep';\n\nexport const defToArray = (items) =>\n    transform(\n        items,\n        (ret, v, k) => {\n            ret.push({\n                type: k,\n                ...v,\n            });\n        },\n        []\n    );\n\nconst noopHandler = {\n    canHandle: () => false,\n};\n\nexport default class Preset {\n    /* eslint-disable-next-line class-methods-use-this */\n    getDefaultPreset() {\n        return {\n            visualizations: {},\n            inputs: {},\n            dataSources: {\n                '_ds.snapshot_': SnapshotDataSource,\n            },\n            eventHandlers: {},\n            layouts: {},\n        };\n    }\n\n    normalize(preset) {\n        return defaultsDeep(preset, this.getDefaultPreset());\n    }\n\n    constructor(presetDefinition = {}) {\n        this.presetDef = this.normalize(cloneDeep(presetDefinition));\n    }\n\n    listLayouts() {\n        return defToArray(this.presetDef.layouts);\n    }\n\n    listVisualizations() {\n        return defToArray(this.presetDef.visualizations);\n    }\n\n    listDataSources() {\n        return defToArray(this.presetDef.dataSources);\n    }\n\n    listInputs() {\n        return defToArray(this.presetDef.inputs);\n    }\n\n    listEventHandlers() {\n        return defToArray(this.presetDef.eventHandlers);\n    }\n\n    findVisualization(type) {\n        return get(this.presetDef, ['visualizations', type]);\n    }\n\n    findDataSource(type) {\n        return get(this.presetDef, ['dataSources', type]);\n    }\n\n    findInput(type) {\n        return get(this.presetDef, ['inputs', type]);\n    }\n\n    findEventHandler(type) {\n        return get(this.presetDef, ['eventHandlers', type]);\n    }\n\n    findLayout(type) {\n        return get(this.presetDef, ['layouts', type]);\n    }\n\n    /**\n     * create visualization component\n     * @param {*} type visualization type\n     * @param {*} props computed react props\n     */\n    createVisualization(type, props) {\n        const Viz = this.findVisualization(type);\n        try {\n            if (Viz == null) {\n                return React.createElement(Message, {\n                    level: 'error',\n                    message: _(`${type} is not defined`),\n                });\n            }\n            return React.createElement(Viz, { ...props, type });\n        } catch (ex) {\n            return React.createElement(Message, {\n                level: 'error',\n                message: ex.message,\n            });\n        }\n    }\n\n    /**\n     * Determine if preset class recommends displaying a title and description\n     * @param {String} type Visualization type, e.g. ('viz.singlevalue')\n     */\n    shouldDisplayVisualizationSiblingContent(type) {\n        const Viz = this.findVisualization(type);\n\n        return {\n            showTitleAndDescription: !!(Viz && Viz.showTitleAndDescription),\n            showProgressBar: !!(Viz && Viz.showProgressBar),\n            showLastUpdated: !!(Viz && Viz.showLastUpdated),\n        };\n    }\n\n    /**\n     * instantiate visualization editor component\n     * @param  {...any} args\n     */\n    createVisualizationEditor(...args) {\n        return this.createVisualization(...args);\n    }\n\n    /**\n     * instantiate datasource\n     * @param {*} type datasource type\n     * @param {*} options datasource options\n     * @param {*} dataSourceContext  datasource context\n     * @param {*} meta metadata\n     * @param {*} id datasource id\n     */\n    createDataSource(\n        type,\n        options,\n        dataSourceContext,\n        meta,\n        id,\n        baseChainModel\n    ) {\n        try {\n            const DataSourceDef = this.findDataSource(type);\n            if (DataSourceDef) {\n                // pass id within context for testing purpose\n                return new DataSourceDef(\n                    options,\n                    { ...dataSourceContext, id },\n                    meta,\n                    baseChainModel\n                );\n            }\n            return new SnapshotDataSource({\n                errorLevel: 'error',\n                error: _(`${type} is not defined`),\n            });\n        } catch (ex) {\n            return new SnapshotDataSource({\n                errorLevel: 'error',\n                error: ex.message,\n            });\n        }\n    }\n\n    /**\n     * instantiate input component\n     * @param {*} type\n     * @param {*} props\n     */\n    createInput(type, props) {\n        const Input = this.findInput(type);\n        try {\n            if (Input == null) {\n                return React.createElement(Message, {\n                    level: 'error',\n                    message: _(`${type} is not defined`),\n                    // Do not center this component to allow it to display in the global inputs section\n                    centered: false,\n                });\n            }\n            return React.createElement(Input, { ...props, type });\n        } catch (ex) {\n            return React.createElement(Message, {\n                level: 'error',\n                message: ex.message,\n                centered: false,\n            });\n        }\n    }\n\n    /**\n     * instantiate event handlers\n     * @param {*} type\n     * @param {*} options\n     */\n    createEventHandler(type, options) {\n        try {\n            const EventHandlerDef = this.findEventHandler(type);\n            if (EventHandlerDef) {\n                return new EventHandlerDef(options);\n            }\n            return noopHandler;\n        } catch (ex) {\n            return noopHandler;\n        }\n    }\n\n    /**\n     * instantiate layout component\n     * @param {*} type\n     * @param {*} props\n     */\n    createLayout(type, props) {\n        const Layout = this.findLayout(type);\n        try {\n            if (Layout == null) {\n                return React.createElement(Message, {\n                    level: 'error',\n                    message: _(`${type} is not defined`),\n                });\n            }\n            return React.createElement(Layout, { ...props, type });\n        } catch (ex) {\n            return React.createElement(Message, {\n                level: 'error',\n                message: ex.message,\n            });\n        }\n    }\n\n    /**\n     * instantiate layout editor component\n     * @param  {...any} args\n     */\n    createLayoutEditor(...args) {\n        return this.createLayout(...args);\n    }\n}\n","module.exports = require(\"lodash/defaultsDeep\");","module.exports = require(\"lodash/transform\");","module.exports = require(\"@splunk/datasources/SnapshotDataSource\");","/* eslint-disable no-restricted-syntax, no-constant-condition */\n\nimport { take, cancel, fork } from 'redux-saga/effects';\nimport { teardown } from './sagaActions';\nimport inputSaga from './inputSaga';\nimport eventSaga from './eventSaga';\nimport editingSaga from './editingSaga';\nimport dataSourceSaga from './dataSourceSaga';\nimport migrationSaga from './migrationSaga';\n\nexport default (sagaContext = {}) =>\n    function* mainSaga() {\n        const dataSourceTask = yield fork(dataSourceSaga, sagaContext);\n        const inputUpdateTask = yield fork(inputSaga, sagaContext);\n        const eventHandlingTask = yield fork(eventSaga, sagaContext);\n        const editingSagaTask = yield fork(editingSaga, sagaContext);\n        const migrationSagaTask = yield fork(migrationSaga, sagaContext);\n        yield take(teardown);\n        yield cancel(dataSourceTask);\n        yield cancel(inputUpdateTask);\n        yield cancel(eventHandlingTask);\n        yield cancel(editingSagaTask);\n        yield cancel(migrationSagaTask);\n    };\n","/* eslint-disable no-restricted-syntax, guard-for-in */\nimport get from 'lodash/get';\nimport inRange from 'lodash/inRange';\nimport { logfmt } from '@splunk/dashboard-utils/console';\nimport DashboardDefinition from '@splunk/dashboard-definition/DashboardDefinition';\nimport {\n    put,\n    select,\n    takeLatest,\n    takeEvery,\n    cancelled,\n} from 'redux-saga/effects';\nimport {\n    selectInputState,\n    setInputState,\n    updateInputState,\n} from '../redux/input';\nimport { createInputState, createNextState } from '../../utils/input';\nimport {\n    selectDefinition,\n    updateDefinition,\n    selectInputs,\n    selectLayout,\n} from '../redux/definition';\nimport {\n    setToken,\n    selectSubmittedTokens,\n    selectStashedTokens,\n    unsetToken,\n} from '../redux/tokens';\nimport {\n    createInput,\n    removeInput,\n    adjustInputOrder,\n    inputChanged,\n    initialize,\n    inputValueChanged,\n    triggerEvent,\n} from './sagaActions';\nimport { contains, filterExisting } from '../../utils/token';\nimport { resetStore } from '../redux';\n\nconst hasSubmitButton = (layout) =>\n    get(layout, ['options', 'submitButton'], false);\nconst hasSubmitOnDashboardLoad = (layout) =>\n    get(layout, ['options', 'submitOnDashboardLoad'], false);\n\nconst getTokenNamespace = (inputDef) =>\n    get(inputDef, ['options', 'tokenNamespace'], 'default');\n\n/**\n * handle input value change, it's gonna update the input state ( value ) and set tokens\n * @param {*} action\n * @param {*} inputDefs\n * @param {*} sagaContext\n */\nfunction* handleValueChange(inputDefs, sagaContext, action) {\n    const { id, value, eventId } = action.payload;\n    const inputDef = inputDefs[id];\n    const layout = yield select(selectLayout);\n    // given the new value, compute the next input state.\n    const nextState = createNextState({ value, inputDef });\n    yield put(updateInputState(id, nextState));\n    // dispatch value change event.\n    // token submission will be handled in event saga as part of event handling pipeline\n    const input = sagaContext.preset.findInput(inputDef.type);\n    const tokens =\n        input && input.valueToTokens\n            ? input.valueToTokens(nextState.value, get(inputDef, 'options', {}))\n            : {};\n    // check if there's submit button for defined namespace.\n    const tokenNamespace = getTokenNamespace(inputDef);\n    // we only have submit button for default namespace now\n    const submit = !(tokenNamespace === 'default' && hasSubmitButton(layout));\n    yield put(\n        triggerEvent(\n            id,\n            'input.change',\n            {\n                value: nextState.value,\n                tokens,\n                tokenNamespace,\n                submit,\n            },\n            eventId // the event dispatched from ui component\n        )\n    );\n}\n\n/**\n * Given the new inputState, compute and update token values.\n * We need to perform this because new inputState may contains default/initial value so we need to\n * populate the tokens accordingly\n * @param {*} inputState\n * @param {*} inputDefs\n * @param {*} sagaContext\n */\nexport function* handleInitialTokenSubmit({\n    inputState,\n    inputDefs,\n    sagaContext,\n    action = {},\n}) {\n    const layout = yield select(selectLayout);\n    const submittedTokens = yield select(selectSubmittedTokens);\n    const stashedTokens = yield select(selectStashedTokens);\n    // submit first tokens if we're initializing and option for submitting on load is true.\n    const submitFirstTokens =\n        action.type === 'SAGA_INITIALIZE' && hasSubmitOnDashboardLoad(layout);\n    let existingTokens = {}; // Tokens that have been submitted in this iteration. Used to check for duplicates\n    for (const id in inputState) {\n        const inputDef = inputDefs[id];\n        const tokenNamespace = getTokenNamespace(inputDef);\n        // submit tokens if no submit button, namespace is not default, or we submit on load\n        const submit =\n            submitFirstTokens ||\n            tokenNamespace !== 'default' ||\n            !hasSubmitButton(layout);\n        const input = sagaContext.preset.findInput(inputDef.type);\n        const tokens =\n            input && input.valueToTokens\n                ? input.valueToTokens(\n                      inputState[id].value,\n                      get(inputDef, 'options', {})\n                  )\n                : {};\n        const filteredTokens = filterExisting(tokens, existingTokens); // Filter tokens that were just submitted (duplicate tokens)\n        existingTokens = { ...existingTokens, ...filteredTokens }; // Add new tokens to existing list\n        if (\n            !contains(\n                (submit ? submittedTokens : stashedTokens)[tokenNamespace],\n                filteredTokens\n            )\n        ) {\n            yield put(setToken(filteredTokens, tokenNamespace, submit));\n        }\n    }\n}\n\n/**\n * handle input definition change\n * @param {*} sagaContext\n */\nexport function* handleInputDefinitionChanged(sagaContext, action) {\n    const inputDefs = yield select(selectInputs);\n    const currentInputState = yield select(selectInputState);\n    const submittedTokens = yield select(selectSubmittedTokens);\n    // default value and initialValue will be taken care here.\n    const { preset } = sagaContext;\n    const inputState = createInputState({\n        currentInputState,\n        inputDefs,\n        submittedTokens,\n        preset,\n        isReset: action.type === 'RESET',\n    });\n    yield put(setInputState(inputState));\n    // handle initial submission\n    yield handleInitialTokenSubmit({\n        inputState,\n        inputDefs,\n        sagaContext,\n        action,\n    });\n    // setup value change handler for inputs\n    yield takeEvery(\n        inputValueChanged,\n        handleValueChange,\n        inputDefs,\n        sagaContext\n    );\n}\n\n/**\n * create input\n * @param {Object} sagaContext Redux store context\n * @param {Object} action\n * @param {String} action.inputId The new input id\n * @param {Object} action.inputDefinition The configuration of the input\n */\n// TODO: should we also support creating datasource at the same time (like viz?)\nexport function* handleCreateInput(_sagaContext, action) {\n    const { inputId, inputDefinition } = action.payload || {};\n\n    // Bail when we don't have information to use\n    if (!inputId || !inputDefinition) {\n        return;\n    }\n\n    const currentDefinition = yield select(selectDefinition);\n    const definition = DashboardDefinition.fromJSON(currentDefinition);\n    const token = get(inputDefinition, 'options.token');\n\n    // Bail if the token is set by another input.\n    if (token && definition.getInputByToken(token)) {\n        return;\n    }\n\n    // Add input will normalize the inputDefinition\n    definition.addInput(inputId, inputDefinition).addInputToLayout(inputId);\n    // onDefinitionChange callback will then be invoked\n    yield put(updateDefinition(definition.toJSON()));\n}\n\n/**\n * move an input around the globalInputs array\n * @param {Object} sagaContext Redux store context\n * @param {Object} action\n * @param {Number} action.from Original position\n * @param {Number} action.to The new position\n */\nexport function* handleInputOrderChange(_sagaContext, action) {\n    const { from, to } = action.payload || {};\n\n    const currentDefinition = yield select(selectDefinition);\n    const definition = DashboardDefinition.fromJSON(currentDefinition);\n    // getGlobalInputs returns a cloned array\n    const globalInputs = definition.getGlobalInputs();\n\n    // Make sure from and to values are sane\n    if (\n        !inRange(from, globalInputs.length) ||\n        !inRange(to, globalInputs.length) ||\n        from === to\n    ) {\n        return;\n    }\n\n    // take out the input value\n    const orig = globalInputs.splice(from, 1);\n    // put it back in\n    globalInputs.splice(to, 0, ...orig);\n\n    definition.updateGlobalInputs(globalInputs);\n    // onDefinitionChange callback will then be invoked\n    yield put(updateDefinition(definition.toJSON()));\n}\n\n/**\n * remove an input from the definition and unset the input token\n * @param {Object} sagaContext Redux store sagaContext\n * @param {*} action\n */\nexport function* handleRemoveInput(sagaContext, action) {\n    const inputId = action.payload;\n\n    const currentDefinition = yield select(selectDefinition);\n    const currentInputState = yield select(selectInputState);\n    const definition = DashboardDefinition.fromJSON(currentDefinition);\n    const inputDef = definition.getInput(inputId);\n\n    // bail if there's no input config for the given id\n    if (!inputDef) {\n        return;\n    }\n\n    definition.removeInput(inputId).removeInputFromLayout(inputId);\n    yield put(updateDefinition(definition.toJSON()));\n\n    const { type, options = {} } = inputDef;\n    const { token: defaultTokenName } = options;\n    const tokenNamespace = getTokenNamespace(inputDef);\n    const input = sagaContext.preset?.findInput(type);\n    const tokensToUnset = [];\n\n    // run the inputs valueToTokens to see if multiple tokens\n    // were generated, we'll have to remove them all.\n    if (currentInputState && input && input.valueToTokens) {\n        const lastValue = currentInputState[inputId]?.value;\n        if (lastValue) {\n            const tokens = input.valueToTokens(lastValue, options);\n            tokensToUnset.push(...Object.keys(tokens));\n        }\n    } else if (defaultTokenName) {\n        tokensToUnset.push(defaultTokenName);\n    }\n\n    if (tokensToUnset.length) {\n        yield put(unsetToken(tokensToUnset, tokenNamespace));\n    }\n}\n\n/**\n * Handle adding an input to the definition and global inputs\n * @param {Object} sagaContext Redux store context\n */\n\nexport default function* inputSaga(sagaContext) {\n    try {\n        yield takeLatest(\n            [resetStore, inputChanged, initialize],\n            handleInputDefinitionChanged,\n            sagaContext\n        );\n        yield takeLatest(createInput, handleCreateInput, sagaContext);\n        yield takeLatest(adjustInputOrder, handleInputOrderChange, sagaContext);\n        yield takeLatest(removeInput, handleRemoveInput, sagaContext);\n    } catch (error) {\n        if (!(yield cancelled())) {\n            // eslint-disable-next-line no-console\n            console.error(...logfmt`Caught error: ${error}`);\n        }\n    } finally {\n        // do nothing\n    }\n}\n","module.exports = require(\"lodash/inRange\");","module.exports = require(\"lodash/values\");","module.exports = require(\"lodash/without\");","module.exports = require(\"lodash/clone\");","module.exports = require(\"lodash/uniq\");","module.exports = require(\"lodash/keys\");","module.exports = require(\"redux\");","import isEqual from '@splunk/dashboard-utils/jsonEqual';\nimport {\n    definitionChanged,\n    inputChanged,\n    submittedTokenChanged,\n    selectedItemChanged,\n} from '../../sagas/sagaActions';\n\nimport resetStore from '../resetStore';\n\n/**\n * monitor redux store state and dispatch definition/tokens changed action for datasource saga\n * @param {*} getState\n */\nexport default function changeMonitor({ getState }) {\n    return (next) => (action) => {\n        const { definition, tokens, editor = {} } = getState();\n        const oldDefinition = { ...definition };\n        const oldTokens = { ...tokens };\n        let returnValue = next(action); // hit reducer\n        if (action.type === resetStore.toString()) {\n            return returnValue;\n        }\n        const {\n            definition: newDefinition,\n            tokens: newTokens = {},\n            editor: newEditor = {},\n        } = getState();\n        if (!isEqual(oldDefinition, newDefinition)) {\n            returnValue = next(definitionChanged());\n        }\n        if (!isEqual(oldDefinition.inputs, newDefinition.inputs)) {\n            returnValue = next(inputChanged());\n        }\n        if (!isEqual(oldTokens.submitted, newTokens.submitted)) {\n            returnValue = next(submittedTokenChanged());\n        }\n        if (!isEqual(editor.selectedItems, newEditor.selectedItems)) {\n            returnValue = next(selectedItemChanged());\n        }\n        return returnValue;\n    };\n}\n","import isFunction from 'lodash/isFunction';\nimport console from '@splunk/dashboard-utils/console';\n\n/**\n * a custom action listener implemented as an redux middleware\n */\nexport default (actionListeners = {}) => () => (next) => (action) => {\n    const returnValue = next(action); // hit reducer\n    if (actionListeners[action.type]) {\n        try {\n            if (isFunction(actionListeners[action.type])) {\n                actionListeners[action.type](action);\n            }\n        } catch (ex) {\n            console.error(ex);\n        }\n    }\n    return returnValue;\n};\n","import { createAction, handleActions } from 'redux-actions';\n\nexport const setGlobalMessage = createAction('SET_GLOBAL_MESSAGE');\n\nexport default handleActions(\n    {\n        [setGlobalMessage]: (state, { payload }) => payload,\n    },\n    null\n);\n","/* eslint-disable no-restricted-syntax */\nimport get from 'lodash/get';\nimport { put, takeEvery, cancelled, select } from 'redux-saga/effects';\nimport console, { logfmt } from '@splunk/dashboard-utils/console';\nimport { replaceTokensForObject } from '@splunk/dashboard-utils/token';\nimport { isValidUrl } from '@splunk/dashboard-utils/url';\nimport { triggerEvent } from './sagaActions';\nimport { setToken, unsetToken, selectSubmittedTokens } from '../redux/tokens';\nimport { selectDefinition } from '../redux/definition';\nimport DefaultInputHandler from '../../events/DefaultInputHandler';\n\nconst defaultInputHandler = new DefaultInputHandler();\nconst defaultHandlers = [defaultInputHandler];\n\n/**\n * find event handlers that can handle the given event\n * @param {*} definition\n * @param {*} componentId\n * @param {*} event\n * @param {*} preset\n */\nexport const findEventHandler = (definition, event, preset, tokens) => {\n    const mergedTokens = {\n        ...tokens,\n        default: {\n            ...(tokens?.default || {}),\n            ...(event.payload || {}),\n        },\n    };\n\n    let handlers = [];\n    if (event.targetId != null) {\n        ['inputs', 'dataSources', 'visualizations'].forEach((type) => {\n            const matchedHandlers = get(\n                definition,\n                [type, event.targetId, 'eventHandlers'],\n                []\n            )\n                .map(({ type: handlerType, options }) =>\n                    // treat eventhandler as immutable module, always create new instance here\n                    preset.createEventHandler(\n                        handlerType,\n                        replaceTokensForObject(options, mergedTokens)\n                    )\n                )\n                .filter((h) => h.canHandle(event));\n            handlers = handlers.concat(matchedHandlers);\n        });\n    }\n    return handlers;\n};\n\nexport function* executeActions({ actions = [], plugin, event }) {\n    for (const action of actions) {\n        const { payload = {}, type } = action;\n        let cancel;\n\n        switch (type) {\n            case 'linkTo':\n                cancel = plugin.invokeCancellablePluginCallback('onLinkToUrl', {\n                    dispatchedEvent: event,\n                    url: payload.url,\n                    newTab: payload.newTab,\n                });\n                if (!cancel && isValidUrl(payload.url)) {\n                    if (payload.newTab) {\n                        window.open(payload.url, '_blank');\n                    } else {\n                        window.location = payload.url;\n                    }\n                }\n                break;\n            case 'setToken':\n                yield put.resolve(\n                    setToken(payload.tokens, payload.namespace, payload.submit)\n                );\n                break;\n            case 'unsetToken':\n                yield put.resolve(\n                    unsetToken(\n                        payload.tokenName,\n                        payload.namespace,\n                        payload.submit\n                    )\n                );\n                break;\n            default:\n        }\n    }\n}\n\nexport function* handleEvent(sagaContext, action) {\n    const definition = yield select(selectDefinition);\n    const { targetId, eventType, eventPayload, eventId } = action.payload || {};\n    const event = {\n        targetId,\n        type: eventType,\n        payload: eventPayload,\n        originalEvent: eventId\n            ? sagaContext.eventRegistry.retrieveEvent(eventId)\n            : null,\n    };\n    // Handle pluginCallback first to make sure we always have updated token bindings\n    sagaContext.dashboardPlugin.invokePluginCallback('onEventTrigger', event);\n    const tokens = yield select(selectSubmittedTokens);\n    /**\n     * for one particular event, we will execute its default handler first and then the custom handlers.\n     * Custom handlers will be executed strictly follow their defined order in dashboard definition.\n     */\n    const matchedDefaultHandlers = defaultHandlers.filter((h) =>\n        h.canHandle(event)\n    );\n    const matchedCustomHandlers = findEventHandler(\n        definition,\n        event,\n        sagaContext.preset,\n        tokens\n    );\n    const handlers = matchedDefaultHandlers.concat(matchedCustomHandlers);\n\n    // loop through every handler and execute their returned actions in a sequential way\n    for (const handler of handlers) {\n        const actions = yield handler.handle(event);\n        yield executeActions({\n            actions,\n            plugin: sagaContext.dashboardPlugin,\n            event,\n        });\n    }\n}\n\nexport default function* eventSaga(sagaContext) {\n    try {\n        yield takeEvery(triggerEvent, handleEvent, sagaContext);\n    } catch (error) {\n        if (!(yield cancelled())) {\n            console.error(...logfmt`Caught error: ${error}`);\n        }\n    } finally {\n        // do nothing\n    }\n}\n","module.exports = require(\"@splunk/dashboard-utils/url\");","import type { SetTokenEvent } from '@splunk/dashboard-types';\n\ninterface HandlePayload {\n    tokens: Record<string, string>;\n    tokenNamespace?: string;\n    submit?: boolean;\n}\n\n/* eslint-disable class-methods-use-this */\nclass DefaultInputHandler {\n    canHandle({ type }: { type?: string }): boolean {\n        return type === 'input.change';\n    }\n\n    handle({ payload }: { payload: HandlePayload }): Promise<[SetTokenEvent]> {\n        const { tokens, tokenNamespace = 'default', submit = true } = payload;\n        return Promise.resolve([\n            {\n                type: 'setToken',\n                payload: { tokens, namespace: tokenNamespace, submit },\n            },\n        ]);\n    }\n}\n\nexport default DefaultInputHandler;\n","/* eslint-disable no-restricted-syntax */\nimport each from 'lodash/each';\nimport isFunction from 'lodash/isFunction';\nimport { put, call, takeEvery, cancelled, select } from 'redux-saga/effects';\nimport console, { logfmt } from '@splunk/dashboard-utils/console';\nimport DashboardDefinition from '@splunk/dashboard-definition/DashboardDefinition';\nimport {\n    createVisualization,\n    cloneVisualizations,\n    removeVisualizations,\n    adjustVisualizationOrder,\n} from './sagaActions';\nimport { selectDefinition, updateDefinition } from '../redux/definition';\n\n/**\n * create visualization and datasource\n * @param {*} sagaContext\n * @param {*} action\n */\nexport function* handleCreateVisualization(sagaContext, action) {\n    const layoutApi = sagaContext.apiRegistry.getLayoutApi();\n    if (layoutApi && isFunction(layoutApi.addLayoutItem)) {\n        const currentDefinition = yield select(selectDefinition);\n        const definition = DashboardDefinition.fromJSON(currentDefinition);\n        const {\n            visualizationId,\n            visualizationDefinition,\n            layoutItemType,\n            dataSourceType,\n            dataSourceDefinition,\n        } = action.payload || {};\n        // fetch viz preset\n        const viz = sagaContext.preset.findVisualization(\n            visualizationDefinition.type\n        );\n        const vizContract = viz?.vizContract ?? {};\n        const config = viz?.config ?? {};\n        // add datasource and connect it with visualization if provided\n        if (visualizationId && visualizationDefinition) {\n            const vizDef = { ...visualizationDefinition };\n            if (dataSourceType && dataSourceDefinition) {\n                const dataSourceId = definition.nextDataSourceId();\n                definition.addDataSource(dataSourceId, dataSourceDefinition);\n                vizDef.dataSources = {\n                    ...(vizDef.dataSources || {}),\n                    [dataSourceType]: dataSourceId,\n                };\n            }\n            const proposedLayoutStructure = yield call(\n                layoutApi.addLayoutItem,\n                {\n                    itemId: visualizationId,\n                    vizContract,\n                    type: layoutItemType,\n                    config,\n                    metadata: { internal: true },\n                }\n            );\n            definition\n                .addVisualization(visualizationId, vizDef)\n                .updateLayoutStructure(proposedLayoutStructure);\n        }\n        // onDefinitionChange callback will then be invoke\n        yield put(updateDefinition(definition.toJSON()));\n    }\n}\n\nexport function* handleCloneVisualizations(sagaContext, action) {\n    const layoutApi = sagaContext.apiRegistry.getLayoutApi();\n    if (layoutApi && isFunction(layoutApi.cloneLayoutItems)) {\n        const currentDefinition = yield select(selectDefinition);\n        const definition = DashboardDefinition.fromJSON(currentDefinition);\n        const { from, to, offsetMultiplier } = action.payload || {};\n        if (from.length) {\n            each(from, (vizId, iter) => {\n                definition.cloneVisualization(vizId, to[iter]);\n            });\n            const proposedLayoutStructure = yield call(\n                layoutApi.cloneLayoutItems,\n                {\n                    from,\n                    to,\n                    offsetMultiplier,\n                    metadata: { internal: true },\n                }\n            );\n            definition.updateLayoutStructure(proposedLayoutStructure);\n        }\n        yield put(updateDefinition(definition.toJSON()));\n    }\n}\n\nfunction* handleRemoveVisualizations(sagaContext, action) {\n    const layoutApi = sagaContext.apiRegistry.getLayoutApi();\n    if (layoutApi && isFunction(layoutApi.removeLayoutItems)) {\n        const currentDefinition = yield select(selectDefinition);\n        const definition = DashboardDefinition.fromJSON(currentDefinition);\n        const vizIds = action.payload || {};\n        const proposedLayoutStructure = yield call(\n            layoutApi.removeLayoutItems,\n            vizIds,\n            { internal: true }\n        );\n        each(vizIds, (id) => {\n            definition.removeVisualization(id);\n        });\n        // onDefinitionChange callback will then be invoke\n        definition.updateLayoutStructure(proposedLayoutStructure);\n        yield put(updateDefinition(definition.toJSON()));\n    }\n}\n\nfunction* handleVisualizationOrder(sagaContext, action) {\n    const layoutApi = sagaContext.apiRegistry.getLayoutApi();\n    if (layoutApi && layoutApi.adjustLayoutItemOrder) {\n        const currentDefinition = yield select(selectDefinition);\n        const definition = DashboardDefinition.fromJSON(currentDefinition);\n        const proposedLayoutStructure = yield call(\n            layoutApi.adjustLayoutItemOrder,\n            action.payload.from,\n            action.payload.to,\n            { internal: true }\n        );\n        // onDefinitionChange callback will then be invoke\n        definition.updateLayoutStructure(proposedLayoutStructure);\n        yield put(updateDefinition(definition.toJSON()));\n    }\n}\n\nexport default function* editingSaga(sagaContext) {\n    try {\n        yield takeEvery(\n            createVisualization,\n            handleCreateVisualization,\n            sagaContext\n        );\n        yield takeEvery(\n            cloneVisualizations,\n            handleCloneVisualizations,\n            sagaContext\n        );\n        yield takeEvery(\n            removeVisualizations,\n            handleRemoveVisualizations,\n            sagaContext\n        );\n        yield takeEvery(\n            adjustVisualizationOrder,\n            handleVisualizationOrder,\n            sagaContext\n        );\n    } catch (error) {\n        if (!(yield cancelled())) {\n            console.error(...logfmt`Caught error: ${error}`);\n        }\n    } finally {\n        // do nothing\n    }\n}\n","/* eslint-disable no-constant-condition */\nimport { eventChannel, buffers } from 'redux-saga';\nimport { put, take, cancelled } from 'redux-saga/effects';\nimport console, { logfmt } from '@splunk/dashboard-utils/console';\nimport { triggerEvent } from './sagaActions';\n\n/**\n * dispatch dataSource event into saga flow\n * @param {Object} sagaContext saga context object\n * @public\n */\nexport default function* dataSourceSaga(sagaContext) {\n    try {\n        const channel = eventChannel((emit) => {\n            sagaContext.dataSourceRegistry.onEventBroadcast((event) => {\n                emit(event);\n            });\n            return () => {};\n        }, buffers.expanding(10));\n        // prettier-ignore\n        while (true) { // NOSONAR\n            const { eventType, targetId, payload } = yield take(channel);\n            yield put(triggerEvent(targetId, eventType, payload));\n        }\n    } catch (error) {\n        if (!(yield cancelled())) {\n            console.error(...logfmt`Caught error: ${error}`);\n        }\n    } finally {\n        // do nothing\n    }\n}\n","import { cancelled, put, select, takeLatest } from 'redux-saga/effects';\nimport console, { logfmt } from '@splunk/dashboard-utils/console';\nimport { migrateDashboardDefinition } from '@splunk/dashboard-utils/migration';\nimport { selectDefinition, updateDefinition } from '../redux/definition';\nimport { migrateDashboard } from './sagaActions';\n\nexport function* handleMigrateDashboard({ preset, onMigrationDone }) {\n    // Get current dashboard definition\n    const currentDefinition = yield select(selectDefinition);\n\n    // Call the migrateDashboardDefinition() utility to update definition\n    const migratedDefinition = migrateDashboardDefinition({\n        definition: currentDefinition,\n        preset: preset.presetDef,\n    });\n\n    // Dispatch UPDATE_DEFINITION action\n    yield put.resolve(updateDefinition(migratedDefinition));\n\n    // Call onMigrationDone() from sagaContext\n    onMigrationDone();\n}\n\nexport default function* migrationSaga(sagaContext) {\n    try {\n        // Take latest so sending multiple migration actions will cancel earlier\n        // actions and only the most migration action gets fully executed\n        yield takeLatest(migrateDashboard, handleMigrateDashboard, sagaContext);\n    } catch (error) {\n        const isCancelled = yield cancelled();\n\n        if (!isCancelled) {\n            console.error(...logfmt`Caught error: ${error}`);\n        }\n    } finally {\n        // do nothing\n    }\n}\n","module.exports = require(\"@splunk/dashboard-utils/migration\");","/**\n * Helper to store dom event emitted from visualization or input since we don't\n * want to send them as part of a redux action payload.\n */\n// todo: may need to further refine the type.\ntype DomEvent = MouseEvent;\nexport default class EventRegistry {\n    idSeq = 0;\n\n    storedEvents: Record<string, DomEvent> = {};\n\n    constructor() {\n        this.teardown();\n    }\n\n    registerEvent(e: DomEvent): string {\n        // eslint-disable-next-line no-plusplus\n        const id = `event${++this.idSeq}`;\n        this.storedEvents[id] = e;\n        return id;\n    }\n\n    retrieveEvent(id: string): DomEvent {\n        const event = this.storedEvents[id];\n        delete this.storedEvents[id];\n        return event;\n    }\n\n    teardown(): void {\n        this.storedEvents = {};\n        this.idSeq = 0;\n    }\n}\n","import isFunction from 'lodash/isFunction';\n\n/**\n * An registry that hold layout,input and viz apis\n */\nexport default class ApiRegistry {\n    onLayoutApiReady = undefined;\n\n    constructor() {\n        this.layoutApi = null;\n        this.visualizationApis = {};\n        this.visualizationActionApis = {};\n        this.globalInputsApi = null;\n        this.inputApis = {};\n        this.inputActionApis = {};\n    }\n\n    registerLayoutApi(layoutApi) {\n        this.layoutApi = layoutApi;\n        this.notifyLayoutApiReady();\n    }\n\n    registerVisualizationActionsApi(vizId, api) {\n        this.visualizationActionApis[vizId] = api;\n    }\n\n    registerVisualizationApi(vizId, api) {\n        this.visualizationApis[vizId] = api;\n    }\n\n    registerGlobalInputsApi(api) {\n        this.globalInputsApi = api;\n    }\n\n    registerInputApi(inputId, api) {\n        this.inputApis[inputId] = api;\n    }\n\n    registerInputActionsApi(inputId, api) {\n        this.inputActionApis[inputId] = api;\n    }\n\n    removeLayoutApi() {\n        this.layoutApi = null;\n    }\n\n    removeVisualizationApi(vizId) {\n        delete this.visualizationApis[vizId];\n    }\n\n    removeVisualizationActionsApi(vizId) {\n        delete this.visualizationActionApis[vizId];\n    }\n\n    removeGlobalInputsApi() {\n        this.globalInputsApi = null;\n    }\n\n    removeInputApi(inputId) {\n        delete this.inputApis[inputId];\n    }\n\n    removeInputActionsApi(inputId) {\n        delete this.inputActionApis[inputId];\n    }\n\n    getLayoutApi() {\n        return this.layoutApi;\n    }\n\n    getVisualizationApi(vizId) {\n        return this.visualizationApis[vizId];\n    }\n\n    getVisualizationActionsApi(vizId) {\n        return this.visualizationActionApis[vizId];\n    }\n\n    getGlobalInputsApi() {\n        return this.globalInputsApi;\n    }\n\n    getInputApi(inputId) {\n        return this.inputApis[inputId];\n    }\n\n    getInputActionsApi(inputId) {\n        return this.inputActionApis[inputId];\n    }\n\n    notifyLayoutApiReady() {\n        if (isFunction(this.onLayoutApiReady)) {\n            this.onLayoutApiReady();\n        }\n    }\n\n    teardown() {\n        this.removeLayoutApi();\n        this.visualizationApis = {};\n        this.removeGlobalInputsApi();\n        this.inputApis = {};\n    }\n}\n","import each from 'lodash/each';\nimport bind from 'lodash/bind';\nimport omit from 'lodash/omit';\nimport isEqual from 'lodash/isEqual';\nimport isEmpty from 'lodash/isEmpty';\nimport get from 'lodash/get';\nimport hash from 'hash-it';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport {\n    isBaseDataSource,\n    isChainDataSource,\n    createBaseChainModel,\n    getChainDataSources,\n    getBaseDataSourceId,\n} from '@splunk/datasource-utils/BaseChainUtils';\nimport { MAX_CHAIN_LENGTH } from '@splunk/dashboard-utils/search';\nimport { replaceTokenForDataSources } from '../utils/token';\nimport { selectDataSources } from '../state/redux/definition';\nimport { selectSubmittedTokens } from '../state/redux/tokens';\n\nimport DataSourceController from './DataSourceController';\nimport RiskyCommandController from './RiskyCommandController';\n\n/**\n * compute unique hash key for a given object\n * @param {Object} dataSourceDef\n */\nconst computeKey = (dataSourceDef) => {\n    // same DataSource will be reused\n    // todo, benchmark on how fast this hash function is\n    return hash(omit(dataSourceDef, ['name']));\n};\n\n/**\n * A module that create reuseable DataSource controller\n */\nclass DataSourceRegistry {\n    /**\n     *\n     * @param {Object} preset dashboard preset\n     * @param {Object} dataSourceContext DataSource context\n     * @returns {DataSourceRegistry}\n     */\n    constructor({ preset, dataSourceContext }) {\n        this.preset = preset;\n        this.dataSourceContext = dataSourceContext;\n        this.controllers = {};\n        this.store = null;\n        this.unsubscribeFromStore = null;\n        this.riskyCommandController = new RiskyCommandController();\n    }\n\n    subscribeToStore(store) {\n        this.store = store;\n        this.unsubscribeFromStore = this.store.subscribe(() => {\n            this.updateDefinition();\n        });\n    }\n\n    updateDefinition() {\n        const state = this.store.getState();\n\n        const dataSourceDefinition = replaceTokenForDataSources(\n            selectDataSources(state),\n            selectSubmittedTokens(state)\n        );\n\n        if (isEqual(this.definition, dataSourceDefinition)) {\n            return;\n        }\n\n        const lastDefinition = this.definition;\n        this.definition = dataSourceDefinition;\n\n        // The following code detects if any base/chain data source without any UI component binding has been updated in the new definition.\n        // If there are such data sources, the following code triggers the allocate() function to create new data source and remap into base chain tree\n        each(lastDefinition, (dsDef, dsId) => {\n            const newDataSourceDef = this.definition[dsId];\n            const chainDataSources = this.getActiveChainControllers(dsId);\n            const oldDataSourceController = this.controllers[computeKey(dsDef)];\n            if (\n                !isEqual(dsDef, newDataSourceDef) && // definition is changed\n                (isBaseDataSource(dsId, this.definition) ||\n                    isChainDataSource(dsId, this.definition)) && // this data source is used in base chain\n                oldDataSourceController && // this data source has been created before\n                oldDataSourceController.getSubscriptions().size === // this data source has only data source subscriptions\n                    oldDataSourceController.getDataSourceSubscriptions().size &&\n                Object.keys(chainDataSources).length > 0 // and this data source has chained data source which means this data source is used by chain data source(s)\n            ) {\n                // call allocate() to create new data source and remap into current base chain\n                this.allocate({\n                    dataSourceId: dsId,\n                });\n            }\n        });\n    }\n\n    /**\n     * Return a DataSource controller that matches the definition\n     * @param {Object} dataSourceDef DataSource definition\n     * @param {Object} dataSourceId DataSource id\n     * @returns {DataSourceController} DataSource controller instance\n     */\n    allocate = ({ /* dataSourceDef, */ dataSourceId }) => {\n        if (!dataSourceId) {\n            throw Error(\n                'dataSourceId is required to allocate DataSourceController'\n            );\n        }\n        // allocate a DataSource controller that matches the definition.\n        // an existing controller will be returned if definition matches,\n        // otherwise a new one will be created and return.\n\n        // we want to resolve tokens and apply the defaults, thus it is necessary to use the `selectDataSources` instead of the raw dataSourceDef from the arguments\n        const state = this.store.getState();\n        const dataSourceDef = replaceTokenForDataSources(\n            selectDataSources(state),\n            selectSubmittedTokens(state)\n        )[dataSourceId];\n\n        if (isEmpty(dataSourceDef)) {\n            throw Error(\n                `cannot find dataSourceDef for dataSourceId: ${dataSourceId}`\n            );\n        }\n\n        const key = computeKey(dataSourceDef);\n        if (this.controllers[key] == null) {\n            const newController = new DataSourceController({\n                id: dataSourceId,\n                dataSourceDef,\n                dataSourceContext: this.dataSourceContext,\n                preset: this.preset,\n                riskyCommandController: this.riskyCommandController,\n            });\n\n            newController.onTeardown(\n                bind(this.handleDataSourceTeardown, this, key)\n            );\n            newController.onDataSourceEvent(this.broadcastDataSourceEvent);\n\n            if (isBaseDataSource(dataSourceId, this.definition)) {\n                const baseChainModel = createBaseChainModel(\n                    dataSourceId,\n                    this.definition\n                );\n\n                newController.setBaseChainModel(baseChainModel);\n\n                const chainControllers = this.getActiveChainControllers(\n                    dataSourceId\n                );\n                each(chainControllers, (controller) => {\n                    controller.setParent(newController);\n                    controller.subscribeToParentDataSourceController();\n                });\n            } else if (isChainDataSource(dataSourceId, this.definition)) {\n                this.dataSourceValidation(dataSourceId);\n                const parentDataSourceId = get(dataSourceDef, [\n                    'options',\n                    'extend',\n                ]);\n                const parentDataSourceDef = this.definition[parentDataSourceId];\n\n                if (!parentDataSourceId || !parentDataSourceDef) {\n                    throw new Error(\n                        _(\n                            `Cannot find parent dataSource: ${parentDataSourceId}`\n                        )\n                    );\n                }\n\n                let parentController = this.getDataSourceController(\n                    parentDataSourceDef\n                );\n\n                // get chain dataSource controller\n                const chainControllers = this.getActiveChainControllers(\n                    dataSourceId\n                );\n\n                if (parentController) {\n                    const subs = parentController.getSubscriptions();\n                    // Special case:\n                    // if parent has only one data source subscription, and this subscription is the current newController\n                    //\n                    if (subs.size === 1 && subs.has(dataSourceId)) {\n                        parentController.setHandleSubscriptionCancelOverride();\n                    }\n                } else {\n                    parentController = this.allocate({\n                        dataSourceId: parentDataSourceId,\n                    });\n                }\n\n                // set parent\n                newController.setParent(parentController);\n\n                // map chain dataSources, and this triggers newController to execute setup\n                each(chainControllers, (controller) => {\n                    controller.setParent(newController);\n                    controller.subscribeToParentDataSourceController();\n                });\n\n                const baseDataSourceId = getBaseDataSourceId(\n                    dataSourceId,\n                    this.definition\n                );\n                if (baseDataSourceId) {\n                    const baseDataSourceController = this.getDataSourceController(\n                        this.definition[baseDataSourceId]\n                    );\n                    if (baseDataSourceController) {\n                        baseDataSourceController.setBaseChainModel(\n                            createBaseChainModel(\n                                baseDataSourceId,\n                                this.definition\n                            )\n                        );\n                    }\n                }\n            }\n            this.controllers[key] = newController;\n        }\n        return this.controllers[key];\n    };\n\n    /**\n     * Return a DataSource controller given the DataSource definition\n     * @param {Object} dataSourceDef DataSource definition\n     * @returns {DataSourceController} DataSource controller instance\n     */\n    getDataSourceController = (dataSourceDef) => {\n        const key = computeKey(dataSourceDef);\n        return this.controllers[key];\n    };\n\n    /**\n     * Remove DataSource controller from registry\n     * @param {String} key cached key\n     */\n    handleDataSourceTeardown = (key) => {\n        delete this.controllers[key];\n    };\n\n    /**\n     * Pause all DataSource controllers from registry\n     */\n    pauseDataSources = () => {\n        each(this.controllers, (controller) => {\n            controller.pause();\n        });\n    };\n\n    /**\n     * Broadcast DataSource event via broadcastCallback\n     * @param {Object} event DataSource event\n     */\n    broadcastDataSourceEvent = (event) => {\n        if (this.broadcastCallback) {\n            this.broadcastCallback(event);\n        }\n    };\n\n    /**\n     * register event broadcast callback\n     * @param {Function} callback broadcast callback\n     */\n    onEventBroadcast = (callback) => {\n        this.broadcastCallback = callback;\n    };\n\n    /**\n     * capture the snapshot of all DataSources\n     */\n    snapshot() {\n        const state = {};\n        each(this.controllers, (controller) => {\n            const subs = controller.getSubscriptions();\n            const subState = {};\n            subs.forEach((sub) => {\n                subState[sub.consumerId] = sub.getLastState();\n            });\n            state[controller.id] = subState;\n        });\n        return state;\n    }\n\n    /**\n     * Get chain data source controllers that are subscribed to the given parentDataSourceId\n     * @param {String} parentDataSourceId\n     */\n    getActiveChainControllers(parentDataSourceId) {\n        if (!parentDataSourceId) {\n            return {};\n        }\n\n        const chainDataSourceDefs = getChainDataSources(\n            parentDataSourceId,\n            this.definition\n        );\n\n        const result = {};\n\n        each(chainDataSourceDefs, (chainDataSourceDef, chainDataSourceId) => {\n            const chainDataSourceController = this.getDataSourceController(\n                chainDataSourceDef\n            );\n            if (chainDataSourceController) {\n                result[chainDataSourceId] = chainDataSourceController;\n            }\n        });\n\n        return result;\n    }\n\n    dataSourceValidation(dataSourceId) {\n        if (isChainDataSource(dataSourceId, this.definition)) {\n            let references = 0;\n            let currentId = dataSourceId;\n            let currentDS = this.definition[currentId];\n            const visitedDS = [];\n            const extend = get(currentDS, ['options', 'extend']);\n\n            if (!this.definition[extend]) {\n                throw new Error(\n                    _(\n                        `Chain data source ${dataSourceId} must have valid extend property`\n                    )\n                );\n            }\n\n            while (currentDS != null) {\n                if (visitedDS.indexOf(currentId) > -1) {\n                    throw new Error(\n                        _(\n                            `Data source ${currentId} creates an invalid circular reference; check parent data sources referenced by extend property.`\n                        )\n                    );\n                }\n                if (references > MAX_CHAIN_LENGTH) {\n                    throw new Error(\n                        _(\n                            `${references} chained data sources exceeds the maximum of ${MAX_CHAIN_LENGTH}`\n                        )\n                    );\n                }\n                if (isBaseDataSource(currentId, this.definition)) {\n                    return;\n                }\n                visitedDS.push(currentId);\n                references += 1;\n                currentId = get(currentDS, ['options', 'extend']);\n                currentDS = this.definition[currentId];\n            }\n        }\n    }\n\n    teardown() {\n        if (this.unsubscribeFromStore) {\n            this.unsubscribeFromStore();\n        }\n    }\n\n    getDataSourceControllers() {\n        return this.controllers;\n    }\n}\n\nexport default DataSourceRegistry;\n","module.exports = require(\"lodash/bind\");","module.exports = require(\"hash-it\");","module.exports = require(\"@splunk/datasource-utils/BaseChainUtils\");","import { Observable, ReplaySubject } from 'rxjs';\nimport get from 'lodash/get';\nimport once from 'lodash/once';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport { isRiskyCommandError } from '@splunk/dashboard-utils';\nimport Subscription from './Subscription';\nimport RefreshScheduler, { parseExprToSeconds } from './RefreshScheduler';\n\n/**\n * A control wrapper on top of actual DataSource instance\n */\nclass DataSourceController {\n    /**\n     *\n     * @param {String} id DataSource Id\n     * @param {Object} dataSourceDef DataSource definition\n     * @param {Object} dataSourceContext DataSource context\n     * @param {Object} preset dashboard preset\n     * @param {Object} riskyCommandController RiskyCommandController\n     */\n    constructor({\n        id,\n        dataSourceDef,\n        dataSourceContext,\n        preset,\n        riskyCommandController,\n    }) {\n        this.id = id;\n        this.def = dataSourceDef;\n        this.preset = preset;\n        this.context = dataSourceContext;\n        this.setupOnce = once(this.setup);\n        // subscriptions\n        this.subs = new Map();\n        // dataSourceSubs\n        this.dataSourceSubs = new Map();\n        this.consumerIds = new Set();\n        this.query = get(this.def, 'options.query');\n        this.riskyCommandController = riskyCommandController;\n        this.enableRiskyCommand = !!this.context.enableRiskyCommand;\n        // ReplaySubject used instead of a BehaviorSubject because we don't want the subject to emit when there\n        // hasn't been a status update yet. A BehaviorSubject would require a default value and will immediately emit.\n        this.statusSubject = new ReplaySubject(1);\n    }\n\n    /**\n     * setup DataSource auto refresh\n     */\n    setupAutoRefresh() {\n        let refresh;\n        let refreshType;\n        if (this.dataSource && this.dataSource.getRefreshConfig) {\n            const refreshConfig = this.dataSource.getRefreshConfig();\n            refresh = get(refreshConfig, 'refresh');\n            refreshType = get(refreshConfig, 'refreshType');\n        } else {\n            refresh = get(this.def, 'options.refresh');\n            refreshType = get(this.def, 'options.refreshType');\n        }\n\n        if (!refresh) {\n            return;\n        }\n        const refreshInterval = parseExprToSeconds(refresh);\n        if (!refreshInterval) {\n            return;\n        }\n\n        if (this.scheduler) {\n            this.scheduler.stop();\n        }\n        this.scheduler = new RefreshScheduler({\n            refreshFunc: this.refresh,\n            refreshInterval,\n            refreshType,\n        });\n    }\n\n    /**\n     * get existing subscriptions\n     * @returns {Map} subscriptions\n     */\n    getSubscriptions = () => {\n        return this.subs;\n    };\n\n    /**\n     * get existing data source subscriptions\n     * @returns {Map} data source subscriptions\n     */\n    getDataSourceSubscriptions = () => {\n        return this.dataSourceSubs;\n    };\n\n    get completeSearchQuery() {\n        return this.parent\n            ? `${this.parent.completeSearchQuery} ${this.query}`\n            : this.query;\n    }\n\n    /**\n     * check if a consumer is subscribed to this data source controller\n     * @param {String} consumerId\n     * @returns {Boolean}\n     */\n    isSubscribed(consumerId) {\n        return this.subs.has(consumerId);\n    }\n\n    /**\n     * check if viz or input is attached to the data source\n     * @returns {Boolean}\n     */\n    isVizOrInputAttached = () => {\n        return this.subs.size > this.dataSourceSubs.size;\n    };\n\n    /**\n     * setup DataSource\n     */\n    setup = async () => {\n        try {\n            this.dataSource = this.preset.createDataSource(\n                this.def.type,\n                {\n                    ...this.def.options,\n                    checkRiskyCommand:\n                        this.enableRiskyCommand &&\n                        this.riskyCommandController.shouldCheckRiskyCommand(\n                            this.query\n                        ),\n                },\n                this.context,\n                this.def.meta,\n                this.id,\n                this.baseChainModel\n            );\n            this.setupError = null;\n\n            if (this.parent) {\n                if (this.parent.isConsumerSubscribedBefore(this.id)) {\n                    await this.getBase().refresh();\n                }\n                await this.subscribeToParentDataSourceController();\n            }\n\n            await this.dataSource.setup();\n\n            this.setupAutoRefresh();\n            this.broadcast({\n                eventType: 'datasource.setup',\n                targetId: this.id,\n                payload: {},\n            });\n        } catch (ex) {\n            this.setupAutoRefresh();\n            this.setupError = ex.message;\n        }\n    };\n\n    /**\n     * teardown DataSource\n     */\n    teardown = async () => {\n        try {\n            if (this.parentDataSourceSub) {\n                this.parentDataSourceSub.cancel();\n                this.parentDataSourceSub = null;\n            }\n            if (this.parentStatusSub) {\n                this.parentStatusSub.unsubscribe();\n                this.parentStatusSub = null;\n            }\n            await this.dataSource.teardown();\n            this.broadcast({\n                eventType: 'datasource.teardown',\n                targetId: this.id,\n                payload: {},\n            });\n        } catch (ex) {\n            // ignore teardown error\n        }\n    };\n\n    /**\n     * pause DataSource\n     * temporarily use teardown datasources instead of pausing\n     * this should be fixed when adding resume datasources function\n     */\n    pause = () => {\n        if (this.scheduler) {\n            this.scheduler.stop();\n        }\n        this.teardown();\n    };\n\n    /**\n     * Refresh the base data source, if has parent subscription, otherwise refresh current data source\n     * @param {Boolean} checkRiskyCommand optional, by default assuming all searches are risky\n     */\n    refresh = async ({ checkRiskyCommand = true } = {}) => {\n        if (!checkRiskyCommand && this.enableRiskyCommand) {\n            this.riskyCommandController.addToDisableCheckList(this.query);\n        }\n\n        if (this.parentDataSourceSub) {\n            if (!checkRiskyCommand) {\n                await this.parent.refresh({ checkRiskyCommand });\n            } else {\n                await this.getBase().refresh({ checkRiskyCommand });\n            }\n        } else {\n            await this.reset();\n        }\n    };\n\n    /**\n     * reset the current DataSource\n     */\n    reset = async () => {\n        if (!this.refreshing) {\n            try {\n                this.refreshing = true;\n                // we need to wait till teardown completed here.\n                await this.teardown();\n                await this.setup();\n            } catch (ex) {\n                this.setupError = ex.message;\n            } finally {\n                this.refreshing = false;\n                // refresh all subscriptions\n                this.refreshSubscriptions();\n            }\n        }\n    };\n\n    /**\n     * refresh all subscriptions\n     */\n    refreshSubscriptions() {\n        // refresh all subscriptions\n        this.subs.forEach((sub) => {\n            sub.refresh();\n        });\n    }\n\n    /**\n     * broadcast a DataSource event\n     * @param {Object} event DataSource lifecycle event\n     */\n    broadcast = (event) => {\n        if (this.dataSourceEventCallback) {\n            this.dataSourceEventCallback(event);\n        }\n    };\n\n    /**\n     * register teardown callback\n     * @param {Function} teardownCallback teardown callback\n     */\n    onTeardown = (teardownCallback) => {\n        this.teardownCallback = teardownCallback;\n    };\n\n    /**\n     * register DataSource event callback\n     * @param {Function} eventCallback callback\n     */\n    onDataSourceEvent = (eventCallback) => {\n        this.dataSourceEventCallback = eventCallback;\n    };\n\n    /**\n     * handle subscription cancel\n     * @param {String} consumerId DataSource consumerId, this will either be viz or input id\n     */\n    handleSubscriptionCancel = (consumerId) => {\n        this.subs.delete(consumerId);\n        this.dataSourceSubs.delete(consumerId);\n\n        // teardown datasource when no consumers\n        if (this.subs.size === 0) {\n            if (!this.handleSubscriptionCancelOverride) {\n                // we don't need to wait till teardown complete\n                this.teardown();\n                if (this.scheduler) {\n                    this.scheduler.stop();\n                }\n                if (this.teardownCallback) {\n                    this.teardownCallback();\n                }\n            } else {\n                this.handleSubscriptionCancelOverride = false;\n            }\n        }\n    };\n\n    handleSubscriptionStart = () => {\n        if (this.scheduler && this.scheduler.refreshType === 'interval') {\n            this.scheduler.scheduleNextRefresh();\n        }\n    };\n\n    handleSubscriptionComplete = () => {\n        if (this.scheduler && this.scheduler.refreshType === 'delay') {\n            this.scheduler.scheduleNextRefresh();\n        }\n    };\n\n    /**\n     * request a new dataset\n     * @param {Object} requestParams requestParams\n     * @returns {Observable} Observable instance that will emit data or error\n     */\n    request = (requestParams) => {\n        if (!this.dataSource) {\n            throw new Error(_('DataSource is not set up.'));\n        }\n\n        const result = this.refreshing\n            ? Observable.of()\n            : this.dataSource.request(requestParams);\n        return typeof result.subscribe === 'function'\n            ? result\n            : Observable.create(result);\n    };\n\n    /**\n     * create a new DataSource subscription\n     * @param {String} consumerId DataSource consumerId, this will either be viz or input id\n     * @param {Object} initialRequestParams initial requestParams\n     * @param {Boolean} isDataSource\n     * @returns {Subscription} DataSource subscription\n     */\n    subscribe = async ({ consumerId, initialRequestParams, isDataSource }) => {\n        // always try to call setup first\n        await this.setupOnce();\n\n        const sub = new Subscription(this, consumerId, initialRequestParams);\n        this.subs.set(consumerId, sub);\n        this.consumerIds.add(consumerId);\n        sub.onStart(this.handleSubscriptionStart);\n        sub.onCancel(this.handleSubscriptionCancel);\n        sub.onComplete(this.handleSubscriptionComplete);\n\n        if (isDataSource) {\n            this.dataSourceSubs.set(consumerId, sub);\n        }\n\n        return sub;\n    };\n\n    /**\n     * get DataSource metadata\n     * @returns {Object} DataSource meta data\n     */\n    getDataSourceMetaData = () => {\n        return this.dataSource && this.dataSource.getMetaData\n            ? this.dataSource.getMetaData()\n            : {};\n    };\n\n    /**\n     * Subscribe to parent data source controller\n     */\n    async subscribeToParentDataSourceController() {\n        if (this.parentDataSourceSub) {\n            this.parentDataSourceSub.cancel();\n            this.parentDataSourceSub = null;\n        }\n\n        if (this.parentStatusSub) {\n            this.parentStatusSub.unsubscribe();\n            this.parentStatusSub = null;\n        }\n\n        const precedingSearchStatusObject = {\n            meta: {\n                statusMessage: _(\n                    'Paused: Dependent on successful preceding search.'\n                ),\n            },\n        };\n\n        this.parentStatusSub = this.parent\n            .getStatusObservable()\n            .subscribe(({ error, meta }) => {\n                if (isRiskyCommandError(error?.message)) {\n                    if (this.parent.isVizOrInputAttached()) {\n                        this.statusSubject.next(precedingSearchStatusObject);\n                        return;\n                    }\n                }\n                this.statusSubject.next({ error, meta });\n            });\n\n        this.parentDataSourceSub = await this.parent.subscribe({\n            consumerId: this.id,\n            isDataSource: true,\n        });\n\n        const { next, error } = this.dataSource.getObserver();\n        // this sends out results_preview requests\n        this.parentDataSourceSub.subscribeToData({\n            onData: (args) => {\n                const checkRiskyCommand =\n                    this.enableRiskyCommand &&\n                    this.riskyCommandController.shouldCheckRiskyCommand(\n                        this.query\n                    );\n\n                const { completeSearchQuery } = this;\n\n                const meta = get(args, 'meta', {});\n                const newMeta = {\n                    ...meta,\n                    checkRiskyCommand,\n                    completeSearchQuery,\n                };\n                next({ ...args, ...{ meta: newMeta } });\n                if (this.dataSource.shouldRefreshSubscription()) {\n                    this.refreshSubscriptions();\n                }\n            },\n            onError: (args) => {\n                error(args);\n                if (isRiskyCommandError(args.message)) {\n                    if (this.parent.isVizOrInputAttached()) {\n                        this.statusSubject.next(precedingSearchStatusObject);\n                    } else {\n                        const { completeSearchQuery } = this;\n                        this.statusSubject.next({\n                            error: args,\n                            meta: {\n                                completeSearchQuery,\n                            },\n                        });\n                    }\n                }\n                if (this.dataSource.shouldRefreshSubscription()) {\n                    this.refreshSubscriptions();\n                }\n            },\n        });\n    }\n\n    /**\n     * Generate the id and definition data\n     */\n    getIdAndDefinition() {\n        return {\n            id: this.id,\n            definition: this.def,\n        };\n    }\n\n    /**\n     * Sets the current parent in the data source\n     * @param {DataSourceController} parent\n     */\n    setParent(parent) {\n        this.parent = parent;\n    }\n\n    getStatusObservable() {\n        return this.statusSubject;\n    }\n\n    /**\n     * Get the base data source for the current one\n     */\n    getBase() {\n        return this.parent ? this.parent.getBase() : this;\n    }\n\n    /**\n     * Set the base chain model\n     * @param {Object} baseChainModel\n     */\n    setBaseChainModel(baseChainModel) {\n        this.baseChainModel = baseChainModel;\n    }\n\n    /**\n     * Function to determine if consumer id has previously subscribed\n     * @param {String} consumerId\n     * @returns {Boolean}\n     */\n    isConsumerSubscribedBefore(consumerId) {\n        return this.consumerIds.has(consumerId);\n    }\n\n    /**\n     * Function to override handleSubscriptionCancel\n     */\n    setHandleSubscriptionCancelOverride() {\n        this.handleSubscriptionCancelOverride = true;\n    }\n}\n\nexport default DataSourceController;\n","module.exports = require(\"rxjs\");","module.exports = require(\"lodash/once\");","import { formatData } from '../utils/datasource';\n\n/**\n * A DataSource subscription\n * This represent a DataSource -- Consumer binding.\n * Be aware that the binding can be n to n.\n */\nclass Subscription {\n    /**\n     *\n     * @param {Object} dataSource DataSource controller\n     * @param {String} consumerId Consumer id\n     * @param {Object} initialRequestParams initial requestParams\n     */\n    constructor(dataSource, consumerId, initialRequestParams) {\n        this.consumerId = consumerId;\n        this.dataSource = dataSource;\n        this.requestParams = initialRequestParams;\n        this.lastState = {};\n    }\n\n    /**\n     * get last state of this subscription\n     * @returns {Object} last state, either be data or error\n     */\n    getLastState = () => {\n        return this.lastState;\n    };\n\n    /**\n     * start polling data\n     */\n    startPolling() {\n        this.start();\n        if (this.dataSource.setupError) {\n            this.error({\n                level: 'error',\n                message: this.dataSource.setupError,\n            });\n            return;\n        }\n        try {\n            const ob = this.dataSource.request(this.requestParams);\n            this.sub = ob.subscribe(\n                ({ data, meta = {} }) => {\n                    const formattedData = formatData(data);\n                    if (formattedData != null) {\n                        const payload = {\n                            requestParams: this.requestParams,\n                            data: formattedData,\n                            meta,\n                        };\n                        this.lastState = payload;\n                        this.progress(payload);\n                    } else {\n                        this.error({\n                            level: 'error',\n                            message: `${this.dataSource.def.type} returns invalid data`,\n                        });\n                    }\n                },\n                ({ level, message, meta = {} }) => {\n                    const payload = {\n                        level,\n                        message,\n                        meta,\n                    };\n                    this.lastState = payload;\n                    this.error(payload);\n                },\n                () => {\n                    this.done();\n                }\n            );\n        } catch (ex) {\n            this.error({\n                level: 'error',\n                message: ex.message,\n            });\n        }\n    }\n\n    /**\n     * cancel this subscription\n     */\n    cancel() {\n        if (this.sub) {\n            this.sub.unsubscribe();\n        }\n        this.dataCallback = null;\n        this.errorCallback = null;\n        this.lastState = {};\n        if (this.cancelCallback) {\n            this.cancelCallback(this.consumerId);\n        }\n    }\n\n    /**\n     * refresh current subscription\n     */\n    refresh() {\n        if (this.sub) {\n            this.sub.unsubscribe();\n        }\n        this.startPolling();\n    }\n\n    /**\n     *\n     */\n    start() {\n        if (this.startCallback) {\n            this.startCallback(this.consumerId);\n        }\n    }\n\n    /**\n     * send back data and broadcast progress event\n     */\n    progress = (payload) => {\n        if (this.dataCallback) {\n            this.dataCallback(payload);\n        }\n        this.dataSource.broadcast({\n            eventType: 'datasource.progress',\n            targetId: this.dataSource.id,\n            payload: {\n                consumerId: this.consumerId,\n                ...payload,\n            },\n        });\n    };\n\n    /**\n     * send back error and broadcast error event\n     */\n    error = (payload) => {\n        if (this.errorCallback) {\n            this.errorCallback(payload);\n        }\n        this.dataSource.broadcast({\n            eventType: 'datasource.error',\n            targetId: this.dataSource.id,\n            payload: {\n                consumerId: this.consumerId,\n                requestParams: this.requestParams,\n                error: payload,\n            },\n        });\n        if (this.completeCallback) {\n            this.completeCallback(this.consumerId);\n        }\n    };\n\n    /**\n     * broadcast done event\n     */\n    done = () => {\n        this.dataSource.broadcast({\n            eventType: 'datasource.done',\n            targetId: this.dataSource.id,\n            payload: {\n                consumerId: this.consumerId,\n                // we send back the last state part of done event\n                ...this.lastState,\n            },\n        });\n        if (this.completeCallback) {\n            this.completeCallback(this.consumerId);\n        }\n    };\n\n    /**\n     * register subscription start callback\n     * @param {Function} callback\n     */\n    onStart(callback) {\n        this.startCallback = callback;\n    }\n\n    /**\n     * register subscription cancel callback\n     * @param {Function} callback cancel callback\n     */\n    onCancel(callback) {\n        this.cancelCallback = callback;\n    }\n\n    /**\n     * register complete callback\n     * @param {Function} callback\n     */\n    onComplete(callback) {\n        this.completeCallback = callback;\n    }\n\n    /**\n     * Subscribe to DataSource data\n     * @param {Function} onData data callback\n     * @param {Function} onError error callback\n     */\n    subscribeToData({ onData = () => {}, onError = () => {} } = {}) {\n        this.dataCallback = onData;\n        this.errorCallback = onError;\n        this.startPolling();\n    }\n\n    /**\n     * update request params for this subscription\n     * @param {Object} newRequestParams new request params\n     */\n    updateRequestParams(newRequestParams) {\n        if (this.sub) {\n            this.sub.unsubscribe();\n        }\n        this.requestParams = newRequestParams;\n        this.startPolling();\n    }\n}\n\nexport default Subscription;\n","module.exports = require(\"@splunk/datasource-utils/DataSet\");","import isFinite from 'lodash/isFinite';\nimport isString from 'lodash/isString';\nimport { parse, epochToMoment } from '@splunk/dashboard-utils/time';\n\nconst minInterval = 3; // 3 secs\n\nconst computeInterval = (interval, refreshType) => {\n    return refreshType === 'delay' ? interval : Math.max(minInterval, interval);\n};\n\nexport const parseExprToSeconds = (exp = '5s') => {\n    try {\n        if (isFinite(exp)) {\n            return Math.abs(parseInt(exp, 10));\n        }\n        if (isString(exp)) {\n            const now = epochToMoment();\n            const { momentTime } = parse(`+${exp}`, now);\n            const diff = momentTime.diff(now, 'seconds');\n            return Math.abs(diff);\n        }\n        return 0;\n    } catch (ex) {\n        return 0;\n    }\n};\n\n/**\n * Control DataSource refresh behaviour\n */\nexport default class RefreshScheduler {\n    constructor({\n        refreshFunc = () => {},\n        refreshInterval,\n        refreshType = 'delay',\n    }) {\n        this.refreshFunc = refreshFunc;\n        this.refreshType = refreshType;\n        this.interval = computeInterval(refreshInterval, refreshType);\n        this.stopped = false;\n        this.timeout = null;\n    }\n\n    scheduleNextRefresh = () => {\n        // Do not schedule a new refresh if the timer has already started\n        if (!this.timeout) {\n            this.timeout = setTimeout(() => {\n                this.timeout = null;\n                if (!this.stopped) {\n                    this.refreshFunc();\n                }\n            }, this.interval * 1000);\n        }\n    };\n\n    stop = () => {\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n            this.timeout = null;\n        }\n        this.stopped = true;\n    };\n}\n","module.exports = require(\"lodash/isFinite\");","module.exports = require(\"lodash/isString\");","module.exports = require(\"@splunk/dashboard-utils/time\");","/**\n * Controller caches the SPL query\n */\nexport default class RiskyCommandController {\n    constructor() {\n        this.disableRiskyCheckList = new Set();\n    }\n\n    /**\n     * Check if a search query requires risky cmd verification\n     * @param {String} query\n     * @returns Boolean\n     */\n    shouldCheckRiskyCommand(query) {\n        return !this.disableRiskyCheckList.has(query);\n    }\n\n    /**\n     * Add query to disableRiskyCheckList\n     * @param {String} query\n     */\n    addToDisableCheckList(query) {\n        this.disableRiskyCheckList.add(query);\n    }\n\n    /**\n     * Clean up the disableRiskyCheckList\n     */\n    clearDisableCheckList() {\n        this.disableRiskyCheckList.clear();\n    }\n}\n","import { connect } from 'react-redux';\nimport { selectLayout } from '../../state/redux/definition';\nimport DashboardContainer from '../DashboardContainer';\n\nconst mapStateToProps = (state) => ({\n    message: state.message,\n    globalInputs: selectLayout(state).globalInputs,\n});\n\nexport default connect(mapStateToProps)(DashboardContainer);\n","import React, { useCallback } from 'react';\nimport T from 'prop-types';\nimport ErrorBoundary from '@splunk/dashboard-ui/ErrorBoundary';\nimport Message from '@splunk/dashboard-ui/Message';\nimport DashboardLayout from '../components/DashboardLayout';\nimport ConnectedLayoutContainer from './connected/ConnectedLayoutContainer';\nimport GlobalInputContainer from './layouts/GlobalInputContainer';\n\nconst GlobalErrorMessage = ({ message }) => (\n    <Message level=\"error\" message={message} />\n);\n\nGlobalErrorMessage.propTypes = {\n    message: T.string,\n};\n\nGlobalErrorMessage.defaultProps = {\n    message: null,\n};\n\nconst renderErrorMessage = (errorMessage) => (\n    <GlobalErrorMessage message={errorMessage} />\n);\n\nconst renderGlobalInput = () => <GlobalInputContainer />;\n\nconst DashboardContainer = ({\n    message,\n    height,\n    width,\n    showGrid,\n    globalInputs,\n}) => {\n    const renderLayout = useCallback(\n        (dimension) => (\n            <ConnectedLayoutContainer\n                width={dimension.width}\n                height={dimension.height}\n                showGrid={showGrid}\n            />\n        ),\n        [showGrid]\n    );\n\n    if (message) {\n        return <GlobalErrorMessage message={message} />;\n    }\n\n    return (\n        <ErrorBoundary render={renderErrorMessage}>\n            <DashboardLayout\n                width={width}\n                height={height}\n                renderGlobalInput={renderGlobalInput}\n                renderLayout={renderLayout}\n                showGlobalInputs={globalInputs.length > 0}\n            />\n        </ErrorBoundary>\n    );\n};\n\nDashboardContainer.propTypes = {\n    height: T.oneOfType([T.string, T.number]),\n    width: T.oneOfType([T.string, T.number]),\n    showGrid: T.bool,\n    globalInputs: T.array,\n    message: T.string,\n};\n\nDashboardContainer.defaultProps = {\n    globalInputs: [],\n    message: null,\n};\n\nexport default DashboardContainer;\n","/* global __UDF_VERSION__ */\nimport pick from 'lodash/pick';\nimport React, { useMemo, useRef } from 'react';\nimport T from 'prop-types';\nimport styled from 'styled-components';\nimport { reset } from '@splunk/themes/mixins';\nimport SizeAwareWrapper from '@splunk/dashboard-ui/SizeAwareWrapper';\nimport { toDimension } from '@splunk/dashboard-utils/style';\nimport { useScrollbarOverlay } from '@splunk/dashboard-utils/layout';\nimport CanvasContext from '@splunk/dashboard-context/CanvasContext';\n\nconst DashboardLayoutContainer = styled.div.attrs({\n    'data-test': 'DashboardLayoutContainer',\n})`\n    ${reset('flex')};\n    position: relative;\n    overflow: hidden;\n    flex-direction: column;\n    ${(props) => toDimension(pick(props, ['width', 'height']))};\n`;\n\nconst GlobalInputsContainer = styled.div.attrs({\n    'data-test': 'GlobalInputsContainer',\n})`\n    flex-basis: auto;\n    z-index: 100;\n`;\n\nconst LayoutContainer = styled.div.attrs({\n    'data-test': 'LayoutContainer',\n})`\n    flex-grow: 1;\n    min-height: 0px;\n    overflow: ${(props) => (props.useOverlay ? 'overlay' : 'auto')};\n    position: relative;\n`;\n\nconst DashboardLayout = ({\n    height,\n    width,\n    renderGlobalInput,\n    renderLayout,\n    showGlobalInputs,\n}) => {\n    // this is mainly for auto scrolling to the bottom of canvas when adding a new viz in grid layout\n    const canvasRef = useRef();\n\n    const renderGlobalInputsContainer = useMemo(\n        () =>\n            showGlobalInputs && (\n                <GlobalInputsContainer>\n                    {renderGlobalInput()}\n                </GlobalInputsContainer>\n            ),\n        [showGlobalInputs, renderGlobalInput]\n    );\n    return (\n        <DashboardLayoutContainer\n            height={height}\n            width={width}\n            data-udf-core-version={__UDF_VERSION__ || 'unknown'}\n        >\n            {renderGlobalInputsContainer}\n            <LayoutContainer ref={canvasRef} useOverlay={useScrollbarOverlay()}>\n                <CanvasContext.Provider value={canvasRef}>\n                    <SizeAwareWrapper>\n                        {(containerDimensions) =>\n                            renderLayout(containerDimensions)\n                        }\n                    </SizeAwareWrapper>\n                </CanvasContext.Provider>\n            </LayoutContainer>\n        </DashboardLayoutContainer>\n    );\n};\n\nDashboardLayout.propTypes = {\n    height: T.oneOfType([T.string, T.number]),\n    width: T.oneOfType([T.string, T.number]),\n    renderGlobalInput: T.func,\n    renderLayout: T.func,\n    showGlobalInputs: T.bool,\n};\n\nDashboardLayout.defaultProps = {\n    renderGlobalInput: () => null,\n    renderLayout: () => null,\n    height: '100%',\n    width: '100%',\n    showGlobalInputs: false,\n};\n\nexport default DashboardLayout;\n","module.exports = require(\"@splunk/themes/mixins\");","module.exports = require(\"@splunk/dashboard-ui/SizeAwareWrapper\");","module.exports = require(\"@splunk/dashboard-utils/style\");","module.exports = require(\"@splunk/dashboard-utils/layout\");","module.exports = require(\"@splunk/dashboard-context/CanvasContext\");","import { connect } from 'react-redux';\nimport {\n    selectResolvedLayout,\n    updateLayoutStructure,\n} from '../../state/redux/definition';\nimport {\n    updateSelectedItems,\n    selectSelectedItems,\n} from '../../state/redux/editor';\nimport { selectMode } from '../../state/redux/mode';\nimport { triggerEvent } from '../../state/sagas/sagaActions';\nimport LayoutContainer from '../layouts/LayoutContainer';\n\nconst mapStateToProps = (state) => ({\n    layout: selectResolvedLayout(state),\n    mode: selectMode(state),\n    // TODO: verify if layouts still need selected items (remove if not)\n    selectedItems: selectSelectedItems(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    handleEvent: (eventType, payload, eventId) => {\n        dispatch(triggerEvent(null, eventType, payload, eventId));\n    },\n    onLayoutItemsSelect: (selectedItems) => {\n        dispatch(updateSelectedItems(selectedItems));\n    },\n    onLayoutStructureChange: (layoutStructure) => {\n        dispatch(updateLayoutStructure(layoutStructure));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LayoutContainer);\n","import React, {\n    useEffect,\n    useRef,\n    useCallback,\n    useMemo,\n    useContext,\n} from 'react';\nimport T from 'prop-types';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport Message from '@splunk/dashboard-ui/Message';\nimport VisualizationContainer from '../connected/ConnectedVisualizationContainer';\nimport LineContainer from '../connected/ConnectedLineContainer';\nimport RegistryContext from '../../contexts/RegistryContext';\n\n/**\n * A prop passed to the layout component.\n * @param {String} id visualization id\n * @param {*} props the props passed down to VisualizationContainer or LineContainer\n * @param {*} layoutItemType layoutItemType, could be 'line' or 'block'\n * @param {*} onSelected a callback function when visualization is selected\n */\nconst renderLayoutItem = (id, props, layoutItemType, onSelected) => {\n    if (layoutItemType === 'line') {\n        return <LineContainer key={id} id={id} {...props} />;\n    }\n    return (\n        <VisualizationContainer\n            key={id}\n            id={id}\n            {...props}\n            onSelected={onSelected}\n        />\n    );\n};\n\nconst LayoutContainer = ({\n    handleEvent,\n    height, // container height in pixel\n    layout,\n    mode,\n    onLayoutItemsSelect,\n    onLayoutStructureChange,\n    selectedItems,\n    showGrid,\n    width, // container width in pixel\n}) => {\n    const layoutApi = useRef(null);\n    const { apiRegistry, eventRegistry, preset } = useContext(RegistryContext);\n\n    useEffect(() => {\n        if (layoutApi.current) {\n            apiRegistry.registerLayoutApi(layoutApi.current);\n        }\n\n        return () => apiRegistry.removeLayoutApi();\n    }, [layoutApi, apiRegistry]);\n\n    const onEventTrigger = useCallback(\n        ({ type: eventType, originalEvent, payload }) => {\n            const eventId = eventRegistry.registerEvent(originalEvent);\n            handleEvent(eventType, payload, eventId);\n        },\n        [handleEvent, eventRegistry]\n    );\n\n    const layoutApiRef = useCallback((ref) => {\n        layoutApi.current = ref;\n    }, []);\n\n    return useMemo(() => {\n        const { type, options, structure: layoutStructure } = layout;\n\n        if (!preset.findLayout(type)) {\n            return (\n                <Message\n                    level=\"error\"\n                    message={_(`Layout ${type} is not defined`)}\n                />\n            );\n        }\n\n        const layoutProps = {\n            // we send down the actual width/height of dashboard-core container\n            containerHeight: height,\n            containerWidth: width,\n            layoutApiRef,\n            layoutStructure,\n            mode,\n            onEventTrigger,\n            onLayoutItemsSelect,\n            onLayoutStructureChange,\n            options,\n            renderLayoutItem,\n            selectedItems,\n            showGrid,\n        };\n\n        return preset.createLayout(type, layoutProps);\n    }, [\n        onLayoutItemsSelect,\n        height,\n        layout,\n        layoutApiRef,\n        mode,\n        onEventTrigger,\n        onLayoutStructureChange,\n        preset,\n        selectedItems,\n        showGrid,\n        width,\n    ]);\n};\n\nLayoutContainer.propTypes = {\n    mode: T.string,\n    /**\n     * layout node from dashboard definition\n     */\n    layout: T.object,\n    /**\n     * visualization definitions\n     */\n    visualizations: T.object,\n    /**\n     * datasource definitions\n     */\n    dataSources: T.object,\n    /**\n     * current submitted tokens\n     */\n    submittedTokens: T.object,\n    /**\n     * container width in pixel\n     */\n    width: T.number,\n    /**\n     * container height in pixel\n     */\n    height: T.number,\n    /**\n     * action menus\n     */\n    actionMenus: T.arrayOf(T.object),\n    /**\n     * current selected items\n     */\n    selectedItems: T.arrayOf(\n        T.shape({ id: T.string, type: T.oneOf(['block', 'line', 'input']) })\n    ),\n    /**\n     * callback when item been selected\n     */\n    onLayoutItemsSelect: T.func,\n    /**\n     * callback when layout structure changed\n     */\n    onLayoutStructureChange: T.func,\n    /**\n     * handle event callback\n     */\n    handleEvent: T.func,\n    /**\n     * whether gridlines should be displayed in edit mode\n     */\n    showGrid: T.bool,\n};\n\nexport default LayoutContainer;\n","import { connect } from 'react-redux';\nimport { selectMode } from '../../state/redux/mode';\nimport {\n    toggleFullscreen,\n    selectFullscreenElement,\n} from '../../state/redux/fullscreen';\nimport {\n    updateVizOptions,\n    updateVizTitle,\n    updateVizDescription,\n    selectVisualizationDefinitionFactory,\n    selectDataSourceDefinitionForVizFactory,\n} from '../../state/redux/definition';\nimport { triggerEvent } from '../../state/sagas/sagaActions';\nimport VisualizationContainer from '../VisualizationContainer';\n\nconst mapStateToProps = (__, { id }) => (state) => {\n    const selectVizDef = selectVisualizationDefinitionFactory();\n    const selectDSDef = selectDataSourceDefinitionForVizFactory();\n    return {\n        mode: selectMode(state),\n        isFullscreen: selectFullscreenElement(state) === id,\n        vizDef: selectVizDef(state, id),\n        dataSourceDefs: selectDSDef(state, id),\n    };\n};\n\nconst mapDispatchToProps = (dispatch, { id }) => ({\n    handleEvent: (eventType, payload, eventId) => {\n        dispatch(triggerEvent(id, eventType, payload, eventId));\n    },\n    onOptionsChange: (newOptions) => {\n        dispatch(updateVizOptions(id, newOptions));\n    },\n    onTitleChange: (newTitle) => {\n        dispatch(updateVizTitle(id, newTitle));\n    },\n    onDescriptionChange: (newDescription) => {\n        dispatch(updateVizDescription(id, newDescription));\n    },\n    onExitFullscreen: () => {\n        dispatch(toggleFullscreen(null));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(VisualizationContainer);\n","import React, { useMemo, useEffect, useCallback } from 'react';\nimport map from 'lodash/map';\nimport styled from 'styled-components';\nimport { FullScreen, useFullScreenHandle } from 'react-full-screen';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport Message from '@splunk/dashboard-ui/Message';\nimport ErrorBoundary from '@splunk/dashboard-ui/ErrorBoundary';\nimport type {\n    Mode,\n    DataSourceDefinition,\n    VisualizationDefinition,\n} from '@splunk/dashboard-types';\nimport { toPx } from '@splunk/dashboard-utils';\nimport DataSourceComposer from '../components/DataSourceComposer';\nimport { findInitialRequestParams } from '../utils/datasource';\nimport VisualizationContent from './VisualizationContent';\nimport { useRegistry } from '../contexts/RegistryContext';\n\nexport interface VisualizationContainerProps {\n    id: string;\n    width: string | number;\n    height?: string | number;\n    y: number;\n    canvasHeight: number;\n    mode?: Mode;\n    isFullscreen?: boolean;\n    onExitFullscreen: () => void;\n    onSelected: (\n        e: React.MouseEvent,\n        visualizationIds: { id: string; type: string }[]\n    ) => void;\n    onDescriptionChange?: (newDescription: string) => void;\n    onTitleChange?: (newTitle: string) => void;\n    onOptionsChange?: (newOptions: Record<string, unknown>) => void;\n    handleEvent: (\n        eventType: string,\n        payload: Record<string, unknown>,\n        eventId: string\n    ) => void;\n    dataSourceDefs: Record<string, DataSourceDefinition>;\n    vizDef: VisualizationDefinition;\n}\n\ninterface ItemProps {\n    width: string | number;\n}\nconst Item = styled.div.attrs<ItemProps>(({ width }) => ({\n    style: {\n        width,\n    },\n}))<ItemProps>`\n    position: relative;\n    pointer-events: auto;\n`;\n\ninterface FixSizeItemProps {\n    width: string | number;\n    height: string | number;\n}\nconst FixSizeItem = styled.div.attrs<FixSizeItemProps>(({ width, height }) => ({\n    style: {\n        width,\n        height,\n    },\n}))<FixSizeItemProps>`\n    position: relative;\n    flex-direction: column;\n    pointer-events: auto;\n`;\n\ninterface StyledFullScreenProps {\n    width: string | number;\n    height?: string | number;\n}\nconst StyledFullScreen = styled(FullScreen)<StyledFullScreenProps>`\n    height: ${(props) => toPx(props.height)};\n    width: ${(props) => toPx(props.width)};\n`;\n\nconst empty = {};\n\n/**\n * Visualization wrapper that wires up events and data for viz content.\n */\n\nconst VisualizationContainer = ({\n    dataSourceDefs,\n    handleEvent,\n    id,\n    isFullscreen = false,\n    mode,\n    onDescriptionChange,\n    onExitFullscreen,\n    onOptionsChange,\n    onSelected,\n    onTitleChange,\n    vizDef,\n    height,\n    width,\n    y,\n    canvasHeight,\n}: VisualizationContainerProps): JSX.Element => {\n    const {\n        type,\n        options = empty,\n        dataSources: dataSourceBindings = empty,\n        showProgressBar = false,\n        showLastUpdated = false,\n    } = vizDef;\n    const { apiRegistry, eventRegistry, preset } = useRegistry();\n    const fullscreenHandle = useFullScreenHandle();\n    const { enter: enterFullscreen, node: vizRef } = fullscreenHandle;\n\n    const vizApi = useMemo(\n        () => ({\n            getDomElement: () => vizRef.current,\n        }),\n        [vizRef]\n    );\n\n    useEffect(() => {\n        if (!apiRegistry.getVisualizationApi(id)) {\n            apiRegistry.registerVisualizationApi(id, vizApi);\n        }\n        return () => {\n            apiRegistry.removeVisualizationApi(id);\n        };\n    }, [apiRegistry, id, vizApi]);\n\n    const registerApi = useCallback(\n        (ref) => {\n            apiRegistry.registerVisualizationApi(id, { ...ref, ...vizApi });\n        },\n        [apiRegistry, id, vizApi]\n    );\n\n    const handleToggleFullscreen = useCallback(\n        (isFull) => {\n            if (isFullscreen && !isFull) {\n                onExitFullscreen();\n            }\n        },\n        [isFullscreen, onExitFullscreen]\n    );\n\n    const bindings = useMemo(() => {\n        return map(dataSourceBindings, (dataSourceId, bindingType) => {\n            return {\n                bindingType,\n                dataSourceId,\n                dataSource: dataSourceDefs[dataSourceId],\n                initialRequestParams: findInitialRequestParams({\n                    bindingType,\n                    consumerModule: preset.findVisualization(type),\n                    options,\n                }),\n            };\n        });\n    }, [dataSourceBindings, dataSourceDefs, preset, type, options]);\n\n    const handleEventTrigger = useCallback(\n        ({ type: eventType, originalEvent, payload }) => {\n            const eventId = eventRegistry.registerEvent(originalEvent);\n            handleEvent(eventType, payload, eventId);\n        },\n        [eventRegistry, handleEvent]\n    );\n\n    const vizProps = useMemo(\n        () => ({\n            id,\n            mode,\n            onEventTrigger: handleEventTrigger,\n            vizActionHandlerRef: registerApi,\n            visualizationApiRef: registerApi,\n            onOptionsChange,\n            // need to convert the array of string to an array of objects.\n            onSelected: (e: React.MouseEvent, visualizationIds: string[]) =>\n                onSelected(\n                    e,\n                    visualizationIds.map((vizId: string) => ({\n                        id: vizId,\n                        type: 'block',\n                    }))\n                ),\n            onTitleChange,\n            onDescriptionChange,\n            isFullscreen,\n        }),\n        [\n            id,\n            mode,\n            handleEventTrigger,\n            registerApi,\n            onOptionsChange,\n            onTitleChange,\n            onDescriptionChange,\n            isFullscreen,\n            onSelected,\n        ]\n    );\n\n    const handleError = useCallback(\n        (message) => <Message level=\"error\" message={_(message)} />,\n        []\n    );\n\n    // enter fullscreen when the isFullscreen prop becomes true\n    useEffect(() => {\n        if (isFullscreen) {\n            enterFullscreen();\n        }\n    }, [isFullscreen, enterFullscreen]);\n\n    const renderContent = useMemo(\n        // eslint-disable-next-line react/prop-types\n        () => ({\n            width: contentWidth,\n            height: contentHeight,\n        }: {\n            width: string | number;\n            height?: string | number;\n        }) => (\n            <ErrorBoundary render={handleError}>\n                <StyledFullScreen\n                    handle={fullscreenHandle}\n                    onChange={handleToggleFullscreen}\n                    width={contentWidth}\n                    height={contentHeight}\n                >\n                    <DataSourceComposer consumerId={id} bindings={bindings}>\n                        {/* TODO: Can DataSource composer handle passing these more gracefully to its children? */}\n                        {({\n                            loading,\n                            dataSources,\n                            updateRequestParams,\n                            refresh,\n                        }) => (\n                            <VisualizationContent\n                                type={type}\n                                vizProps={vizProps}\n                                visualizationDefinition={vizDef}\n                                dataSourceDefinitions={dataSourceDefs}\n                                height={contentHeight}\n                                width={contentWidth}\n                                y={y}\n                                canvasHeight={canvasHeight}\n                                loading={loading}\n                                dataSources={dataSources}\n                                updateRequestParams={updateRequestParams}\n                                refresh={refresh}\n                                showProgressBar={showProgressBar}\n                                showLastUpdated={showLastUpdated}\n                            />\n                        )}\n                    </DataSourceComposer>\n                </StyledFullScreen>\n            </ErrorBoundary>\n        ),\n        [\n            handleError,\n            fullscreenHandle,\n            handleToggleFullscreen,\n            id,\n            bindings,\n            type,\n            vizProps,\n            vizDef,\n            dataSourceDefs,\n            y,\n            canvasHeight,\n            showProgressBar,\n            showLastUpdated,\n        ]\n    );\n\n    return useMemo(() => {\n        return height != null ? (\n            <FixSizeItem\n                data-test=\"viz-item\"\n                data-viz-type={type}\n                data-id={id}\n                width={width}\n                height={height}\n            >\n                {renderContent({ width, height })}\n            </FixSizeItem>\n        ) : (\n            <Item\n                data-test=\"viz-item\"\n                data-viz-type={type}\n                data-id={id}\n                width={width}\n            >\n                {renderContent({ width })}\n            </Item>\n        );\n    }, [height, id, width, renderContent, type]);\n};\n\nexport default VisualizationContainer;\n","module.exports = require(\"lodash/map\");","module.exports = require(\"react-full-screen\");","import React from 'react';\nimport T from 'prop-types';\nimport Composer from 'react-composer';\nimport DataSourceConsumer from './DataSourceConsumer';\n\nconst noop = () => undefined;\nconst empty = {};\n\n/**\n * A React component that allow consumer subscribe to multiple DataSources\n */\nconst DataSourceComposer = ({ consumerId, bindings, children }) => {\n    if (bindings.length === 0) {\n        children({\n            loading: false,\n            dataSources: empty,\n            updateRequestParams: noop,\n        });\n    }\n    const dataSourceConsumers = bindings.map(\n        ({ bindingType, dataSource, dataSourceId, initialRequestParams }) => {\n            return (\n                <DataSourceConsumer\n                    consumerId={consumerId}\n                    bindingType={bindingType}\n                    dataSource={dataSource}\n                    dataSourceId={dataSourceId}\n                    initialRequestParams={initialRequestParams}\n                />\n            );\n        }\n    );\n    return (\n        <Composer components={dataSourceConsumers}>\n            {(mergedResults) => {\n                // merge result into a single dataSources object\n                const dataSources = {};\n                const requestParamsUpdater = {};\n                const refreshes = {};\n                let primaryLoading;\n                mergedResults.forEach(\n                    ({\n                        bindingType,\n                        loading,\n                        requestParams,\n                        updateRequestParams,\n                        data,\n                        meta,\n                        error,\n                        refresh,\n                    }) => {\n                        // we use primary dataSource to drive loading state\n                        if (bindingType === 'primary') {\n                            primaryLoading = loading;\n                        }\n                        requestParamsUpdater[bindingType] = updateRequestParams;\n                        refreshes[bindingType] = refresh;\n                        dataSources[bindingType] = {\n                            requestParams,\n                            data,\n                            meta,\n                            error,\n                        };\n                    }\n                );\n\n                return children({\n                    loading: primaryLoading,\n                    dataSources,\n                    updateRequestParams: (bindingType, newRequestParams) => {\n                        requestParamsUpdater[bindingType](newRequestParams);\n                    },\n                    refresh: (payload) => {\n                        // Refresh all searches. Later we may want to consider refresh a search by specifying bindingType\n                        Object.keys(refreshes).forEach((bindingType) =>\n                            refreshes[bindingType](payload)\n                        );\n                    },\n                });\n            }}\n        </Composer>\n    );\n};\n\nDataSourceComposer.propTypes = {\n    /**\n     * Consumer id\n     */\n    consumerId: T.string.isRequired,\n    /**\n     * render prop\n     */\n    children: T.func,\n    /**\n     * Consumer -- DataSource bindings\n     */\n    bindings: T.arrayOf(\n        T.shape({\n            bindingType: T.string,\n            dataSource: T.object,\n            dataSourceId: T.string,\n            initialRequestParams: T.object,\n        })\n    ),\n};\n\nDataSourceComposer.defaultProps = {\n    children: noop,\n};\n\nexport default DataSourceComposer;\n","module.exports = require(\"react-composer\");","import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport type {\n    Mode,\n    RootDataSourcesDefinition,\n    SelectedItem,\n    VisualizationDefinition,\n} from '@splunk/dashboard-types';\nimport { useFeatureFlags } from '@splunk/dashboard-context';\nimport { TelemetryContext } from '@splunk/dashboard-telemetry';\nimport { sanitizeColor } from '@splunk/dashboard-ui/utils/colorUtils';\nimport { ActionMenuContainer } from '@splunk/dashboard-ui';\nimport { useSelector } from 'react-redux';\nimport { toPx, hashString } from '@splunk/dashboard-utils';\nimport { isRiskyCommandError } from '@splunk/dashboard-utils/riskyCommandUtils';\nimport VizProgressBar, {\n    PROGRESSBAR_HEIGHT,\n} from '../components/VizProgressBar';\nimport VizTitleAndDescription, {\n    TITLE_CONTAINER_PADDING,\n    TITLE_HEIGHT,\n    DESCRIPTION_HEIGHT,\n} from '../components/VizTitleAndDescription';\nimport VizWaitingForInput from '../components/VizWaitingForInput';\nimport VizStatusBar, { STATUSBAR_HEIGHT } from '../components/VizStatusBar';\nimport VizStatusIcon from '../components/VizStatusIcon';\nimport { useRegistry } from '../contexts/RegistryContext';\nimport { ERROR_LEVEL_INFO, WAITING_FOR_INPUT_MSG } from '../utils/token';\nimport { selectSelectedItems } from '../state/redux/editor';\nimport { selectSubmittedTokens } from '../state/redux/tokens';\nimport { useActionMenus } from '../contexts/ActionMenusContext';\n\nimport { getHasDrilldown, getVizBorderStyle } from '../utils/visualization';\nimport SelectableContainer from './SelectableContainer';\n\n/**\n * canvasHeight - 40 is the closest a viz should be from bottom of canvas to\n * render action menu below viz.\n */\nconst minDistanceFromBottomCanvasForActionMenus = 40;\n\ninterface VizWrapperProps {\n    width: string | number;\n    height?: string | number;\n}\nconst VizWrapper = styled.div.attrs<VizWrapperProps>(({ width, height }) => ({\n    style: {\n        width: toPx(width),\n        height: toPx(height),\n    },\n}))<VizWrapperProps>``;\n\ninterface ActionMenuWrapperProps {\n    isSelected: boolean;\n}\n\nconst ActionMenuWrapper = styled.div<ActionMenuWrapperProps>`\n    visibility: ${({ isSelected }) => (isSelected ? 'visible' : 'hidden')};\n    transition: visibility 0.2s ease-in 0;\n    position: relative;\n\n    ${SelectableContainer}:hover & {\n        transition: visibility 0.2s ease-in 0.3s;\n        visibility: visible;\n    }\n`;\n\nconst empty: Record<string, unknown> = {};\n\n/**\n * Display Visualization and its sibling components (Progress, Title, Status)\n * @param {Object} props\n * @param {String} props.type The viz type\n * @param {Number} props.height The container height\n * @param {Number} props.width The container width\n * @param {Object} props.dataSources Data\n * @param {Boolean} props.loading DataSources state\n * @param {Function} props.refresh Callback to refresh dataSources\n * @param {Function} props.updateRequestParams Callback to update request params for DS\n * @param {Object} props.vizProps Static viz configuration\n * @param {Boolean} props.showProgressBar Flag for user's desire to show progress and status bars\n * @param {Boolean} props.showLastUpdated Flag for user's desire to show progress and status bars\n */\nexport interface VisualizationContentProps {\n    type: string;\n    width: number | string;\n    height?: number | string;\n    y: number;\n    canvasHeight: number;\n    dataSources: {\n        primary?: {\n            meta?: {\n                percentComplete: number;\n                lastUpdated: string;\n                status: string;\n                isRealTimeSearch: boolean;\n                search?: string;\n            };\n            error?: {\n                level: string;\n                message: string;\n            };\n            data?: unknown;\n        };\n        [key: string]: unknown;\n    };\n    loading: boolean;\n    refresh: unknown;\n    updateRequestParams: unknown;\n    vizProps: {\n        id: string;\n        mode?: Mode;\n        isFullscreen: boolean;\n        // TODO: there are many more things here!\n    };\n    visualizationDefinition: VisualizationDefinition;\n    dataSourceDefinitions: RootDataSourcesDefinition;\n    showProgressBar?: boolean;\n    showLastUpdated?: boolean;\n}\nconst VisualizationContent = ({\n    type,\n    height,\n    width,\n    y,\n    canvasHeight,\n    dataSources = {},\n    loading,\n    refresh,\n    updateRequestParams,\n    vizProps,\n    showProgressBar = false,\n    showLastUpdated = false,\n    visualizationDefinition: vizDef,\n    dataSourceDefinitions,\n}: VisualizationContentProps): JSX.Element => {\n    const { id, mode, isFullscreen } = vizProps;\n    const { title, description, eventHandlers, options = empty } = vizDef;\n    const [computedProps, setComputedProps] = useState<{\n        backgroundColor?: string;\n    }>({});\n    const [hasStatusIcon, setHasStatusIcon] = useState<boolean>(false);\n    const { apiRegistry, preset } = useRegistry();\n    const {\n        showProgressBar: progressFeatureFlag,\n        showLastUpdated: lastUpdatedFeatureFlag,\n    } = useFeatureFlags();\n    const [timerCreated, setTimerCreated] = useState(false);\n    const telemetry = useContext(TelemetryContext);\n    const containerWidth = isFullscreen ? '100vw' : width;\n    const containerHeight = isFullscreen ? '100vh' : height;\n    const errorLevel = dataSources?.primary?.error?.level;\n    const message = dataSources?.primary?.error?.message ?? '';\n    const showWaitingForInputPlaceholder =\n        errorLevel === ERROR_LEVEL_INFO && message === WAITING_FOR_INPUT_MSG;\n    const { backgroundColor } = options;\n\n    let bgColor = computedProps.backgroundColor || backgroundColor || null;\n    if (bgColor) {\n        bgColor = sanitizeColor(bgColor as string);\n    }\n\n    // Register refresh to api on mount, unregister on unmount\n    useEffect(() => {\n        apiRegistry.registerVisualizationActionsApi(id, { refresh });\n\n        return () => {\n            apiRegistry.removeVisualizationActionsApi(id);\n        };\n    }, [apiRegistry, id, refresh]);\n\n    useEffect(() => {\n        setComputedProps({});\n    }, [type]);\n    // Unique timerId for performanceCollector to create timer with\n    const timerId = `Visualization - ${type} - ${hashString(\n        id\n    )} - Time to Interactive`;\n\n    useEffect(() => {\n        const initialPayload = {\n            pageAction: 'performance.createTimer',\n            metadata: {\n                timerId,\n                sourceElement: 'TimeRangePicker',\n                heroElement: timerId,\n                currentTime: performance.now(),\n            },\n        };\n        // Creates an initial timer object when this visualization is initially mounted\n        // Source element is the Time Range Picker, because we want to track time between\n        // the time range change and this visualization updating\n        if (!timerCreated) {\n            telemetry.emit(initialPayload);\n            setTimerCreated(true);\n        }\n    }, [telemetry, timerCreated, timerId]);\n\n    useEffect(() => {\n        const actionPayload = {\n            pageAction: 'performance.mark',\n            metadata: {\n                timerId,\n                markInformation: timerId,\n                currentTime: performance.now(),\n            },\n        };\n        const initialPayload = {\n            pageAction: 'performance.createTimer',\n            metadata: {\n                timerId,\n                sourceElement: 'TimeRangePicker',\n                heroElement: timerId,\n                currentTime: performance.now(),\n            },\n        };\n\n        // After loading is finished, we emit a mark indicating that this visualization\n        // has finished updating. We create a new timer since the original timer's job is\n        // finished; a future update to time range picker and visualization updating\n        // will have a fresh timer object to act upon, and cycle continues.\n        if (!loading && timerCreated) {\n            telemetry.emit(actionPayload);\n            telemetry.emit(initialPayload);\n        }\n    }, [telemetry, loading, timerCreated, timerId]);\n\n    /**\n     * Viz/Preset should have first say of whether the element should be enabled\n     * Then determine if user has enabled/disabled in definition\n     */\n    const { useLastUpdated, useProgressBar, useTitle } = useMemo(() => {\n        const presetFlags = preset.shouldDisplayVisualizationSiblingContent(\n            type\n        );\n\n        return {\n            useLastUpdated:\n                lastUpdatedFeatureFlag &&\n                presetFlags.showLastUpdated &&\n                showLastUpdated &&\n                !showWaitingForInputPlaceholder,\n            useProgressBar:\n                progressFeatureFlag &&\n                presetFlags.showProgressBar &&\n                showProgressBar &&\n                !showWaitingForInputPlaceholder,\n            useTitle:\n                presetFlags.showTitleAndDescription && (title || description),\n        };\n    }, [\n        preset,\n        type,\n        showProgressBar,\n        showLastUpdated,\n        progressFeatureFlag,\n        lastUpdatedFeatureFlag,\n        title,\n        description,\n        showWaitingForInputPlaceholder,\n    ]);\n\n    const hasRiskyCommand = useMemo(() => {\n        const errorMessage = dataSources.primary?.error?.message;\n        if (errorMessage === undefined) {\n            return false;\n        }\n\n        return isRiskyCommandError(errorMessage);\n    }, [dataSources.primary?.error?.message]);\n\n    /**\n     * Calculate the heights of all the components that are not the visualization\n     * Used to tell the visualization how much room it has to use\n     */\n    const siblingHeights = useMemo(() => {\n        let h = 0;\n\n        if (hasRiskyCommand) {\n            // Error messages enable status icon\n            h += STATUSBAR_HEIGHT;\n        }\n\n        if (useProgressBar) {\n            // useProgressBar will enable progress bar\n            h += PROGRESSBAR_HEIGHT;\n        }\n\n        if (useTitle) {\n            // TODO: there has to be a better way...\n            h += title || description ? TITLE_CONTAINER_PADDING : 0;\n            h += title ? TITLE_HEIGHT : 0;\n            h += description ? DESCRIPTION_HEIGHT : 0;\n        }\n\n        return h;\n    }, [hasRiskyCommand, useProgressBar, useTitle, title, description]);\n\n    // Generate final props passed to viz\n    const props = useMemo(\n        () => ({\n            ...vizProps,\n            ...vizDef,\n            hasEventHandlers: eventHandlers && eventHandlers.length > 0,\n            width: isFullscreen ? '100vw' : width,\n            height: isFullscreen\n                ? `calc(100vh - ${siblingHeights}px)`\n                : Number(height) - siblingHeights || height,\n            dataSources,\n            loading,\n            onRequestParamsChange: updateRequestParams,\n            onComputedProps: setComputedProps,\n        }),\n        [\n            vizProps,\n            vizDef,\n            dataSources,\n            height,\n            isFullscreen,\n            loading,\n            siblingHeights,\n            updateRequestParams,\n            width,\n            eventHandlers,\n        ]\n    );\n\n    // Memoize rendering the viz\n    const Viz = useMemo(() => {\n        return showWaitingForInputPlaceholder ? (\n            <VizWaitingForInput\n                message={message}\n                backgroundColor={bgColor as string}\n                width={props.width}\n                height={props.height}\n            />\n        ) : (\n            <VizWrapper\n                data-test=\"viz-size-wrapper\"\n                width={props.width}\n                height={props.height}\n            >\n                {preset.createVisualization(type, props)}\n            </VizWrapper>\n        );\n    }, [preset, type, props, showWaitingForInputPlaceholder, message, bgColor]);\n\n    // Memoize rendering the title and description\n    const TitleAndDescription = useMemo(() => {\n        if (!useTitle || (!title && !description)) {\n            return null;\n        }\n\n        return (\n            <VizTitleAndDescription\n                title={title}\n                description={description}\n                backgroundColor={bgColor as string}\n            />\n        );\n    }, [title, description, bgColor, useTitle]);\n\n    // Memoize ProgressBar\n    const ProgressBar = useMemo(() => {\n        if (!useProgressBar) {\n            return null;\n        }\n\n        const currentProgress =\n            dataSources?.primary?.meta?.percentComplete ?? 0;\n\n        return (\n            <VizProgressBar\n                hasData={!!dataSources.primary}\n                percentage={currentProgress}\n                backgroundColor={bgColor as string}\n            />\n        );\n    }, [dataSources.primary, useProgressBar, bgColor]);\n\n    // Memoize Status Bar\n    const StatusBar = useMemo(() => {\n        if (!hasRiskyCommand) {\n            return null;\n        }\n\n        return (\n            <VizStatusBar\n                backgroundColor={bgColor as string}\n                hasRiskyCommand={hasRiskyCommand}\n            />\n        );\n    }, [hasRiskyCommand, bgColor]);\n\n    // Memoize Status Icon\n    const StatusIcon = useMemo(() => {\n        return (\n            <VizStatusIcon\n                dataSource={dataSources.primary}\n                id={id}\n                hasStatusIcon={setHasStatusIcon}\n            />\n        );\n    }, [dataSources.primary, id]);\n\n    // Handle Selected State\n    const selectedItems: SelectedItem[] = useSelector(selectSelectedItems);\n    const isMultiSelect = selectedItems.length > 1;\n    const isSelected = useMemo(\n        () => !!selectedItems.find((item) => item.id === id),\n        [selectedItems, id]\n    );\n\n    // Action Menu Props\n    const submittedTokens = useSelector(selectSubmittedTokens);\n    const actionMenus = useActionMenus();\n    // TODO: [BREAKING CHANGE], remove tokens from this, none of our buttons use tokens, and we give the configs to buttons with the tokens already resolved\n    const actionMenusWithVizData = useMemo(() => {\n        return actionMenus.map((item) =>\n            React.cloneElement(item, {\n                itemId: id,\n                visualization: vizDef,\n                dataSources: dataSourceDefinitions,\n                submittedTokens,\n            })\n        );\n    }, [actionMenus, id, vizDef, submittedTokens, dataSourceDefinitions]);\n\n    const hasDrilldown = getHasDrilldown(eventHandlers);\n    const outlineStyle = getVizBorderStyle(isSelected, mode, hasDrilldown);\n\n    // Memoize the calculation for the top or bottom\n    // alignment of the action menu container\n    const {\n        actionMenuTop,\n        actionMenuBottom,\n    }: {\n        actionMenuTop?: string;\n        actionMenuBottom?: string;\n    } = useMemo(() => {\n        if (typeof height === 'number') {\n            // Bottom of the action menu to be rendered\n            const menuBottom = height + y;\n\n            // Bottom of the canvas\n            const canvasBottom =\n                canvasHeight - minDistanceFromBottomCanvasForActionMenus;\n\n            // Only render below the visualization when the action\n            // menu will not fall below the bottom of the canvas\n            if (menuBottom <= canvasBottom) {\n                // Menu can render below viz\n                return { actionMenuTop: 'calc(100% + 1px)' };\n            }\n        }\n\n        // If there is a status icon or a risky command, don't render\n        // the action menu in the same place as that component\n        if (hasRiskyCommand || hasStatusIcon) {\n            // Bump menu into viz AND place above status bar (with small padding)\n            return {\n                actionMenuBottom: `${STATUSBAR_HEIGHT + 1}px`,\n            };\n        }\n\n        // Bump menu into viz\n        return { actionMenuBottom: '0px' };\n    }, [height, hasRiskyCommand, hasStatusIcon, y, canvasHeight]);\n\n    // Memoize Action Menu\n    const ActionMenu = useMemo(() => {\n        return (\n            <ActionMenuWrapper isSelected={isSelected}>\n                <ActionMenuContainer\n                    actionButtons={actionMenusWithVizData}\n                    lastUpdated={dataSources.primary?.meta?.lastUpdated}\n                    status={dataSources.primary?.meta?.status}\n                    isRealTimeSearch={\n                        dataSources.primary?.meta?.isRealTimeSearch\n                    }\n                    showLastUpdated={useLastUpdated}\n                    itemId={id}\n                    top={actionMenuTop}\n                    bottom={actionMenuBottom}\n                />\n            </ActionMenuWrapper>\n        );\n    }, [\n        actionMenusWithVizData,\n        dataSources.primary?.meta?.isRealTimeSearch,\n        dataSources.primary?.meta?.lastUpdated,\n        dataSources.primary?.meta?.status,\n        id,\n        isSelected,\n        useLastUpdated,\n        actionMenuTop,\n        actionMenuBottom,\n    ]);\n\n    return (\n        <SelectableContainer\n            vizId={id}\n            width={containerWidth}\n            height={containerHeight}\n            outlineStyle={outlineStyle}\n        >\n            {ProgressBar}\n            {TitleAndDescription}\n            {Viz}\n            {StatusBar}\n            {StatusIcon}\n            {isMultiSelect ? null : ActionMenu}\n        </SelectableContainer>\n    );\n};\n\nexport default VisualizationContent;\n","module.exports = require(\"@splunk/dashboard-telemetry\");","module.exports = require(\"@splunk/dashboard-ui/utils/colorUtils\");","module.exports = require(\"@splunk/dashboard-ui\");","module.exports = require(\"@splunk/dashboard-utils/riskyCommandUtils\");","import React from 'react';\nimport T from 'prop-types';\nimport styled from 'styled-components';\nimport Progress from '@splunk/react-ui/Progress';\nimport { customThemeVariables } from '@splunk/dashboard-ui/customThemeVariables';\n\nexport const PROGRESSBAR_HEIGHT = 3;\n\nconst ProgressBarContainer = styled.div.attrs(() => ({\n    'data-test': 'progress-bar-container',\n}))`\n    height: ${PROGRESSBAR_HEIGHT}px;\n    background-color: ${(props) =>\n        props.backgroundColor || customThemeVariables.vizPanelBackgroundColor};\n    width: 100%;\n    display: block;\n    /* Fix sub-pixel gaps between elements when scaled */\n    box-shadow: 0 1px 1px 0\n        ${(props) =>\n            props.backgroundColor ||\n            customThemeVariables.vizPanelBackgroundColor};\n`;\n\nconst VizProgressBar = ({ backgroundColor, percentage, hasData }) => {\n    if (percentage >= 100 || !hasData) {\n        return <ProgressBarContainer backgroundColor={backgroundColor} />;\n    }\n    const progressBarPercent = Math.max(percentage, 5);\n\n    return (\n        <ProgressBarContainer backgroundColor={backgroundColor}>\n            <Progress\n                percentage={progressBarPercent}\n                tooltip={`${percentage}% complete`}\n            />\n        </ProgressBarContainer>\n    );\n};\n\nVizProgressBar.propTypes = {\n    percentage: T.number,\n    backgroundColor: T.string,\n    hasData: T.bool,\n};\n\nVizProgressBar.defaultProps = {\n    hasData: true,\n    percentage: 0,\n};\n\nexport default VizProgressBar;\n","module.exports = require(\"@splunk/react-ui/Progress\");","import React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { pick, variables } from '@splunk/themes';\nimport { customThemeVariables } from '@splunk/dashboard-ui/customThemeVariables';\n\nexport const TITLE_CONTAINER_PADDING = 12;\nexport const TITLE_HEIGHT = 20;\nexport const DESCRIPTION_HEIGHT = 16;\n\nconst Title = styled.div.attrs(() => ({\n    'data-test': 'viz-title',\n}))`\n    flex-basis: auto;\n    font-size: 14px;\n    font-weight: 600;\n    line-height: ${TITLE_HEIGHT}px;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    color: ${variables.contentColorActive};\n`;\n\nconst Description = styled.div.attrs(() => ({\n    'data-test': 'viz-description',\n}))`\n    flex-basis: auto;\n    font-size: 12px;\n    line-height: ${DESCRIPTION_HEIGHT}px;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    color: ${variables.contentColorActive};\n    opacity: ${pick({\n        enterprise: {\n            light: 0.6,\n            dark: 0.7,\n        },\n        prisma: 0.7,\n    })};\n`;\n\nconst Container = styled.div.attrs(() => ({\n    'data-test': 'viz-title-description-container',\n}))<{ backgroundColor?: string | null }>`\n    padding: ${TITLE_CONTAINER_PADDING / 2}px 10px;\n    background-color: ${(props) =>\n        props.backgroundColor || customThemeVariables.vizPanelBackgroundColor};\n    /* Fix sub-pixel gaps between elements when scaled */\n    box-shadow: 0 1px 1px 0\n        ${(props) =>\n            props.backgroundColor ||\n            customThemeVariables.vizPanelBackgroundColor};\n    overflow: hidden;\n`;\n\ninterface TitleAndDescriptionProps {\n    description?: string;\n    title?: string;\n    backgroundColor?: string | null;\n}\n\nconst VizTitleAndDescription = ({\n    description = '',\n    title = '',\n    backgroundColor,\n}: TitleAndDescriptionProps): JSX.Element | null => {\n    const TitleMemo = useMemo(() => title && <Title>{title}</Title>, [title]);\n    const DescriptionMemo = useMemo(\n        () => description && <Description>{description}</Description>,\n        [description]\n    );\n\n    if (!title && !description) {\n        return null;\n    }\n\n    return (\n        <Container backgroundColor={backgroundColor}>\n            {TitleMemo}\n            {DescriptionMemo}\n        </Container>\n    );\n};\n\nexport default VizTitleAndDescription;\n","import React from 'react';\nimport T from 'prop-types';\nimport styled from 'styled-components';\nimport Input from '@splunk/dashboard-icons/Input';\nimport { variables } from '@splunk/themes';\nimport SVG from '@splunk/react-icons/SVG';\nimport { customThemeVariables } from '@splunk/dashboard-ui/customThemeVariables';\nimport { WAITING_FOR_INPUT_MSG } from '../utils/token';\n\nconst Container = styled.div.attrs(({ width, height }) => ({\n    'data-test': 'viz-waiting-for-input',\n    style: {\n        width,\n        height,\n    },\n}))`\n    background-color: ${(props) =>\n        props.backgroundColor || customThemeVariables.vizPanelBackgroundColor};\n`;\n\nconst Text = styled.text`\n    fill: ${variables.contentColorActive};\n    fill-opacity: 1;\n`;\n\nconst IconContainer = styled.div`\n    height: 50%;\n    fill-opacity: 0.5;\n`;\n\nconst VizWaitingForInput = ({ message, backgroundColor, width, height }) => {\n    return (\n        <Container\n            width={width}\n            height={height}\n            backgroundColor={backgroundColor}\n        >\n            <IconContainer>\n                <Input width=\"100%\" height=\"100%\" />\n            </IconContainer>\n            <IconContainer>\n                <SVG\n                    viewBox=\"0 0 100 100\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    screenReaderText={message}\n                    height=\"100%\"\n                    width=\"100%\"\n                >\n                    <Text x=\"50%\" y=\"50%\" textAnchor=\"middle\">\n                        {message}\n                    </Text>\n                </SVG>\n            </IconContainer>\n        </Container>\n    );\n};\n\nVizWaitingForInput.propTypes = {\n    message: T.string,\n    backgroundColor: T.string,\n    width: T.oneOfType([T.string, T.number]).isRequired,\n    height: T.oneOfType([T.string, T.number]),\n};\n\nVizWaitingForInput.defaultProps = {\n    message: WAITING_FOR_INPUT_MSG,\n};\n\nexport default VizWaitingForInput;\n","module.exports = require(\"@splunk/dashboard-icons/Input\");","module.exports = require(\"@splunk/react-icons/SVG\");","import React, { useEffect } from 'react';\nimport T from 'prop-types';\nimport styled from 'styled-components';\nimport get from 'lodash/get';\nimport SearchStatusIcon from '@splunk/dashboard-ui/SearchStatusIcon';\nimport { STATUSBAR_HEIGHT } from './VizStatusBar';\n\nconst StatusIconContainer = styled.div.attrs(() => ({\n    'data-test': 'status-icon-container',\n}))`\n    height: ${STATUSBAR_HEIGHT}px;\n    display: flex;\n    align-items: center;\n    position: absolute;\n    bottom: 0;\n    right: 0;\n`;\n\nexport const getIconStatus = (status, isRealTimeSearch, totalCount) => {\n    switch (status) {\n        case 'queued':\n        case 'parsing':\n            return 'info';\n        case 'running':\n            return isRealTimeSearch || totalCount === 0 ? 'ok' : null;\n        case 'paused':\n        case 'finalizing':\n        case 'cancelled':\n            return null;\n        case 'failed':\n            return 'error';\n        case 'done':\n            return totalCount === 0 ? 'info' : null;\n        default:\n            return null;\n    }\n};\n\nconst VizStatusIcon = ({ dataSource, id, hasStatusIcon }) => {\n    let status = get(dataSource, 'meta.status', 'queued');\n    let statusMessage = get(dataSource, 'meta.statusMessage');\n    const search = get(dataSource, 'meta.search');\n\n    if (dataSource?.error) {\n        status = 'failed';\n        statusMessage = get(dataSource, 'error.message');\n    }\n\n    const totalCount = get(dataSource, 'meta.totalCount', 0);\n    const isRealTimeSearch = get(dataSource, 'meta.isRealTimeSearch', false);\n    const iconStatus = status\n        ? getIconStatus(status, isRealTimeSearch, totalCount)\n        : null;\n\n    useEffect(() => {\n        if (typeof hasStatusIcon === 'function') {\n            hasStatusIcon(!!dataSource && iconStatus !== null);\n        }\n    }, [dataSource, hasStatusIcon, iconStatus]);\n\n    if (!dataSource) {\n        return null;\n    }\n\n    return (\n        <StatusIconContainer>\n            <SearchStatusIcon\n                status={iconStatus}\n                message={statusMessage}\n                height={STATUSBAR_HEIGHT}\n                search={search}\n                id={id}\n            />\n        </StatusIconContainer>\n    );\n};\n\nVizStatusIcon.propTypes = {\n    dataSource: T.object,\n    id: T.string,\n    hasStatusIcon: T.func,\n};\n\nexport default VizStatusIcon;\n","module.exports = require(\"@splunk/dashboard-ui/SearchStatusIcon\");","import type { Mode, VisualizationDefinition } from '@splunk/dashboard-types';\n\nexport const getHasDrilldown = (\n    eventHandlers?: VisualizationDefinition['eventHandlers']\n): boolean => {\n    if (!Array.isArray(eventHandlers)) {\n        return false;\n    }\n    // eventHandlers has to be an array here, we don't have to keep looping once we find something.\n    return !!eventHandlers.find((eventHandler) => {\n        return /^drilldown/.test(eventHandler.type);\n    });\n};\n\nexport type VizBorderStyle = 'selected' | 'lightBorder' | 'none';\nexport const getVizBorderStyle = (\n    isSelected: boolean,\n    mode?: Mode,\n    hasDrilldown?: boolean\n): VizBorderStyle => {\n    let outlineStyle: VizBorderStyle = 'none';\n    if (isSelected) {\n        outlineStyle = 'selected';\n    } else if (hasDrilldown || mode === 'edit') {\n        outlineStyle = 'lightBorder';\n    }\n\n    return outlineStyle;\n};\n","import React from 'react';\nimport { pickVariant, variables } from '@splunk/themes';\nimport styled from 'styled-components';\nimport type { VizBorderStyle } from '../utils/visualization';\n\ninterface SelectableContainerProps {\n    vizId: string;\n    width: string | number;\n    height?: string | number;\n    children: React.ReactNode;\n    outlineStyle: VizBorderStyle;\n}\n\nconst SelectableContainer = styled.div.attrs<SelectableContainerProps>(\n    ({ vizId, width, height, outlineStyle }) => ({\n        'data-test': 'select-outline',\n        'data-id': vizId,\n        'data-outline-style': `${outlineStyle}`,\n        style: {\n            width,\n            height,\n        },\n    })\n)<SelectableContainerProps>`\n    display: flex;\n    flex-flow: column nowrap;\n    position: relative;\n\n    // We position an outline using a psuedo element absolutly positioned\n    &::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n        cursor: default;\n        outline-style: solid;\n        outline-offset: 1px;\n        outline-width: 2px;\n        outline-color: ${pickVariant<SelectableContainerProps>('outlineStyle', {\n            selected: {\n                enterprise: variables.focusColor,\n                prisma: variables.focusColor,\n            },\n            lightBorder: 'transparent',\n            none: 'transparent',\n        })};\n    }\n\n    &:hover::after {\n        outline-color: ${pickVariant<SelectableContainerProps>('outlineStyle', {\n            selected: {\n                enterprise: variables.focusColor,\n                prisma: variables.focusColor,\n            },\n            lightBorder: {\n                enterprise: variables.borderLightColor,\n                prisma: variables.interactiveColorBorderHover,\n            },\n            none: 'transparent',\n        })};\n    }\n`;\n\nexport default SelectableContainer;\n","import { connect } from 'react-redux';\nimport { selectMode } from '../../state/redux/mode';\nimport {\n    updateVizOptions,\n    selectVisualizationDefinitionFactory,\n    selectDataSourceDefinitionForVizFactory,\n} from '../../state/redux/definition';\nimport { triggerEvent } from '../../state/sagas/sagaActions';\nimport LineContainer from '../LineContainer';\n\nconst mapStateToProps = (__, { id }) => (state) => {\n    const selectVizDef = selectVisualizationDefinitionFactory();\n    const selectDSDef = selectDataSourceDefinitionForVizFactory();\n\n    return {\n        mode: selectMode(state),\n        vizDef: selectVizDef(state, id),\n        dataSourceDefs: selectDSDef(state, id),\n    };\n};\n\nconst mapDispatchToProps = (dispatch, { id }) => ({\n    handleEvent: (eventType, payload, eventId) => {\n        dispatch(triggerEvent(id, eventType, payload, eventId));\n    },\n    onOptionsChange: (newOptions) => {\n        dispatch(updateVizOptions(id, newOptions));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LineContainer);\n","import React, { PureComponent } from 'react';\nimport T from 'prop-types';\nimport DataSourceConsumer from '../components/DataSourceConsumer';\nimport { findInitialRequestParams } from '../utils/datasource';\nimport RegistryContext from '../contexts/RegistryContext';\n\n/**\n * Connection line container\n */\nclass LineContainer extends PureComponent {\n    renderLine({ loading, dataSources, onRequestParamsChange }) {\n        const {\n            id,\n            mode,\n            from,\n            to,\n            onLineSelect,\n            vizDef: { type, options = {}, context = {} },\n            handleEvent,\n            onOptionsChange,\n        } = this.props;\n        const { preset, eventRegistry } = this.context;\n        const lineProps = {\n            id,\n            mode,\n            from,\n            to,\n            onLineSelect,\n            options,\n            dataSources,\n            loading,\n            context,\n            onEventTrigger: ({ type: eventType, originalEvent, payload }) => {\n                const eventId = eventRegistry.registerEvent(originalEvent);\n                handleEvent(eventType, payload, eventId);\n            },\n            onOptionsChange,\n            onRequestParamsChange,\n        };\n        return preset.createVisualization(type, lineProps);\n    }\n\n    render() {\n        const {\n            id,\n            vizDef: {\n                type,\n                options = {},\n                dataSources: dataSourceBindings = {},\n            },\n            dataSourceDefs,\n        } = this.props;\n        const { preset } = this.context;\n        // line only support primary DataSource\n        const primaryDataSourceId = dataSourceBindings.primary;\n        let primaryDataSource;\n        if (primaryDataSourceId) {\n            primaryDataSource = dataSourceDefs[primaryDataSourceId];\n        }\n        return primaryDataSource ? (\n            <DataSourceConsumer\n                consumerId={id}\n                initialRequestParams={findInitialRequestParams({\n                    bindingType: 'primary',\n                    consumerModule: preset.findVisualization(type),\n                    options,\n                })}\n                bindingType=\"primary\"\n                dataSource={primaryDataSource}\n                dataSourceId={primaryDataSourceId}\n            >\n                {({\n                    loading,\n                    requestParams,\n                    updateRequestParams,\n                    data,\n                    meta,\n                    error,\n                }) => {\n                    return this.renderLine({\n                        loading,\n                        dataSources: {\n                            primary: {\n                                requestParams,\n                                data,\n                                meta,\n                                error,\n                            },\n                        },\n                        onRequestParamsChange: (\n                            bindingType,\n                            newRequestParams\n                        ) => {\n                            updateRequestParams(newRequestParams);\n                        },\n                    });\n                }}\n            </DataSourceConsumer>\n        ) : (\n            this.renderLine({\n                loading: false,\n                dataSources: {},\n                onRequestParamsChange: () => {},\n            })\n        );\n    }\n}\n\nLineContainer.propTypes = {\n    mode: T.string,\n    id: T.string,\n    from: T.shape({\n        x: T.number,\n        y: T.number,\n    }),\n    to: T.shape({\n        x: T.number,\n        y: T.number,\n    }),\n    vizDef: T.object,\n    dataSourceDefs: T.object,\n    handleEvent: T.func,\n    onLineSelect: T.func,\n    onOptionsChange: T.func,\n};\n\nLineContainer.contextType = RegistryContext;\n\nexport default LineContainer;\n","import isEmpty from 'lodash/isEmpty';\nimport React, { useContext, useEffect, useMemo, useRef } from 'react';\nimport T from 'prop-types';\nimport { connect } from 'react-redux';\nimport get from 'lodash/get';\nimport InputLayout from '@splunk/dashboard-layouts/InputLayout';\nimport { selectLayout } from '../../state/redux/definition';\nimport {\n    selectStashedTokens,\n    selectSubmittedTokens,\n    submitTokens,\n} from '../../state/redux/tokens';\nimport InputContainer from '../connected/ConnectedInputContainer';\nimport { contains } from '../../utils/token';\nimport RegistryContext from '../../contexts/RegistryContext';\nimport DashboardCoreApiContext from '../../contexts/DashboardCoreApiContext';\n\nconst shouldSubmitButtonDisable = (state) => {\n    // global submit button deal with 'default' namespace\n    const stashed = selectStashedTokens(state).default || {};\n    const submitted = selectSubmittedTokens(state).default || {};\n    // disable submit button when\n    // 1. no stashed token\n    // 2. stashed tokens are the same as submitted tokens, (submit is a noop in this case)\n    return isEmpty(stashed) || contains(submitted, stashed);\n};\n\nconst mapStateToProps = (state) => ({\n    layout: selectLayout(state),\n    submitButtonDisabled: shouldSubmitButtonDisable(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    onSubmitButtonClick: () => {\n        dispatch(submitTokens('default')); // submit tokens to default namespace\n    },\n});\n\nconst renderInput = ({ inputId, index }) => (\n    <InputContainer key={inputId} id={inputId} index={index} />\n);\nrenderInput.propTypes = {\n    inputId: T.string,\n    index: T.number,\n};\n\nconst GlobalInputContainer = ({\n    layout,\n    submitButtonDisabled,\n    onSubmitButtonClick,\n}) => {\n    const { apiRegistry } = useContext(RegistryContext);\n    const dashboardCoreApi = useContext(DashboardCoreApiContext);\n\n    const inputsRef = useRef(null);\n\n    const globalInputsApi = useMemo(() => {\n        return {\n            getInputsDomElement: () => {\n                return inputsRef.current;\n            },\n        };\n    }, [inputsRef]);\n\n    useEffect(() => {\n        apiRegistry.registerGlobalInputsApi(globalInputsApi);\n        return () => {\n            apiRegistry.removeGlobalInputsApi();\n        };\n    }, [apiRegistry, globalInputsApi]);\n\n    const submitButton = useMemo(() => !!get(layout, 'options.submitButton'), [\n        layout,\n    ]);\n    const globalInputs = useMemo(() => get(layout, 'globalInputs', []), [\n        layout,\n    ]);\n\n    return (\n        <InputLayout\n            submitButtonDisabled={submitButtonDisabled}\n            onSubmitButtonClick={onSubmitButtonClick}\n            submitButton={submitButton}\n            inputStructure={globalInputs}\n            dashboardCoreApi={dashboardCoreApi}\n            renderInput={renderInput}\n            ref={inputsRef}\n        />\n    );\n};\n\nGlobalInputContainer.propTypes = {\n    layout: T.object,\n    onSubmitButtonClick: T.func,\n    submitButtonDisabled: T.bool,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GlobalInputContainer);\n","module.exports = require(\"@splunk/dashboard-layouts/InputLayout\");","import { connect } from 'react-redux';\nimport { selectMode } from '../../state/redux/mode';\nimport {\n    selectInput,\n    selectDataSourcesForInput,\n} from '../../state/redux/definition';\nimport { selectSubmittedTokens } from '../../state/redux/tokens';\nimport { selectInputValue } from '../../state/redux/input';\nimport {\n    replaceTokenForDataSources,\n    replaceTokenForInput,\n} from '../../utils/token';\nimport { inputValueChanged, removeInput } from '../../state/sagas/sagaActions';\nimport InputContainer from '../InputContainer';\nimport {\n    updateSelectedItems,\n    selectSelectedItems,\n} from '../../state/redux/editor';\n\nconst mapStateToProps = (state, { id }) => ({\n    inputDef: replaceTokenForInput(\n        selectInput(state, id),\n        selectSubmittedTokens(state)\n    ),\n    value: selectInputValue(state, id),\n    dataSourceDefs: replaceTokenForDataSources(\n        selectDataSourcesForInput(state, id),\n        selectSubmittedTokens(state)\n    ),\n    mode: selectMode(state),\n    isSelected: !!selectSelectedItems(state).find(\n        ({ type, id: selectedId }) => type === 'input' && id === selectedId\n    ),\n});\n\nconst mapDispatchToProps = (dispatch, { id }) => ({\n    onValueChange: (eventId, newValue) => {\n        dispatch(inputValueChanged(id, newValue, eventId));\n    },\n    onRemove: (inputId) => {\n        dispatch(removeInput(inputId));\n    },\n    onSelect: (inputId) => {\n        dispatch(updateSelectedItems([{ id: inputId, type: 'input' }]));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputContainer);\n","import React, { useMemo, useEffect, useCallback, useContext } from 'react';\nimport T from 'prop-types';\nimport memoize from 'lodash/memoize';\nimport DataSourceConsumer from '../components/DataSourceConsumer';\nimport { findInitialRequestParams } from '../utils/datasource';\nimport RegistryContext from '../contexts/RegistryContext';\nimport InputContent from './InputContent';\n\n/**\n * Memoize input dataSources value\n */\nconst getInputDatasources = memoize(\n    ({ requestParams, data, meta, error }) => ({\n        primary: {\n            requestParams,\n            data: data ?? {},\n            meta: meta ?? {},\n            error,\n        },\n    }),\n    (dsProps) => JSON.stringify(dsProps)\n);\n\n/**\n * Input wrapper that wires up data for input content\n * @param {Object} props\n * @param {String} props.id input id\n * @param {String} props.value input value\n * @param {Object} props.inputDef input config\n * @param {Object} props.dataSourceDefs dataSource definitions\n * @param {Function} props.onValueChange callback to update input value\n * @param {Function} props.onRemove callback to remove input from definition\n * @param {String} props.mode dashboard mode - edit/view\n * @param {Function} props.onSelect callback to update the store when input is selected\n * @param {Boolean} props.isSelected indicates if input is selected\n */\nconst InputContainer = ({\n    id,\n    index,\n    value,\n    inputDef,\n    dataSourceDefs,\n    onValueChange,\n    onRemove,\n    mode,\n    onSelect,\n    isSelected,\n}) => {\n    const { apiRegistry, eventRegistry, preset } = useContext(RegistryContext);\n    const {\n        type,\n        title,\n        options = {},\n        encoding = {},\n        context = {},\n        dataSources: dataSourceBindings = {},\n    } = inputDef;\n\n    useEffect(() => {\n        return () => {\n            apiRegistry.removeInputApi(id);\n            apiRegistry.removeInputActionsApi(id);\n        };\n    }, [apiRegistry, id]);\n\n    const registerApi = useCallback(\n        (ref) => {\n            apiRegistry.registerInputApi(id, ref);\n        },\n        [apiRegistry, id]\n    );\n\n    const registerActionsApi = useCallback(\n        (api) => {\n            apiRegistry.registerInputActionsApi(id, api);\n        },\n        [apiRegistry, id]\n    );\n\n    const handleValueChange = useCallback(\n        (e, newValue) => {\n            const eventId = eventRegistry.registerEvent(e);\n            onValueChange(eventId, newValue);\n        },\n        [eventRegistry, onValueChange]\n    );\n\n    const inputProps = useMemo(\n        () => ({\n            id,\n            key: id,\n            title,\n            value,\n            options,\n            context,\n            encoding,\n            inputApiRef: registerApi,\n            onValueChange: handleValueChange,\n            onRemove,\n            mode,\n            isSelected,\n        }),\n        [\n            id,\n            title,\n            value,\n            options,\n            context,\n            encoding,\n            registerApi,\n            handleValueChange,\n            onRemove,\n            mode,\n            isSelected,\n        ]\n    );\n\n    // input only supports primary dataSource\n    const primaryDataSourceId = dataSourceBindings.primary;\n    const primaryDataSource = primaryDataSourceId\n        ? dataSourceDefs[primaryDataSourceId]\n        : null;\n\n    const commonProps = useMemo(\n        () => ({\n            onSelect,\n            inputProps,\n            type,\n            id,\n            index,\n        }),\n        [onSelect, inputProps, type, id, index]\n    );\n\n    return primaryDataSource ? (\n        <DataSourceConsumer\n            consumerId={id}\n            initialRequestParams={findInitialRequestParams({\n                bindingType: 'primary',\n                consumerModule: preset.findInput(type),\n                options,\n            })}\n            bindingType=\"primary\"\n            dataSource={primaryDataSource}\n            dataSourceId={primaryDataSourceId}\n        >\n            {({ loading, requestParams, data, meta, error, refresh }) => {\n                registerActionsApi({ refresh });\n                const dataSources = getInputDatasources({\n                    requestParams,\n                    data,\n                    meta,\n                    error,\n                });\n                return (\n                    <InputContent\n                        {...commonProps}\n                        loading={loading}\n                        dataSources={dataSources}\n                    />\n                );\n            }}\n        </DataSourceConsumer>\n    ) : (\n        <InputContent {...commonProps} />\n    );\n};\n\nInputContainer.propTypes = {\n    id: T.string,\n    index: T.number.isRequired,\n    value: T.oneOfType([T.string, T.number]),\n    inputDef: T.object,\n    dataSourceDefs: T.object,\n    onValueChange: T.func,\n    onRemove: T.func,\n    mode: T.string,\n    onSelect: T.func,\n    isSelected: T.bool,\n};\n\nInputContainer.defaultProps = {\n    inputDef: {},\n    isSelected: false,\n};\n\nexport default InputContainer;\n","import React, { useMemo, useContext, useCallback } from 'react';\nimport T from 'prop-types';\nimport styled from 'styled-components';\nimport get from 'lodash/get';\nimport pick from 'lodash/pick';\nimport isEmpty from 'lodash/isEmpty';\nimport { SortableElement } from 'react-sortable-hoc';\nimport {\n    ERROR_LEVEL_INFO,\n    ERROR_LEVEL_ERROR,\n    WAITING_FOR_INPUT_MSG,\n} from '../utils/token';\nimport RegistryContext from '../contexts/RegistryContext';\n\nconst Wrapper = styled.div.attrs(() => ({\n    'data-test': 'input-item',\n}))`\n    display: inline-block;\n    // need to set z-index in order to make the react-sortable-hoc work https://github.com/clauderic/react-sortable-hoc/issues/87\n    // not sure what exactly caused the issue, but seems 100 is the minimum number to make it work\n    z-index: 100;\n`;\n\n/**\n * compute isError, errorMessage, isDisabled, disabledMessage based on whether\n * primary dataSource contains error (level: info/error)\n * @method getErrorDisabledStates\n * @param {Object} inputData\n * @param {Object} inputData.dataSources dataSources containing primary dataSource\n * @returns {Object}\n */\nexport const getErrorDisabledStates = ({ dataSources }) => {\n    const errorLevel = get(dataSources, 'primary.error.level');\n    const message = get(dataSources, 'primary.error.message', '');\n    // Search is waiting for unresolved tokens\n    if (errorLevel === ERROR_LEVEL_INFO) {\n        return {\n            isDisabled: true,\n            disabledMessage: message || WAITING_FOR_INPUT_MSG,\n        };\n    }\n    if (errorLevel === ERROR_LEVEL_ERROR) {\n        return { isError: true, errorMessage: message };\n    }\n    return {};\n};\n\n/**\n * Display input content\n * @param {Object} props\n * @param {Object} props.inputProps props required by the input to render\n * @param {Boolean} props.loading indicates whether datasource is still fetching data and hasn't had an error\n * @param {Object} props.dataSources primary dataSource (if any) used by the input\n * @param {String} props.id input id\n * @param {String} props.type input type\n * @param {Function} props.onSelect callback to update the store when input is selected\n */\nconst InputContent = ({\n    inputProps,\n    loading,\n    dataSources,\n    type,\n    id,\n    onSelect,\n}) => {\n    const { preset } = useContext(RegistryContext);\n    const input = preset.findInput(type);\n    const inputStaticDef = pick(inputProps, ['options', 'context']);\n\n    // check whether the input dataSource contains search errors\n    const {\n        isError: dsError = false,\n        errorMessage: dsErrorMessage = '',\n        isDisabled = false,\n        disabledMessage = '',\n    } = useMemo(\n        () =>\n            getErrorDisabledStates({\n                dataSources,\n            }),\n        [dataSources]\n    );\n\n    // check whether the static input config (options/context) contain validation errors\n    const { errorMessages: inputErrorMessages } = useMemo(() => {\n        const validate = get(input, 'validate');\n        return typeof validate === 'function'\n            ? validate(inputStaticDef)\n            : { errorMessages: [] };\n    }, [inputStaticDef, input]);\n\n    // Generate final props passed to input\n    const props = useMemo(() => {\n        return {\n            ...inputProps,\n            loading,\n            dataSources,\n            isError: dsError || !isEmpty(inputErrorMessages), // dataSource error take precedence over input options error\n            errorMessage: dsErrorMessage || inputErrorMessages.join(' '), // TODO: refactor tooltip to display multiline errors\n            isDisabled,\n            disabledMessage,\n        };\n    }, [\n        inputProps,\n        loading,\n        dsError,\n        dsErrorMessage,\n        inputErrorMessages,\n        isDisabled,\n        disabledMessage,\n        dataSources,\n    ]);\n\n    const handleClick = useCallback(() => {\n        onSelect(id);\n    }, [id, onSelect]);\n\n    return (\n        <Wrapper\n            data-input-id={id}\n            data-input-type={type}\n            data-test-selected={inputProps.isSelected}\n            onClick={handleClick}\n        >\n            {preset.createInput(type, props)}\n        </Wrapper>\n    );\n};\n\nInputContent.propTypes = {\n    inputProps: T.object.isRequired,\n    loading: T.bool,\n    dataSources: T.object,\n    type: T.string.isRequired,\n    id: T.string.isRequired,\n    onSelect: T.func,\n};\n\nInputContent.defaultProps = {\n    loading: false,\n    dataSources: {},\n};\n\nconst SortableInputContent = SortableElement(InputContent);\nSortableInputContent.displayName = 'SortableInputContent';\n\nexport default SortableInputContent;\n","module.exports = require(\"react-sortable-hoc\");","import console from '@splunk/dashboard-utils/console';\nimport LifecycleEvent from './DashboardLifecycleEvent';\nimport CancellableLifecycleEvent from './CancellableDashboardLifecycleEvent';\n\n// Reexport these\nexport const DashboardLifecycleEvent = LifecycleEvent;\nexport const CancellableDashboardLifecycleEvent = CancellableLifecycleEvent;\n\nconst lifecycleCallbacks = {\n    onInitialize: {},\n    onEventTrigger: {},\n    onLinkToUrl: {},\n};\n\nfunction invokePluginCallbackWithEvent(plugin, name, eventGen) {\n    if (plugin && name in plugin) {\n        const event = eventGen();\n        try {\n            plugin[name](event);\n        } catch (e) {\n            console.error(\n                `Caught error while invoking lifecycle plugin callback ${name}`,\n                e\n            );\n            event.error = e;\n        }\n        return event;\n    }\n    return null;\n}\n\nexport function validateDashboardPlugin(plugin) {\n    if (!plugin || typeof plugin !== 'object') {\n        throw new Error(\n            'Invalid lifecycle plugin provided - should be an object'\n        );\n    }\n\n    Object.keys(plugin).forEach((key) => {\n        if (!(key in lifecycleCallbacks)) {\n            if (typeof plugin[key] === 'function') {\n                console.warn(\n                    `Unknown callback function \"${key}\" in lifecycle plugin`\n                );\n            }\n        } else if (lifecycleCallbacks[key].deprecated) {\n            console.warn(\n                `Lifecycle plugin callback function \"${key}\" is DEPRECATED.`\n            );\n        }\n    });\n\n    return plugin;\n}\n\n/**\n * A module wrap user provided plugin object\n */\nexport class DashboardPluginWrapper {\n    constructor(plugin) {\n        this.plugin = plugin;\n    }\n\n    invokePluginCallback = (name, payload) => {\n        invokePluginCallbackWithEvent(\n            this.plugin,\n            name,\n            () => new DashboardLifecycleEvent(payload)\n        );\n    };\n\n    invokeCancellablePluginCallback = (name, payload) => {\n        const event = invokePluginCallbackWithEvent(\n            this.plugin,\n            name,\n            () => new CancellableDashboardLifecycleEvent(payload)\n        );\n\n        return event != null ? event._cancelled : false; // eslint-disable-line\n    };\n}\n\n/**\n * DashboardPlugin Factory function, create a wrapped dashboard plugin\n * @param {*} plugin\n */\nexport const createDashboardPlugin = (plugin = {}) =>\n    new DashboardPluginWrapper(plugin);\n","import DashboardLifecycleEvent from './DashboardLifecycleEvent';\n\n/**\n * Cancellable event\n */\nexport default class CancellableDashboardLifecycleEvent extends DashboardLifecycleEvent {\n    constructor(...args) {\n        super(...args);\n        this._cancelled = false; // eslint-disable-line\n    }\n\n    preventDefault() {\n        this._cancelled = true; // eslint-disable-line\n    }\n}\n","import get from 'lodash/get';\nimport some from 'lodash/some';\nimport type { Store } from 'redux';\nimport type { BehaviorSubject } from 'rxjs';\n\nimport type {\n    DashboardJSON,\n    DashboardCoreApi as IDashboardCoreApi,\n    DataSourceDefinition,\n    VisualizationDefinition,\n    InputDefinition,\n    Snapshot,\n    DataSourceExtendOptions,\n} from '@splunk/dashboard-types';\nimport { runningSearchStatuses } from '@splunk/dashboard-utils/search';\nimport { getCompleteSearchQueryAndParameters as getCompleteSearchQueryAndParams } from '@splunk/datasource-utils';\nimport DashboardDefinition from '@splunk/dashboard-definition/DashboardDefinition';\n\nimport {\n    selectDataSources,\n    selectDefinition,\n    updateVisualization,\n    updateDefinition,\n    removeDataSourceFromVisualization,\n    updateLayoutStructure,\n    updateInput,\n    updateLayoutOptions,\n    updateInputStructure as updateInputStructureAction,\n} from '../state/redux/definition';\nimport {\n    createVisualization as createVisualizationAction,\n    cloneVisualizations as cloneVisualizationsAction,\n    removeVisualizations as removeVisualizationsAction,\n    adjustVisualizationOrder as adjustVisualizationOrderAction,\n    createInput as createInputAction,\n    adjustInputOrder as moveInputAction,\n    removeInput as removeInputAction,\n    migrateDashboard as migrateDashboardAction,\n} from '../state/sagas/sagaActions';\nimport {\n    selectSubmittedTokens,\n    setToken,\n    unsetToken,\n} from '../state/redux/tokens';\nimport { assembleSnapshot } from '../utils/snapshot';\nimport { replaceTokenForDataSources } from '../utils/token';\nimport { toggleFullscreen } from '../state/redux/fullscreen';\nimport ApiRegistry from './ApiRegistry';\nimport DataSourceRegistry from '../datasources/DataSourceRegistry';\n\n// TEMP until layout is typed\ninterface LayoutApi {\n    getZoomLevel: () => Promise<BehaviorSubject<number> | null>;\n}\n\nexport default class DashboardCoreApi implements IDashboardCoreApi {\n    store: Store;\n\n    apiRegistry: ApiRegistry;\n\n    dataSourceRegistry: DataSourceRegistry;\n\n    constructor({\n        store,\n        apiRegistry,\n        dataSourceRegistry,\n    }: {\n        store: Store;\n        apiRegistry: ApiRegistry;\n        dataSourceRegistry: DataSourceRegistry;\n    }) {\n        this.store = store;\n        this.apiRegistry = apiRegistry;\n        this.dataSourceRegistry = dataSourceRegistry;\n    }\n\n    /**\n     * Update dashboard definition\n     * @param {Object} definition dashboard definition\n     */\n    updateDefinition(definition: DashboardJSON): void {\n        this.store.dispatch(updateDefinition(definition));\n    }\n\n    /**\n     * Set token bindings\n     * @param {Object} tokenBindingsConfig\n     * @param {Object} tokenBindingsConfig.tokenBindings token bindings\n     * @param {String} [tokenBindingsConfig.namespace = 'default'] - namespace for token bindings\n     * @public\n     */\n    setTokenBindings({\n        tokenBindings,\n        namespace = 'default',\n    }: {\n        tokenBindings: Record<string, unknown>;\n        namespace: string;\n    }): void {\n        this.store.dispatch(setToken(tokenBindings, namespace));\n    }\n\n    /**\n     * Unset token binding\n     * @param {Object} tokenBindingConfig\n     * @param {String} tokenBindingConfig.tokenName token name\n     * @param {String} [tokenBindingConfig.namespace = 'default'] - namespace for token bindings\n     * @public\n     */\n    unsetTokenBinding({\n        tokenName,\n        namespace = 'default',\n    }: {\n        tokenName: string;\n        namespace: string;\n    }): void {\n        this.store.dispatch(unsetToken(tokenName, namespace));\n    }\n\n    /**\n     * @returns {Promise} A Promise that resolves to layoutApi object\n     */\n    isLayoutApiReady(): Promise<LayoutApi> {\n        return new Promise((resolve) => {\n            // If the LayoutApi is ready just instantly resolve the promise\n            if (this.apiRegistry.getLayoutApi()) {\n                resolve(this.apiRegistry.getLayoutApi());\n            }\n\n            this.apiRegistry.onLayoutApiReady = () =>\n                resolve(this.apiRegistry.getLayoutApi());\n        });\n    }\n\n    /**\n     * createVisualization\n     * @param {*} param0\n     */\n    createVisualization({\n        visualizationId,\n        visualizationDefinition,\n        layoutItemType = 'block',\n        dataSourceType,\n        dataSourceDefinition,\n    }: {\n        visualizationId: string;\n        visualizationDefinition: VisualizationDefinition;\n        layoutItemType: string;\n        dataSourceType: string | null;\n        dataSourceDefinition: DataSourceDefinition | null;\n    }): void {\n        this.store.dispatch(\n            createVisualizationAction({\n                visualizationId,\n                visualizationDefinition,\n                layoutItemType,\n                dataSourceType,\n                dataSourceDefinition,\n            })\n        );\n    }\n\n    /**\n     * clone one or more existing visualizations\n     * @method cloneVisualization\n     * @param {Object} config\n     * @param {Array} config.from Original VizIds\n     * @param {Array} config.to Ids for cloned viz\n     * @param {Number} [config.offsetMultiplier=1] Multiplier to offset cloned vis\n     */\n    cloneVisualizations({\n        from,\n        to,\n        offsetMultiplier = 1,\n    }: {\n        from: string[];\n        to: string[];\n        offsetMultiplier: number;\n    }): void {\n        this.store.dispatch(\n            cloneVisualizationsAction({ from, to, offsetMultiplier })\n        );\n    }\n\n    /**\n     * remove visualizations\n     * @param {*} vizIds\n     */\n    removeVisualizations(vizIds: string[]): void {\n        this.store.dispatch(removeVisualizationsAction(vizIds));\n    }\n\n    /**\n     * Update a visualization definition\n     * @param {Object} options\n     * @param {String} options.id   visualization id\n     * @param {Object} options.vizDefinition    visualization definition\n     */\n    updateVisualization({\n        id,\n        vizDefinition,\n    }: {\n        id: string;\n        vizDefinition: VisualizationDefinition;\n    }): void {\n        this.store.dispatch(\n            updateVisualization({\n                id,\n                vizDefinition,\n            })\n        );\n    }\n\n    /**\n     * Remove a dataSource from a visualization definition\n     * @param {Object} options\n     * @param {String} options.vizId    visualization id\n     * @param {String} options.dsBindingType    dataSource binding type, such as 'primary' or 'annotation'\n     */\n    removeDataSourceFromVisualization({\n        vizId,\n        dsBindingType,\n    }: {\n        vizId: string;\n        dsBindingType: string;\n    }): void {\n        this.store.dispatch(\n            removeDataSourceFromVisualization({\n                vizId,\n                dsBindingType,\n            })\n        );\n    }\n\n    /**\n     * get dashboard global inputs dom element\n     */\n    getInputsDomElement(): unknown | null {\n        const globalInputsApi = this.apiRegistry.getGlobalInputsApi();\n        return globalInputsApi ? globalInputsApi.getInputsDomElement() : null;\n    }\n\n    /**\n     * get dashboard canvas dom element\n     */\n    getCanvasDomElement(): unknown | null {\n        const layoutApi = this.apiRegistry.getLayoutApi();\n        return layoutApi ? layoutApi.getCanvasDomElement() : null;\n    }\n\n    /**\n     * get visualization dom element\n     * @param {*} vizId\n     */\n    getVisualizationDomElement(vizId: string): unknown | null {\n        const vizActionsApi = this.apiRegistry.getVisualizationApi(vizId);\n        if (vizActionsApi && vizActionsApi.getDomElement) {\n            return vizActionsApi.getDomElement();\n        }\n        return null;\n    }\n\n    /**\n     * pause all data sources\n     */\n\n    pauseAllDataSources(): void {\n        this.dataSourceRegistry.pauseDataSources();\n    }\n\n    /**\n     * get data source metadata\n     * @param {*} dataSourceId data source id\n     */\n    getDataSourceMetaData(dataSourceId: string): Record<string, unknown> {\n        const state = this.store.getState();\n        const dataSources = replaceTokenForDataSources(\n            selectDataSources(state),\n            selectSubmittedTokens(state)\n        );\n        const dataSourceDef = dataSources[dataSourceId] as DataSourceDefinition;\n        const dataSourceController = dataSourceDef\n            ? this.dataSourceRegistry.getDataSourceController(dataSourceDef)\n            : null;\n        return dataSourceController\n            ? (dataSourceController.getDataSourceMetaData() as Record<\n                  string,\n                  unknown\n              >)\n            : {};\n    }\n\n    /**\n     * return visualization ids in order\n     */\n    getVisualizationOrder(): string[] | null {\n        const layoutApi = this.apiRegistry.getLayoutApi();\n        if (layoutApi) {\n            return layoutApi.getLayoutItemOrder();\n        }\n        return null;\n    }\n\n    /**\n     * adjust visualization order, this will produce a new definition\n     */\n    adjustVisualizationOrder(fromIdx: number, toIdx: number): void {\n        this.store.dispatch(adjustVisualizationOrderAction(fromIdx, toIdx));\n    }\n\n    /**\n     * take snapshot of current dashboard.\n     * @returns {Object} The dashboard snapshot object.\n     */\n    takeSnapshotSync(): Snapshot {\n        const state = this.store.getState();\n        const definition = selectDefinition(state);\n        const tokens = selectSubmittedTokens(state);\n\n        return assembleSnapshot({\n            definition,\n            tokens,\n            apiRegistry: this.apiRegistry,\n            dataSourceRegistry: this.dataSourceRegistry,\n        });\n    }\n\n    /**\n     * take snapshot of current dashboard.\n     * Note: This is left in to be backwards compatible with the legacy async API.\n     * @returns {Promise} A promise that resolves to a dashboard snapshot object.\n     */\n    async takeSnapshot(): Promise<Snapshot> {\n        return this.takeSnapshotSync();\n    }\n\n    /**\n     * focus on a visualization\n     * @param {String} vizId visualization id\n     */\n    focusOnVisualization(vizId: string): void {\n        const vizApi = this.apiRegistry.getVisualizationApi(vizId);\n        if (vizApi && vizApi.focus) {\n            vizApi.focus();\n        }\n    }\n\n    /**\n     * refresh all searches associated with the given visualization\n     * @param {String} vizId visualization id\n     * @param {Boolean} checkRiskyCommand check_risky_command can be `false` to continue searches with risky commands\n     */\n    refreshVisualization(\n        vizId: string,\n        { checkRiskyCommand }: { checkRiskyCommand?: boolean } = {}\n    ): void {\n        const vizActionsApi = this.apiRegistry.getVisualizationActionsApi(\n            vizId\n        );\n        if (vizActionsApi && vizActionsApi.refresh) {\n            vizActionsApi.refresh({ checkRiskyCommand });\n        }\n    }\n\n    /**\n     * refresh all searches associated with the given input\n     * @param {String} inputId input id\n     * @param {Boolean} checkRiskyCommand check_risky_command can be `false` to continue searches with risky commands\n     */\n    refreshInput(\n        inputId: string,\n        { checkRiskyCommand }: { checkRiskyCommand?: boolean } = {}\n    ): void {\n        const inputActionsApi = this.apiRegistry.getInputActionsApi(inputId);\n        if (inputActionsApi && inputActionsApi.refresh) {\n            inputActionsApi.refresh({ checkRiskyCommand });\n        }\n    }\n\n    toggleVisualizationFullscreen(vizId: string): void {\n        this.store.dispatch(toggleFullscreen(vizId));\n    }\n\n    /**\n     * @returns {boolean} Boolean indicating if at least one search is running\n     * i.e. status is one of 'queued', 'parsing', 'running', 'paused' or 'finalizing'.\n     * @public\n     */\n    hasRunningSearches(): boolean {\n        const snapshotSync = this.takeSnapshotSync();\n        const { dataSources = {} } = snapshotSync?.snapshotDefinition;\n        return some(dataSources, (datasource) => {\n            const status = get(datasource, 'state.meta.status');\n            return runningSearchStatuses.includes(status);\n        });\n    }\n\n    /**\n     * Applies new scale to the dashboard\n     * @param {Number} scale scale factor as floating point number\n     * @returns {Boolean} Boolean indicating if completed successfully.\n     */\n    setScale(scale: number): boolean | null {\n        const layoutApi = this.apiRegistry.getLayoutApi();\n        return layoutApi ? layoutApi.setScale(scale) : null;\n    }\n\n    /**\n     * Increases dashboard zoom level for one step\n     * @public\n     */\n    zoomIn(): unknown | null {\n        const layoutApi = this.apiRegistry.getLayoutApi();\n        return layoutApi ? layoutApi.zoomIn() : null;\n    }\n\n    /**\n     * Decreases dashboard zoom level for one step\n     * @public\n     */\n    zoomOut(): unknown | null {\n        const layoutApi = this.apiRegistry.getLayoutApi();\n        return layoutApi ? layoutApi.zoomOut() : null;\n    }\n\n    /**\n     * Adjusts dashboard's width to fit its parent element.\n     * @public\n     */\n    fitToWidth(): unknown | null {\n        const layoutApi = this.apiRegistry.getLayoutApi();\n        return layoutApi ? layoutApi.fitToWidth() : null;\n    }\n\n    /**\n     * @public\n     * @returns {Promise} Promise that resolves to an observable that yields zoom level\n     */\n    async getZoomLevel(): Promise<BehaviorSubject<number> | null> {\n        const layoutApi = await this.isLayoutApiReady();\n        return layoutApi ? layoutApi.getZoomLevel() : null;\n    }\n\n    /**\n     * Get input definition given a token id\n     * @param {String} tokenId\n     * @returns {Object}\n     * @public\n     */\n    getInputByToken(tokenId: string): InputDefinition | null {\n        const state = this.store.getState();\n        const definition = new DashboardDefinition(selectDefinition(state));\n        return definition.getInputByToken(tokenId);\n    }\n\n    /**\n     * Add an input to the definition\n     * @param {String} inputId The input id\n     * @param {Object} inputDefinition The input configuration\n     */\n    addInput(inputId: string, inputDefinition: InputDefinition): void {\n        this.store.dispatch(\n            createInputAction({\n                inputId,\n                inputDefinition,\n            })\n        );\n    }\n\n    /**\n     * Moves input ids in the globalInputs array\n     * @param {Number} from array index of the input to move\n     * @param {Number} to array index of where the input should move to\n     */\n    moveInput(from: number, to: number): void {\n        this.store.dispatch(\n            moveInputAction({\n                from,\n                to,\n            })\n        );\n    }\n\n    /**\n     * remove input from definition\n     * @param {String} inputId The input id to remove\n     */\n    removeInput(inputId: string): void {\n        this.store.dispatch(removeInputAction(inputId));\n    }\n\n    /**\n     * Update an input definition\n     * @param {Object} options\n     * @param {String} options.id   input id\n     * @param {Object} options.inputDefinition    input definition\n     */\n    updateInput({\n        id,\n        inputDefinition,\n    }: {\n        id: string;\n        inputDefinition: InputDefinition;\n    }): void {\n        this.store.dispatch(\n            updateInput({\n                id,\n                inputDefinition,\n            })\n        );\n    }\n\n    /**\n     * Update the layout.globalInputs section in the definition\n     * @param {String[]} inputStructure input ids\n     */\n    updateInputStructure(inputStructure: string[]): void {\n        this.store.dispatch(updateInputStructureAction(inputStructure));\n    }\n\n    /**\n     * Fetch the complete SPL search query and query parameters of a datasource including its ancestors\n     * @param {String} dataSourceId dataSource ID\n     * @returns {Object} Search options including the query and query parameters\n     */\n    getCompleteSearchQueryAndParameters(\n        dataSourceId: string\n    ): DataSourceExtendOptions {\n        const state = this.store.getState();\n        const definition = DashboardDefinition.fromJSON(\n            selectDefinition(state)\n        );\n        return getCompleteSearchQueryAndParams({\n            definition,\n            dataSourceId,\n            getMetaData: this.getDataSourceMetaData.bind(this),\n        });\n    }\n\n    /**\n     * Update dashboard layout structure\n     * @param {Object} layoutStructure dashboard layout structure\n     */\n    updateLayoutStructure(layoutStructure: unknown): void {\n        this.store.dispatch(updateLayoutStructure(layoutStructure));\n    }\n\n    /**\n     * Update layout options\n     * @param {Object} options layout options\n     */\n    updateLayoutOptions(options: Record<string, unknown>): void {\n        this.store.dispatch(updateLayoutOptions(options));\n    }\n\n    /**\n     * Migrate deprecated  dashboard configuration\n     */\n    startDashboardMigration(): void {\n        this.store.dispatch(migrateDashboardAction());\n    }\n}\n\nexport const createDashboardApi = (options: {\n    store: Store;\n    apiRegistry: ApiRegistry;\n    dataSourceRegistry: DataSourceRegistry;\n}): DashboardCoreApi => new DashboardCoreApi(options);\n","module.exports = require(\"lodash/some\");","module.exports = require(\"@splunk/datasource-utils\");","import pick from 'lodash/pick';\nimport each from 'lodash/each';\nimport cloneDeep from 'lodash/cloneDeep';\nimport uniqueId from 'lodash/uniqueId';\nimport get from 'lodash/get';\nimport isFunction from 'lodash/isFunction';\n\nexport const assembleSnapshot = ({\n    definition,\n    tokens = {},\n    dataSourceRegistry,\n    apiRegistry,\n}) => {\n    const snapshotDefinition = cloneDeep(definition);\n    const dataSourceSnapshot = dataSourceRegistry.snapshot();\n    // replace data source by a special type of data source which holds the search result. By doing this the definition becomes self-contained.\n    const dsDefs = {};\n    each(snapshotDefinition.visualizations, (vizDef, vizId) => {\n        const dataSources = get(vizDef, 'dataSources', {});\n        const newBindings = {};\n        each(dataSources, (dsId, dsType) => {\n            const dsDef = get(snapshotDefinition, ['dataSources', dsId], {});\n            const dsState = get(dataSourceSnapshot, [dsId, vizId], {});\n            const newDsId = uniqueId('ds_');\n            dsDefs[newDsId] = {\n                ...dsDef,\n                state: {\n                    ...pick(dsState, ['requestParams', 'meta', 'error']),\n                },\n            };\n            newBindings[dsType] = newDsId;\n        });\n        snapshotDefinition.visualizations[vizId].dataSources = newBindings;\n        // get snapshot of each visualization if applicable\n        const vizApi = apiRegistry.getVisualizationApi(vizId);\n        if (vizApi && isFunction(vizApi.snapshot)) {\n            snapshotDefinition.visualizations[vizId] = {\n                ...snapshotDefinition.visualizations[vizId],\n                ...vizApi.snapshot(),\n            };\n        }\n    });\n    snapshotDefinition.dataSources = dsDefs;\n\n    // replace background image with encoding\n    const layoutApi = apiRegistry.getLayoutApi();\n    if (layoutApi && isFunction(layoutApi.snapshot)) {\n        snapshotDefinition.layout = {\n            ...snapshotDefinition.layout,\n            ...layoutApi.snapshot(),\n        };\n    }\n\n    // remove inputs\n    delete snapshotDefinition.inputs;\n    delete snapshotDefinition.layout.globalInputs;\n\n    // remove submit button\n    if (snapshotDefinition.layout.options) {\n        delete snapshotDefinition.layout.options.submitButton;\n    }\n\n    const snapshot = {\n        snapshotDefinition,\n        tokens,\n    };\n    return snapshot;\n};\n","module.exports = require(\"lodash/uniqueId\");","import { useEffect } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport isEmpty from 'lodash/isEmpty';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport type { Preset } from '@splunk/dashboard-types';\nimport useEventCallback from '@splunk/dashboard-ui/hooks/useEventCallback';\nimport {\n    getWindowLocationSearch,\n    mapURLToTokens,\n    mapTokensToURL,\n} from '@splunk/dashboard-utils';\n\nimport { selectInputs } from '../state/redux/definition';\nimport { setInputState } from '../state/redux/input';\nimport { selectSubmittedTokens, setToken } from '../state/redux/tokens';\nimport { createInputState } from '../utils/input';\n\nexport const useTokensWithUrl = ({ preset }: { preset: Preset }): void => {\n    const dispatch = useDispatch();\n    const inputDefs = useSelector(selectInputs);\n    const tokens = useSelector(selectSubmittedTokens);\n\n    // On popstate we get the new tokens from the url\n    // and dispatch setInputState and setToken\n    const handlePopState = useEventCallback(() => {\n        const newTokens = mapURLToTokens({\n            search: getWindowLocationSearch(),\n        });\n\n        if (!isEqual(tokens.default, newTokens.default)) {\n            dispatch(\n                setInputState(\n                    createInputState({\n                        currentInputState: {},\n                        inputDefs,\n                        submittedTokens: newTokens,\n                        preset,\n                    })\n                )\n            );\n            dispatch(setToken(newTokens.default));\n        }\n    });\n\n    // Listen for the popstate event\n    useEffect(() => {\n        window.addEventListener('popstate', handlePopState);\n        return () => {\n            window.removeEventListener('popstate', handlePopState);\n        };\n    }, [handlePopState]);\n\n    // When tokens change push a new history item\n    useEffect(() => {\n        if (isEmpty(tokens?.default)) {\n            return undefined;\n        }\n\n        const search = getWindowLocationSearch();\n\n        const searchWithTokens = mapTokensToURL({\n            search,\n            tokens,\n        });\n\n        if (search !== `?${searchWithTokens}`) {\n            const url: URL = new URL(window.location.href);\n            url.search = searchWithTokens;\n            window.history.pushState({}, '', url.toString());\n        }\n        return undefined;\n    }, [tokens]);\n};\n\nexport default useTokensWithUrl;\n","module.exports = require(\"@splunk/dashboard-ui/hooks/useEventCallback\");"],"sourceRoot":""}