import React from 'react';
import type { Mode, DataSourceDefinition, VisualizationDefinition } from '@splunk/dashboard-types';
export interface VisualizationContainerProps {
    id: string;
    width: string | number;
    height?: string | number;
    y: number;
    canvasHeight: number;
    mode?: Mode;
    isFullscreen?: boolean;
    onExitFullscreen: () => void;
    onSelected: (e: React.MouseEvent, visualizationIds: {
        id: string;
        type: string;
    }[]) => void;
    onDescriptionChange?: (newDescription: string) => void;
    onTitleChange?: (newTitle: string) => void;
    onOptionsChange?: (newOptions: Record<string, unknown>) => void;
    handleEvent: (eventType: string, payload: Record<string, unknown>, eventId: string) => void;
    dataSourceDefs: Record<string, DataSourceDefinition>;
    vizDef: VisualizationDefinition;
}
/**
 * Visualization wrapper that wires up events and data for viz content.
 */
declare const VisualizationContainer: ({ dataSourceDefs, handleEvent, id, isFullscreen, mode, onDescriptionChange, onExitFullscreen, onOptionsChange, onSelected, onTitleChange, vizDef, height, width, y, canvasHeight, }: VisualizationContainerProps) => JSX.Element;
export default VisualizationContainer;
//# sourceMappingURL=VisualizationContainer.d.ts.map