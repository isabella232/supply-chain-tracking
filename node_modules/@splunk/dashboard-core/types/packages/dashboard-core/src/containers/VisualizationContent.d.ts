import type { Mode, RootDataSourcesDefinition, VisualizationDefinition } from '@splunk/dashboard-types';
/**
 * Display Visualization and its sibling components (Progress, Title, Status)
 * @param {Object} props
 * @param {String} props.type The viz type
 * @param {Number} props.height The container height
 * @param {Number} props.width The container width
 * @param {Object} props.dataSources Data
 * @param {Boolean} props.loading DataSources state
 * @param {Function} props.refresh Callback to refresh dataSources
 * @param {Function} props.updateRequestParams Callback to update request params for DS
 * @param {Object} props.vizProps Static viz configuration
 * @param {Boolean} props.showProgressBar Flag for user's desire to show progress and status bars
 * @param {Boolean} props.showLastUpdated Flag for user's desire to show progress and status bars
 */
export interface VisualizationContentProps {
    type: string;
    width: number | string;
    height?: number | string;
    y: number;
    canvasHeight: number;
    dataSources: {
        primary?: {
            meta?: {
                percentComplete: number;
                lastUpdated: string;
                status: string;
                isRealTimeSearch: boolean;
                search?: string;
            };
            error?: {
                level: string;
                message: string;
            };
            data?: unknown;
        };
        [key: string]: unknown;
    };
    loading: boolean;
    refresh: unknown;
    updateRequestParams: unknown;
    vizProps: {
        id: string;
        mode?: Mode;
        isFullscreen: boolean;
    };
    visualizationDefinition: VisualizationDefinition;
    dataSourceDefinitions: RootDataSourcesDefinition;
    showProgressBar?: boolean;
    showLastUpdated?: boolean;
}
declare const VisualizationContent: ({ type, height, width, y, canvasHeight, dataSources, loading, refresh, updateRequestParams, vizProps, showProgressBar, showLastUpdated, visualizationDefinition: vizDef, dataSourceDefinitions, }: VisualizationContentProps) => JSX.Element;
export default VisualizationContent;
//# sourceMappingURL=VisualizationContent.d.ts.map