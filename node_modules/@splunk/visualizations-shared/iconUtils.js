/*!
 * Copyright © 2018 Splunk Inc.
 * SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or
 * in part without a valid written license from Splunk Inc. is PROHIBITED.
 */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 21);
/******/ })
/************************************************************************/
/******/ ({

/***/ 21:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRemoteIcon", function() { return isRemoteIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDataURI", function() { return isDataURI; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shouldChangeFill", function() { return shouldChangeFill; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shouldChangeStroke", function() { return shouldChangeStroke; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b64EncodeUnicode", function() { return b64EncodeUnicode; });
/**
 * check if an icon is considered as remote icon
 * @param {*} icon
 */
var isRemoteIcon = function isRemoteIcon() {
  var icon = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return icon.indexOf('://') > -1;
};
/**
 * check if an icon is a dataURI
 * @param {*} icon
 */

var isDataURI = function isDataURI() {
  var icon = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return icon.startsWith('data:image/svg+xml;base64');
};
/*
 * check whether need update fill for svg children elements
 * @params {Object} style
 * @params {String} style.fillAttr                     <path fill="red" .../>
 * @params {String} style.fillStyle.                   <path style="fill: red;" />
 * @params {String} style.strokeAttr.                  <path stroke="red" .../>
 * @params {String} style.strokeStyle                  <path style="stroke: red;" .../>
 * @returns {Boolean} true means need
 * remove fill style and change the fill attribute     <path fill="currentColor" />
 */

var shouldChangeFill = function shouldChangeFill(_ref) {
  var fillAttr = _ref.fillAttr,
      fillStyle = _ref.fillStyle,
      strokeAttr = _ref.strokeAttr,
      strokeStyle = _ref.strokeStyle;
  var noneFillAttr = !!fillAttr && (fillAttr === 'none' || fillAttr === 'transparent');
  var noneFillStyle = !!fillStyle && (fillStyle === 'none' || fillStyle === 'transparent');
  var noFillHasStroke = !fillAttr && !fillStyle && (!!strokeAttr || !!strokeStyle);
  return !(noneFillAttr || noneFillStyle || noFillHasStroke);
};
/*
 * check whether need update stroke for svg children elements
 * @params {Object} style
 * @params {String} style.fillAttr                     <path fill="red" .../>
 * @params {String} style.fillStyle.                   <path style="fill: red;" />
 * @params {String} style.strokeAttr.                  <path stroke="red" .../>
 * @params {String} style.strokeStyle                  <path style="stroke: red;" .../>
 * @returns {Boolean} true means need
 * remove stroke style and change the stroke attribute     <path stroke="currentColor" />
 */

var shouldChangeStroke = function shouldChangeStroke(_ref2) {
  var fillAttr = _ref2.fillAttr,
      fillStyle = _ref2.fillStyle,
      strokeAttr = _ref2.strokeAttr,
      strokeStyle = _ref2.strokeStyle;
  var noneStrokeAttr = !!strokeAttr && (strokeAttr === 'none' || strokeAttr === 'transparent');
  var noneStrokeStyle = !!strokeStyle && (strokeStyle === 'none' || strokeStyle === 'transparent');
  var hasFill = !!fillAttr || !!fillStyle;
  var noStroke = !strokeAttr && !strokeStyle;
  return !(noneStrokeAttr || noneStrokeStyle || hasFill || noStroke);
};
/*
 * base64 encoding
 * @param {String} str
 * @return {Base64} string using based-64 encoding
 */

var b64EncodeUnicode = function b64EncodeUnicode(str) {
  return (// first we use encodeURIComponent to get percent-encoded UTF-8,
    // then we convert the percent encodings into raw bytes which
    // can be fed into btoa.
    btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function (match, p1) {
      return String.fromCharCode("0x".concat(p1));
    }))
  );
};

/***/ })

/******/ });
//# sourceMappingURL=iconUtils.js.map