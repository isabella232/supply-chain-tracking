/*!
 * Copyright © 2018 Splunk Inc.
 * SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or
 * in part without a valid written license from Splunk Inc. is PROHIBITED.
 */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 60);
/******/ })
/************************************************************************/
/******/ ({

/***/ 43:
/***/ (function(module, exports) {

module.exports = require("lodash/invert");

/***/ }),

/***/ 60:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "replaceObjectKeysFromMap", function() { return replaceObjectKeysFromMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPropsForSimpleXMLOptions", function() { return getPropsForSimpleXMLOptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSimpleXMLOptionsForProps", function() { return getSimpleXMLOptionsForProps; });
/* harmony import */ var lodash_invert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(43);
/* harmony import */ var lodash_invert__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_invert__WEBPACK_IMPORTED_MODULE_0__);

var simpleXMLOptionsToPropsMap = {
  'annotation.categoryColors': 'annotationColor',
  'axisLabelsX.axisVisibility': 'xAxisVisibility',
  'axisLabelsY.axisVisibility': 'yAxisVisibility',
  'axisLabelsX.integerUnits': 'roundXAxisLabelsToInteger',
  'axisLabelsY.integerUnits': 'roundYAxisLabelsToInteger',
  'axisLabelsY2.integerUnits': 'roundY2AxisLabelsToInteger',
  'axisLabelsY2.axisVisibility': 'y2AxisVisibility',
  'axisLabelsX.extendsAxisRange': 'xAxisExtendsAxisRange',
  'axisLabelsY.extendsAxisRange': 'yAxisExtendsAxisRange',
  'axisLabelsX.majorLabelStyle.rotation': 'xAxisMajorLabelRotation',
  'axisLabelsX.majorLabelVisibility': 'xAxisMajorLabelVisibility',
  'axisLabelsY.majorLabelVisibility': 'yAxisMajorLabelVisibility',
  'axisLabelsY2.majorLabelVisibility': 'y2AxisMajorLabelVisibility',
  'axisLabelsX.majorTickSize': 'xAxisMajorTickSize',
  'axisLabelsY.majorTickSize': 'yAxisMajorTickSize',
  'axisLabelsY2.majorTickSize': 'y2AxisMajorTickSize',
  'axisLabelsX.minorTickSize': 'xAxisMinorTickSize',
  'axisLabelsY.minorTickSize': 'yAxisMinorTickSize',
  'axisLabelsY2.minorTickSize': 'y2AxisMinorTickSize',
  'axisLabelsX.majorTickVisibility': 'xAxisMajorTickVisibility',
  'axisLabelsY.majorTickVisibility': 'yAxisMajorTickVisibility',
  'axisLabelsY2.majorTickVisibility': 'y2AxisMajorTickVisibility',
  'axisLabelsX.majorUnit': 'xAxisMajorUnit',
  'axisLabelsY.majorUnit': 'yAxisMajorUnit',
  'axisLabelsY2.majorUnit': 'y2AxisMajorUnit',
  'axisLabelsX.minorTickVisibility': 'xAxisMinorTickVisibility',
  'axisLabelsY.minorTickVisibility': 'yAxisMinorTickVisibility',
  'axisLabelsY2.minorTickVisibility': 'y2AxisMinorTickVisibility',
  'axisLabelsX.maxLabelParts': 'xAxisMaxLabelParts',
  'axisX.abbreviation': 'xAxisAbbreviation',
  'axisY.abbreviation': 'yAxisAbbreviation',
  'axisY2.abbreviation': 'y2AxisAbbreviation',
  'axisX.includeZero': 'xAxisIncludeZero',
  'axisY.includeZero': 'yAxisIncludeZero',
  'axisY2.includeZero': 'y2AxisIncludeZero',
  'axisX.maximumNumber': 'xAxisMax',
  'axisY.maximumNumber': 'yAxisMax',
  'axisY2.maximumNumber': 'y2AxisMax',
  'axisX.minimumNumber': 'xAxisMin',
  'axisY.minimumNumber': 'yAxisMin',
  'axisY2.minimumNumber': 'y2AxisMin',
  'axisX.scale': 'xAxisScale',
  'axisY.scale': 'yAxisScale',
  'axisY2.scale': 'y2AxisScale',
  'axisTitleX.text': 'xAxisTitleText',
  'axisTitleY.text': 'yAxisTitleText',
  'axisTitleY2.text': 'y2AxisTitleText',
  'axisTitleX.alignment': 'xAxisTitleAlignment',
  'axisTitleY.alignment': 'yAxisTitleAlignment',
  'axisTitleY2.alignment': 'y2AxisTitleAlignment',
  'axisTitleX.visibility': 'xAxisTitleVisibility',
  'axisTitleY.visibility': 'yAxisTitleVisibility',
  'axisTitleY2.visibility': 'y2AxisTitleVisibility',
  'chart.resultTruncationLimit': 'resultTruncationLimit',
  'chart.overlayFields': 'overlayFields',
  'axisY2.enabled': 'enableY2Axis',
  'axisY2.fields': 'y2AxisField',
  'chart.barSpacing': 'barSpacing',
  'chart.columnSpacing': 'columnSpacing',
  'chart.seriesSpacing': 'seriesSpacing',
  'chart.nullValueMode': 'nullValueMode',
  'chart.markerSize': 'markerSize',
  'chart.showDataLabels': 'showDataLabels',
  'chart.showLegend': 'showLegend',
  'chart.showLines': 'showLines',
  'chart.showMarkers': 'showMarkers',
  'chart.stackMode': 'stackMode',
  'data.fieldListMode': 'fieldListMode',
  'data.fieldShowList': 'fieldShowList',
  'data.fieldHideList': 'fieldHideList',
  'gridLinesX.showMajorLines': 'showMajorXGridLines',
  'gridLinesY.showMajorLines': 'showMajorYGridLines',
  'gridLinesY2.showMajorLines': 'showMajorY2GridLines',
  'gridLinesX.showMinorLines': 'showMinorXGridLines',
  'gridLinesY.showMinorLines': 'showMinorYGridLines',
  'gridLinesY2.showMinorLines': 'showMinorY2GridLines',
  'layout.splitSeries': 'splitSeries',
  'layout.splitSeries.allowIndependentYRanges': 'allowIndependentYRanges',
  'legend.labels': 'legendLabels',
  'legend.labelStyle.overflowMode': 'legendLabelOverflowMode',
  'legend.masterLegend': 'masterLegend',
  'legend.mode': 'legendMode',
  'legend.placement': 'legendPlacement',
  'chart.bubbleMaximumSize': 'bubbleMaxSize',
  'chart.bubbleMinimumSize': 'bubbleMinSize',
  'chart.bubbleSizeBy': 'bubbleSizeBy'
};
var propsToSimpleXMLOptionsMap = lodash_invert__WEBPACK_IMPORTED_MODULE_0___default()(simpleXMLOptionsToPropsMap); // export to make it testable

var replaceObjectKeysFromMap = function replaceObjectKeysFromMap() {
  var object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var map = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var isValidKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {
    return true;
  };
  var nuObject = {};
  Object.keys(object).forEach(function (key) {
    var nuKey = map[key];

    if (!nuKey) {
      if (isValidKey(key)) {
        // @TODO(pwied):
        // get rid of this and ensure all known props are passed down to visualizations explicitly
        // captured here: SCP-14634
        nuObject[key] = object[key];
      }
    } else {
      nuObject[nuKey] = object[key];
    }
  });
  return nuObject;
};
var getPropsForSimpleXMLOptions = function getPropsForSimpleXMLOptions() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return replaceObjectKeysFromMap(options, simpleXMLOptionsToPropsMap, function (value) {
    return value.indexOf('.') === -1;
  });
};
var getSimpleXMLOptionsForProps = function getSimpleXMLOptionsForProps() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return replaceObjectKeysFromMap(props, propsToSimpleXMLOptionsMap);
};

/***/ })

/******/ });
//# sourceMappingURL=simpleXMLOptions.js.map