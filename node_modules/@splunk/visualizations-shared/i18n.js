/*!
 * Copyright © 2018 Splunk Inc.
 * SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or
 * in part without a valid written license from Splunk Inc. is PROHIBITED.
 */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 56);
/******/ })
/************************************************************************/
/******/ ({

/***/ 14:
/***/ (function(module, exports) {

module.exports = require("@splunk/moment");

/***/ }),

/***/ 26:
/***/ (function(module, exports) {

module.exports = require("numeral");

/***/ }),

/***/ 56:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setI18nFunctions", function() { return setI18nFunctions; });
/* harmony import */ var numeral__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(26);
/* harmony import */ var numeral__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(numeral__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _splunk_moment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14);
/* harmony import */ var _splunk_moment__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_splunk_moment__WEBPACK_IMPORTED_MODULE_1__);


/**
 * Fixme, this is a mock i18n file to workaround window dependency from @splunk/charting
 * We need to refactor @splunk/charting to make it independent from globals
 */

var quarters = {
  1: '1st quarter',
  2: '2nd quarter',
  3: '3rd quarter',
  4: '4th quarter'
};
var days = {
  0: 'Monday',
  1: 'Tuesday',
  2: 'Wednesday',
  3: 'Thursday',
  4: 'Friday',
  5: 'Saturday',
  6: 'Sunday'
};
var months = {
  1: 'January',
  2: 'February',
  3: 'March',
  4: 'April',
  5: 'May',
  6: 'June',
  7: 'July',
  8: 'August',
  9: 'September',
  10: 'October',
  11: 'November',
  12: 'December'
};
var narrowMonths = {
  1: 'J',
  2: 'F',
  3: 'M',
  4: 'A',
  5: 'M',
  6: 'J',
  7: 'J',
  8: 'A',
  9: 'S',
  10: 'O',
  11: 'N',
  12: 'D'
};
var localeDefinition = {
  date_formats: {
    medium: {
      pattern: 'MMM d, yyyy',
      format: '%(MMM)s %(d)s, %(yyyy)s'
    },
    long: {
      pattern: 'MMMM d, yyyy',
      format: '%(MMMM)s %(d)s, %(yyyy)s'
    },
    short: {
      pattern: 'M/d/yy',
      format: '%(M)s/%(d)s/%(yy)s'
    },
    full: {
      pattern: 'EEEE, MMMM d, yyyy',
      format: '%(EEEE)s, %(MMMM)s %(d)s, %(yyyy)s'
    }
  },
  quarters: {
    'stand-alone': {
      wide: quarters,
      abbreviated: quarters,
      narrow: {
        1: '1',
        2: '2',
        3: '3',
        4: '4'
      }
    },
    format: {
      wide: quarters,
      abbreviated: {
        1: 'Q1',
        2: 'Q2',
        3: 'Q3',
        4: 'Q4'
      },
      narrow: {
        1: '1',
        2: '2',
        3: '3',
        4: '4'
      }
    }
  },
  min_week_days: 1,
  days: {
    'stand-alone': {
      wide: days,
      abbreviated: days,
      narrow: {
        0: 'M',
        1: 'T',
        2: 'W',
        3: 'T',
        4: 'F',
        5: 'S',
        6: 'S'
      }
    },
    format: {
      wide: days,
      abbreviated: {
        0: 'Mon',
        1: 'Tue',
        2: 'Wed',
        3: 'Thu',
        4: 'Fri',
        5: 'Sat',
        6: 'Sun'
      },
      narrow: {
        0: 'M',
        1: 'T',
        2: 'W',
        3: 'T',
        4: 'F',
        5: 'S',
        6: 'S'
      }
    }
  },
  eras: {
    wide: {
      0: 'Before Christ',
      1: 'Anno Domini'
    },
    abbreviated: {
      0: 'BC',
      1: 'AD'
    },
    narrow: {
      0: 'B',
      1: 'A'
    }
  },
  percent_format: '#,##0%',
  scientific_format: '#E0',
  first_week_day: 6,
  group_symbol: ',',
  minus_sign: '-',
  months: {
    'stand-alone': {
      wide: months,
      abbreviated: months,
      narrow: narrowMonths
    },
    format: {
      wide: months,
      abbreviated: {
        1: 'Jan',
        2: 'Feb',
        3: 'Mar',
        4: 'Apr',
        5: 'May',
        6: 'Jun',
        7: 'Jul',
        8: 'Aug',
        9: 'Sep',
        10: 'Oct',
        11: 'Nov',
        12: 'Dec'
      },
      narrow: narrowMonths
    }
  },
  decimal_symbol: '.',
  periods: {
    am: 'AM',
    pm: 'PM'
  },
  datetime_formats: {
    null: '{1} {0}'
  },
  exp_symbol: 'E',
  locale_name: 'en_US',
  number_format: '#,##0.###',
  plus_sign: '+',
  time_formats: {
    medium: {
      pattern: 'h:mm:ss a',
      format: '%(h)s:%(mm)s:%(ss)s %(a)s'
    },
    long: {
      pattern: 'h:mm:ss a z',
      format: '%(h)s:%(mm)s:%(ss)s %(a)s %(z)s'
    },
    short: {
      pattern: 'h:mm a',
      format: '%(h)s:%(mm)s %(a)s'
    },
    full: {
      pattern: 'h:mm:ss a v',
      format: '%(h)s:%(mm)s:%(ss)s %(a)s %(v)s'
    }
  }
};
var i18n = {
  format_decimal: function format_decimal(num, format) {
    return numeral__WEBPACK_IMPORTED_MODULE_0___default()(num).format(format);
  },
  format_number: function format_number(num, format) {
    return numeral__WEBPACK_IMPORTED_MODULE_0___default()(num).format(format);
  },
  format_percent: function format_percent(num) {
    return numeral__WEBPACK_IMPORTED_MODULE_0___default()(num).format('0%');
  },
  format_scientific: function format_scientific(num) {
    return numeral__WEBPACK_IMPORTED_MODULE_0___default()(num).format('0,0e+0');
  },
  format_date: function format_date(num, format) {
    return _splunk_moment__WEBPACK_IMPORTED_MODULE_1___default()(num).format(localeDefinition.date_formats[format] ? localeDefinition.date_formats[format].pattern : format);
  },
  format_datetime: function format_datetime(num, dateFormat) {
    _splunk_moment__WEBPACK_IMPORTED_MODULE_1___default()(num).format(localeDefinition.time_formats[dateFormat] ? localeDefinition.time_formats[dateFormat].pattern : dateFormat);
  },
  format_time: function format_time(num, format) {
    return _splunk_moment__WEBPACK_IMPORTED_MODULE_1___default()(num).format(localeDefinition.time_formats[format] ? localeDefinition.time_formats[format].pattern : format);
  },
  format_datetime_microseconds: function format_datetime_microseconds(num, format) {
    return _splunk_moment__WEBPACK_IMPORTED_MODULE_1___default()(num).format(localeDefinition.time_formats[format] ? localeDefinition.time_formats[format].pattern : format);
  },
  format_time_microseconds: function format_time_microseconds(num, format) {
    return _splunk_moment__WEBPACK_IMPORTED_MODULE_1___default()(num).format(localeDefinition.time_formats[format] ? localeDefinition.time_formats[format].pattern : format);
  }
};
var setI18nFunctions = function setI18nFunctions(global) {
  Object.keys(i18n).forEach(function (k) {
    if (!global[k]) {
      global[k] = i18n[k]; // eslint-disable-line no-param-reassign
    }
  });

  if (!global.gettext) {
    global.gettext = function (v) {
      return v;
    }; // eslint-disable-line no-param-reassign

  }

  if (!global.locale_name) {
    global.locale_name = function () {
      return 'en_US';
    }; // eslint-disable-line no-param-reassign

  }

  return global;
};
setI18nFunctions(window);

/***/ })

/******/ });
//# sourceMappingURL=i18n.js.map