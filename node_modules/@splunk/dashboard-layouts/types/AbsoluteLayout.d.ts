import type { AbsoluteLayoutStructure, SelectedItem, AbsoluteLayoutOptions } from '@splunk/dashboard-types';
import AbsoluteLayoutApi from './apis/AbsoluteLayoutApi';
import type { RenderLayoutItem } from './types';
export interface LayoutArgs {
    mode?: 'view' | 'edit';
    showGrid?: boolean;
    options?: AbsoluteLayoutOptions;
    layoutStructure?: AbsoluteLayoutStructure;
    containerWidth: number;
    containerHeight: number;
    selectedItems?: SelectedItem[];
    renderLayoutItem: RenderLayoutItem;
    onLayoutItemsSelect?: (selectedItems: SelectedItem[]) => void;
    onLayoutStructureChange?: (layoutStructure: AbsoluteLayoutStructure) => void;
    layoutApiRef?: (layoutAPi: AbsoluteLayoutApi | null) => void;
}
declare const AbsoluteLayout: {
    (props: LayoutArgs): JSX.Element;
    schema: {
        backgroundColor: {
            oneOf: ({
                pattern: string;
                type: string;
                description: string;
                enum?: undefined;
            } | {
                type: string;
                enum: any;
                description: string;
                pattern?: undefined;
            })[];
        };
        display: {
            type: string;
            default: string;
            enum: string[];
            description: string;
        };
        backgroundImage: {
            type: string;
            properties: {
                w: {
                    type: string;
                    description: string;
                };
                h: {
                    type: string;
                    description: string;
                };
                x: {
                    type: string;
                    description: string;
                };
                y: {
                    type: string;
                    description: string;
                };
                src: {
                    type: string;
                    description: string;
                };
                sizeType: {
                    type: string;
                    enum: string[];
                    default: string;
                    description: string;
                };
            };
            description: string;
            additionalProperties: boolean;
        };
        width: {
            type: string;
            default: number;
            description: string;
        };
        height: {
            type: string;
            default: number;
            description: string;
        };
        showTitleAndDescription: {
            type: string;
            default: boolean;
            description: string;
        };
        submitButton: {
            type: string;
            description: string;
        };
        submitOnDashboardLoad: {
            type: string;
            default: boolean;
            description: string;
        };
    };
};
export default AbsoluteLayout;
//# sourceMappingURL=AbsoluteLayout.d.ts.map