import React, { MouseEvent } from 'react';
import type { AbsoluteBlockItem, Coordinate, SelectedItem } from '@splunk/dashboard-types';
import { CanvasProps, Offset } from '../types';
interface AbsoluteCanvasState {
    startPosition: Coordinate | null;
    currentPosition: Coordinate | null;
    isMoving: boolean;
    isSelecting: boolean;
}
export interface Props extends CanvasProps {
    initialState?: AbsoluteCanvasState;
    movable?: boolean;
    allowMultiselect: boolean;
    selectedLayoutItems?: SelectedItem[];
    blockItems: AbsoluteBlockItem[];
    onItemSelected: (e: MouseEvent, items: SelectedItem[]) => void;
    onItemMove?: (e: MouseEvent, offset: Offset) => void;
    onItemMoved?: (e: MouseEvent, offset: Offset) => void;
    children: JSX.Element | JSX.Element[];
}
declare const _default: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLDivElement>>;
export default _default;
//# sourceMappingURL=AbsoluteCanvas.d.ts.map