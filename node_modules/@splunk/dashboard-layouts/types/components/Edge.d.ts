import React from 'react';
import type { AbsolutePosition } from '@splunk/dashboard-types';
import type { EdgeItem, EdgeAppearance } from '../types';
interface EdgeWrapperProps extends AbsolutePosition {
    orientation: EdgeItem['orientation'];
    appearance: EdgeAppearance;
}
export declare const EdgeWrapper: import("styled-components").StyledComponent<"div", any, import("@splunk/themes/types/types").OptionalThemedProps<import("@splunk/themes/types/types").AnyTheme> & EdgeWrapperProps, never>;
declare type EdgeComponentProps = AbsolutePosition & {
    appearance: EdgeAppearance;
};
export declare const EdgeComponent: import("styled-components").StyledComponent<"div", any, EdgeComponentProps, never>;
interface EdgeProps {
    itemId: string;
    x: number;
    y: number;
    w: number;
    h: number;
    orientation: EdgeItem['orientation'];
    isCanvasEdge?: boolean;
    padding?: number;
    appearance: EdgeAppearance;
    onMouseDown: (e: React.MouseEvent, { id }: {
        id: string;
    }) => void;
    'data-test-edge-position': string;
}
export declare const Edge: ({ itemId, x, y, h, w, orientation, isCanvasEdge, padding, appearance, onMouseDown, "data-test-edge-position": edgePositionTestHook, }: EdgeProps) => JSX.Element | null;
export {};
//# sourceMappingURL=Edge.d.ts.map