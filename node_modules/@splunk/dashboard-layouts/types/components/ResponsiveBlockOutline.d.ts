import type { HandleDirection } from '../types';
import type { PortDirection } from './Port';
export interface ResponsiveBlockOutlineProps {
    itemId: string;
    x: number;
    y: number;
    w: number;
    h: number;
    scale?: number;
    connectable?: boolean;
    resizable?: boolean;
    onResize?: (e: MouseEvent, itemId: string, offset: {
        offsetX: number;
        offsetY: number;
    }, resizeDir: HandleDirection) => void;
    onResized?: (e: MouseEvent, itemId: string, offset: {
        offsetX: number;
        offsetY: number;
    }, resizeDir: HandleDirection) => void;
    onLineConnect?: (itemId: string, port: PortDirection) => void;
    onLineDisconnect?: (itemId: string, port: PortDirection) => void;
    handleDirections?: HandleDirection[];
}
declare const ResponsiveBlockOutline: ({ itemId, scale, connectable, resizable, onResize, onResized, onLineConnect, onLineDisconnect, handleDirections, x, y, w, h, }: ResponsiveBlockOutlineProps) => JSX.Element;
export default ResponsiveBlockOutline;
//# sourceMappingURL=ResponsiveBlockOutline.d.ts.map