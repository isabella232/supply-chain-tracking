import type { AbsoluteLayoutStructure, SelectedItem, AbsoluteBlockItem, Port, Coordinate } from '@splunk/dashboard-types';
import type { LayoutStructureState } from '../types';
interface FindSelectedBlockItemsArgs {
    layoutStructure: AbsoluteLayoutStructure;
    selectedItems: SelectedItem[];
}
export declare const findSelectedBlockItems: ({ layoutStructure, selectedItems, }: FindSelectedBlockItemsArgs) => AbsoluteBlockItem[];
interface GetAllBlockItemsArgs {
    layoutStructure: AbsoluteLayoutStructure;
    layoutStructureState?: LayoutStructureState;
}
export declare const getAllBlockItems: ({ layoutStructure, layoutStructureState, }: GetAllBlockItemsArgs) => AbsoluteBlockItem[];
/**
 * compute port position for a given block item
 * @param {Object} blockItem
 * @param {String} port
 */
export declare const computePortPosition: (blockItem: AbsoluteBlockItem, port: Port) => Coordinate;
interface GetBlockItemArgs {
    layoutStructure: AbsoluteLayoutStructure;
    id: string;
}
export declare const getBlockItem: ({ layoutStructure, id, }: GetBlockItemArgs) => AbsoluteBlockItem;
export {};
//# sourceMappingURL=blockUtils.d.ts.map