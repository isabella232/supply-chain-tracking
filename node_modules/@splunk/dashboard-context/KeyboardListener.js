/*!
 * Copyright © 2020 Splunk Inc.
 * SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or
 * in part without a valid written license from Splunk Inc. is PROHIBITED.
 */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */,
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
var EventListener = /** @class */ (function () {
    function EventListener() {
        this.events = {};
    }
    // Simple and Generic PubSub (not keyboard specific)
    EventListener.prototype.subscribe = function (eventName, callback) {
        var _this = this;
        if (!eventName ||
            !callback ||
            typeof eventName !== 'string' ||
            typeof callback !== 'function') {
            throw new TypeError('wrong parameters given to subscriber');
        }
        this.events[eventName] = this.getSubscribers(eventName);
        this.events[eventName].push(callback);
        return function () {
            _this.events[eventName] = _this.getSubscribers(eventName).filter(function (cb) { return cb !== callback; });
        };
    };
    EventListener.prototype.subscribeOnce = function (eventName, callback) {
        var unsubscribe = this.subscribe(eventName, function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            unsubscribe();
            callback.apply(void 0, __spread(args));
        });
        return unsubscribe;
    };
    EventListener.prototype.publish = function (eventName) {
        var data = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            data[_i - 1] = arguments[_i];
        }
        this.getSubscribers(eventName).forEach(function (cb) { return cb.apply(void 0, __spread(data)); });
    };
    EventListener.prototype.unsubscribeAll = function () {
        this.events = {};
    };
    EventListener.prototype.getSubscribers = function (eventName) {
        return this.events[eventName] || [];
    };
    EventListener.prototype.hasSubscribers = function (eventName) {
        return this.getSubscribers(eventName).length > 0;
    };
    return EventListener;
}());
exports.default = EventListener;


/***/ }),
/* 2 */,
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DEFAULT_KEYMAP = exports.default = void 0;
var mousetrap_1 = __importDefault(__webpack_require__(5));
var EventListener_1 = __importDefault(__webpack_require__(1));
/**
 * Adding keycode missing in Firefox
 */
mousetrap_1.default.addKeycodes({ 173: '-' });
/**
 * default keymap
 */
var DEFAULT_KEYMAP = [
    {
        event: 'move.left.unsnap',
        keys: 'shift+left',
        meta: { snap: false, dir: 'w' },
    },
    { event: 'move.left', keys: 'left', meta: { snap: true, dir: 'w' } },
    {
        event: 'move.right.unsnap',
        keys: 'shift+right',
        meta: { snap: false, dir: 'e' },
    },
    { event: 'move.right', keys: 'right', meta: { snap: true, dir: 'e' } },
    {
        event: 'move.up.unsnap',
        keys: 'shift+up',
        meta: { snap: false, dir: 'n' },
    },
    { event: 'move.up', keys: 'up', meta: { snap: true, dir: 'n' } },
    {
        event: 'move.down.unsnap',
        keys: 'shift+down',
        meta: { snap: false, dir: 's' },
    },
    { event: 'move.down', keys: 'down', meta: { snap: true, dir: 's' } },
    { event: 'copy', keys: 'meta+c', when: 'mac' },
    { event: 'copy', keys: 'ctrl+c', when: '!mac' },
    { event: 'paste', keys: 'meta+v', when: 'mac' },
    { event: 'paste', keys: 'ctrl+v', when: '!mac' },
    { event: 'duplicate', keys: 'meta+d', when: 'mac' },
    { event: 'duplicate', keys: 'ctrl+d', when: '!mac' },
    { event: 'selectAll', keys: 'meta+a', when: 'mac' },
    { event: 'selectAll', keys: 'ctrl+a', when: '!mac' },
    { event: 'selectNone', keys: 'meta+shift+a', when: 'mac' },
    { event: 'selectNone', keys: 'ctrl+shift+a', when: '!mac' },
    { event: 'removeItems', keys: 'backspace' },
    { event: 'removeItems', keys: 'del' },
    { event: 'cancel', keys: 'escape' },
    { event: 'undo', keys: 'meta+z', when: 'mac' },
    { event: 'undo', keys: 'ctrl+z', when: '!mac' },
    { event: 'redo', keys: 'meta+shift+z', when: 'mac' },
    { event: 'redo', keys: 'ctrl+shift+z', when: '!mac' },
    { event: 'zoom.in', keys: 'ctrl+meta+=', meta: { dir: 'in' }, when: 'mac' },
    {
        event: 'zoom.out',
        keys: 'ctrl+meta+-',
        meta: { dir: 'out' },
        when: 'mac',
    },
    {
        event: 'zoom.reset',
        keys: 'ctrl+meta+0',
        meta: { dir: 'reset' },
        when: 'mac',
    },
    { event: 'zoom.in', keys: 'ctrl+alt+=', meta: { dir: 'in' }, when: '!mac' },
    {
        event: 'zoom.out',
        keys: 'ctrl+alt+-',
        meta: { dir: 'out' },
        when: '!mac',
    },
    {
        event: 'zoom.reset',
        keys: 'ctrl+alt+0',
        meta: { dir: 'reset' },
        when: '!mac',
    },
];
exports.DEFAULT_KEYMAP = DEFAULT_KEYMAP;
/**
 * validate a key binding rule
 * @param {String} when
 * @return {Boolean} true indicate the rule is valid
 * @private
 */
var isValid = function (when) {
    var isMac = window.navigator.appVersion.indexOf('Mac') !== -1;
    return !when || (isMac && when === 'mac') || (!isMac && when === '!mac');
};
/**
 * Create a new KeyboardListener
 * @param {Object} keyMapConfig
 * @return {KeyboardListener} KeyboardListener instance
 * @public
 */
var KeyboardListener = /** @class */ (function (_super) {
    __extends(KeyboardListener, _super);
    function KeyboardListener(keyMapConfig) {
        if (keyMapConfig === void 0) { keyMapConfig = DEFAULT_KEYMAP; }
        var _this = _super.call(this) || this;
        _this.keyMaps = {};
        /**
         * update key mapping config
         * @param {Object} keyMapConfig
         * @public
         */
        _this.updateKeyMap = function (keyMapConfig) {
            if (keyMapConfig === void 0) { keyMapConfig = DEFAULT_KEYMAP; }
            _this.buildKeyMaps(keyMapConfig);
            _this.setup();
        };
        /**
         * build reverse key mapping, using keys as the mapping key
         * @param {Object} keyMapConfig
         * @private
         */
        _this.buildKeyMaps = function (keyMapConfig) {
            _this.keyMaps = {};
            keyMapConfig.forEach(function (keyRule) {
                var valid = isValid(keyRule.when);
                if (valid) {
                    if (_this.keyMaps[keyRule.keys]) {
                        // eslint-disable-next-line no-console
                        console.warn("duplicate key mapping detected for " + keyRule.keys);
                    }
                    _this.keyMaps[keyRule.keys] = __assign({}, keyRule);
                }
            });
        };
        /** publish keyboard action event(s)
         * @param {Object} event
         * @private
         */
        _this.publishKeyEvent = function (eventName, payload) {
            eventName.split('.').forEach(function (_, i, arr) {
                _this.publish(arr.slice(0, i + 1).join('.'), payload);
            });
        };
        _this.updateKeyMap(keyMapConfig);
        return _this;
    }
    /**
     * set up keyboard listener
     * @public
     */
    KeyboardListener.prototype.setup = function () {
        var _this = this;
        this.teardown();
        Object.keys(this.keyMaps).forEach(function (key) {
            mousetrap_1.default.bind(key, function () {
                var defaultPrevented = false;
                var payload = __assign(__assign({}, _this.keyMaps[key].meta), { preventDefault: function () {
                        defaultPrevented = true;
                    } });
                var eventName = _this.keyMaps[key].event;
                _this.publishKeyEvent(eventName, payload);
                return !defaultPrevented;
            });
        });
    };
    /**
     * teardown all keyboard listener
     * @public
     */
    // eslint-disable-next-line class-methods-use-this
    KeyboardListener.prototype.teardown = function () {
        mousetrap_1.default.reset();
    };
    return KeyboardListener;
}(EventListener_1.default));
exports.default = KeyboardListener;


/***/ }),
/* 4 */,
/* 5 */
/***/ (function(module, exports) {

module.exports = require("mousetrap");

/***/ })
/******/ ]);
//# sourceMappingURL=KeyboardListener.js.map