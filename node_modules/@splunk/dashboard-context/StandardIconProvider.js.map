{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@splunk/ui-utils/i18n\"","webpack:///./src/StandardIconProvider.tsx","webpack:///external \"react-dom/server\"","webpack:///external \"@splunk/dashboard-icons\"","webpack:///external \"@splunk/visualization-context/Provider\""],"names":[],"mappings":"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","file":"StandardIconProvider.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 35);\n","module.exports = require(\"react\");","module.exports = require(\"@splunk/ui-utils/i18n\");","/* eslint-disable class-methods-use-this,no-useless-constructor */\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\n\nimport { _ } from '@splunk/ui-utils/i18n';\nimport Provider from '@splunk/visualization-context/Provider';\n\nimport {\n    ActiveDirectory,\n    Check,\n    Cloud,\n    Datacenter,\n    Datacenters,\n    Datastore,\n    Datastores,\n    Desktop,\n    Firewall,\n    Gear,\n    Laptop,\n    LoadBalancer,\n    Mobile,\n    Profile,\n    Server,\n    Users,\n} from '@splunk/dashboard-icons';\n\nexport const toDataURI = (SVG: React.FC): string =>\n    `data:image/svg+xml;base64,${btoa(renderToStaticMarkup(<SVG />))}`;\n\ninterface Icon {\n    dataURI: string;\n    metaData: Record<string, string>;\n}\ntype IconMap = Record<string, Icon>;\nexport const defaultIconList: IconMap = {\n    activeDirectory: {\n        dataURI: toDataURI(ActiveDirectory),\n        metaData: {\n            name: 'Active Directory',\n        },\n    },\n    check: {\n        dataURI: toDataURI(Check),\n        metaData: {\n            name: 'Check',\n        },\n    },\n    cloud: {\n        dataURI: toDataURI(Cloud),\n        metaData: {\n            name: 'Cloud',\n        },\n    },\n    datacenter: {\n        dataURI: toDataURI(Datacenter),\n        metaData: {\n            name: 'Datacenter',\n        },\n    },\n    datacenters: {\n        dataURI: toDataURI(Datacenters),\n        metaData: {\n            name: 'Datacenters',\n        },\n    },\n    datastore: {\n        dataURI: toDataURI(Datastore),\n        metaData: {\n            name: 'Datastore',\n        },\n    },\n    datastores: {\n        dataURI: toDataURI(Datastores),\n        metaData: {\n            name: 'Datastores',\n        },\n    },\n    desktop: {\n        dataURI: toDataURI(Desktop),\n        metaData: {\n            name: 'Desktop',\n        },\n    },\n    firewall: {\n        dataURI: toDataURI(Firewall),\n        metaData: {\n            name: 'Firewall',\n        },\n    },\n    gear: {\n        dataURI: toDataURI(Gear),\n        metaData: {\n            name: 'Gear',\n        },\n    },\n    laptop: {\n        dataURI: toDataURI(Laptop),\n        metaData: {\n            name: 'Laptop',\n        },\n    },\n    loadBalancer: {\n        dataURI: toDataURI(LoadBalancer),\n        metaData: {\n            name: 'Load Balancer',\n        },\n    },\n    mobile: {\n        dataURI: toDataURI(Mobile),\n        metaData: {\n            name: 'Mobile',\n        },\n    },\n    profile: {\n        dataURI: toDataURI(Profile),\n        metaData: {\n            name: 'Profile',\n        },\n    },\n    server: {\n        dataURI: toDataURI(Server),\n        metaData: {\n            name: 'Server',\n        },\n    },\n    users: {\n        dataURI: toDataURI(Users),\n        metaData: {\n            name: 'Users',\n        },\n    },\n};\n\n/**\n * a local icon provider\n */\nclass StandardIconProvider extends Provider {\n    iconList: IconMap;\n\n    constructor({ iconList }: { iconList?: IconMap } = {}) {\n        super();\n\n        this.iconList = {\n            ...iconList,\n            ...defaultIconList,\n        };\n    }\n\n    /**\n     * return provider type\n     * @return {String} 'splunk-default'\n     */\n    getType(): string {\n        return 'splunk-default';\n    }\n\n    /**\n     * upload one new icon\n     */\n    async upload(): Promise<void> {\n        throw new Error(\n            _('Can not upload icons to the standard icon provider.')\n        );\n    }\n\n    /**\n     * get one icon by icon id\n     */\n    async getById(id: string): Promise<Icon> {\n        if (this.iconList[id]) {\n            return this.iconList[id];\n        }\n        throw new Error(_('The icon is not found.'));\n    }\n\n    /**\n     * get all icon ids\n     * @params options\n     * @params options.meta   a list of meta data attribute that would be returned with each id\n     * @params options.search  a search string to filter the returned icons\n     */\n    async listIds({\n        offset = 0,\n        count = 100,\n        meta = [],\n        search = null,\n    }: {\n        offset?: number;\n        count?: number;\n        meta?: string[];\n        search?: string | null;\n    } = {}): Promise<Record<string, unknown>[]> {\n        try {\n            const icons = this.iconList;\n            const results: Record<string, unknown>[] = [];\n\n            Object.keys(icons)\n                .sort()\n                .slice(offset, count)\n                .forEach((id) => {\n                    const icon: {\n                        id: string;\n                        metaData?: Record<string, unknown>;\n                    } = { id };\n                    const iconMeta = icons[id].metaData || {};\n                    // If search is a valid string, return the icon with matched meta data\n                    const isSearchedIcon =\n                        search != null &&\n                        Object.keys(iconMeta).some((attr) => {\n                            const iconMetaValue = iconMeta[attr].toLowerCase();\n                            return (\n                                iconMetaValue.indexOf(search.toLowerCase()) > -1\n                            );\n                        });\n\n                    if (search == null || isSearchedIcon) {\n                        if (meta && meta.length) {\n                            icon.metaData = {};\n                            meta.forEach((attr) => {\n                                if (iconMeta[attr] != null && icon.metaData) {\n                                    icon.metaData[attr] = iconMeta[attr];\n                                }\n                            });\n                        }\n\n                        results.push(icon);\n                    }\n                });\n\n            return results;\n        } catch (error) {\n            throw new Error(_('The icon ids cannot be listed.'));\n        }\n    }\n\n    /**\n     * delete an icon by icon id\n     */\n    async deleteById(): Promise<void> {\n        throw new Error(_('The icon cannot be deleted.'));\n    }\n}\n\nexport default StandardIconProvider;\n","module.exports = require(\"react-dom/server\");","module.exports = require(\"@splunk/dashboard-icons\");","module.exports = require(\"@splunk/visualization-context/Provider\");"],"sourceRoot":""}