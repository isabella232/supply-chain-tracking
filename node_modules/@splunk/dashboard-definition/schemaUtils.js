/*!
 * Copyright © 2020 Splunk Inc.
 * SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or
 * in part without a valid written license from Splunk Inc. is PROHIBITED.
 */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 23);
/******/ })
/************************************************************************/
/******/ ({

/***/ 23:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.createSimpleInputSchema = exports.createSimpleDSSchema = exports.createSimpleVizSchema = exports.createTestSchema = void 0;
/**
 * create test schema  for validation
 * @method createTestSchema
 * @param {Object} optionsSchema
 * @returns {Object} schema for validation
 */
var createTestSchema = function (optionsSchema) {
    return {
        $schema: 'http://json-schema.org/draft-07/schema#',
        $id: 'http://www.splunk.com/dashboard.schema.json',
        title: 'Dashboard Definition',
        description: 'Dashboard Definition',
        type: 'object',
        properties: optionsSchema,
    };
};
exports.createTestSchema = createTestSchema;
var createSimpleVizSchema = function (options) { return ({
    $id: 'http://www.splunk.com/dashboard.vizSchema.json',
    additionalProperties: false,
    title: 'Visualization Definition',
    description: 'Visualization Definition',
    type: 'object',
    properties: {
        context: { type: 'object', nullable: true },
        dataSources: {
            type: 'object',
            nullable: true,
            required: [],
            patternProperties: { '^[a-zA-Z0-9_-]*$': { type: 'string' } },
        },
        description: { type: 'string', nullable: true },
        encoding: { type: 'object', nullable: true },
        eventHandlers: {
            type: 'array',
            nullable: true,
            items: {
                type: 'object',
                properties: {
                    name: { type: 'string' },
                    options: { type: 'object', nullable: true },
                    type: { type: 'string' },
                },
                required: ['type'],
                additionalProperties: false,
            },
        },
        options: { type: 'object', properties: options, nullable: true },
        showLastUpdated: { type: 'boolean', nullable: true },
        showProgressBar: { type: 'boolean', nullable: true },
        title: { type: 'string', nullable: true },
        type: { type: 'string' },
    },
    required: ['type'],
}); };
exports.createSimpleVizSchema = createSimpleVizSchema;
var createSimpleDSSchema = function (options) { return ({
    $id: 'http://www.splunk.com/dashboard.dsSchema.json',
    additionalProperties: false,
    title: 'DataSource Definition',
    description: 'DataSource Definition',
    type: 'object',
    properties: {
        type: { type: 'string' },
        options: { type: 'object', properties: options },
        name: { type: 'string' },
        meta: { type: 'object' },
    },
    required: ['type'],
}); };
exports.createSimpleDSSchema = createSimpleDSSchema;
var createSimpleInputSchema = function (options) { return ({
    $id: 'http://www.splunk.com/dashboard.inputSchema.json',
    additionalProperties: false,
    title: 'Input Definition',
    description: 'Input Definition',
    type: 'object',
    properties: {
        dataSources: {
            patternProperties: { '^[a-zA-Z0-9_-]*$': { type: 'string' } },
        },
        encoding: { type: 'object' },
        options: { type: 'object', properties: options },
        context: { type: 'object' },
        title: { type: 'string' },
        type: { type: 'string' },
    },
    required: ['type'],
}); };
exports.createSimpleInputSchema = createSimpleInputSchema;


/***/ })

/******/ });
//# sourceMappingURL=schemaUtils.js.map