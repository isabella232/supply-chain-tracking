{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/initialGeoJsonOptions.js"],"names":[],"mappings":"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","file":"initialGeoJsonOptions.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const geoJsonOptions = {\n    us: {\n        name: 'USA',\n        source: 'geo://default/us',\n        projection: 'mercator',\n        sourceBounds: {\n            lat: {\n                min: 24,\n                max: 50,\n            },\n            long: {\n                min: -130,\n                max: -60,\n            },\n        },\n        logicalBounds: {\n            x: {\n                min: 0,\n                max: 800,\n            },\n            y: {\n                min: 0,\n                max: 600,\n            },\n        },\n        fillColor: '#EAEFF2',\n        strokeColor: '#689C8D',\n        selector: '.feature',\n        geoFeatureGroups: [\n            {\n                name: 'lower48',\n                featureMatcher: {\n                    property: 'postal',\n                    regex: '^(?!(AK|HI))',\n                },\n                sourceBounds: {\n                    lat: { min: 24, max: 50 },\n                    long: { min: -130, max: -60 },\n                },\n            },\n            {\n                name: 'Alaska',\n                featureMatcher: {\n                    property: 'postal',\n                    regex: 'AK',\n                },\n                logicalBounds: {\n                    x: { min: 100, max: 200 },\n                    y: { min: 325, max: 425 },\n                },\n                sourceBounds: {\n                    lat: { min: 45, max: 72 },\n                    long: { min: -180, max: -120 }, // manually cutoff the Alaskan islands in the eastern hemisphere by taking only the western hemisphere parts\n                },\n            },\n            {\n                name: 'Hawaii',\n                featureMatcher: {\n                    property: 'postal',\n                    regex: 'HI',\n                },\n                logicalBounds: {\n                    x: { min: 250, max: 350 },\n                    y: { min: 375, max: 475 },\n                },\n                sourceBounds: {\n                    lat: { min: 18.665677, max: 22.461292 },\n                    long: { min: -160.921571, max: -154.242648 },\n                },\n            },\n        ],\n    },\n    world: {\n        name: 'WORLD',\n        source: 'geo://default/world',\n        projection: 'mercator',\n        sourceBounds: {\n            lat: { min: -60, max: 85 },\n            long: { min: -180, max: 180 },\n        },\n        logicalBounds: { x: { min: 0, max: 800 }, y: { min: 0, max: 600 } },\n        fillColor: '#EAEFF2',\n        strokeColor: '#689C8D',\n        strokeHighlightColor: '#000000',\n        selector: '.feature',\n    },\n};\n"],"sourceRoot":""}