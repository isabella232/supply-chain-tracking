{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@splunk/ui-utils/i18n\"","webpack:///external \"@splunk/react-icons/SVG\"","webpack:///external \"@babel/runtime/helpers/extends\"","webpack:///./src/EllipsePresetIcons.tsx","webpack:///./src/SingleValuePresetIcons.tsx","webpack:///./src/SingleValueIconPresetIcons.tsx","webpack:///./src/RectanglePresetIcons.tsx","webpack:///./src/Area.tsx","webpack:///./src/Bar.tsx","webpack:///./src/Bubble.tsx","webpack:///./src/ChoroplethSvg.tsx","webpack:///./src/Column.tsx","webpack:///./src/EditIcon.tsx","webpack:///./src/Image.jsx","webpack:///./src/Line.tsx","webpack:///./src/LinkGraph.tsx","webpack:///./src/ParallelCoordinates.tsx","webpack:///./src/PresetIcons.ts","webpack:///./src/Punchcard.jsx","webpack:///./src/RemoveIcon.tsx","webpack:///./src/ReverseRangeValuesIcon.tsx","webpack:///./src/Sankey.tsx","webpack:///./src/Scatter.tsx","webpack:///./src/SingleValueRadial.tsx","webpack:///./src/SingleValueTrend.tsx","webpack:///./src/Table.tsx","webpack:///./src/index.ts"],"names":["svgStyle","stroke","strokeWidth","fill","_"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 27);\n","module.exports = require(\"react\");","module.exports = require(\"@splunk/ui-utils/i18n\");","module.exports = require(\"@splunk/react-icons/SVG\");","module.exports = require(\"@babel/runtime/helpers/extends\");","import * as React from 'react';\n\nconst getEllipseIcon = props =>\n    function EllipseIcon(): React.ReactElement<SVGElement> {\n        return (\n            <svg width=\"108\" height=\"64\" viewBox=\"0 0 108 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                    d=\"M107.5 32C107.5 40.5888 101.622 48.4531 91.9289 54.1973C82.2464 59.935 68.8377 63.5 54 63.5C39.1623 63.5 25.7536 59.935 16.0711 54.1973C6.37777 48.4531 0.5 40.5888 0.5 32C0.5 23.4112 6.37777 15.5469 16.0711 9.80273C25.7536 4.065 39.1623 0.5 54 0.5C68.8377 0.5 82.2464 4.065 91.9289 9.80273C101.622 15.5469 107.5 23.4112 107.5 32Z\"\n                    {...props}\n                />\n            </svg>\n        );\n    };\n\nexport default {\n    'ellipse.none': getEllipseIcon({ fill: '#F2F4F5', stroke: '#C3CBD4' }),\n    'ellipse.fill': getEllipseIcon({ fill: '#00A4FD' }),\n    'ellipse.stroke': getEllipseIcon({ fill: '#F2F4F5', stroke: '#00A4FD' }),\n    'ellipse.fillAndStroke': getEllipseIcon({ fill: '#00A4FD', stroke: '#00A4FD' }),\n};\n","import * as React from 'react';\n\nconst NonePreset = (): React.ReactElement<SVGElement> => (\n    <svg width=\"108\" height=\"64\" viewBox=\"0 0 108 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect x=\"0.5\" y=\"0.5\" width=\"107\" height=\"63\" rx=\"2.5\" fill=\"#F2F4F5\" />\n        <path\n            d=\"M37.34 38.052C37.34 39.492 36.944 40.764 36.152 41.868C35.384 42.948 34.28 43.8 32.84 44.424C31.424 45.048 29.744 45.36 27.8 45.36C24.896 45.36 22.58 44.712 20.852 43.416C19.124 42.12 18.26 40.344 18.26 38.088C18.26 36.72 18.62 35.508 19.34 34.452C20.06 33.396 21.104 32.664 22.472 32.256C21.392 31.776 20.54 31.08 19.916 30.168C19.292 29.256 18.98 28.164 18.98 26.892C18.98 25.668 19.316 24.552 19.988 23.544C20.66 22.512 21.656 21.696 22.976 21.096C24.296 20.472 25.904 20.16 27.8 20.16C29.768 20.16 31.4 20.46 32.696 21.06C33.992 21.636 34.964 22.44 35.612 23.472C36.284 24.48 36.62 25.62 36.62 26.892C36.62 28.164 36.308 29.256 35.684 30.168C35.06 31.08 34.208 31.776 33.128 32.256C34.472 32.664 35.504 33.396 36.224 34.452C36.968 35.508 37.34 36.708 37.34 38.052ZM23.948 27.324C23.948 28.284 24.284 29.052 24.956 29.628C25.652 30.18 26.612 30.456 27.836 30.456C29.036 30.456 29.972 30.168 30.644 29.592C31.316 29.016 31.652 28.248 31.652 27.288C31.652 26.304 31.304 25.536 30.608 24.984C29.936 24.432 28.988 24.156 27.764 24.156C26.564 24.156 25.628 24.444 24.956 25.02C24.284 25.572 23.948 26.34 23.948 27.324ZM23.3 37.872C23.3 38.976 23.696 39.84 24.488 40.464C25.28 41.064 26.372 41.364 27.764 41.364C29.204 41.364 30.32 41.064 31.112 40.464C31.904 39.864 32.3 39 32.3 37.872C32.3 36.744 31.904 35.868 31.112 35.244C30.32 34.62 29.216 34.308 27.8 34.308C26.408 34.308 25.304 34.62 24.488 35.244C23.696 35.868 23.3 36.744 23.3 37.872ZM49.4579 45H44.4899V43.956C44.4899 42.156 44.5739 40.548 44.7419 39.132C44.9339 37.692 45.2339 36.336 45.6419 35.064C46.0499 33.768 46.6019 32.472 47.2979 31.176C47.9939 29.856 48.8579 28.428 49.8899 26.892L51.2939 24.84H39.6659V20.52H56.7659V24.876L54.3179 28.476C53.3819 29.844 52.6019 31.128 51.9779 32.328C51.3539 33.504 50.8499 34.68 50.4659 35.856C50.1059 37.032 49.8419 38.268 49.6739 39.564C49.5299 40.86 49.4579 42.324 49.4579 43.956V45Z\"\n            fill=\"#C3CBD4\"\n        />\n        <g clipPath=\"url(#clip0)\">\n            <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M60.3674 38.7752C60.1071 39.0355 59.685 39.0355 59.4246 38.7752C59.1643 38.5148 59.1643 38.0927 59.4246 37.8324L63.2928 33.9643C63.6833 33.5738 64.3164 33.5738 64.7069 33.9643L68.575 37.8324C68.8354 38.0927 68.8354 38.5148 68.575 38.7752C68.3147 39.0355 67.8926 39.0355 67.6323 38.7752L64.6663 35.8092V43.6668C64.6663 44.035 64.3679 44.3335 63.9997 44.3335C63.6315 44.3335 63.333 44.035 63.333 43.6668V35.8095L60.3674 38.7752Z\"\n                fill=\"#C3CBD4\"\n            />\n        </g>\n        <path\n            d=\"M72.912 45V43.976C72.912 43.144 73.0613 42.4507 73.36 41.896C73.6693 41.3413 74.0853 40.8667 74.608 40.472C75.1307 40.0667 75.7173 39.6987 76.368 39.368C77.008 39.0373 77.488 38.728 77.808 38.44C78.128 38.1413 78.288 37.7467 78.288 37.256C78.288 36.8613 78.16 36.536 77.904 36.28C77.6587 36.0133 77.296 35.88 76.816 35.88C76.3573 35.88 75.984 36.0133 75.696 36.28C75.408 36.536 75.232 36.8933 75.168 37.352H73.024C73.0453 36.9467 73.136 36.5467 73.296 36.152C73.456 35.7573 73.6907 35.3947 74 35.064C74.3093 34.7227 74.7093 34.456 75.2 34.264C75.6907 34.0613 76.272 33.96 76.944 33.96C78.064 33.96 78.9493 34.248 79.6 34.824C80.2613 35.4 80.592 36.1787 80.592 37.16C80.592 38.0347 80.3093 38.76 79.744 39.336C79.1787 39.9013 78.3893 40.44 77.376 40.952C76.8213 41.2293 76.3573 41.528 75.984 41.848C75.6213 42.168 75.3813 42.5787 75.264 43.08H80.624V45H72.912ZM82.2018 41.8H84.3458C84.4418 42.312 84.6551 42.6853 84.9858 42.92C85.3164 43.144 85.7431 43.256 86.2658 43.256C86.8418 43.256 87.2898 43.1333 87.6098 42.888C87.9404 42.6427 88.1058 42.28 88.1058 41.8C88.1058 41.3093 87.9351 40.936 87.5938 40.68C87.2631 40.4133 86.7938 40.28 86.1858 40.28H84.8418V38.584H86.2018C86.7351 38.584 87.1404 38.4613 87.4178 38.216C87.7058 37.96 87.8498 37.6187 87.8498 37.192C87.8498 36.7867 87.7058 36.4667 87.4178 36.232C87.1404 35.9867 86.7618 35.864 86.2818 35.864C85.2791 35.864 84.7031 36.3227 84.5538 37.24H82.4578C82.4791 36.7067 82.6284 36.1893 82.9058 35.688C83.1831 35.1867 83.6044 34.776 84.1698 34.456C84.7351 34.1253 85.4658 33.96 86.3618 33.96C87.1724 33.96 87.8551 34.0933 88.4098 34.36C88.9644 34.616 89.3858 34.9733 89.6737 35.432C89.9724 35.88 90.1218 36.3867 90.1218 36.952C90.1218 37.528 89.9778 38.0187 89.6898 38.424C89.4124 38.8293 89.0444 39.1387 88.5858 39.352C89.1724 39.5333 89.6258 39.8587 89.9458 40.328C90.2658 40.7867 90.4258 41.3253 90.4258 41.944C90.4258 42.584 90.2551 43.144 89.9138 43.624C89.5831 44.104 89.1084 44.4827 88.4898 44.76C87.8711 45.0267 87.1351 45.16 86.2818 45.16C85.4284 45.16 84.7031 45.016 84.1058 44.728C83.5084 44.4293 83.0498 44.024 82.7298 43.512C82.4098 43 82.2338 42.4293 82.2018 41.8Z\"\n            fill=\"#C3CBD4\"\n        />\n        <rect x=\"0.5\" y=\"0.5\" width=\"107\" height=\"63\" rx=\"2.5\" stroke=\"#C3CBD4\" />\n        <defs>\n            <clipPath id=\"clip0\">\n                <rect width=\"15.9993\" height=\"15.9993\" fill=\"white\" transform=\"translate(56 31)\" />\n            </clipPath>\n        </defs>\n    </svg>\n);\n\nconst MajorValuePreset = (): React.ReactElement<SVGElement> => (\n    <svg width=\"108\" height=\"64\" viewBox=\"0 0 108 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect x=\"0.5\" y=\"0.5\" width=\"107\" height=\"63\" rx=\"2.5\" fill=\"#F2F4F5\" />\n        <path\n            d=\"M37.34 38.052C37.34 39.492 36.944 40.764 36.152 41.868C35.384 42.948 34.28 43.8 32.84 44.424C31.424 45.048 29.744 45.36 27.8 45.36C24.896 45.36 22.58 44.712 20.852 43.416C19.124 42.12 18.26 40.344 18.26 38.088C18.26 36.72 18.62 35.508 19.34 34.452C20.06 33.396 21.104 32.664 22.472 32.256C21.392 31.776 20.54 31.08 19.916 30.168C19.292 29.256 18.98 28.164 18.98 26.892C18.98 25.668 19.316 24.552 19.988 23.544C20.66 22.512 21.656 21.696 22.976 21.096C24.296 20.472 25.904 20.16 27.8 20.16C29.768 20.16 31.4 20.46 32.696 21.06C33.992 21.636 34.964 22.44 35.612 23.472C36.284 24.48 36.62 25.62 36.62 26.892C36.62 28.164 36.308 29.256 35.684 30.168C35.06 31.08 34.208 31.776 33.128 32.256C34.472 32.664 35.504 33.396 36.224 34.452C36.968 35.508 37.34 36.708 37.34 38.052ZM23.948 27.324C23.948 28.284 24.284 29.052 24.956 29.628C25.652 30.18 26.612 30.456 27.836 30.456C29.036 30.456 29.972 30.168 30.644 29.592C31.316 29.016 31.652 28.248 31.652 27.288C31.652 26.304 31.304 25.536 30.608 24.984C29.936 24.432 28.988 24.156 27.764 24.156C26.564 24.156 25.628 24.444 24.956 25.02C24.284 25.572 23.948 26.34 23.948 27.324ZM23.3 37.872C23.3 38.976 23.696 39.84 24.488 40.464C25.28 41.064 26.372 41.364 27.764 41.364C29.204 41.364 30.32 41.064 31.112 40.464C31.904 39.864 32.3 39 32.3 37.872C32.3 36.744 31.904 35.868 31.112 35.244C30.32 34.62 29.216 34.308 27.8 34.308C26.408 34.308 25.304 34.62 24.488 35.244C23.696 35.868 23.3 36.744 23.3 37.872ZM49.4579 45H44.4899V43.956C44.4899 42.156 44.5739 40.548 44.7419 39.132C44.9339 37.692 45.2339 36.336 45.6419 35.064C46.0499 33.768 46.6019 32.472 47.2979 31.176C47.9939 29.856 48.8579 28.428 49.8899 26.892L51.2939 24.84H39.6659V20.52H56.7659V24.876L54.3179 28.476C53.3819 29.844 52.6019 31.128 51.9779 32.328C51.3539 33.504 50.8499 34.68 50.4659 35.856C50.1059 37.032 49.8419 38.268 49.6739 39.564C49.5299 40.86 49.4579 42.324 49.4579 43.956V45Z\"\n            fill=\"#00A4FD\"\n        />\n        <g clipPath=\"url(#clip0)\">\n            <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M60.3674 38.7752C60.1071 39.0355 59.685 39.0355 59.4246 38.7752C59.1643 38.5148 59.1643 38.0927 59.4246 37.8324L63.2928 33.9643C63.6833 33.5738 64.3164 33.5738 64.7069 33.9643L68.575 37.8324C68.8354 38.0927 68.8354 38.5148 68.575 38.7752C68.3147 39.0355 67.8926 39.0355 67.6323 38.7752L64.6663 35.8092V43.6668C64.6663 44.035 64.3679 44.3335 63.9997 44.3335C63.6315 44.3335 63.333 44.035 63.333 43.6668V35.8095L60.3674 38.7752Z\"\n                fill=\"#C3CBD4\"\n            />\n        </g>\n        <path\n            d=\"M72.912 45V43.976C72.912 43.144 73.0613 42.4507 73.36 41.896C73.6693 41.3413 74.0853 40.8667 74.608 40.472C75.1307 40.0667 75.7173 39.6987 76.368 39.368C77.008 39.0373 77.488 38.728 77.808 38.44C78.128 38.1413 78.288 37.7467 78.288 37.256C78.288 36.8613 78.16 36.536 77.904 36.28C77.6587 36.0133 77.296 35.88 76.816 35.88C76.3573 35.88 75.984 36.0133 75.696 36.28C75.408 36.536 75.232 36.8933 75.168 37.352H73.024C73.0453 36.9467 73.136 36.5467 73.296 36.152C73.456 35.7573 73.6907 35.3947 74 35.064C74.3093 34.7227 74.7093 34.456 75.2 34.264C75.6907 34.0613 76.272 33.96 76.944 33.96C78.064 33.96 78.9493 34.248 79.6 34.824C80.2613 35.4 80.592 36.1787 80.592 37.16C80.592 38.0347 80.3093 38.76 79.744 39.336C79.1787 39.9013 78.3893 40.44 77.376 40.952C76.8213 41.2293 76.3573 41.528 75.984 41.848C75.6213 42.168 75.3813 42.5787 75.264 43.08H80.624V45H72.912ZM82.2018 41.8H84.3458C84.4418 42.312 84.6551 42.6853 84.9858 42.92C85.3164 43.144 85.7431 43.256 86.2658 43.256C86.8418 43.256 87.2898 43.1333 87.6098 42.888C87.9404 42.6427 88.1058 42.28 88.1058 41.8C88.1058 41.3093 87.9351 40.936 87.5938 40.68C87.2631 40.4133 86.7938 40.28 86.1858 40.28H84.8418V38.584H86.2018C86.7351 38.584 87.1404 38.4613 87.4178 38.216C87.7058 37.96 87.8498 37.6187 87.8498 37.192C87.8498 36.7867 87.7058 36.4667 87.4178 36.232C87.1404 35.9867 86.7618 35.864 86.2818 35.864C85.2791 35.864 84.7031 36.3227 84.5538 37.24H82.4578C82.4791 36.7067 82.6284 36.1893 82.9058 35.688C83.1831 35.1867 83.6044 34.776 84.1698 34.456C84.7351 34.1253 85.4658 33.96 86.3618 33.96C87.1724 33.96 87.8551 34.0933 88.4098 34.36C88.9644 34.616 89.3858 34.9733 89.6737 35.432C89.9724 35.88 90.1218 36.3867 90.1218 36.952C90.1218 37.528 89.9778 38.0187 89.6898 38.424C89.4124 38.8293 89.0444 39.1387 88.5858 39.352C89.1724 39.5333 89.6258 39.8587 89.9458 40.328C90.2658 40.7867 90.4258 41.3253 90.4258 41.944C90.4258 42.584 90.2551 43.144 89.9138 43.624C89.5831 44.104 89.1084 44.4827 88.4898 44.76C87.8711 45.0267 87.1351 45.16 86.2818 45.16C85.4284 45.16 84.7031 45.016 84.1058 44.728C83.5084 44.4293 83.0498 44.024 82.7298 43.512C82.4098 43 82.2338 42.4293 82.2018 41.8Z\"\n            fill=\"#C3CBD4\"\n        />\n        <rect x=\"0.5\" y=\"0.5\" width=\"107\" height=\"63\" rx=\"2.5\" stroke=\"#C3CBD4\" />\n        <defs>\n            <clipPath id=\"clip0\">\n                <rect width=\"15.9993\" height=\"15.9993\" fill=\"white\" transform=\"translate(56 31)\" />\n            </clipPath>\n        </defs>\n    </svg>\n);\n\nconst TrendPreset = (): React.ReactElement<SVGElement> => (\n    <svg width=\"108\" height=\"64\" viewBox=\"0 0 108 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect x=\"0.5\" y=\"0.5\" width=\"107\" height=\"63\" rx=\"2.5\" fill=\"#F2F4F5\" />\n        <path\n            d=\"M37.34 38.052C37.34 39.492 36.944 40.764 36.152 41.868C35.384 42.948 34.28 43.8 32.84 44.424C31.424 45.048 29.744 45.36 27.8 45.36C24.896 45.36 22.58 44.712 20.852 43.416C19.124 42.12 18.26 40.344 18.26 38.088C18.26 36.72 18.62 35.508 19.34 34.452C20.06 33.396 21.104 32.664 22.472 32.256C21.392 31.776 20.54 31.08 19.916 30.168C19.292 29.256 18.98 28.164 18.98 26.892C18.98 25.668 19.316 24.552 19.988 23.544C20.66 22.512 21.656 21.696 22.976 21.096C24.296 20.472 25.904 20.16 27.8 20.16C29.768 20.16 31.4 20.46 32.696 21.06C33.992 21.636 34.964 22.44 35.612 23.472C36.284 24.48 36.62 25.62 36.62 26.892C36.62 28.164 36.308 29.256 35.684 30.168C35.06 31.08 34.208 31.776 33.128 32.256C34.472 32.664 35.504 33.396 36.224 34.452C36.968 35.508 37.34 36.708 37.34 38.052ZM23.948 27.324C23.948 28.284 24.284 29.052 24.956 29.628C25.652 30.18 26.612 30.456 27.836 30.456C29.036 30.456 29.972 30.168 30.644 29.592C31.316 29.016 31.652 28.248 31.652 27.288C31.652 26.304 31.304 25.536 30.608 24.984C29.936 24.432 28.988 24.156 27.764 24.156C26.564 24.156 25.628 24.444 24.956 25.02C24.284 25.572 23.948 26.34 23.948 27.324ZM23.3 37.872C23.3 38.976 23.696 39.84 24.488 40.464C25.28 41.064 26.372 41.364 27.764 41.364C29.204 41.364 30.32 41.064 31.112 40.464C31.904 39.864 32.3 39 32.3 37.872C32.3 36.744 31.904 35.868 31.112 35.244C30.32 34.62 29.216 34.308 27.8 34.308C26.408 34.308 25.304 34.62 24.488 35.244C23.696 35.868 23.3 36.744 23.3 37.872ZM49.4579 45H44.4899V43.956C44.4899 42.156 44.5739 40.548 44.7419 39.132C44.9339 37.692 45.2339 36.336 45.6419 35.064C46.0499 33.768 46.6019 32.472 47.2979 31.176C47.9939 29.856 48.8579 28.428 49.8899 26.892L51.2939 24.84H39.6659V20.52H56.7659V24.876L54.3179 28.476C53.3819 29.844 52.6019 31.128 51.9779 32.328C51.3539 33.504 50.8499 34.68 50.4659 35.856C50.1059 37.032 49.8419 38.268 49.6739 39.564C49.5299 40.86 49.4579 42.324 49.4579 43.956V45Z\"\n            fill=\"#C3CBD4\"\n        />\n        <g clipPath=\"url(#clip0)\">\n            <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M60.3674 38.7752C60.1071 39.0355 59.685 39.0355 59.4246 38.7752C59.1643 38.5148 59.1643 38.0927 59.4246 37.8324L63.2928 33.9643C63.6833 33.5738 64.3164 33.5738 64.7069 33.9643L68.575 37.8324C68.8354 38.0927 68.8354 38.5148 68.575 38.7752C68.3147 39.0355 67.8926 39.0355 67.6323 38.7752L64.6663 35.8092V43.6668C64.6663 44.035 64.3679 44.3335 63.9997 44.3335C63.6315 44.3335 63.333 44.035 63.333 43.6668V35.8095L60.3674 38.7752Z\"\n                fill=\"#53A051\"\n            />\n        </g>\n        <path\n            d=\"M72.912 45V43.976C72.912 43.144 73.0613 42.4507 73.36 41.896C73.6693 41.3413 74.0853 40.8667 74.608 40.472C75.1307 40.0667 75.7173 39.6987 76.368 39.368C77.008 39.0373 77.488 38.728 77.808 38.44C78.128 38.1413 78.288 37.7467 78.288 37.256C78.288 36.8613 78.16 36.536 77.904 36.28C77.6587 36.0133 77.296 35.88 76.816 35.88C76.3573 35.88 75.984 36.0133 75.696 36.28C75.408 36.536 75.232 36.8933 75.168 37.352H73.024C73.0453 36.9467 73.136 36.5467 73.296 36.152C73.456 35.7573 73.6907 35.3947 74 35.064C74.3093 34.7227 74.7093 34.456 75.2 34.264C75.6907 34.0613 76.272 33.96 76.944 33.96C78.064 33.96 78.9493 34.248 79.6 34.824C80.2613 35.4 80.592 36.1787 80.592 37.16C80.592 38.0347 80.3093 38.76 79.744 39.336C79.1787 39.9013 78.3893 40.44 77.376 40.952C76.8213 41.2293 76.3573 41.528 75.984 41.848C75.6213 42.168 75.3813 42.5787 75.264 43.08H80.624V45H72.912ZM82.2018 41.8H84.3458C84.4418 42.312 84.6551 42.6853 84.9858 42.92C85.3164 43.144 85.7431 43.256 86.2658 43.256C86.8418 43.256 87.2898 43.1333 87.6098 42.888C87.9404 42.6427 88.1058 42.28 88.1058 41.8C88.1058 41.3093 87.9351 40.936 87.5938 40.68C87.2631 40.4133 86.7938 40.28 86.1858 40.28H84.8418V38.584H86.2018C86.7351 38.584 87.1404 38.4613 87.4178 38.216C87.7058 37.96 87.8498 37.6187 87.8498 37.192C87.8498 36.7867 87.7058 36.4667 87.4178 36.232C87.1404 35.9867 86.7618 35.864 86.2818 35.864C85.2791 35.864 84.7031 36.3227 84.5538 37.24H82.4578C82.4791 36.7067 82.6284 36.1893 82.9058 35.688C83.1831 35.1867 83.6044 34.776 84.1698 34.456C84.7351 34.1253 85.4658 33.96 86.3618 33.96C87.1724 33.96 87.8551 34.0933 88.4098 34.36C88.9644 34.616 89.3858 34.9733 89.6737 35.432C89.9724 35.88 90.1218 36.3867 90.1218 36.952C90.1218 37.528 89.9778 38.0187 89.6898 38.424C89.4124 38.8293 89.0444 39.1387 88.5858 39.352C89.1724 39.5333 89.6258 39.8587 89.9458 40.328C90.2658 40.7867 90.4258 41.3253 90.4258 41.944C90.4258 42.584 90.2551 43.144 89.9138 43.624C89.5831 44.104 89.1084 44.4827 88.4898 44.76C87.8711 45.0267 87.1351 45.16 86.2818 45.16C85.4284 45.16 84.7031 45.016 84.1058 44.728C83.5084 44.4293 83.0498 44.024 82.7298 43.512C82.4098 43 82.2338 42.4293 82.2018 41.8Z\"\n            fill=\"#53A051\"\n        />\n        <rect x=\"0.5\" y=\"0.5\" width=\"107\" height=\"63\" rx=\"2.5\" stroke=\"#C3CBD4\" />\n        <defs>\n            <clipPath id=\"clip0\">\n                <rect width=\"15.9993\" height=\"15.9993\" fill=\"white\" transform=\"translate(56 31)\" />\n            </clipPath>\n        </defs>\n    </svg>\n);\n\nconst MajorValueAndTrendPreset = (): React.ReactElement<SVGElement> => (\n    <svg width=\"108\" height=\"64\" viewBox=\"0 0 108 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect x=\"0.5\" y=\"0.5\" width=\"107\" height=\"63\" rx=\"2.5\" fill=\"#F2F4F5\" />\n        <path\n            d=\"M37.34 38.052C37.34 39.492 36.944 40.764 36.152 41.868C35.384 42.948 34.28 43.8 32.84 44.424C31.424 45.048 29.744 45.36 27.8 45.36C24.896 45.36 22.58 44.712 20.852 43.416C19.124 42.12 18.26 40.344 18.26 38.088C18.26 36.72 18.62 35.508 19.34 34.452C20.06 33.396 21.104 32.664 22.472 32.256C21.392 31.776 20.54 31.08 19.916 30.168C19.292 29.256 18.98 28.164 18.98 26.892C18.98 25.668 19.316 24.552 19.988 23.544C20.66 22.512 21.656 21.696 22.976 21.096C24.296 20.472 25.904 20.16 27.8 20.16C29.768 20.16 31.4 20.46 32.696 21.06C33.992 21.636 34.964 22.44 35.612 23.472C36.284 24.48 36.62 25.62 36.62 26.892C36.62 28.164 36.308 29.256 35.684 30.168C35.06 31.08 34.208 31.776 33.128 32.256C34.472 32.664 35.504 33.396 36.224 34.452C36.968 35.508 37.34 36.708 37.34 38.052ZM23.948 27.324C23.948 28.284 24.284 29.052 24.956 29.628C25.652 30.18 26.612 30.456 27.836 30.456C29.036 30.456 29.972 30.168 30.644 29.592C31.316 29.016 31.652 28.248 31.652 27.288C31.652 26.304 31.304 25.536 30.608 24.984C29.936 24.432 28.988 24.156 27.764 24.156C26.564 24.156 25.628 24.444 24.956 25.02C24.284 25.572 23.948 26.34 23.948 27.324ZM23.3 37.872C23.3 38.976 23.696 39.84 24.488 40.464C25.28 41.064 26.372 41.364 27.764 41.364C29.204 41.364 30.32 41.064 31.112 40.464C31.904 39.864 32.3 39 32.3 37.872C32.3 36.744 31.904 35.868 31.112 35.244C30.32 34.62 29.216 34.308 27.8 34.308C26.408 34.308 25.304 34.62 24.488 35.244C23.696 35.868 23.3 36.744 23.3 37.872ZM49.4579 45H44.4899V43.956C44.4899 42.156 44.5739 40.548 44.7419 39.132C44.9339 37.692 45.2339 36.336 45.6419 35.064C46.0499 33.768 46.6019 32.472 47.2979 31.176C47.9939 29.856 48.8579 28.428 49.8899 26.892L51.2939 24.84H39.6659V20.52H56.7659V24.876L54.3179 28.476C53.3819 29.844 52.6019 31.128 51.9779 32.328C51.3539 33.504 50.8499 34.68 50.4659 35.856C50.1059 37.032 49.8419 38.268 49.6739 39.564C49.5299 40.86 49.4579 42.324 49.4579 43.956V45Z\"\n            fill=\"#00A4FD\"\n        />\n        <g clipPath=\"url(#clip0)\">\n            <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M60.3674 38.7752C60.1071 39.0355 59.685 39.0355 59.4246 38.7752C59.1643 38.5148 59.1643 38.0927 59.4246 37.8324L63.2928 33.9643C63.6833 33.5738 64.3164 33.5738 64.7069 33.9643L68.575 37.8324C68.8354 38.0927 68.8354 38.5148 68.575 38.7752C68.3147 39.0355 67.8926 39.0355 67.6323 38.7752L64.6663 35.8092V43.6668C64.6663 44.035 64.3679 44.3335 63.9997 44.3335C63.6315 44.3335 63.333 44.035 63.333 43.6668V35.8095L60.3674 38.7752Z\"\n                fill=\"#53A051\"\n            />\n        </g>\n        <path\n            d=\"M72.912 45V43.976C72.912 43.144 73.0613 42.4507 73.36 41.896C73.6693 41.3413 74.0853 40.8667 74.608 40.472C75.1307 40.0667 75.7173 39.6987 76.368 39.368C77.008 39.0373 77.488 38.728 77.808 38.44C78.128 38.1413 78.288 37.7467 78.288 37.256C78.288 36.8613 78.16 36.536 77.904 36.28C77.6587 36.0133 77.296 35.88 76.816 35.88C76.3573 35.88 75.984 36.0133 75.696 36.28C75.408 36.536 75.232 36.8933 75.168 37.352H73.024C73.0453 36.9467 73.136 36.5467 73.296 36.152C73.456 35.7573 73.6907 35.3947 74 35.064C74.3093 34.7227 74.7093 34.456 75.2 34.264C75.6907 34.0613 76.272 33.96 76.944 33.96C78.064 33.96 78.9493 34.248 79.6 34.824C80.2613 35.4 80.592 36.1787 80.592 37.16C80.592 38.0347 80.3093 38.76 79.744 39.336C79.1787 39.9013 78.3893 40.44 77.376 40.952C76.8213 41.2293 76.3573 41.528 75.984 41.848C75.6213 42.168 75.3813 42.5787 75.264 43.08H80.624V45H72.912ZM82.2018 41.8H84.3458C84.4418 42.312 84.6551 42.6853 84.9858 42.92C85.3164 43.144 85.7431 43.256 86.2658 43.256C86.8418 43.256 87.2898 43.1333 87.6098 42.888C87.9404 42.6427 88.1058 42.28 88.1058 41.8C88.1058 41.3093 87.9351 40.936 87.5938 40.68C87.2631 40.4133 86.7938 40.28 86.1858 40.28H84.8418V38.584H86.2018C86.7351 38.584 87.1404 38.4613 87.4178 38.216C87.7058 37.96 87.8498 37.6187 87.8498 37.192C87.8498 36.7867 87.7058 36.4667 87.4178 36.232C87.1404 35.9867 86.7618 35.864 86.2818 35.864C85.2791 35.864 84.7031 36.3227 84.5538 37.24H82.4578C82.4791 36.7067 82.6284 36.1893 82.9058 35.688C83.1831 35.1867 83.6044 34.776 84.1698 34.456C84.7351 34.1253 85.4658 33.96 86.3618 33.96C87.1724 33.96 87.8551 34.0933 88.4098 34.36C88.9644 34.616 89.3858 34.9733 89.6737 35.432C89.9724 35.88 90.1218 36.3867 90.1218 36.952C90.1218 37.528 89.9778 38.0187 89.6898 38.424C89.4124 38.8293 89.0444 39.1387 88.5858 39.352C89.1724 39.5333 89.6258 39.8587 89.9458 40.328C90.2658 40.7867 90.4258 41.3253 90.4258 41.944C90.4258 42.584 90.2551 43.144 89.9138 43.624C89.5831 44.104 89.1084 44.4827 88.4898 44.76C87.8711 45.0267 87.1351 45.16 86.2818 45.16C85.4284 45.16 84.7031 45.016 84.1058 44.728C83.5084 44.4293 83.0498 44.024 82.7298 43.512C82.4098 43 82.2338 42.4293 82.2018 41.8Z\"\n            fill=\"#53A051\"\n        />\n        <rect x=\"0.5\" y=\"0.5\" width=\"107\" height=\"63\" rx=\"2.5\" stroke=\"#C3CBD4\" />\n        <defs>\n            <clipPath id=\"clip0\">\n                <rect width=\"15.9993\" height=\"15.9993\" fill=\"white\" transform=\"translate(56 31)\" />\n            </clipPath>\n        </defs>\n    </svg>\n);\n\nconst BackgroundPreset = (): React.ReactElement<SVGElement> => (\n    <svg width=\"108\" height=\"64\" viewBox=\"0 0 108 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect x=\"0.5\" y=\"0.5\" width=\"107\" height=\"63\" rx=\"2.5\" fill=\"#00A4FD\" />\n        <path\n            d=\"M37.34 38.052C37.34 39.492 36.944 40.764 36.152 41.868C35.384 42.948 34.28 43.8 32.84 44.424C31.424 45.048 29.744 45.36 27.8 45.36C24.896 45.36 22.58 44.712 20.852 43.416C19.124 42.12 18.26 40.344 18.26 38.088C18.26 36.72 18.62 35.508 19.34 34.452C20.06 33.396 21.104 32.664 22.472 32.256C21.392 31.776 20.54 31.08 19.916 30.168C19.292 29.256 18.98 28.164 18.98 26.892C18.98 25.668 19.316 24.552 19.988 23.544C20.66 22.512 21.656 21.696 22.976 21.096C24.296 20.472 25.904 20.16 27.8 20.16C29.768 20.16 31.4 20.46 32.696 21.06C33.992 21.636 34.964 22.44 35.612 23.472C36.284 24.48 36.62 25.62 36.62 26.892C36.62 28.164 36.308 29.256 35.684 30.168C35.06 31.08 34.208 31.776 33.128 32.256C34.472 32.664 35.504 33.396 36.224 34.452C36.968 35.508 37.34 36.708 37.34 38.052ZM23.948 27.324C23.948 28.284 24.284 29.052 24.956 29.628C25.652 30.18 26.612 30.456 27.836 30.456C29.036 30.456 29.972 30.168 30.644 29.592C31.316 29.016 31.652 28.248 31.652 27.288C31.652 26.304 31.304 25.536 30.608 24.984C29.936 24.432 28.988 24.156 27.764 24.156C26.564 24.156 25.628 24.444 24.956 25.02C24.284 25.572 23.948 26.34 23.948 27.324ZM23.3 37.872C23.3 38.976 23.696 39.84 24.488 40.464C25.28 41.064 26.372 41.364 27.764 41.364C29.204 41.364 30.32 41.064 31.112 40.464C31.904 39.864 32.3 39 32.3 37.872C32.3 36.744 31.904 35.868 31.112 35.244C30.32 34.62 29.216 34.308 27.8 34.308C26.408 34.308 25.304 34.62 24.488 35.244C23.696 35.868 23.3 36.744 23.3 37.872ZM49.4579 45H44.4899V43.956C44.4899 42.156 44.5739 40.548 44.7419 39.132C44.9339 37.692 45.2339 36.336 45.6419 35.064C46.0499 33.768 46.6019 32.472 47.2979 31.176C47.9939 29.856 48.8579 28.428 49.8899 26.892L51.2939 24.84H39.6659V20.52H56.7659V24.876L54.3179 28.476C53.3819 29.844 52.6019 31.128 51.9779 32.328C51.3539 33.504 50.8499 34.68 50.4659 35.856C50.1059 37.032 49.8419 38.268 49.6739 39.564C49.5299 40.86 49.4579 42.324 49.4579 43.956V45Z\"\n            fill=\"white\"\n        />\n        <g clipPath=\"url(#clip0)\">\n            <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M60.3674 38.7752C60.1071 39.0355 59.685 39.0355 59.4246 38.7752C59.1643 38.5148 59.1643 38.0927 59.4246 37.8324L63.2928 33.9643C63.6833 33.5738 64.3164 33.5738 64.7069 33.9643L68.575 37.8324C68.8354 38.0927 68.8354 38.5148 68.575 38.7752C68.3147 39.0355 67.8926 39.0355 67.6323 38.7752L64.6663 35.8092V43.6668C64.6663 44.035 64.3679 44.3335 63.9997 44.3335C63.6315 44.3335 63.333 44.035 63.333 43.6668V35.8095L60.3674 38.7752Z\"\n                fill=\"white\"\n            />\n        </g>\n        <path\n            d=\"M72.912 45V43.976C72.912 43.144 73.0613 42.4507 73.36 41.896C73.6693 41.3413 74.0853 40.8667 74.608 40.472C75.1307 40.0667 75.7173 39.6987 76.368 39.368C77.008 39.0373 77.488 38.728 77.808 38.44C78.128 38.1413 78.288 37.7467 78.288 37.256C78.288 36.8613 78.16 36.536 77.904 36.28C77.6587 36.0133 77.296 35.88 76.816 35.88C76.3573 35.88 75.984 36.0133 75.696 36.28C75.408 36.536 75.232 36.8933 75.168 37.352H73.024C73.0453 36.9467 73.136 36.5467 73.296 36.152C73.456 35.7573 73.6907 35.3947 74 35.064C74.3093 34.7227 74.7093 34.456 75.2 34.264C75.6907 34.0613 76.272 33.96 76.944 33.96C78.064 33.96 78.9493 34.248 79.6 34.824C80.2613 35.4 80.592 36.1787 80.592 37.16C80.592 38.0347 80.3093 38.76 79.744 39.336C79.1787 39.9013 78.3893 40.44 77.376 40.952C76.8213 41.2293 76.3573 41.528 75.984 41.848C75.6213 42.168 75.3813 42.5787 75.264 43.08H80.624V45H72.912ZM82.2018 41.8H84.3458C84.4418 42.312 84.6551 42.6853 84.9858 42.92C85.3164 43.144 85.7431 43.256 86.2658 43.256C86.8418 43.256 87.2898 43.1333 87.6098 42.888C87.9404 42.6427 88.1058 42.28 88.1058 41.8C88.1058 41.3093 87.9351 40.936 87.5938 40.68C87.2631 40.4133 86.7938 40.28 86.1858 40.28H84.8418V38.584H86.2018C86.7351 38.584 87.1404 38.4613 87.4178 38.216C87.7058 37.96 87.8498 37.6187 87.8498 37.192C87.8498 36.7867 87.7058 36.4667 87.4178 36.232C87.1404 35.9867 86.7618 35.864 86.2818 35.864C85.2791 35.864 84.7031 36.3227 84.5538 37.24H82.4578C82.4791 36.7067 82.6284 36.1893 82.9058 35.688C83.1831 35.1867 83.6044 34.776 84.1698 34.456C84.7351 34.1253 85.4658 33.96 86.3618 33.96C87.1724 33.96 87.8551 34.0933 88.4098 34.36C88.9644 34.616 89.3858 34.9733 89.6737 35.432C89.9724 35.88 90.1218 36.3867 90.1218 36.952C90.1218 37.528 89.9778 38.0187 89.6898 38.424C89.4124 38.8293 89.0444 39.1387 88.5858 39.352C89.1724 39.5333 89.6258 39.8587 89.9458 40.328C90.2658 40.7867 90.4258 41.3253 90.4258 41.944C90.4258 42.584 90.2551 43.144 89.9138 43.624C89.5831 44.104 89.1084 44.4827 88.4898 44.76C87.8711 45.0267 87.1351 45.16 86.2818 45.16C85.4284 45.16 84.7031 45.016 84.1058 44.728C83.5084 44.4293 83.0498 44.024 82.7298 43.512C82.4098 43 82.2338 42.4293 82.2018 41.8Z\"\n            fill=\"white\"\n        />\n        <rect x=\"0.5\" y=\"0.5\" width=\"107\" height=\"63\" rx=\"2.5\" stroke=\"#C3CBD4\" />\n        <defs>\n            <clipPath id=\"clip0\">\n                <rect width=\"15.9993\" height=\"15.9993\" fill=\"white\" transform=\"translate(56 31)\" />\n            </clipPath>\n        </defs>\n    </svg>\n);\n\nexport default {\n    'singleValue.none': NonePreset,\n    'singleValue.majorValue': MajorValuePreset,\n    'singleValue.trend': TrendPreset,\n    'singleValue.majorValueAndTrend': MajorValueAndTrendPreset,\n    'singleValue.background': BackgroundPreset,\n};\n","import * as React from 'react';\n\nconst NonePreset = (): React.ReactElement<SVGElement> => (\n    <svg width=\"108\" height=\"64\" viewBox=\"0 0 108 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect x=\"0.5\" y=\"0.5\" width=\"107\" height=\"63\" rx=\"2.5\" fill=\"#F2F4F5\" />\n        <path\n            d=\"M43.34 38.052C43.34 39.492 42.944 40.764 42.152 41.868C41.384 42.948 40.28 43.8 38.84 44.424C37.424 45.048 35.744 45.36 33.8 45.36C30.896 45.36 28.58 44.712 26.852 43.416C25.124 42.12 24.26 40.344 24.26 38.088C24.26 36.72 24.62 35.508 25.34 34.452C26.06 33.396 27.104 32.664 28.472 32.256C27.392 31.776 26.54 31.08 25.916 30.168C25.292 29.256 24.98 28.164 24.98 26.892C24.98 25.668 25.316 24.552 25.988 23.544C26.66 22.512 27.656 21.696 28.976 21.096C30.296 20.472 31.904 20.16 33.8 20.16C35.768 20.16 37.4 20.46 38.696 21.06C39.992 21.636 40.964 22.44 41.612 23.472C42.284 24.48 42.62 25.62 42.62 26.892C42.62 28.164 42.308 29.256 41.684 30.168C41.06 31.08 40.208 31.776 39.128 32.256C40.472 32.664 41.504 33.396 42.224 34.452C42.968 35.508 43.34 36.708 43.34 38.052ZM29.948 27.324C29.948 28.284 30.284 29.052 30.956 29.628C31.652 30.18 32.612 30.456 33.836 30.456C35.036 30.456 35.972 30.168 36.644 29.592C37.316 29.016 37.652 28.248 37.652 27.288C37.652 26.304 37.304 25.536 36.608 24.984C35.936 24.432 34.988 24.156 33.764 24.156C32.564 24.156 31.628 24.444 30.956 25.02C30.284 25.572 29.948 26.34 29.948 27.324ZM29.3 37.872C29.3 38.976 29.696 39.84 30.488 40.464C31.28 41.064 32.372 41.364 33.764 41.364C35.204 41.364 36.32 41.064 37.112 40.464C37.904 39.864 38.3 39 38.3 37.872C38.3 36.744 37.904 35.868 37.112 35.244C36.32 34.62 35.216 34.308 33.8 34.308C32.408 34.308 31.304 34.62 30.488 35.244C29.696 35.868 29.3 36.744 29.3 37.872ZM55.4579 45H50.4899V43.956C50.4899 42.156 50.5739 40.548 50.7419 39.132C50.9339 37.692 51.2339 36.336 51.6419 35.064C52.0499 33.768 52.6019 32.472 53.2979 31.176C53.9939 29.856 54.8579 28.428 55.8899 26.892L57.2939 24.84H45.6659V20.52H62.7659V24.876L60.3179 28.476C59.3819 29.844 58.6019 31.128 57.9779 32.328C57.3539 33.504 56.8499 34.68 56.4659 35.856C56.1059 37.032 55.8419 38.268 55.6739 39.564C55.5299 40.86 55.4579 42.324 55.4579 43.956V45Z\"\n            fill=\"#C3CBD4\"\n        />\n        <g clipPath=\"url(#clip0)\">\n            <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M66.3675 38.7752C66.1072 39.0355 65.6851 39.0355 65.4247 38.7752C65.1644 38.5148 65.1644 38.0927 65.4247 37.8324L69.2929 33.9643C69.6834 33.5738 70.3165 33.5738 70.707 33.9643L74.5752 37.8324C74.8355 38.0927 74.8355 38.5148 74.5752 38.7752C74.3148 39.0355 73.8927 39.0355 73.6324 38.7752L70.6664 35.8092V43.6668C70.6664 44.035 70.368 44.3335 69.9998 44.3335C69.6316 44.3335 69.3332 44.035 69.3332 43.6668V35.8095L66.3675 38.7752Z\"\n                fill=\"#C3CBD4\"\n            />\n        </g>\n        <path\n            d=\"M78.912 45V43.976C78.912 43.144 79.0613 42.4507 79.36 41.896C79.6693 41.3413 80.0853 40.8667 80.608 40.472C81.1307 40.0667 81.7173 39.6987 82.368 39.368C83.008 39.0373 83.488 38.728 83.808 38.44C84.128 38.1413 84.288 37.7467 84.288 37.256C84.288 36.8613 84.16 36.536 83.904 36.28C83.6587 36.0133 83.296 35.88 82.816 35.88C82.3573 35.88 81.984 36.0133 81.696 36.28C81.408 36.536 81.232 36.8933 81.168 37.352H79.024C79.0453 36.9467 79.136 36.5467 79.296 36.152C79.456 35.7573 79.6907 35.3947 80 35.064C80.3093 34.7227 80.7093 34.456 81.2 34.264C81.6907 34.0613 82.272 33.96 82.944 33.96C84.064 33.96 84.9493 34.248 85.6 34.824C86.2613 35.4 86.592 36.1787 86.592 37.16C86.592 38.0347 86.3093 38.76 85.744 39.336C85.1787 39.9013 84.3893 40.44 83.376 40.952C82.8213 41.2293 82.3573 41.528 81.984 41.848C81.6213 42.168 81.3813 42.5787 81.264 43.08H86.624V45H78.912ZM88.2018 41.8H90.3458C90.4418 42.312 90.6551 42.6853 90.9858 42.92C91.3164 43.144 91.7431 43.256 92.2658 43.256C92.8418 43.256 93.2898 43.1333 93.6098 42.888C93.9404 42.6427 94.1058 42.28 94.1058 41.8C94.1058 41.3093 93.9351 40.936 93.5938 40.68C93.2631 40.4133 92.7938 40.28 92.1858 40.28H90.8418V38.584H92.2018C92.7351 38.584 93.1404 38.4613 93.4178 38.216C93.7058 37.96 93.8498 37.6187 93.8498 37.192C93.8498 36.7867 93.7058 36.4667 93.4178 36.232C93.1404 35.9867 92.7618 35.864 92.2818 35.864C91.2791 35.864 90.7031 36.3227 90.5538 37.24H88.4578C88.4791 36.7067 88.6284 36.1893 88.9058 35.688C89.1831 35.1867 89.6044 34.776 90.1698 34.456C90.7351 34.1253 91.4658 33.96 92.3618 33.96C93.1724 33.96 93.8551 34.0933 94.4098 34.36C94.9644 34.616 95.3858 34.9733 95.6737 35.432C95.9724 35.88 96.1218 36.3867 96.1218 36.952C96.1218 37.528 95.9778 38.0187 95.6898 38.424C95.4124 38.8293 95.0444 39.1387 94.5858 39.352C95.1724 39.5333 95.6258 39.8587 95.9458 40.328C96.2658 40.7867 96.4258 41.3253 96.4258 41.944C96.4258 42.584 96.2551 43.144 95.9138 43.624C95.5831 44.104 95.1084 44.4827 94.4898 44.76C93.8711 45.0267 93.1351 45.16 92.2818 45.16C91.4284 45.16 90.7031 45.016 90.1058 44.728C89.5084 44.4293 89.0498 44.024 88.7298 43.512C88.4098 43 88.2338 42.4293 88.2018 41.8Z\"\n            fill=\"#C3CBD4\"\n        />\n        <rect x=\"10\" y=\"28\" width=\"8\" height=\"8\" rx=\"3\" fill=\"#C3CBD4\" />\n        <rect x=\"0.5\" y=\"0.5\" width=\"107\" height=\"63\" rx=\"2.5\" stroke=\"#C3CBD4\" />\n        <defs>\n            <clipPath id=\"clip0\">\n                <rect width=\"15.9993\" height=\"15.9993\" fill=\"white\" transform=\"translate(62 31)\" />\n            </clipPath>\n        </defs>\n    </svg>\n);\n\nconst IconPreset = (): React.ReactElement<SVGElement> => (\n    <svg width=\"108\" height=\"64\" viewBox=\"0 0 108 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect x=\"0.5\" y=\"0.5\" width=\"107\" height=\"63\" rx=\"2.5\" fill=\"#F2F4F5\" />\n        <path\n            d=\"M43.34 38.052C43.34 39.492 42.944 40.764 42.152 41.868C41.384 42.948 40.28 43.8 38.84 44.424C37.424 45.048 35.744 45.36 33.8 45.36C30.896 45.36 28.58 44.712 26.852 43.416C25.124 42.12 24.26 40.344 24.26 38.088C24.26 36.72 24.62 35.508 25.34 34.452C26.06 33.396 27.104 32.664 28.472 32.256C27.392 31.776 26.54 31.08 25.916 30.168C25.292 29.256 24.98 28.164 24.98 26.892C24.98 25.668 25.316 24.552 25.988 23.544C26.66 22.512 27.656 21.696 28.976 21.096C30.296 20.472 31.904 20.16 33.8 20.16C35.768 20.16 37.4 20.46 38.696 21.06C39.992 21.636 40.964 22.44 41.612 23.472C42.284 24.48 42.62 25.62 42.62 26.892C42.62 28.164 42.308 29.256 41.684 30.168C41.06 31.08 40.208 31.776 39.128 32.256C40.472 32.664 41.504 33.396 42.224 34.452C42.968 35.508 43.34 36.708 43.34 38.052ZM29.948 27.324C29.948 28.284 30.284 29.052 30.956 29.628C31.652 30.18 32.612 30.456 33.836 30.456C35.036 30.456 35.972 30.168 36.644 29.592C37.316 29.016 37.652 28.248 37.652 27.288C37.652 26.304 37.304 25.536 36.608 24.984C35.936 24.432 34.988 24.156 33.764 24.156C32.564 24.156 31.628 24.444 30.956 25.02C30.284 25.572 29.948 26.34 29.948 27.324ZM29.3 37.872C29.3 38.976 29.696 39.84 30.488 40.464C31.28 41.064 32.372 41.364 33.764 41.364C35.204 41.364 36.32 41.064 37.112 40.464C37.904 39.864 38.3 39 38.3 37.872C38.3 36.744 37.904 35.868 37.112 35.244C36.32 34.62 35.216 34.308 33.8 34.308C32.408 34.308 31.304 34.62 30.488 35.244C29.696 35.868 29.3 36.744 29.3 37.872ZM55.4579 45H50.4899V43.956C50.4899 42.156 50.5739 40.548 50.7419 39.132C50.9339 37.692 51.2339 36.336 51.6419 35.064C52.0499 33.768 52.6019 32.472 53.2979 31.176C53.9939 29.856 54.8579 28.428 55.8899 26.892L57.2939 24.84H45.6659V20.52H62.7659V24.876L60.3179 28.476C59.3819 29.844 58.6019 31.128 57.9779 32.328C57.3539 33.504 56.8499 34.68 56.4659 35.856C56.1059 37.032 55.8419 38.268 55.6739 39.564C55.5299 40.86 55.4579 42.324 55.4579 43.956V45Z\"\n            fill=\"#C3CBD4\"\n        />\n        <g clipPath=\"url(#clip0)\">\n            <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M66.3675 38.7752C66.1072 39.0355 65.6851 39.0355 65.4247 38.7752C65.1644 38.5148 65.1644 38.0927 65.4247 37.8324L69.2929 33.9643C69.6834 33.5738 70.3165 33.5738 70.707 33.9643L74.5752 37.8324C74.8355 38.0927 74.8355 38.5148 74.5752 38.7752C74.3148 39.0355 73.8927 39.0355 73.6324 38.7752L70.6664 35.8092V43.6668C70.6664 44.035 70.368 44.3335 69.9998 44.3335C69.6316 44.3335 69.3332 44.035 69.3332 43.6668V35.8095L66.3675 38.7752Z\"\n                fill=\"#C3CBD4\"\n            />\n        </g>\n        <path\n            d=\"M78.912 45V43.976C78.912 43.144 79.0613 42.4507 79.36 41.896C79.6693 41.3413 80.0853 40.8667 80.608 40.472C81.1307 40.0667 81.7173 39.6987 82.368 39.368C83.008 39.0373 83.488 38.728 83.808 38.44C84.128 38.1413 84.288 37.7467 84.288 37.256C84.288 36.8613 84.16 36.536 83.904 36.28C83.6587 36.0133 83.296 35.88 82.816 35.88C82.3573 35.88 81.984 36.0133 81.696 36.28C81.408 36.536 81.232 36.8933 81.168 37.352H79.024C79.0453 36.9467 79.136 36.5467 79.296 36.152C79.456 35.7573 79.6907 35.3947 80 35.064C80.3093 34.7227 80.7093 34.456 81.2 34.264C81.6907 34.0613 82.272 33.96 82.944 33.96C84.064 33.96 84.9493 34.248 85.6 34.824C86.2613 35.4 86.592 36.1787 86.592 37.16C86.592 38.0347 86.3093 38.76 85.744 39.336C85.1787 39.9013 84.3893 40.44 83.376 40.952C82.8213 41.2293 82.3573 41.528 81.984 41.848C81.6213 42.168 81.3813 42.5787 81.264 43.08H86.624V45H78.912ZM88.2018 41.8H90.3458C90.4418 42.312 90.6551 42.6853 90.9858 42.92C91.3164 43.144 91.7431 43.256 92.2658 43.256C92.8418 43.256 93.2898 43.1333 93.6098 42.888C93.9404 42.6427 94.1058 42.28 94.1058 41.8C94.1058 41.3093 93.9351 40.936 93.5938 40.68C93.2631 40.4133 92.7938 40.28 92.1858 40.28H90.8418V38.584H92.2018C92.7351 38.584 93.1404 38.4613 93.4178 38.216C93.7058 37.96 93.8498 37.6187 93.8498 37.192C93.8498 36.7867 93.7058 36.4667 93.4178 36.232C93.1404 35.9867 92.7618 35.864 92.2818 35.864C91.2791 35.864 90.7031 36.3227 90.5538 37.24H88.4578C88.4791 36.7067 88.6284 36.1893 88.9058 35.688C89.1831 35.1867 89.6044 34.776 90.1698 34.456C90.7351 34.1253 91.4658 33.96 92.3618 33.96C93.1724 33.96 93.8551 34.0933 94.4098 34.36C94.9644 34.616 95.3858 34.9733 95.6737 35.432C95.9724 35.88 96.1218 36.3867 96.1218 36.952C96.1218 37.528 95.9778 38.0187 95.6898 38.424C95.4124 38.8293 95.0444 39.1387 94.5858 39.352C95.1724 39.5333 95.6258 39.8587 95.9458 40.328C96.2658 40.7867 96.4258 41.3253 96.4258 41.944C96.4258 42.584 96.2551 43.144 95.9138 43.624C95.5831 44.104 95.1084 44.4827 94.4898 44.76C93.8711 45.0267 93.1351 45.16 92.2818 45.16C91.4284 45.16 90.7031 45.016 90.1058 44.728C89.5084 44.4293 89.0498 44.024 88.7298 43.512C88.4098 43 88.2338 42.4293 88.2018 41.8Z\"\n            fill=\"#C3CBD4\"\n        />\n        <rect x=\"10\" y=\"28\" width=\"8\" height=\"8\" rx=\"3\" fill=\"#00A4FD\" />\n        <rect x=\"0.5\" y=\"0.5\" width=\"107\" height=\"63\" rx=\"2.5\" stroke=\"#C3CBD4\" />\n        <defs>\n            <clipPath id=\"clip0\">\n                <rect width=\"15.9993\" height=\"15.9993\" fill=\"white\" transform=\"translate(62 31)\" />\n            </clipPath>\n        </defs>\n    </svg>\n);\n\nconst MajorValuePreset = (): React.ReactElement<SVGElement> => (\n    <svg width=\"108\" height=\"64\" viewBox=\"0 0 108 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect x=\"0.5\" y=\"0.5\" width=\"107\" height=\"63\" rx=\"2.5\" fill=\"#F2F4F5\" />\n        <path\n            d=\"M43.34 38.052C43.34 39.492 42.944 40.764 42.152 41.868C41.384 42.948 40.28 43.8 38.84 44.424C37.424 45.048 35.744 45.36 33.8 45.36C30.896 45.36 28.58 44.712 26.852 43.416C25.124 42.12 24.26 40.344 24.26 38.088C24.26 36.72 24.62 35.508 25.34 34.452C26.06 33.396 27.104 32.664 28.472 32.256C27.392 31.776 26.54 31.08 25.916 30.168C25.292 29.256 24.98 28.164 24.98 26.892C24.98 25.668 25.316 24.552 25.988 23.544C26.66 22.512 27.656 21.696 28.976 21.096C30.296 20.472 31.904 20.16 33.8 20.16C35.768 20.16 37.4 20.46 38.696 21.06C39.992 21.636 40.964 22.44 41.612 23.472C42.284 24.48 42.62 25.62 42.62 26.892C42.62 28.164 42.308 29.256 41.684 30.168C41.06 31.08 40.208 31.776 39.128 32.256C40.472 32.664 41.504 33.396 42.224 34.452C42.968 35.508 43.34 36.708 43.34 38.052ZM29.948 27.324C29.948 28.284 30.284 29.052 30.956 29.628C31.652 30.18 32.612 30.456 33.836 30.456C35.036 30.456 35.972 30.168 36.644 29.592C37.316 29.016 37.652 28.248 37.652 27.288C37.652 26.304 37.304 25.536 36.608 24.984C35.936 24.432 34.988 24.156 33.764 24.156C32.564 24.156 31.628 24.444 30.956 25.02C30.284 25.572 29.948 26.34 29.948 27.324ZM29.3 37.872C29.3 38.976 29.696 39.84 30.488 40.464C31.28 41.064 32.372 41.364 33.764 41.364C35.204 41.364 36.32 41.064 37.112 40.464C37.904 39.864 38.3 39 38.3 37.872C38.3 36.744 37.904 35.868 37.112 35.244C36.32 34.62 35.216 34.308 33.8 34.308C32.408 34.308 31.304 34.62 30.488 35.244C29.696 35.868 29.3 36.744 29.3 37.872ZM55.4579 45H50.4899V43.956C50.4899 42.156 50.5739 40.548 50.7419 39.132C50.9339 37.692 51.2339 36.336 51.6419 35.064C52.0499 33.768 52.6019 32.472 53.2979 31.176C53.9939 29.856 54.8579 28.428 55.8899 26.892L57.2939 24.84H45.6659V20.52H62.7659V24.876L60.3179 28.476C59.3819 29.844 58.6019 31.128 57.9779 32.328C57.3539 33.504 56.8499 34.68 56.4659 35.856C56.1059 37.032 55.8419 38.268 55.6739 39.564C55.5299 40.86 55.4579 42.324 55.4579 43.956V45Z\"\n            fill=\"#00A4FD\"\n        />\n        <g clipPath=\"url(#clip0)\">\n            <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M66.3675 38.7752C66.1072 39.0355 65.6851 39.0355 65.4247 38.7752C65.1644 38.5148 65.1644 38.0927 65.4247 37.8324L69.2929 33.9643C69.6834 33.5738 70.3165 33.5738 70.707 33.9643L74.5752 37.8324C74.8355 38.0927 74.8355 38.5148 74.5752 38.7752C74.3148 39.0355 73.8927 39.0355 73.6324 38.7752L70.6664 35.8092V43.6668C70.6664 44.035 70.368 44.3335 69.9998 44.3335C69.6316 44.3335 69.3332 44.035 69.3332 43.6668V35.8095L66.3675 38.7752Z\"\n                fill=\"#C3CBD4\"\n            />\n        </g>\n        <path\n            d=\"M78.912 45V43.976C78.912 43.144 79.0613 42.4507 79.36 41.896C79.6693 41.3413 80.0853 40.8667 80.608 40.472C81.1307 40.0667 81.7173 39.6987 82.368 39.368C83.008 39.0373 83.488 38.728 83.808 38.44C84.128 38.1413 84.288 37.7467 84.288 37.256C84.288 36.8613 84.16 36.536 83.904 36.28C83.6587 36.0133 83.296 35.88 82.816 35.88C82.3573 35.88 81.984 36.0133 81.696 36.28C81.408 36.536 81.232 36.8933 81.168 37.352H79.024C79.0453 36.9467 79.136 36.5467 79.296 36.152C79.456 35.7573 79.6907 35.3947 80 35.064C80.3093 34.7227 80.7093 34.456 81.2 34.264C81.6907 34.0613 82.272 33.96 82.944 33.96C84.064 33.96 84.9493 34.248 85.6 34.824C86.2613 35.4 86.592 36.1787 86.592 37.16C86.592 38.0347 86.3093 38.76 85.744 39.336C85.1787 39.9013 84.3893 40.44 83.376 40.952C82.8213 41.2293 82.3573 41.528 81.984 41.848C81.6213 42.168 81.3813 42.5787 81.264 43.08H86.624V45H78.912ZM88.2018 41.8H90.3458C90.4418 42.312 90.6551 42.6853 90.9858 42.92C91.3164 43.144 91.7431 43.256 92.2658 43.256C92.8418 43.256 93.2898 43.1333 93.6098 42.888C93.9404 42.6427 94.1058 42.28 94.1058 41.8C94.1058 41.3093 93.9351 40.936 93.5938 40.68C93.2631 40.4133 92.7938 40.28 92.1858 40.28H90.8418V38.584H92.2018C92.7351 38.584 93.1404 38.4613 93.4178 38.216C93.7058 37.96 93.8498 37.6187 93.8498 37.192C93.8498 36.7867 93.7058 36.4667 93.4178 36.232C93.1404 35.9867 92.7618 35.864 92.2818 35.864C91.2791 35.864 90.7031 36.3227 90.5538 37.24H88.4578C88.4791 36.7067 88.6284 36.1893 88.9058 35.688C89.1831 35.1867 89.6044 34.776 90.1698 34.456C90.7351 34.1253 91.4658 33.96 92.3618 33.96C93.1724 33.96 93.8551 34.0933 94.4098 34.36C94.9644 34.616 95.3858 34.9733 95.6737 35.432C95.9724 35.88 96.1218 36.3867 96.1218 36.952C96.1218 37.528 95.9778 38.0187 95.6898 38.424C95.4124 38.8293 95.0444 39.1387 94.5858 39.352C95.1724 39.5333 95.6258 39.8587 95.9458 40.328C96.2658 40.7867 96.4258 41.3253 96.4258 41.944C96.4258 42.584 96.2551 43.144 95.9138 43.624C95.5831 44.104 95.1084 44.4827 94.4898 44.76C93.8711 45.0267 93.1351 45.16 92.2818 45.16C91.4284 45.16 90.7031 45.016 90.1058 44.728C89.5084 44.4293 89.0498 44.024 88.7298 43.512C88.4098 43 88.2338 42.4293 88.2018 41.8Z\"\n            fill=\"#C3CBD4\"\n        />\n        <rect x=\"10\" y=\"28\" width=\"8\" height=\"8\" rx=\"3\" fill=\"#C3CBD4\" />\n        <rect x=\"0.5\" y=\"0.5\" width=\"107\" height=\"63\" rx=\"2.5\" stroke=\"#C3CBD4\" />\n        <defs>\n            <clipPath id=\"clip0\">\n                <rect width=\"15.9993\" height=\"15.9993\" fill=\"white\" transform=\"translate(62 31)\" />\n            </clipPath>\n        </defs>\n    </svg>\n);\n\nconst TrendPreset = (): React.ReactElement<SVGElement> => (\n    <svg width=\"108\" height=\"64\" viewBox=\"0 0 108 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect x=\"0.5\" y=\"0.5\" width=\"107\" height=\"63\" rx=\"2.5\" fill=\"#F2F4F5\" />\n        <path\n            d=\"M43.34 38.052C43.34 39.492 42.944 40.764 42.152 41.868C41.384 42.948 40.28 43.8 38.84 44.424C37.424 45.048 35.744 45.36 33.8 45.36C30.896 45.36 28.58 44.712 26.852 43.416C25.124 42.12 24.26 40.344 24.26 38.088C24.26 36.72 24.62 35.508 25.34 34.452C26.06 33.396 27.104 32.664 28.472 32.256C27.392 31.776 26.54 31.08 25.916 30.168C25.292 29.256 24.98 28.164 24.98 26.892C24.98 25.668 25.316 24.552 25.988 23.544C26.66 22.512 27.656 21.696 28.976 21.096C30.296 20.472 31.904 20.16 33.8 20.16C35.768 20.16 37.4 20.46 38.696 21.06C39.992 21.636 40.964 22.44 41.612 23.472C42.284 24.48 42.62 25.62 42.62 26.892C42.62 28.164 42.308 29.256 41.684 30.168C41.06 31.08 40.208 31.776 39.128 32.256C40.472 32.664 41.504 33.396 42.224 34.452C42.968 35.508 43.34 36.708 43.34 38.052ZM29.948 27.324C29.948 28.284 30.284 29.052 30.956 29.628C31.652 30.18 32.612 30.456 33.836 30.456C35.036 30.456 35.972 30.168 36.644 29.592C37.316 29.016 37.652 28.248 37.652 27.288C37.652 26.304 37.304 25.536 36.608 24.984C35.936 24.432 34.988 24.156 33.764 24.156C32.564 24.156 31.628 24.444 30.956 25.02C30.284 25.572 29.948 26.34 29.948 27.324ZM29.3 37.872C29.3 38.976 29.696 39.84 30.488 40.464C31.28 41.064 32.372 41.364 33.764 41.364C35.204 41.364 36.32 41.064 37.112 40.464C37.904 39.864 38.3 39 38.3 37.872C38.3 36.744 37.904 35.868 37.112 35.244C36.32 34.62 35.216 34.308 33.8 34.308C32.408 34.308 31.304 34.62 30.488 35.244C29.696 35.868 29.3 36.744 29.3 37.872ZM55.4579 45H50.4899V43.956C50.4899 42.156 50.5739 40.548 50.7419 39.132C50.9339 37.692 51.2339 36.336 51.6419 35.064C52.0499 33.768 52.6019 32.472 53.2979 31.176C53.9939 29.856 54.8579 28.428 55.8899 26.892L57.2939 24.84H45.6659V20.52H62.7659V24.876L60.3179 28.476C59.3819 29.844 58.6019 31.128 57.9779 32.328C57.3539 33.504 56.8499 34.68 56.4659 35.856C56.1059 37.032 55.8419 38.268 55.6739 39.564C55.5299 40.86 55.4579 42.324 55.4579 43.956V45Z\"\n            fill=\"#C3CBD4\"\n        />\n        <g clipPath=\"url(#clip0)\">\n            <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M66.3675 38.7752C66.1072 39.0355 65.6851 39.0355 65.4247 38.7752C65.1644 38.5148 65.1644 38.0927 65.4247 37.8324L69.2929 33.9643C69.6834 33.5738 70.3165 33.5738 70.707 33.9643L74.5752 37.8324C74.8355 38.0927 74.8355 38.5148 74.5752 38.7752C74.3148 39.0355 73.8927 39.0355 73.6324 38.7752L70.6664 35.8092V43.6668C70.6664 44.035 70.368 44.3335 69.9998 44.3335C69.6316 44.3335 69.3332 44.035 69.3332 43.6668V35.8095L66.3675 38.7752Z\"\n                fill=\"#53A051\"\n            />\n        </g>\n        <path\n            d=\"M78.912 45V43.976C78.912 43.144 79.0613 42.4507 79.36 41.896C79.6693 41.3413 80.0853 40.8667 80.608 40.472C81.1307 40.0667 81.7173 39.6987 82.368 39.368C83.008 39.0373 83.488 38.728 83.808 38.44C84.128 38.1413 84.288 37.7467 84.288 37.256C84.288 36.8613 84.16 36.536 83.904 36.28C83.6587 36.0133 83.296 35.88 82.816 35.88C82.3573 35.88 81.984 36.0133 81.696 36.28C81.408 36.536 81.232 36.8933 81.168 37.352H79.024C79.0453 36.9467 79.136 36.5467 79.296 36.152C79.456 35.7573 79.6907 35.3947 80 35.064C80.3093 34.7227 80.7093 34.456 81.2 34.264C81.6907 34.0613 82.272 33.96 82.944 33.96C84.064 33.96 84.9493 34.248 85.6 34.824C86.2613 35.4 86.592 36.1787 86.592 37.16C86.592 38.0347 86.3093 38.76 85.744 39.336C85.1787 39.9013 84.3893 40.44 83.376 40.952C82.8213 41.2293 82.3573 41.528 81.984 41.848C81.6213 42.168 81.3813 42.5787 81.264 43.08H86.624V45H78.912ZM88.2018 41.8H90.3458C90.4418 42.312 90.6551 42.6853 90.9858 42.92C91.3164 43.144 91.7431 43.256 92.2658 43.256C92.8418 43.256 93.2898 43.1333 93.6098 42.888C93.9404 42.6427 94.1058 42.28 94.1058 41.8C94.1058 41.3093 93.9351 40.936 93.5938 40.68C93.2631 40.4133 92.7938 40.28 92.1858 40.28H90.8418V38.584H92.2018C92.7351 38.584 93.1404 38.4613 93.4178 38.216C93.7058 37.96 93.8498 37.6187 93.8498 37.192C93.8498 36.7867 93.7058 36.4667 93.4178 36.232C93.1404 35.9867 92.7618 35.864 92.2818 35.864C91.2791 35.864 90.7031 36.3227 90.5538 37.24H88.4578C88.4791 36.7067 88.6284 36.1893 88.9058 35.688C89.1831 35.1867 89.6044 34.776 90.1698 34.456C90.7351 34.1253 91.4658 33.96 92.3618 33.96C93.1724 33.96 93.8551 34.0933 94.4098 34.36C94.9644 34.616 95.3858 34.9733 95.6737 35.432C95.9724 35.88 96.1218 36.3867 96.1218 36.952C96.1218 37.528 95.9778 38.0187 95.6898 38.424C95.4124 38.8293 95.0444 39.1387 94.5858 39.352C95.1724 39.5333 95.6258 39.8587 95.9458 40.328C96.2658 40.7867 96.4258 41.3253 96.4258 41.944C96.4258 42.584 96.2551 43.144 95.9138 43.624C95.5831 44.104 95.1084 44.4827 94.4898 44.76C93.8711 45.0267 93.1351 45.16 92.2818 45.16C91.4284 45.16 90.7031 45.016 90.1058 44.728C89.5084 44.4293 89.0498 44.024 88.7298 43.512C88.4098 43 88.2338 42.4293 88.2018 41.8Z\"\n            fill=\"#53A051\"\n        />\n        <rect x=\"10\" y=\"28\" width=\"8\" height=\"8\" rx=\"3\" fill=\"#C3CBD4\" />\n        <rect x=\"0.5\" y=\"0.5\" width=\"107\" height=\"63\" rx=\"2.5\" stroke=\"#C3CBD4\" />\n        <defs>\n            <clipPath id=\"clip0\">\n                <rect width=\"15.9993\" height=\"15.9993\" fill=\"white\" transform=\"translate(62 31)\" />\n            </clipPath>\n        </defs>\n    </svg>\n);\n\nconst IconAndMajorValuePreset = (): React.ReactElement<SVGElement> => (\n    <svg width=\"108\" height=\"64\" viewBox=\"0 0 108 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect x=\"0.5\" y=\"0.5\" width=\"107\" height=\"63\" rx=\"2.5\" fill=\"#F2F4F5\" />\n        <path\n            d=\"M43.34 38.052C43.34 39.492 42.944 40.764 42.152 41.868C41.384 42.948 40.28 43.8 38.84 44.424C37.424 45.048 35.744 45.36 33.8 45.36C30.896 45.36 28.58 44.712 26.852 43.416C25.124 42.12 24.26 40.344 24.26 38.088C24.26 36.72 24.62 35.508 25.34 34.452C26.06 33.396 27.104 32.664 28.472 32.256C27.392 31.776 26.54 31.08 25.916 30.168C25.292 29.256 24.98 28.164 24.98 26.892C24.98 25.668 25.316 24.552 25.988 23.544C26.66 22.512 27.656 21.696 28.976 21.096C30.296 20.472 31.904 20.16 33.8 20.16C35.768 20.16 37.4 20.46 38.696 21.06C39.992 21.636 40.964 22.44 41.612 23.472C42.284 24.48 42.62 25.62 42.62 26.892C42.62 28.164 42.308 29.256 41.684 30.168C41.06 31.08 40.208 31.776 39.128 32.256C40.472 32.664 41.504 33.396 42.224 34.452C42.968 35.508 43.34 36.708 43.34 38.052ZM29.948 27.324C29.948 28.284 30.284 29.052 30.956 29.628C31.652 30.18 32.612 30.456 33.836 30.456C35.036 30.456 35.972 30.168 36.644 29.592C37.316 29.016 37.652 28.248 37.652 27.288C37.652 26.304 37.304 25.536 36.608 24.984C35.936 24.432 34.988 24.156 33.764 24.156C32.564 24.156 31.628 24.444 30.956 25.02C30.284 25.572 29.948 26.34 29.948 27.324ZM29.3 37.872C29.3 38.976 29.696 39.84 30.488 40.464C31.28 41.064 32.372 41.364 33.764 41.364C35.204 41.364 36.32 41.064 37.112 40.464C37.904 39.864 38.3 39 38.3 37.872C38.3 36.744 37.904 35.868 37.112 35.244C36.32 34.62 35.216 34.308 33.8 34.308C32.408 34.308 31.304 34.62 30.488 35.244C29.696 35.868 29.3 36.744 29.3 37.872ZM55.4579 45H50.4899V43.956C50.4899 42.156 50.5739 40.548 50.7419 39.132C50.9339 37.692 51.2339 36.336 51.6419 35.064C52.0499 33.768 52.6019 32.472 53.2979 31.176C53.9939 29.856 54.8579 28.428 55.8899 26.892L57.2939 24.84H45.6659V20.52H62.7659V24.876L60.3179 28.476C59.3819 29.844 58.6019 31.128 57.9779 32.328C57.3539 33.504 56.8499 34.68 56.4659 35.856C56.1059 37.032 55.8419 38.268 55.6739 39.564C55.5299 40.86 55.4579 42.324 55.4579 43.956V45Z\"\n            fill=\"#00A4FD\"\n        />\n        <g clipPath=\"url(#clip0)\">\n            <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M66.3675 38.7752C66.1072 39.0355 65.6851 39.0355 65.4247 38.7752C65.1644 38.5148 65.1644 38.0927 65.4247 37.8324L69.2929 33.9643C69.6834 33.5738 70.3165 33.5738 70.707 33.9643L74.5752 37.8324C74.8355 38.0927 74.8355 38.5148 74.5752 38.7752C74.3148 39.0355 73.8927 39.0355 73.6324 38.7752L70.6664 35.8092V43.6668C70.6664 44.035 70.368 44.3335 69.9998 44.3335C69.6316 44.3335 69.3332 44.035 69.3332 43.6668V35.8095L66.3675 38.7752Z\"\n                fill=\"#C3CBD4\"\n            />\n        </g>\n        <path\n            d=\"M78.912 45V43.976C78.912 43.144 79.0613 42.4507 79.36 41.896C79.6693 41.3413 80.0853 40.8667 80.608 40.472C81.1307 40.0667 81.7173 39.6987 82.368 39.368C83.008 39.0373 83.488 38.728 83.808 38.44C84.128 38.1413 84.288 37.7467 84.288 37.256C84.288 36.8613 84.16 36.536 83.904 36.28C83.6587 36.0133 83.296 35.88 82.816 35.88C82.3573 35.88 81.984 36.0133 81.696 36.28C81.408 36.536 81.232 36.8933 81.168 37.352H79.024C79.0453 36.9467 79.136 36.5467 79.296 36.152C79.456 35.7573 79.6907 35.3947 80 35.064C80.3093 34.7227 80.7093 34.456 81.2 34.264C81.6907 34.0613 82.272 33.96 82.944 33.96C84.064 33.96 84.9493 34.248 85.6 34.824C86.2613 35.4 86.592 36.1787 86.592 37.16C86.592 38.0347 86.3093 38.76 85.744 39.336C85.1787 39.9013 84.3893 40.44 83.376 40.952C82.8213 41.2293 82.3573 41.528 81.984 41.848C81.6213 42.168 81.3813 42.5787 81.264 43.08H86.624V45H78.912ZM88.2018 41.8H90.3458C90.4418 42.312 90.6551 42.6853 90.9858 42.92C91.3164 43.144 91.7431 43.256 92.2658 43.256C92.8418 43.256 93.2898 43.1333 93.6098 42.888C93.9404 42.6427 94.1058 42.28 94.1058 41.8C94.1058 41.3093 93.9351 40.936 93.5938 40.68C93.2631 40.4133 92.7938 40.28 92.1858 40.28H90.8418V38.584H92.2018C92.7351 38.584 93.1404 38.4613 93.4178 38.216C93.7058 37.96 93.8498 37.6187 93.8498 37.192C93.8498 36.7867 93.7058 36.4667 93.4178 36.232C93.1404 35.9867 92.7618 35.864 92.2818 35.864C91.2791 35.864 90.7031 36.3227 90.5538 37.24H88.4578C88.4791 36.7067 88.6284 36.1893 88.9058 35.688C89.1831 35.1867 89.6044 34.776 90.1698 34.456C90.7351 34.1253 91.4658 33.96 92.3618 33.96C93.1724 33.96 93.8551 34.0933 94.4098 34.36C94.9644 34.616 95.3858 34.9733 95.6737 35.432C95.9724 35.88 96.1218 36.3867 96.1218 36.952C96.1218 37.528 95.9778 38.0187 95.6898 38.424C95.4124 38.8293 95.0444 39.1387 94.5858 39.352C95.1724 39.5333 95.6258 39.8587 95.9458 40.328C96.2658 40.7867 96.4258 41.3253 96.4258 41.944C96.4258 42.584 96.2551 43.144 95.9138 43.624C95.5831 44.104 95.1084 44.4827 94.4898 44.76C93.8711 45.0267 93.1351 45.16 92.2818 45.16C91.4284 45.16 90.7031 45.016 90.1058 44.728C89.5084 44.4293 89.0498 44.024 88.7298 43.512C88.4098 43 88.2338 42.4293 88.2018 41.8Z\"\n            fill=\"#C3CBD4\"\n        />\n        <rect x=\"10\" y=\"28\" width=\"8\" height=\"8\" rx=\"3\" fill=\"#00A4FD\" />\n        <rect x=\"0.5\" y=\"0.5\" width=\"107\" height=\"63\" rx=\"2.5\" stroke=\"#C3CBD4\" />\n        <defs>\n            <clipPath id=\"clip0\">\n                <rect width=\"15.9993\" height=\"15.9993\" fill=\"white\" transform=\"translate(62 31)\" />\n            </clipPath>\n        </defs>\n    </svg>\n);\n\nconst BackgroundPreset = (): React.ReactElement<SVGElement> => (\n    <svg width=\"108\" height=\"64\" viewBox=\"0 0 108 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect x=\"0.5\" y=\"0.5\" width=\"107\" height=\"63\" rx=\"2.5\" fill=\"#00A4FD\" />\n        <path\n            d=\"M43.34 38.052C43.34 39.492 42.944 40.764 42.152 41.868C41.384 42.948 40.28 43.8 38.84 44.424C37.424 45.048 35.744 45.36 33.8 45.36C30.896 45.36 28.58 44.712 26.852 43.416C25.124 42.12 24.26 40.344 24.26 38.088C24.26 36.72 24.62 35.508 25.34 34.452C26.06 33.396 27.104 32.664 28.472 32.256C27.392 31.776 26.54 31.08 25.916 30.168C25.292 29.256 24.98 28.164 24.98 26.892C24.98 25.668 25.316 24.552 25.988 23.544C26.66 22.512 27.656 21.696 28.976 21.096C30.296 20.472 31.904 20.16 33.8 20.16C35.768 20.16 37.4 20.46 38.696 21.06C39.992 21.636 40.964 22.44 41.612 23.472C42.284 24.48 42.62 25.62 42.62 26.892C42.62 28.164 42.308 29.256 41.684 30.168C41.06 31.08 40.208 31.776 39.128 32.256C40.472 32.664 41.504 33.396 42.224 34.452C42.968 35.508 43.34 36.708 43.34 38.052ZM29.948 27.324C29.948 28.284 30.284 29.052 30.956 29.628C31.652 30.18 32.612 30.456 33.836 30.456C35.036 30.456 35.972 30.168 36.644 29.592C37.316 29.016 37.652 28.248 37.652 27.288C37.652 26.304 37.304 25.536 36.608 24.984C35.936 24.432 34.988 24.156 33.764 24.156C32.564 24.156 31.628 24.444 30.956 25.02C30.284 25.572 29.948 26.34 29.948 27.324ZM29.3 37.872C29.3 38.976 29.696 39.84 30.488 40.464C31.28 41.064 32.372 41.364 33.764 41.364C35.204 41.364 36.32 41.064 37.112 40.464C37.904 39.864 38.3 39 38.3 37.872C38.3 36.744 37.904 35.868 37.112 35.244C36.32 34.62 35.216 34.308 33.8 34.308C32.408 34.308 31.304 34.62 30.488 35.244C29.696 35.868 29.3 36.744 29.3 37.872ZM55.4579 45H50.4899V43.956C50.4899 42.156 50.5739 40.548 50.7419 39.132C50.9339 37.692 51.2339 36.336 51.6419 35.064C52.0499 33.768 52.6019 32.472 53.2979 31.176C53.9939 29.856 54.8579 28.428 55.8899 26.892L57.2939 24.84H45.6659V20.52H62.7659V24.876L60.3179 28.476C59.3819 29.844 58.6019 31.128 57.9779 32.328C57.3539 33.504 56.8499 34.68 56.4659 35.856C56.1059 37.032 55.8419 38.268 55.6739 39.564C55.5299 40.86 55.4579 42.324 55.4579 43.956V45Z\"\n            fill=\"white\"\n        />\n        <g clipPath=\"url(#clip0)\">\n            <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M66.3675 38.7752C66.1072 39.0355 65.6851 39.0355 65.4247 38.7752C65.1644 38.5148 65.1644 38.0927 65.4247 37.8324L69.2929 33.9643C69.6834 33.5738 70.3165 33.5738 70.707 33.9643L74.5752 37.8324C74.8355 38.0927 74.8355 38.5148 74.5752 38.7752C74.3148 39.0355 73.8927 39.0355 73.6324 38.7752L70.6664 35.8092V43.6668C70.6664 44.035 70.368 44.3335 69.9998 44.3335C69.6316 44.3335 69.3332 44.035 69.3332 43.6668V35.8095L66.3675 38.7752Z\"\n                fill=\"white\"\n            />\n        </g>\n        <path\n            d=\"M78.912 45V43.976C78.912 43.144 79.0613 42.4507 79.36 41.896C79.6693 41.3413 80.0853 40.8667 80.608 40.472C81.1307 40.0667 81.7173 39.6987 82.368 39.368C83.008 39.0373 83.488 38.728 83.808 38.44C84.128 38.1413 84.288 37.7467 84.288 37.256C84.288 36.8613 84.16 36.536 83.904 36.28C83.6587 36.0133 83.296 35.88 82.816 35.88C82.3573 35.88 81.984 36.0133 81.696 36.28C81.408 36.536 81.232 36.8933 81.168 37.352H79.024C79.0453 36.9467 79.136 36.5467 79.296 36.152C79.456 35.7573 79.6907 35.3947 80 35.064C80.3093 34.7227 80.7093 34.456 81.2 34.264C81.6907 34.0613 82.272 33.96 82.944 33.96C84.064 33.96 84.9493 34.248 85.6 34.824C86.2613 35.4 86.592 36.1787 86.592 37.16C86.592 38.0347 86.3093 38.76 85.744 39.336C85.1787 39.9013 84.3893 40.44 83.376 40.952C82.8213 41.2293 82.3573 41.528 81.984 41.848C81.6213 42.168 81.3813 42.5787 81.264 43.08H86.624V45H78.912ZM88.2018 41.8H90.3458C90.4418 42.312 90.6551 42.6853 90.9858 42.92C91.3164 43.144 91.7431 43.256 92.2658 43.256C92.8418 43.256 93.2898 43.1333 93.6098 42.888C93.9404 42.6427 94.1058 42.28 94.1058 41.8C94.1058 41.3093 93.9351 40.936 93.5938 40.68C93.2631 40.4133 92.7938 40.28 92.1858 40.28H90.8418V38.584H92.2018C92.7351 38.584 93.1404 38.4613 93.4178 38.216C93.7058 37.96 93.8498 37.6187 93.8498 37.192C93.8498 36.7867 93.7058 36.4667 93.4178 36.232C93.1404 35.9867 92.7618 35.864 92.2818 35.864C91.2791 35.864 90.7031 36.3227 90.5538 37.24H88.4578C88.4791 36.7067 88.6284 36.1893 88.9058 35.688C89.1831 35.1867 89.6044 34.776 90.1698 34.456C90.7351 34.1253 91.4658 33.96 92.3618 33.96C93.1724 33.96 93.8551 34.0933 94.4098 34.36C94.9644 34.616 95.3858 34.9733 95.6737 35.432C95.9724 35.88 96.1218 36.3867 96.1218 36.952C96.1218 37.528 95.9778 38.0187 95.6898 38.424C95.4124 38.8293 95.0444 39.1387 94.5858 39.352C95.1724 39.5333 95.6258 39.8587 95.9458 40.328C96.2658 40.7867 96.4258 41.3253 96.4258 41.944C96.4258 42.584 96.2551 43.144 95.9138 43.624C95.5831 44.104 95.1084 44.4827 94.4898 44.76C93.8711 45.0267 93.1351 45.16 92.2818 45.16C91.4284 45.16 90.7031 45.016 90.1058 44.728C89.5084 44.4293 89.0498 44.024 88.7298 43.512C88.4098 43 88.2338 42.4293 88.2018 41.8Z\"\n            fill=\"white\"\n        />\n        <rect x=\"10\" y=\"28\" width=\"8\" height=\"8\" rx=\"3\" fill=\"white\" />\n        <rect x=\"0.5\" y=\"0.5\" width=\"107\" height=\"63\" rx=\"2.5\" stroke=\"#C3CBD4\" />\n        <defs>\n            <clipPath id=\"clip0\">\n                <rect width=\"15.9993\" height=\"15.9993\" fill=\"white\" transform=\"translate(62 31)\" />\n            </clipPath>\n        </defs>\n    </svg>\n);\n\nexport default {\n    'singleValueIcon.none': NonePreset,\n    'singleValueIcon.icon': IconPreset,\n    'singleValueIcon.majorValue': MajorValuePreset,\n    'singleValueIcon.trend': TrendPreset,\n    'singleValueIcon.iconAndMajorValue': IconAndMajorValuePreset,\n    'singleValueIcon.background': BackgroundPreset,\n};\n","import * as React from 'react';\n\nconst getRectangleIcon = props =>\n    function NonePreset(): React.ReactElement<SVGElement> {\n        return (\n            <svg width=\"108\" height=\"64\" viewBox=\"0 0 108 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect x=\"0.5\" y=\"0.5\" width=\"107\" height=\"63\" rx=\"2.5\" {...props} />\n            </svg>\n        );\n    };\n\nexport default {\n    'rectangle.none': getRectangleIcon({ fill: '#F2F4F5', stroke: '#C3CBD4' }),\n    'rectangle.fill': getRectangleIcon({ stroke: '#C3CBD4', fill: '#00A4FD' }),\n    'rectangle.stroke': getRectangleIcon({ stroke: '#00A4FD', fill: '#F2F4F5' }),\n    'rectangle.fillAndStroke': getRectangleIcon({ stroke: '#00A4FD', fill: '#00A4FD' }),\n};\n","import * as React from 'react';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport SVG from '@splunk/react-icons/SVG';\n\nconst Area = (props: React.ComponentProps<typeof SVG>): React.ReactElement<SVGElement> => (\n    <SVG screenReaderText={_('Area')} viewBox=\"0 0 18 14\" {...props}>\n        <path\n            d=\"M17.3337 1.4905C17.3337 0.40624 16.0477 -0.163839 15.2443 0.564266L10.7797 4.61035L7.36815 0.787101L0.666992 7.48826V13.6668H17.3337V1.4905Z\"\n            fill=\"currentColor\"\n        />\n    </SVG>\n);\n\nexport default Area;\n","import * as React from 'react';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport SVG from '@splunk/react-icons/SVG';\n\nconst Bar = (props: React.ComponentProps<typeof SVG>): React.ReactElement<SVGElement> => (\n    <SVG screenReaderText={_('Bar')} viewBox=\"0 0 16 18\" {...props}>\n        <path\n            d=\"M0.5 16.5C0.5 16.9602 0.873096 17.3333 1.33333 17.3333C1.79357 17.3333 2.16667 16.9602 2.16667 16.5V1.49996C2.16667 1.03972 1.79357 0.666626 1.33333 0.666626C0.873096 0.666626 0.5 1.03972 0.5 1.49996V16.5Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            d=\"M10.0833 3.16663C10.7737 3.16663 11.3333 3.72627 11.3333 4.41663V6.91663C11.3333 7.60698 10.7737 8.16663 10.0833 8.16663H3.83333V3.16663H10.0833Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            d=\"M14.25 9.83329C14.9404 9.83329 15.5 10.3929 15.5 11.0833V13.5833C15.5 14.2736 14.9404 14.8333 14.25 14.8333H3.83333V9.83329H14.25Z\"\n            fill=\"currentColor\"\n        />\n    </SVG>\n);\n\nexport default Bar;\n","import * as React from 'react';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport SVG from '@splunk/react-icons/SVG';\n\nconst Bubble = (props: React.ComponentProps<typeof SVG>): React.ReactElement<SVGElement> => (\n    <SVG screenReaderText={_('Bubble')} viewBox=\"0 0 16 16\" {...props}>\n        <path\n            d=\"M2.58333 4.66667C1.43274 4.66667 0.5 3.73393 0.5 2.58333C0.5 1.43274 1.43274 0.5 2.58333 0.5C3.73393 0.5 4.66667 1.43274 4.66667 2.58333C4.66667 3.73393 3.73393 4.66667 2.58333 4.66667Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            d=\"M11.3333 3.83333C11.3333 4.98393 12.2661 5.91667 13.4167 5.91667C14.5673 5.91667 15.5 4.98393 15.5 3.83333C15.5 2.68274 14.5673 1.75 13.4167 1.75C12.2661 1.75 11.3333 2.68274 11.3333 3.83333Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            d=\"M3.83333 7.16667C3.83333 9.00762 5.32572 10.5 7.16667 10.5C9.00762 10.5 10.5 9.00762 10.5 7.16667C10.5 5.32572 9.00762 3.83333 7.16667 3.83333C5.32572 3.83333 3.83333 5.32572 3.83333 7.16667Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            d=\"M3 15.5C1.61929 15.5 0.5 14.3807 0.5 13C0.5 11.6193 1.61929 10.5 3 10.5C4.38071 10.5 5.5 11.6193 5.5 13C5.5 14.3807 4.38071 15.5 3 15.5Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            d=\"M9.66667 11.3333C9.66667 12.714 10.786 13.8333 12.1667 13.8333C13.5474 13.8333 14.6667 12.714 14.6667 11.3333C14.6667 9.95262 13.5474 8.83333 12.1667 8.83333C10.786 8.83333 9.66667 9.95262 9.66667 11.3333Z\"\n            fill=\"currentColor\"\n        />\n    </SVG>\n);\n\nexport default Bubble;\n","import * as React from 'react';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport SVG from '@splunk/react-icons/SVG';\n\nconst ChoroplethSvg = (props: React.ComponentProps<typeof SVG>): React.ReactElement<SVGElement> => (\n    <SVG\n        screenReaderText={_('SVG Choropleth')}\n        viewBox=\"0 0 16 16\"\n        {...props}\n        style={{ ...props.style, overflow: 'hidden' }}\n    >\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M0.5 1.75C0.5 1.05964 1.05964 0.5 1.75 0.5H14.25C14.9404 0.5 15.5 1.05964 15.5 1.75V14.25C15.5 14.9404 14.9404 15.5 14.25 15.5H2.59171L2.58802 15.5022L2.58676 15.5H1.75C1.05964 15.5 0.5 14.9404 0.5 14.25V1.75ZM13.8333 2.16667V2.17568L7.9999 5.47201V10.3975L2.16667 13.8172V2.16667H13.8333Z\"\n            fill=\"currentColor\"\n        />\n    </SVG>\n);\n\nexport default ChoroplethSvg;\n","import * as React from 'react';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport SVG from '@splunk/react-icons/SVG';\n\nconst Column = (props: React.ComponentProps<typeof SVG>): React.ReactElement<SVGElement> => (\n    <SVG screenReaderText={_('Column')} viewBox=\"0 0 18 16\" {...props}>\n        <path\n            d=\"M9.83366 1.75C9.83366 1.05964 10.3933 0.5 11.0837 0.5H13.5837C14.274 0.5 14.8337 1.05964 14.8337 1.75V12.1667H9.83366V1.75Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            d=\"M3.16699 5.91667C3.16699 5.22631 3.72664 4.66667 4.41699 4.66667H6.91699C7.60735 4.66667 8.16699 5.22631 8.16699 5.91667V12.1667H3.16699V5.91667Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            d=\"M1.50033 13.8333C1.04009 13.8333 0.666992 14.2064 0.666992 14.6667C0.666992 15.1269 1.04009 15.5 1.50033 15.5H16.5003C16.9606 15.5 17.3337 15.1269 17.3337 14.6667C17.3337 14.2064 16.9606 13.8333 16.5003 13.8333H1.50033Z\"\n            fill=\"currentColor\"\n        />\n    </SVG>\n);\n\nexport default Column;\n","import * as React from 'react';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport SVG from '@splunk/react-icons/SVG';\n\nconst EditIcon = (props: React.ComponentProps<typeof SVG>): React.ReactElement<SVGElement> => (\n    <SVG screenReaderText={_('Edit')} width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" {...props}>\n        <g clipPath=\"url(#clip0)\">\n            <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M9.52181 2.86485C10.5206 1.86451 12.1417 1.86474 13.1403 2.86538C14.1373 3.86453 14.1359 5.4827 13.137 6.48004L12.6242 6.99211L11.6821 6.04859L11.6822 6.0485L9.22506 3.58847L9.01185 3.37559L9.01214 3.3753L9.012 3.37516L9.01241 3.37503L9.52181 2.86485ZM2.2961 10.0997L8.07613 4.31412L9.01939 5.25648L9.01604 5.25983L11.6867 7.92415L11.6842 7.92503L11.6863 7.92713L5.9022 13.7058C5.71469 13.8931 5.46048 13.9983 5.19543 13.9983H3.00354C2.45126 13.9983 2.00354 13.5506 2.00354 12.9983V10.8064C2.00354 10.5414 2.10877 10.2872 2.2961 10.0997Z\"\n                fill=\"#818D99\"\n            />\n        </g>\n        <defs>\n            <clipPath id=\"clip0\">\n                <rect width=\"16\" height=\"16\" fill=\"white\" />\n            </clipPath>\n        </defs>\n    </SVG>\n);\n\nexport default EditIcon;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport SVG from '@splunk/react-icons/SVG';\n\nconst svgStyle = { stroke: 'currentColor', strokeWidth: 2, fill: 'none' };\n\nexport default function Image(props) {\n    return (\n        <SVG viewBox=\"0 0 32 32\" screenReaderText={_('Image')} {...props}>\n            <rect x=\"5\" y=\"5\" width=\"22\" height=\"22\" style={svgStyle} />\n            <path\n                d=\"M12,14.6667 C13.4728,14.6667 14.6667,13.4728 14.6667,12 C14.6667,10.5272 13.4728,9.33333 12,9.33333 C10.5273,9.33333 9.33337,10.5272 9.33337,12 C9.33337,13.4728 10.5273,14.6667 12,14.6667 Z\"\n                style={svgStyle}\n            />\n            <polyline\n                strokeLinejoin=\"round\"\n                points=\"4.66663 22.6666 9.33329 20 14 22.6666 20.6666 14.6667 26.6666 22.6666\"\n                style={svgStyle}\n            />\n        </SVG>\n    );\n}\n","import * as React from 'react';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport SVG from '@splunk/react-icons/SVG';\n\nconst Line = (props: React.ComponentProps<typeof SVG>): React.ReactElement<SVGElement> => (\n    <SVG screenReaderText={_('Line')} viewBox=\"0 0 16 14\" {...props}>\n        <path\n            d=\"M2.16667 1.16671C2.16667 0.70647 1.79357 0.333374 1.33333 0.333374C0.873096 0.333374 0.5 0.70647 0.5 1.16671V12.4167C0.5 13.107 1.05964 13.6667 1.75 13.6667H14.6667C15.1269 13.6667 15.5 13.2936 15.5 12.8333C15.5 12.3731 15.1269 12 14.6667 12H2.16667V1.16671Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            d=\"M15.2559 3.42263C15.5814 3.09719 15.5814 2.56956 15.2559 2.24412C14.9305 1.91868 14.4029 1.91868 14.0774 2.24412L10.5 5.82153L8.88388 4.20541C8.39573 3.71726 7.60427 3.71726 7.11612 4.20541L4.07741 7.24412C3.75197 7.56955 3.75197 8.09719 4.07741 8.42263C4.40285 8.74807 4.93049 8.74807 5.25592 8.42263L8 5.67855L9.61612 7.29467C10.1043 7.78282 10.8957 7.78282 11.3839 7.29467L15.2559 3.42263Z\"\n            fill=\"currentColor\"\n        />\n    </SVG>\n);\n\nexport default Line;\n","import * as React from 'react';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport SVG from '@splunk/react-icons/SVG';\n\nconst LinkGraph = (props: React.ComponentProps<typeof SVG>): React.ReactElement<SVGElement> => (\n    <SVG screenReaderText={_('Link Graph')} viewBox=\"0 0 20 16\" {...props}>\n        <path\n            d=\"M0 1C0 0.447715 0.447715 0 1 0H8C8.55228 0 9 0.447715 9 1V3H11V1C11 0.447715 11.4477 0 12 0H19C19.5523 0 20 0.447715 20 1V6C20 6.55228 19.5523 7 19 7H12C11.4477 7 11 6.55228 11 6V5H9.53876L11.4041 9.1969C11.5705 9.07319 11.7767 9 12 9H19C19.5523 9 20 9.44771 20 10V15C20 15.5523 19.5523 16 19 16H12C11.4477 16 11 15.5523 11 15V13.2122L8.22747 6.97401C8.1544 6.99101 8.07825 7 8 7H1C0.447715 7 0 6.55228 0 6V1Z\"\n            fill=\"currentColor\"\n        />\n    </SVG>\n);\n\nexport default LinkGraph;\n","import * as React from 'react';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport SVG from '@splunk/react-icons/SVG';\n\nconst ParallelCoordinates = (props: React.ComponentProps<typeof SVG>): React.ReactElement<SVGElement> => (\n    <SVG\n        screenReaderText={_('Parallel Coordinates')}\n        viewBox=\"0 0 24 24\"\n        {...props}\n        style={{ ...props.style, overflow: 'hidden' }}\n    >\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M4.00012 5C4.00012 4.44772 3.5524 4 3.00012 4C2.44784 4 2.00012 4.44772 2.00012 5V10.4837C1.99996 10.494 1.99996 10.5043 2.00012 10.5147V19C2.00012 19.5523 2.44784 20 3.00012 20C3.5524 20 4.00012 19.5523 4.00012 19V18.5369L7.39046 14.9044L11.0001 17.5113V19C11.0001 19.5523 11.4478 20 12.0001 20C12.5524 20 13.0001 19.5523 13.0001 19V17.489L20.0001 12.0446V19C20.0001 19.5523 20.4478 20 21.0001 20C21.5524 20 22.0001 19.5523 22.0001 19V6.02293C22.0005 6.0079 22.0005 5.99282 22.0001 5.97771V5C22.0001 4.44772 21.5524 4 21.0001 4C20.4478 4 20.0001 4.44772 20.0001 5V5.23968L13.0001 7.18413V5C13.0001 4.44772 12.5524 4 12.0001 4C11.4478 4 11.0001 4.44772 11.0001 5V8.10561L7.13169 12.2504L4.00012 9.98872V5ZM4.00012 12.4558V15.6057L5.75626 13.7241L4.00012 12.4558ZM11.0001 11.0368L8.76589 13.4307L11.0001 15.0443V11.0368ZM13.0001 14.9553L20.0001 9.51088V7.31541L13.0001 9.25985V14.9553Z\"\n            fill=\"currentColor\"\n        />\n    </SVG>\n);\n\nexport default ParallelCoordinates;\n","import SingleValuePresetIcons from './SingleValuePresetIcons';\nimport SingleValueIconPresetIcons from './SingleValueIconPresetIcons';\nimport EllipsePresetIcons from './EllipsePresetIcons';\nimport RectanglePresetIcons from './RectanglePresetIcons';\n\nexport default {\n    ...EllipsePresetIcons,\n    ...SingleValuePresetIcons,\n    ...SingleValueIconPresetIcons,\n    ...RectanglePresetIcons,\n};\n","import React from 'react';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport SVG from '@splunk/react-icons/SVG';\n\nexport default function Punchcard(props) {\n    return (\n        <SVG screenReaderText={_('Punchcard')} viewBox=\"0 0 24 24\" {...props}>\n            <circle cx=\"3.5\" cy=\"3.5\" r=\"0.5\" fill=\"currentColor\" />\n            <circle cx=\"9.5\" cy=\"3.5\" r=\"0.5\" transform=\"rotate(-180 9.5 3.5)\" fill=\"currentColor\" />\n            <circle cx=\"15.5\" cy=\"3.5\" r=\"1.5\" transform=\"rotate(-180 15.5 3.5)\" fill=\"currentColor\" />\n            <circle r=\"1.5\" transform=\"matrix(-1 0 0 1 21.5 3.5)\" fill=\"currentColor\" />\n            <circle r=\"0.5\" transform=\"matrix(-1 0 0 1 3.5 9.5)\" fill=\"currentColor\" />\n            <circle cx=\"9.5\" cy=\"9.5\" r=\"1.5\" fill=\"currentColor\" />\n            <circle cx=\"15.5\" cy=\"9.5\" r=\"1.5\" fill=\"currentColor\" />\n            <circle r=\"2.5\" transform=\"matrix(-1 0 0 1 21.5 9.5)\" fill=\"currentColor\" />\n            <circle r=\"1.5\" transform=\"matrix(-1 0 0 1 3.5 15.5)\" fill=\"currentColor\" />\n            <circle cx=\"9.5\" cy=\"15.5\" r=\"0.5\" transform=\"rotate(-180 9.5 15.5)\" fill=\"currentColor\" />\n            <circle cx=\"15.5\" cy=\"15.5\" r=\"1.5\" fill=\"currentColor\" />\n            <circle cx=\"21.5\" cy=\"15.5\" r=\"1.5\" fill=\"currentColor\" />\n            <circle r=\"0.5\" transform=\"matrix(-1 0 0 1 3.5 21.5)\" fill=\"currentColor\" />\n            <circle cx=\"9.5\" cy=\"21.5\" r=\"0.5\" fill=\"currentColor\" />\n            <circle cx=\"15.5\" cy=\"21.5\" r=\"2.5\" fill=\"currentColor\" />\n            <circle cx=\"21.5\" cy=\"21.5\" r=\"1.5\" fill=\"currentColor\" />\n        </SVG>\n    );\n}\n","import * as React from 'react';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport SVG from '@splunk/react-icons/SVG';\n\nexport const RemoveIcon = (props: React.ComponentProps<typeof SVG>): React.ReactElement<SVGElement> => (\n    <SVG screenReaderText={_('Remove')} width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" {...props}>\n        <g clipPath=\"url(#clip0)\">\n            <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M6.66667 4.00016V2.66683H9.33333V4.00016H6.66667ZM11.3333 4.00016H10.6667V2.3335C10.6667 1.78121 10.219 1.3335 9.66667 1.3335H6.33333C5.78105 1.3335 5.33333 1.78121 5.33333 2.3335V4.00016H4.66667H3.33333H2.66667C2.29848 4.00016 2 4.29864 2 4.66683C2 5.03502 2.29848 5.3335 2.66667 5.3335H3.33333V13.6668C3.33333 14.2191 3.78105 14.6668 4.33333 14.6668H11.6667C12.219 14.6668 12.6667 14.2191 12.6667 13.6668V5.3335H13.3333C13.7015 5.3335 14 5.03502 14 4.66683C14 4.29864 13.7015 4.00016 13.3333 4.00016H12.6667H11.3333ZM8 8.39077L7.13807 7.52884C6.87772 7.26849 6.45561 7.26849 6.19526 7.52884C5.93491 7.78919 5.93491 8.2113 6.19526 8.47165L7.05719 9.33358L6.19526 10.1955C5.93491 10.4559 5.93491 10.878 6.19526 11.1383C6.45561 11.3987 6.87772 11.3987 7.13807 11.1383L8 10.2764L8.86193 11.1383C9.12228 11.3987 9.54439 11.3987 9.80474 11.1383C10.0651 10.878 10.0651 10.4559 9.80474 10.1955L8.94281 9.33358L9.80474 8.47165C10.0651 8.2113 10.0651 7.78919 9.80474 7.52884C9.54439 7.26849 9.12228 7.26849 8.86193 7.52884L8 8.39077Z\"\n                fill=\"#818D99\"\n            />\n        </g>\n        <defs>\n            <clipPath id=\"clip0\">\n                <rect width=\"16\" height=\"16\" fill=\"white\" />\n            </clipPath>\n        </defs>\n    </SVG>\n);\n\nexport default RemoveIcon;\n","import * as React from 'react';\n\nconst ReverseRangeValuesIcon = (): React.ReactElement<SVGElement> => (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g clipPath=\"url(#clip0)\">\n            <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M4.83008 11.0587L2.90476 9.13335C2.64506 8.87365 2.224 8.87365 1.96431 9.13335C1.70461 9.39305 1.70461 9.8141 1.96431 10.0738L5.02385 13.1334C5.1542 13.2637 5.32519 13.3286 5.49603 13.3281C5.66687 13.3286 5.83787 13.2637 5.96821 13.1334L9.02776 10.0738C9.28746 9.8141 9.28746 9.39305 9.02776 9.13335C8.76806 8.87365 8.34701 8.87365 8.08731 9.13335L6.16008 11.0606L6.16008 3.33102C6.16008 2.96375 5.86235 2.66602 5.49508 2.66602C5.12781 2.66602 4.83008 2.96375 4.83008 3.33102L4.83008 11.0587Z\"\n                fill=\"#3C444D\"\n            />\n            <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M11.8306 4.93547L9.90525 6.86079C9.64555 7.12049 9.22449 7.12049 8.96479 6.86079C8.70509 6.60109 8.70509 6.18004 8.96479 5.92034L12.0243 2.86079C12.1547 2.73044 12.3257 2.66552 12.4965 2.66602C12.6674 2.66552 12.8384 2.73044 12.9687 2.86079L16.0282 5.92034C16.2879 6.18004 16.2879 6.60109 16.0282 6.86079C15.7685 7.12049 15.3475 7.12049 15.0878 6.86079L13.1606 4.93356L13.1606 12.6631C13.1606 13.0304 12.8628 13.3281 12.4956 13.3281C12.1283 13.3281 11.8306 13.0304 11.8306 12.6631L11.8306 4.93547Z\"\n                fill=\"#3C444D\"\n            />\n        </g>\n        <defs>\n            <clipPath id=\"clip0\">\n                <rect width=\"16\" height=\"15.9993\" fill=\"white\" transform=\"matrix(1 0 0 -1 0 15.9994)\" />\n            </clipPath>\n        </defs>\n    </svg>\n);\n\nexport default ReverseRangeValuesIcon;\n","import * as React from 'react';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport SVG from '@splunk/react-icons/SVG';\n\nconst Sankey = (props: React.ComponentProps<typeof SVG>): React.ReactElement<SVGElement> => (\n    <SVG screenReaderText={_('Sankey')} viewBox=\"0 0 24 24\" {...props}>\n        <path\n            d=\"M11.278 8.29599C13.4714 5.3705 15.9985 2 21 2C21.5523 2 22 2.44772 22 3V12C22 12.5523 21.5523 13 21 13C19.2142 13 17.8255 13.3351 16.6433 13.8765C15.1641 13.0082 13.9957 11.7226 12.7433 10.331L12.6941 10.2764C12.1812 9.70642 11.6533 9.11976 11.0843 8.55419C11.1228 8.50294 11.1613 8.45154 11.2 8.4L11.278 8.29599Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            d=\"M2 16V20C2 20.5523 2.44772 21 3 21C6.40592 21 8.64914 19.9206 10.4654 18.5825C9.6609 17.98 8.85617 17.4364 7.92086 16.9999C6.65179 16.4077 5.10923 16 3 16H2Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            d=\"M3 7C2.44772 7 2 7.44772 2 8V13C2 13.5523 2.44772 14 3 14C5.10923 14 6.65179 14.4077 7.92086 14.9999C9.21024 15.6016 10.2515 16.4069 11.3861 17.2894L11.4179 17.3141C12.5245 18.1748 13.7247 19.1084 15.2334 19.8124C16.7768 20.5327 18.6092 21 21 21C21.5523 21 22 20.5523 22 20V18C22 17.4477 21.5523 17 21 17C16.9823 17 14.9991 14.8375 12.7433 12.331L12.6941 12.2764C10.4623 9.79625 7.94594 7 3 7Z\"\n            fill=\"currentColor\"\n        />\n    </SVG>\n);\n\nexport default Sankey;\n","import * as React from 'react';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport SVG from '@splunk/react-icons/SVG';\n\nconst Scatter = (props: React.ComponentProps<typeof SVG>): React.ReactElement<SVGElement> => (\n    <SVG screenReaderText={_('Scatter')} viewBox=\"0 0 20 18\" {...props}>\n        <path\n            d=\"M10.8333 3.99996C11.7538 3.99996 12.5 3.25377 12.5 2.33329C12.5 1.41282 11.7538 0.666626 10.8333 0.666626C9.91286 0.666626 9.16667 1.41282 9.16667 2.33329C9.16667 3.25377 9.91286 3.99996 10.8333 3.99996Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            d=\"M9.16667 8.99996C10.0871 8.99996 10.8333 8.25377 10.8333 7.33329C10.8333 6.41282 10.0871 5.66663 9.16667 5.66663C8.24619 5.66663 7.5 6.41282 7.5 7.33329C7.5 8.25377 8.24619 8.99996 9.16667 8.99996Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            d=\"M13.3333 10.6666C13.3333 11.5871 12.5871 12.3333 11.6667 12.3333C10.7462 12.3333 10 11.5871 10 10.6666C10 9.74615 10.7462 8.99996 11.6667 8.99996C11.6667 8.07948 12.4129 7.33329 13.3333 7.33329C14.2538 7.33329 15 8.07948 15 8.99996C15 9.92043 14.2538 10.6666 13.3333 10.6666Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            d=\"M10.8333 13.1666C10.8333 14.0871 10.0871 14.8333 9.16667 14.8333C8.24619 14.8333 7.5 14.0871 7.5 13.1666C7.5 12.2462 8.24619 11.5 9.16667 11.5C10.0871 11.5 10.8333 12.2462 10.8333 13.1666Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            d=\"M5 14.8333C5 15.7538 4.25381 16.5 3.33333 16.5C2.41286 16.5 1.66667 15.7538 1.66667 14.8333C1.66667 13.9128 2.41286 13.1666 3.33333 13.1666C4.25381 13.1666 5 13.9128 5 14.8333Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            d=\"M13.3333 17.3333C14.2538 17.3333 15 16.5871 15 15.6666C15 14.7462 14.2538 14 13.3333 14C12.4129 14 11.6667 14.7462 11.6667 15.6666C11.6667 16.5871 12.4129 17.3333 13.3333 17.3333Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            d=\"M7.5 9.83329C7.5 10.7538 6.75381 11.5 5.83333 11.5C4.91286 11.5 4.16667 10.7538 4.16667 9.83329C4.16667 8.91282 4.91286 8.16663 5.83333 8.16663C6.75381 8.16663 7.5 8.91282 7.5 9.83329Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            d=\"M20 12.3333C20 13.2538 19.2538 14 18.3333 14C17.4129 14 16.6667 13.2538 16.6667 12.3333C16.6667 11.4128 17.4129 10.6666 18.3333 10.6666C19.2538 10.6666 20 11.4128 20 12.3333Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            d=\"M16.6667 8.16663C17.5871 8.16663 18.3333 7.42043 18.3333 6.49996C18.3333 5.57948 17.5871 4.83329 16.6667 4.83329C15.7462 4.83329 15 5.57948 15 6.49996C15 7.42043 15.7462 8.16663 16.6667 8.16663Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            d=\"M1.66667 8.16663C2.58714 8.16663 3.33333 7.42043 3.33333 6.49996C3.33333 5.57948 2.58714 4.83329 1.66667 4.83329C0.746192 4.83329 0 5.57948 0 6.49996C0 7.42043 0.746192 8.16663 1.66667 8.16663Z\"\n            fill=\"currentColor\"\n        />\n    </SVG>\n);\n\nexport default Scatter;\n","import * as React from 'react';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport SVG from '@splunk/react-icons/SVG';\n\nconst SingleValueRadial = (props: React.ComponentProps<typeof SVG>): React.ReactElement<SVGElement> => (\n    <SVG screenReaderText={_('Single Value Radial')} viewBox=\"0 0 20 17\" {...props}>\n        <path\n            d=\"M9.99967 2.50004C5.85754 2.50004 2.49967 5.85791 2.49967 10C2.49967 11.5437 2.96515 12.9762 3.76326 14.1678C4.04016 14.5812 4.35715 14.9657 4.70871 15.3156C5.03489 15.6403 5.03611 16.168 4.71143 16.4942C4.38674 16.8203 3.85911 16.8216 3.53292 16.4969C3.10383 16.0698 2.71677 15.6003 2.3785 15.0953C1.40234 13.6378 0.833008 11.8842 0.833008 10C0.833008 4.93743 4.93706 0.833374 9.99967 0.833374C15.0623 0.833374 19.1663 4.93743 19.1663 10C19.1663 11.8869 18.5953 13.643 17.6166 15.1017C17.2806 15.6024 16.8966 16.068 16.4713 16.492C16.1454 16.8169 15.6177 16.8161 15.2928 16.4902C14.9679 16.1642 14.9687 15.6366 15.2946 15.3117C15.6431 14.9643 15.9576 14.5829 16.2326 14.173C17.0328 12.9804 17.4997 11.546 17.4997 10C17.4997 5.85791 14.1418 2.50004 9.99967 2.50004Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M12.2089 5.83998C12.6655 5.89744 12.9891 6.31419 12.9317 6.77083L12.8399 7.50004H13.333C13.7932 7.50004 14.1663 7.87314 14.1663 8.33337C14.1663 8.79361 13.7932 9.16671 13.333 9.16671H12.6302L12.4205 10.8334H13.333C13.7932 10.8334 14.1663 11.2065 14.1663 11.6667C14.1663 12.1269 13.7932 12.5 13.333 12.5H12.2108L12.0929 13.4375C12.0354 13.8941 11.6186 14.2177 11.162 14.1603C10.7054 14.1028 10.3818 13.6861 10.4392 13.2294L10.531 12.5H8.8612L8.74324 13.4375C8.68579 13.8941 8.26903 14.2177 7.8124 14.1603C7.35576 14.1028 7.03216 13.6861 7.08961 13.2294L7.18139 12.5H6.66634C6.2061 12.5 5.83301 12.1269 5.83301 11.6667C5.83301 11.2065 6.2061 10.8334 6.66634 10.8334H7.39109L7.6008 9.16671H6.66634C6.2061 9.16671 5.83301 8.79361 5.83301 8.33337C5.83301 7.87314 6.2061 7.50004 6.66634 7.50004H7.8105L7.92844 6.56276C7.98589 6.10613 8.40265 5.78253 8.85928 5.83998C9.31592 5.89744 9.63952 6.31419 9.58206 6.77083L9.49031 7.50004H11.1601L11.278 6.56276C11.3355 6.10613 11.7523 5.78253 12.2089 5.83998ZM9.0709 10.8334H10.7407L10.9504 9.16671H9.28061L9.0709 10.8334Z\"\n            fill=\"currentColor\"\n        />\n    </SVG>\n);\n\nexport default SingleValueRadial;\n","import * as React from 'react';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport SVG from '@splunk/react-icons/SVG';\n\nconst SingleValueTrend = (props: React.ComponentProps<typeof SVG>): React.ReactElement<SVGElement> => (\n    <SVG screenReaderText={_('Single Value')} viewBox=\"0 0 18 18\" {...props}>\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M11.2095 0.673234C11.6662 0.730689 11.9898 1.14744 11.9323 1.60408L11.8406 2.33329H12.3337C12.7939 2.33329 13.167 2.70639 13.167 3.16663C13.167 3.62686 12.7939 3.99996 12.3337 3.99996H11.6309L11.4212 5.66663H12.3337C12.7939 5.66663 13.167 6.03972 13.167 6.49996C13.167 6.9602 12.7939 7.33329 12.3337 7.33329H11.2115L11.0935 8.27075C11.036 8.72738 10.6193 9.05098 10.1627 8.99353C9.70602 8.93607 9.38242 8.51932 9.43988 8.06268L9.53165 7.33329H7.86185L7.7439 8.27075C7.68644 8.72738 7.26969 9.05098 6.81305 8.99353C6.35641 8.93607 6.03281 8.51932 6.09027 8.06268L6.18204 7.33329H5.66699C5.20676 7.33329 4.83366 6.9602 4.83366 6.49996C4.83366 6.03972 5.20676 5.66663 5.66699 5.66663H6.39175L6.60145 3.99996H5.66699C5.20676 3.99996 4.83366 3.62686 4.83366 3.16663C4.83366 2.70639 5.20676 2.33329 5.66699 2.33329H6.81116L6.92909 1.39602C6.98654 0.939379 7.4033 0.615778 7.85993 0.673234C8.31657 0.730689 8.64017 1.14744 8.58272 1.60408L8.49096 2.33329H10.1608L10.2787 1.39602C10.3362 0.939379 10.7529 0.615778 11.2095 0.673234ZM8.07155 5.66663H9.74136L9.95106 3.99996H8.28126L8.07155 5.66663Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            d=\"M17.1938 11.0378C17.4491 11.4207 17.3456 11.9381 16.9627 12.1934L10.9438 16.206C10.5239 16.4859 9.9769 16.4859 9.55703 16.206L6.50041 14.1683L1.96266 17.1934C1.57972 17.4487 1.06233 17.3452 0.807039 16.9623C0.551745 16.5794 0.655223 16.062 1.03816 15.8067L5.80703 12.6274C6.22691 12.3475 6.77391 12.3475 7.19378 12.6274L10.2504 14.6652L16.0382 10.8067C16.4211 10.5514 16.9385 10.6549 17.1938 11.0378Z\"\n            fill=\"currentColor\"\n        />\n    </SVG>\n);\n\nexport default SingleValueTrend;\n","import * as React from 'react';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport SVG from '@splunk/react-icons/SVG';\n\nconst Table = (props: React.ComponentProps<typeof SVG>): React.ReactElement<SVGElement> => (\n    <SVG screenReaderText={_('Table')} viewBox=\"0 0 20 12\" {...props}>\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M0.833008 1.41663C0.833008 0.726271 1.39265 0.166626 2.08301 0.166626H17.9163C18.6067 0.166626 19.1663 0.726271 19.1663 1.41663V10.5833C19.1663 11.2736 18.6067 11.8333 17.9163 11.8333H2.08301C1.39265 11.8333 0.833008 11.2736 0.833008 10.5833V1.41663ZM2.49967 1.83329V10.1666H9.16634V6.88863H2.50374V5.22197H9.16634V1.83329H2.49967ZM10.833 6.88863V10.1666H17.4997V6.88863H10.833ZM17.4997 5.22197H10.833V1.83329H17.4997V5.22197Z\"\n            fill=\"currentColor\"\n        />\n    </SVG>\n);\n\nexport default Table;\n","export { default as Area } from './Area';\nexport { default as Bar } from './Bar';\nexport { default as Bubble } from './Bubble';\nexport { default as ChoroplethSvg } from './ChoroplethSvg';\nexport { default as Column } from './Column';\nexport { default as EditIcon } from './EditIcon';\nexport { default as Image } from './Image';\nexport { default as Line } from './Line';\nexport { default as PresetIcons } from './PresetIcons';\nexport { default as Punchcard } from './Punchcard';\nexport { default as RemoveIcon } from './RemoveIcon';\nexport { default as ReverseRangeValuesIcon } from './ReverseRangeValuesIcon';\nexport { default as Scatter } from './Scatter';\nexport { default as SingleValueRadial } from './SingleValueRadial';\nexport { default as SingleValue } from './SingleValueTrend';\nexport { default as Table } from './Table';\nexport { default as ParallelCoordinates } from './ParallelCoordinates';\nexport { default as Sankey } from './Sankey';\nexport { default as LinkGraph } from './LinkGraph';\n"],"sourceRoot":""}