/*!
 * Copyright © 2021 Splunk Inc.
 * SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or in part
 * without a valid written license from Splunk Inc. is PROHIBITED.
 */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 37);
/******/ })
/************************************************************************/
/******/ ({

/***/ 16:
/***/ (function(module, exports) {

module.exports = require("@splunk/themes");

/***/ }),

/***/ 37:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTheme", function() { return createTheme; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "variable", function() { return variable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mixin", function() { return mixin; });
/* harmony import */ var _splunk_themes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16);
/* harmony import */ var _splunk_themes__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_splunk_themes__WEBPACK_IMPORTED_MODULE_0__);
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


var dark = {
  Input: {
    textColor: '#ccc',
    backgroundColor: '#222',
    gutterColor: 'rgb(225, 230, 235)',
    gutterBackgroundColor: 'rgba(255, 255, 255, 0.15)',
    cursorColor: '#ccc',
    invalidColor: '#ff6b66',
    commentColor: '#8da6c0',
    commandColor: '#789eff',
    functionColor: '#d97ed9',
    argumentColor: '#95d640',
    modifierColor: '#f7a45b',
    selectionColor: '#555',
    bracketColor: '#ccc',
    selectedWordColor: '#606060',
    rightAlignedTextColor: '#999',
    autoCompleteTextColor: '#222',
    autoCompleteBackgroundColor: '#ccc',
    autoCompleteActiveLineColor: 'rgba(61, 170, 255, 0.22)',
    autoCompleteHoverLineColor: '#333',
    disabledColor: '#333'
  }
};
var light = {
  Input: {
    textColor: '#333',
    backgroundColor: '#fff',
    gutterColor: 'rgb(107, 119, 133)',
    gutterBackgroundColor: 'rgb(242, 244, 245)',
    cursorColor: '#333',
    invalidColor: '#d90700',
    invalidBackgroundColor: 'rgba(255, 0, 0, 0.1)',
    commentColor: '#8293a7',
    commandColor: '#2662fc',
    functionColor: '#cf00cf',
    argumentColor: '#5ca300',
    modifierColor: '#f58220',
    selectionColor: '#b5d5ff',
    bracketColor: '#333',
    selectedWordColor: 'rgb(200, 200, 250)',
    selectedWordBackgroundColor: 'rgb(250, 250, 255)',
    autoCompleteTextColor: 'black',
    autoCompleteBackgroundColor: '#ffffff',
    autoCompleteActiveLineColor: 'rgba(61, 170, 255, 0.12)',
    autoCompleteHoverLineColor: '#f5f5f5',
    disabledColor: '#f5f5f5'
  }
};
var createTheme = function createTheme(family, colorScheme) {
  var extensions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  return _objectSpread({
    base: Object(_splunk_themes__WEBPACK_IMPORTED_MODULE_0__["getTheme"])({
      family: family,
      colorScheme: colorScheme
    })
  }, extensions);
};
var themes = {
  enterprise: {
    dark: createTheme('enterprise', 'dark', dark),
    light: createTheme('enterprise', 'light', light)
  },
  prisma: {
    dark: createTheme('prisma', 'dark', dark),
    light: createTheme('prisma', 'light', light)
  }
};

var getTheme = function getTheme(props) {
  var _getSettingsFromTheme = Object(_splunk_themes__WEBPACK_IMPORTED_MODULE_0__["getSettingsFromThemedProps"])(props),
      family = _getSettingsFromTheme.family,
      colorScheme = _getSettingsFromTheme.colorScheme;

  return themes[family][colorScheme];
};

var variable = function variable() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return function (props) {
    return args.length === 1 ? getTheme(props).base[args[0]] : args.reduce(function (acc, val) {
      return acc && acc[val] ? acc[val] : null;
    }, getTheme(props));
  };
};
var mixin = function mixin(name) {
  return _splunk_themes__WEBPACK_IMPORTED_MODULE_0__["mixins"][name];
};

/***/ })

/******/ });