/*!
 * Copyright © 2021 Splunk Inc.
 * SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or in part
 * without a valid written license from Splunk Inc. is PROHIBITED.
 */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 38);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports) {

module.exports = require("prop-types");

/***/ }),

/***/ 1:
/***/ (function(module, exports) {

module.exports = require("lodash");

/***/ }),

/***/ 11:
/***/ (function(module, exports) {

module.exports = require("styled-components");

/***/ }),

/***/ 2:
/***/ (function(module, exports) {

module.exports = require("@splunk/react-search/themes");

/***/ }),

/***/ 24:
/***/ (function(module, exports) {

module.exports = require("@splunk/ui-utils/keyboard");

/***/ }),

/***/ 25:
/***/ (function(module, exports) {

module.exports = require("@splunk/react-search/utils/completer");

/***/ }),

/***/ 3:
/***/ (function(module, exports) {

module.exports = require("@splunk/ui-utils/i18n");

/***/ }),

/***/ 38:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: external "prop-types"
var external_prop_types_ = __webpack_require__(0);
var external_prop_types_default = /*#__PURE__*/__webpack_require__.n(external_prop_types_);

// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(4);
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);

// EXTERNAL MODULE: external "lodash"
var external_lodash_ = __webpack_require__(1);

// EXTERNAL MODULE: external "@splunk/ui-utils/keyboard"
var keyboard_ = __webpack_require__(24);

// EXTERNAL MODULE: external "@splunk/ui-utils/i18n"
var i18n_ = __webpack_require__(3);

// EXTERNAL MODULE: external "@splunk/react-search/components/Ace"
var Ace_ = __webpack_require__(6);
var Ace_default = /*#__PURE__*/__webpack_require__.n(Ace_);

// EXTERNAL MODULE: external "@splunk/react-search/utils/completer"
var completer_ = __webpack_require__(25);
var completer_default = /*#__PURE__*/__webpack_require__.n(completer_);

// EXTERNAL MODULE: external "styled-components"
var external_styled_components_ = __webpack_require__(11);
var external_styled_components_default = /*#__PURE__*/__webpack_require__.n(external_styled_components_);

// EXTERNAL MODULE: external "@splunk/react-search/themes"
var themes_ = __webpack_require__(2);

// CONCATENATED MODULE: ./src/components/Input/InputStyles.js
function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n    color: #999;\n    padding-left: 6px;\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n    display: none;\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n    flex: 1 0;\n\n    .ace_editor {\n        color: ", ";\n        background-color: ", ";\n        padding: 8px 6px;\n        min-height: 20px;\n        line-height: 20px;\n        font-family: ", ";\n        border: 1px solid rgba(0, 0, 0, 0.15);\n        border-radius: ", ";\n        cursor: auto;\n        box-sizing: content-box;\n\n        &.focused {\n            border-color: rgba(82, 168, 236, 0.8);\n            outline: 0;\n            border-collapse: separate;\n            box-shadow: 0 0 8px rgba(82, 168, 236, 0.6);\n        }\n    }\n\n    .ace_emptyMessage {\n        color: #999;\n        padding-left: 6px;\n    }\n\n    .ace_scroller {\n        margin-top: 8px;\n        margin-left: 4px;\n        padding-bottom: 8px;\n    }\n\n    .ace_gutter {\n        padding-top: 8px;\n        background-color: ", ";\n\n        .ace_gutter-active-line {\n            margin-top: 8px;\n        }\n\n        .ace_gutter-cell {\n            padding-left: 6px;\n            padding-right: 6px;\n            color: ", ";\n        }\n    }\n\n    &[data-append] .ace_editor {\n        border-top-right-radius: 0;\n        border-bottom-right-radius: 0;\n    }\n\n    .ace_cursor {\n        color: ", ";\n    }\n\n    .ace_invalid {\n        color: ", ";\n        background-color: ", ";\n    }\n\n    .ace_comment {\n        color: ", ";\n    }\n\n    .ace_command {\n        color: ", ";\n    }\n\n    .ace_function {\n        color: ", ";\n    }\n\n    .ace_argument {\n        color: ", ";\n    }\n\n    .ace_modifier {\n        color: ", ";\n    }\n\n    .ace_marker-layer .ace_selection {\n        background: ", ";\n    }\n\n    & :not(.read-only) .ace_marker-layer .ace_bracket {\n        margin: -1px 0 0 -1px;\n        border: 1px solid ", ";\n    }\n\n    .ace_marker-layer .ace_selected-word {\n        border: 1px solid ", ";\n        background: ", ";\n    }\n\n    & .ace_editor.ace_autocomplete .ace_rightAlignedText {\n        color: ", ";\n    }\n\n    & .ace_editor.ace_autocomplete {\n        color: ", ";\n        background: ", ";\n    }\n\n    & .ace_editor.ace_autocomplete .ace_marker-layer .ace_active-line {\n        background: ", ";\n    }\n\n    & .ace_editor.ace_autocomplete .ace_marker-layer .ace_line-hover {\n        background: ", ";\n    }\n\n    & .read-only .ace_cursor {\n        opacity: 0;\n    }\n\n    & .disabled .ace_content {\n        cursor: not-allowed;\n        opacity: 0.6;\n    }\n\n    & .disabled {\n        background-color: ", ";\n    }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }



var Styled = external_styled_components_default.a.div(_templateObject(), Object(themes_["variable"])('Input', 'textColor'), Object(themes_["variable"])('Input', 'backgroundColor'), Object(themes_["variable"])('monoFontFamily'), Object(themes_["variable"])('borderRadius'), Object(themes_["variable"])('Input', 'gutterBackgroundColor'), Object(themes_["variable"])('Input', 'gutterColor'), Object(themes_["variable"])('Input', 'cursorColor'), Object(themes_["variable"])('Input', 'invalidColor'), Object(themes_["variable"])('Input', 'invalidBackgroundColor'), Object(themes_["variable"])('Input', 'commentColor'), Object(themes_["variable"])('Input', 'commandColor'), Object(themes_["variable"])('Input', 'functionColor'), Object(themes_["variable"])('Input', 'argumentColor'), Object(themes_["variable"])('Input', 'modifierColor'), Object(themes_["variable"])('Input', 'selectionColor'), Object(themes_["variable"])('Input', 'bracketColor'), Object(themes_["variable"])('Input', 'selectedWordColor'), Object(themes_["variable"])('Input', 'selectedWordBackgroundColor'), Object(themes_["variable"])('Input', 'rightAlignedTextColor'), Object(themes_["variable"])('Input', 'autoCompleteTextColor'), Object(themes_["variable"])('Input', 'autoCompleteBackgroundColor'), Object(themes_["variable"])('Input', 'autoCompleteActiveLineColor'), Object(themes_["variable"])('Input', 'autoCompleteHoverLineColor'), Object(themes_["variable"])('Input', 'disabledColor'));
var StyledHidden = external_styled_components_default.a.div(_templateObject2());
var StyledPlaceholder = external_styled_components_default.a.div(_templateObject3());

// CONCATENATED MODULE: ./src/components/Input/index.jsx
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }









var AceSPLMode = Ace_default.a.acerequire('ace/mode/spl');
var editorFixedOptions = {
  wrap: true,
  fontSize: 12,
  highlightActiveLine: false,
  highlightGutterLine: false,
  showPrintMargin: false,
  enableMultiselect: false,
  displayIndentGuides: false
};

var Input_Input = /*#__PURE__*/function (_Component) {
  _inherits(Input, _Component);

  var _super = _createSuper(Input);

  function Input() {
    var _this;

    _classCallCheck(this, Input);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "focus", function () {
      _this.editor.focus();
    });

    _defineProperty(_assertThisInitialized(_this), "handleChange", function (e) {
      _this.togglePlaceholder();

      _this.props.onChange(e, {
        value: _this.editor.getValue()
      });
    });

    _defineProperty(_assertThisInitialized(_this), "handleFocus", function (e) {
      _this.props.onFocus(e);
    });

    _defineProperty(_assertThisInitialized(_this), "handleBlur", function (e) {
      if (_this.editor) {
        _this.props.onBlur(e, {
          value: _this.editor.getValue()
        });
      }
    });

    _defineProperty(_assertThisInitialized(_this), "updateEditorRef", function (item) {
      _this.refEditor = item;
    });

    _defineProperty(_assertThisInitialized(_this), "updatePlaceholderRef", function (item) {
      _this.refPlaceholder = item;
    });

    _defineProperty(_assertThisInitialized(_this), "updatePlaceholderInnerRef", function (item) {
      _this.innerRefPlaceholder = item;
    });

    return _this;
  }

  _createClass(Input, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this$props = this.props,
          value = _this$props.value,
          enabled = _this$props.enabled; // create Ace instance, and set Ace options

      var editor = Ace_default.a.edit(this.refEditor);
      this.editor = editor;
      window.splEditor = this.editor;
      editor.setSession(Ace_default.a.createEditSession(value));
      editor.setOptions(editorFixedOptions); // Disable the warning message

      editor.$blockScrolling = Infinity;
      this[enabled ? 'enable' : 'disable']();
      this.setSPLMode();
      this.setEditorOptions();
      this.setEditorListeners();
      this.togglePlaceholder();
      this.editor.execCommand('gotolineend');
      this.focus();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(preProps) {
      var _this$props2 = this.props,
          value = _this$props2.value,
          enabled = _this$props2.enabled;
      var currentVal = this.editor.getValue();

      if (value !== currentVal) {
        this.editor.setValue(value || '', 1);
      }

      if (preProps.enabled !== enabled) {
        this[enabled ? 'enable' : 'disable']();
      }

      var mode = this.editor.getSession().getMode();

      if (mode.$id !== 'ace/mode/spl') {
        this.setSPLMode();
      } // check if only different in 'value', or 'enabled'.


      var diff = Object(external_lodash_["omitBy"])(this.props, function (val, key) {
        return preProps[key] === val;
      });
      var diffKeys = Object(external_lodash_["difference"])(Object(external_lodash_["keys"])(diff), ['value', 'enabled']);

      if (diffKeys.length > 0) {
        this.setEditorOptions();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.editor.destroy();
      this.editor = null;
    }
    /**
     * @private
     * Set the SPL mode based on syntax used
     * */

  }, {
    key: "setSPLMode",
    value: function setSPLMode() {
      var splMode = new AceSPLMode.Mode(this.props.syntax);
      this.editor.getSession().setMode(splMode);
    }
    /**
     * @private
     * Set editor options based on props
     * */

  }, {
    key: "setEditorOptions",
    value: function setEditorOptions() {
      var editor = this.editor;
      var _this$props3 = this.props,
          minLines = _this$props3.minLines,
          maxLines = _this$props3.maxLines,
          showLineNumbers = _this$props3.showLineNumbers,
          autoFormat = _this$props3.autoFormat,
          searchAssistant = _this$props3.searchAssistant;
      editor.setOptions({
        minLines: minLines,
        maxLines: maxLines,
        showLineNumbers: showLineNumbers,
        showGutter: showLineNumbers,
        behavioursEnabled: autoFormat
      });

      if (searchAssistant) {
        var completer = this.searchHelperCompleter || completer_default()();
        this.searchHelperCompleter = completer;
        editor.setOptions({
          enableSplLiveAutocompletion: [completer]
        });
      } else {
        editor.setOptions({
          enableSplLiveAutocompletion: false
        });
      }
    }
    /**
     * @private
     * Set listeners and keyboard handlers for editor actions
     * */

  }, {
    key: "setEditorListeners",
    value: function setEditorListeners() {
      var _this2 = this;

      var editor = this.editor;
      editor.on('change', this.handleChange);
      editor.on('focus', this.handleFocus);
      editor.on('blur', this.handleBlur); // TODO: Test if it can fail silently when mode spl is not set.
      // Add reformat command

      var reformatCommand = {
        name: 'autoFormat',
        bindKey: {
          win: 'Ctrl-\\|Ctrl-Shift-F',
          mac: 'Command-\\|Command-Shift-F'
        },
        exec: function exec(ed) {
          ed.reformatSearch();
        },
        readOnly: false
      };
      editor.commands.addCommand(reformatCommand); // Add keyboardHandler for our special cases
      // TODO: Tab

      var keyboardHandler = {
        enter: function enter(e, ed) {
          var completer = ed.completer;
          var popup = completer && completer.popup;

          if (!(popup && popup.isOpen && popup.getData(popup.getRow()))) {
            if (completer) {
              completer.detach();
            }

            if (!e.shiftKey) {
              e.preventDefault();

              _this2.props.onEnter(e);

              return true;
            }
          }

          return false;
        },
        tab: function tab(e) {
          if (!e.shiftKey) {
            e.preventDefault();
            return true;
          }

          return false;
        },
        esc: function esc(e) {
          if (!e.shiftKey) {
            e.preventDefault();

            _this2.props.onEsc(e);

            return true;
          }

          return false;
        }
      };
      var originalOnCommandKey = editor.keyBinding.onCommandKey.bind(editor.keyBinding);

      var newOnCommandKey = function onCommandKey(e, hashId, keyCode) {
        var success = false;
        var keyName = Object(keyboard_["keycode"])(keyCode);

        if (!e.metaKey && !e.ctrlKey) {
          success = !Object(external_lodash_["isUndefined"])(keyboardHandler[keyName]) && keyboardHandler[keyName](e, editor);
        }

        if (!success) {
          originalOnCommandKey(e, hashId, keyCode);
        }
      };

      editor.keyBinding.onCommandKey = newOnCommandKey; // Remove unused keyboard accelerator

      editor.commands.removeCommands({
        'Command-L': 'gotoline',
        'Command-,': 'showSettingsMenu',
        'Ctrl-E': 'goToNextError',
        'Ctrl-Shift-E': 'goToPreviousError',
        'Command-Shift-E': 'replaymacro'
      });
    }
    /**
     * @private
     * Set if the editor is read only
     * @param {bool} value readOnly value
     * */

  }, {
    key: "setReadOnly",
    value: function setReadOnly(value) {
      this.editor.setOptions({
        readOnly: value
      });
      this.editor[value ? 'setStyle' : 'unsetStyle']('read-only');
    }
    /**
     * @private
     * Make the editor read only
     * */

  }, {
    key: "disable",
    value: function disable() {
      this.setReadOnly(true);
      this.editor.setStyle('disabled');
    }
    /**
     * @private
     * Set the editor state based on props and unset disabled style
     * */

  }, {
    key: "enable",
    value: function enable() {
      this.setReadOnly(false);
      this.editor.unsetStyle('disabled');
    }
    /**
     * @private
     * Focus the editor
     * */

  }, {
    key: "togglePlaceholder",

    /**
     * @private
     * Method to toggle the input placeholder
     * */
    value: function togglePlaceholder() {
      var editor = this.editor;
      var shouldShow = !(editor.getValue() || '').length;
      var node = editor.renderer.emptyMessageNode;

      if (!shouldShow && node) {
        editor.renderer.scroller.removeChild(node);
        editor.renderer.emptyMessageNode = null;
      } else if (shouldShow) {
        node = this.innerRefPlaceholder ? this.innerRefPlaceholder : this.refPlaceholder;
        editor.renderer.scroller.appendChild(node);
        editor.renderer.emptyMessageNode = node;
      }
    }
    /**
     * @private
     * Method to handle text input change.
     * Calls the parent's onChange callback
     * @param {object} e event object
     * */

  }, {
    key: "render",
    value: function render() {
      var _this$props4 = this.props,
          append = _this$props4.append,
          maybePlaceholder = _this$props4.placeholder;
      var placeholder = maybePlaceholder === undefined ? Object(i18n_["_"])('enter search here...') : maybePlaceholder;
      return /*#__PURE__*/external_react_default.a.createElement(Styled, {
        "data-append": append || null,
        "data-test": "workflow-components:Input"
      }, /*#__PURE__*/external_react_default.a.createElement("textarea", {
        ref: this.updateEditorRef
      }), /*#__PURE__*/external_react_default.a.createElement(StyledHidden, null, /*#__PURE__*/external_react_default.a.createElement(StyledPlaceholder, {
        "aria-hidden": true,
        ref: this.updatePlaceholderRef,
        innerRef: this.updatePlaceholderInnerRef,
        "data-test": "input-placeholder"
      }, placeholder)));
    }
  }]);

  return Input;
}(external_react_["Component"]);

_defineProperty(Input_Input, "propTypes", {
  /** Removes the right border and border-radius of the button so you can append things to it. */
  append: external_prop_types_default.a.bool,

  /** Enable/disable auto-format for user input. */
  autoFormat: external_prop_types_default.a.bool,

  /** Determines if input will be in a disabled or enabled state. */
  enabled: external_prop_types_default.a.bool,

  /** Set the maximal lines of the input area. */
  maxLines: external_prop_types_default.a.number,

  /** Set the minimal lines of the input area. */
  minLines: external_prop_types_default.a.number,

  /** A callback to receive the blur event. */
  onBlur: external_prop_types_default.a.func,

  /** A callback to receive the change events. */
  onChange: external_prop_types_default.a.func,

  /** A callback to receive the enter event. */
  onEnter: external_prop_types_default.a.func,

  /** A callback to receive the escape event. */
  onEsc: external_prop_types_default.a.func,

  /** A callback to receive the focus event. */
  onFocus: external_prop_types_default.a.func,

  /** The gray text shown when the input is empty. */
  placeholder: external_prop_types_default.a.string,

  /** Turn on/off search assistant. */
  searchAssistant: external_prop_types_default.a.bool,

  /** Determines if show the line number or not. */
  showLineNumbers: external_prop_types_default.a.bool,

  /** SPL syntaxes for syntax highlighting */
  syntax: external_prop_types_default.a.object.isRequired,

  /** The search string */
  value: external_prop_types_default.a.string
});

_defineProperty(Input_Input, "defaultProps", {
  append: false,
  autoFormat: true,
  enabled: true,
  maxLines: Infinity,
  minLines: 1,
  onBlur: function onBlur() {
    return undefined;
  },
  onChange: function onChange() {
    return undefined;
  },
  onEnter: function onEnter() {
    return undefined;
  },
  onEsc: function onEsc() {
    return undefined;
  },
  onFocus: function onFocus() {
    return undefined;
  },
  searchAssistant: false,
  showLineNumbers: true,
  value: ''
});

/* harmony default export */ var components_Input = __webpack_exports__["default"] = (Input_Input);

/***/ }),

/***/ 4:
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),

/***/ 6:
/***/ (function(module, exports) {

module.exports = require("@splunk/react-search/components/Ace");

/***/ })

/******/ });