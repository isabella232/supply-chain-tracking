"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _time = require("@splunk/time-range-utils/time");

var _Popover = _interopRequireDefault(require("@splunk/react-ui/Popover"));

var _TimeAccelerator = _interopRequireDefault(require("./TimeAccelerator"));

const _excluded = ["target", "eventTime", "onRequestClose"];
var _jsxFileName = "/builds/swp/ui-platform/projects/lib/search-components/react-time-range/src/TimeAcceleratorPopup/TimeAcceleratorPopup.tsx";

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const TimeAcceleratorPopup = _ref => {
  let {
    target,
    eventTime,
    onRequestClose
  } = _ref,
      props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  const popupRef = (0, _react.useRef)(null);
  (0, _react.useEffect)(() => {
    if (popupRef) {
      const {
        current
      } = popupRef;
      current == null ? void 0 : current.focus();
    }
  }, [popupRef]);

  if (!target || !eventTime || eventTime === '') {
    return null;
  }

  return /*#__PURE__*/_react.default.createElement(_Popover.default, {
    open: true,
    elementRef: popupRef,
    anchor: target,
    onRequestClose: onRequestClose,
    defaultPlacement: "right",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 38,
      columnNumber: 9
    }
  }, /*#__PURE__*/_react.default.createElement(_TimeAccelerator.default, (0, _extends2.default)({}, props, {
    eventTime: (0, _time.getISOWithTimeZone)(eventTime),
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 45,
      columnNumber: 13
    }
  })));
};

var _default = TimeAcceleratorPopup;
exports.default = _default;