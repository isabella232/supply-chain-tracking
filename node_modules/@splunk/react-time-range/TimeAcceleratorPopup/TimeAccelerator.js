"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "TimeSelectorProps", {
  enumerable: true,
  get: function () {
    return _TimeSelector.TimeSelectorProps;
  }
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _i18n = require("@splunk/ui-utils/i18n");

var _Link = _interopRequireDefault(require("@splunk/react-ui/Link"));

var _themes = require("@splunk/themes");

var _time = require("@splunk/time-range-utils/time");

var _TimeSelector = _interopRequireWildcard(require("./TimeSelector"));

const _excluded = ["onTimeChanged", "eventTime"];
var _jsxFileName = "/builds/swp/ui-platform/projects/lib/search-components/react-time-range/src/TimeAcceleratorPopup/TimeAccelerator.tsx";

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const ParentDiv = _styledComponents.default.div`
    padding: ${_themes.variables.spacingLarge};
    width: 380px;
`;
const StyledDiv = _styledComponents.default.div`
    padding-top: ${_themes.variables.spacingLarge};
`;
const Heading = _styledComponents.default.h3`
    font-size: ${_themes.variables.fontSizeXLarge};
    margin: ${_themes.variables.spacingXSmall} 0;
`;
const Label = _styledComponents.default.h2`
    font-size: ${_themes.variables.fontSize};
    margin: ${_themes.variables.spacingXSmall} 0;
`;
const StyledLink = (0, _styledComponents.default)(_Link.default)`
    margin-right: ${_themes.variables.spacingLarge};
`;
const actions = [{
  name: 'beforeTime',
  label: (0, _i18n._)('Before this time')
}, {
  name: 'afterTime',
  label: (0, _i18n._)('After this time')
}, {
  name: 'atTime',
  label: (0, _i18n._)('At this time')
}];

const TimeAccelerator = _ref => {
  let {
    onTimeChanged,
    eventTime
  } = _ref,
      props = (0, _objectWithoutProperties2.default)(_ref, _excluded);

  const handleActionClicked = (e, {
    action
  }) => {
    switch (action) {
      case 'beforeTime':
        onTimeChanged({
          earliest: '0',
          latest: eventTime
        });
        break;

      case 'afterTime':
        onTimeChanged({
          earliest: eventTime,
          latest: 'now'
        });
        break;

      case 'atTime':
        onTimeChanged({
          earliest: eventTime,
          latest: (0, _time.getAcceleratedTimeRange)(eventTime, 1, 's').latest
        });
        break;

      default:
        break;
    }
  };

  return /*#__PURE__*/_react.default.createElement(ParentDiv, {
    "data-test": "time-accelerator",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 62,
      columnNumber: 9
    }
  }, /*#__PURE__*/_react.default.createElement(Heading, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 63,
      columnNumber: 13
    }
  }, (0, _i18n._)('_time')), /*#__PURE__*/_react.default.createElement(StyledDiv, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 64,
      columnNumber: 13
    }
  }, /*#__PURE__*/_react.default.createElement(Label, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 65,
      columnNumber: 17
    }
  }, (0, _i18n._)('Events Before or After')), actions.map(({
    label,
    name
  }) => /*#__PURE__*/_react.default.createElement(StyledLink, {
    key: name,
    "data-test": name,
    onClick: e => handleActionClicked(e, {
      action: name
    }),
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 67,
      columnNumber: 21
    }
  }, label))), /*#__PURE__*/_react.default.createElement(StyledDiv, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 76,
      columnNumber: 13
    }
  }, /*#__PURE__*/_react.default.createElement(Label, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 77,
      columnNumber: 17
    }
  }, (0, _i18n._)('Nearby Events')), /*#__PURE__*/_react.default.createElement(_TimeSelector.default, (0, _extends2.default)({
    onTimeChanged: onTimeChanged,
    eventTime: eventTime
  }, props, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 78,
      columnNumber: 17
    }
  }))));
};

var _default = TimeAccelerator;
exports.default = _default;