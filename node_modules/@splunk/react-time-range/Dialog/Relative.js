"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _lodash = require("lodash");

var _Button = _interopRequireDefault(require("@splunk/react-ui/Button"));

var _Message = _interopRequireDefault(require("@splunk/react-ui/Message"));

var _Number = _interopRequireDefault(require("@splunk/react-ui/Number"));

var _Select = _interopRequireDefault(require("@splunk/react-ui/Select"));

var _RadioList = _interopRequireDefault(require("@splunk/react-ui/RadioList"));

var _time = require("@splunk/time-range-utils/time");

var _format = require("@splunk/ui-utils/format");

var _i18n = require("@splunk/ui-utils/i18n");

var _keyboard = require("@splunk/ui-utils/keyboard");

var _AbsoluteValue = _interopRequireDefault(require("./AbsoluteValue"));

var _Styles = require("./Styles");

var _Panel = _interopRequireDefault(require("./Panel"));

const _excluded = ["earliest", "latest", "open", "onChange", "onRequestParseEarliest", "onRequestParseLatest", "parseEarliest", "parseLatest", "panelId"];
var _jsxFileName = "/builds/swp/ui-platform/projects/lib/search-components/react-time-range/src/Dialog/Relative.tsx";

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const Relative = _ref => {
  let {
    earliest: earliestProps,
    latest: latestProps,
    open,
    onChange,
    onRequestParseEarliest,
    onRequestParseLatest,
    parseEarliest,
    parseLatest,
    panelId
  } = _ref,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  const fromNumberFromProps = (0, _time.getFromNumber)(earliestProps);
  const fromSnapFromProps = (0, _time.getFromSnap)(earliestProps);
  const fromUnitFromProps = (0, _time.getFromUnit)(earliestProps);
  const toSnapFromProps = (0, _time.getToSnap)(latestProps);
  const [fromNumber, setFromNumber] = (0, _react.useState)(fromNumberFromProps);
  const [fromUnit, setFromUnit] = (0, _react.useState)(fromUnitFromProps);
  const [fromSnap, setFromSnap] = (0, _react.useState)(fromSnapFromProps);
  const [toSnap, setToSnap] = (0, _react.useState)(toSnapFromProps);
  const [hasError, setHasError] = (0, _react.useState)(false);
  const prevOpenRef = (0, _react.useRef)();
  const prevEarliestRef = (0, _react.useRef)();
  const prevLatestRef = (0, _react.useRef)();
  (0, _react.useEffect)(() => {
    prevOpenRef.current = open;
  }, [open]);
  (0, _react.useEffect)(() => {
    prevEarliestRef.current = earliestProps;
    prevLatestRef.current = latestProps;
  }, [earliestProps, latestProps]);

  if (open && !prevOpenRef.current) {
    onRequestParseEarliest((0, _time.getRelativeEarliest)(fromNumber, fromSnap, fromUnit), panelId);
    onRequestParseLatest((0, _time.getRelativeLatest)(fromUnit, toSnap), panelId);
  }

  if (open && (prevEarliestRef.current || prevLatestRef.current) && (prevEarliestRef.current !== earliestProps || prevLatestRef.current !== latestProps)) {
    if (hasError) {
      setHasError(false);
    }

    const needsEarliestUpdate = !prevOpenRef.current || fromNumber !== fromNumberFromProps || fromSnap !== fromSnapFromProps || fromUnit !== fromUnitFromProps;

    if (needsEarliestUpdate) {
      onRequestParseEarliest((0, _time.getRelativeEarliest)(fromNumber, fromSnap, fromUnit), panelId);
    }

    const needsLatestUpdate = toSnapFromProps !== toSnap || !prevOpenRef.current;

    if (needsLatestUpdate) {
      onRequestParseLatest((0, _time.getRelativeLatest)(fromUnit, toSnap), panelId);
    }
  }

  const handleFromNumberChange = (e, {
    value
  }) => {
    setFromNumber(value);
    onRequestParseEarliest((0, _time.getRelativeEarliest)(value, fromSnap, fromUnit), panelId);
  };

  const handleFromUnitChange = (e, {
    value
  }) => {
    setFromUnit(value);
    onRequestParseEarliest((0, _time.getRelativeEarliest)(fromNumber, fromSnap, value), panelId);
    onRequestParseLatest((0, _time.getRelativeLatest)(value, toSnap), panelId);
  };

  const handleFromSnapChange = (e, {
    value
  }) => {
    setFromSnap(value);
    onRequestParseEarliest((0, _time.getRelativeEarliest)(fromNumber, value, fromUnit), panelId);
  };

  const handleToSnapChange = (e, {
    value
  }) => {
    setToSnap(value);
    onRequestParseLatest((0, _time.getRelativeLatest)(fromUnit, value), panelId);
  };

  const handleApply = e => {
    if (!(0, _lodash.isFinite)(fromNumber)) {
      setHasError(true);
      return;
    }

    const earliest = (0, _time.getRelativeEarliest)(fromNumber, fromSnap, fromUnit);
    const latest = (0, _time.getRelativeLatest)(fromUnit, toSnap);
    onChange(e, {
      earliest,
      latest
    });
  };

  const handleKeyDown = e => {
    if ((0, _keyboard.keycode)(e) === 'enter') {
      handleApply(e);
    }
  };

  const earliest = (0, _time.getRelativeEarliest)(fromNumber, fromSnap, fromUnit);
  const latest = (0, _time.getRelativeLatest)(fromUnit, toSnap);
  const earliestParseValid = parseEarliest && earliest === parseEarliest.time;
  const latestParseValid = parseLatest && latest === parseLatest.time;
  const timeUnit = (0, _time.getUnitLabel)(fromUnit);
  return /*#__PURE__*/_react.default.createElement(_Panel.default, (0, _extends2.default)({
    title: (0, _i18n._)('Relative'),
    panelId: panelId,
    open: open
  }, rest, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 152,
      columnNumber: 9
    }
  }), hasError && /*#__PURE__*/_react.default.createElement(_Styles.StyledError, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 154,
      columnNumber: 17
    }
  }, /*#__PURE__*/_react.default.createElement(_Message.default, {
    type: "error",
    "data-test": "error-message",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 155,
      columnNumber: 21
    }
  }, (0, _i18n._)('A number is required for earliest.'))), /*#__PURE__*/_react.default.createElement(_Styles.StyledCGWrapper, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 161,
      columnNumber: 13
    }
  }, /*#__PURE__*/_react.default.createElement(_Styles.FlexControlGroup, {
    controlsLayout: "none",
    label: (0, _i18n._)('Earliest:'),
    labelPosition: "top",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 162,
      columnNumber: 17
    }
  }, /*#__PURE__*/_react.default.createElement(_Styles.StyledFromControl, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 163,
      columnNumber: 21
    }
  }, /*#__PURE__*/_react.default.createElement(_Number.default, {
    style: {
      flex: 1
    },
    onChange: handleFromNumberChange,
    onKeyDown: handleKeyDown,
    min: 0,
    roundTo: 0,
    value: fromNumber,
    append: true,
    "data-test": "earliest-number",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 164,
      columnNumber: 25
    }
  }), /*#__PURE__*/_react.default.createElement(_Select.default, {
    value: fromUnit,
    onChange: handleFromUnitChange,
    prepend: true,
    style: {
      flex: '0 1 auto'
    },
    "data-test": "earliest-unit",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 174,
      columnNumber: 25
    }
  }, /*#__PURE__*/_react.default.createElement(_Select.default.Option, {
    label: (0, _i18n._)('Seconds Ago'),
    value: "s",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 181,
      columnNumber: 29
    }
  }), /*#__PURE__*/_react.default.createElement(_Select.default.Option, {
    label: (0, _i18n._)('Minutes Ago'),
    value: "m",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 182,
      columnNumber: 29
    }
  }), /*#__PURE__*/_react.default.createElement(_Select.default.Option, {
    label: (0, _i18n._)('Hours Ago'),
    value: "h",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 183,
      columnNumber: 29
    }
  }), /*#__PURE__*/_react.default.createElement(_Select.default.Option, {
    label: (0, _i18n._)('Days Ago'),
    value: "d",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 184,
      columnNumber: 29
    }
  }), /*#__PURE__*/_react.default.createElement(_Select.default.Option, {
    label: (0, _i18n._)('Weeks Ago'),
    value: "w",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 185,
      columnNumber: 29
    }
  }), /*#__PURE__*/_react.default.createElement(_Select.default.Option, {
    label: (0, _i18n._)('Months Ago'),
    value: "mon",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 186,
      columnNumber: 29
    }
  }), /*#__PURE__*/_react.default.createElement(_Select.default.Option, {
    label: (0, _i18n._)('Quarters Ago'),
    value: "q",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 187,
      columnNumber: 29
    }
  }), /*#__PURE__*/_react.default.createElement(_Select.default.Option, {
    label: (0, _i18n._)('Years Ago'),
    value: "y",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 188,
      columnNumber: 29
    }
  }))), /*#__PURE__*/_react.default.createElement(_RadioList.default, {
    "data-test-temp": "radio-list-earliest",
    value: fromSnap,
    onChange: handleFromSnapChange,
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 192,
      columnNumber: 21
    }
  }, /*#__PURE__*/_react.default.createElement(_RadioList.default.Option, {
    "data-test": "no-snap-to",
    value: false,
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 197,
      columnNumber: 25
    }
  }, (0, _i18n._)('No snap-to')), /*#__PURE__*/_react.default.createElement(_RadioList.default.Option, {
    "data-test": "earliest-begin",
    value: true,
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 200,
      columnNumber: 25
    }
  }, (0, _format.sprintf)((0, _i18n._)('Beginning of %(timeUnit)s'), {
    timeUnit
  }))), /*#__PURE__*/_react.default.createElement(_AbsoluteValue.default, {
    "data-test": "earliest-absolute-value",
    error: earliestParseValid ? parseEarliest.error : undefined,
    displayValue: earliestParseValid ? parseEarliest.displayValue : undefined,
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 204,
      columnNumber: 21
    }
  })), /*#__PURE__*/_react.default.createElement(_Styles.FlexControlGroup, {
    controlsLayout: "none",
    label: (0, _i18n._)('Latest:'),
    labelPosition: "top",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 210,
      columnNumber: 17
    }
  }, /*#__PURE__*/_react.default.createElement(_RadioList.default, {
    "data-test-temp": "radio-list-latest",
    value: toSnap,
    onChange: handleToSnapChange,
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 211,
      columnNumber: 21
    }
  }, /*#__PURE__*/_react.default.createElement(_RadioList.default.Option, {
    "data-test": "now",
    value: false,
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 216,
      columnNumber: 25
    }
  }, (0, _i18n._)('Now')), /*#__PURE__*/_react.default.createElement(_RadioList.default.Option, {
    "data-test": "latest-begin",
    value: true,
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 219,
      columnNumber: 25
    }
  }, (0, _format.sprintf)((0, _i18n._)('Beginning of current %(timeUnit)s'), {
    timeUnit
  }))), /*#__PURE__*/_react.default.createElement(_AbsoluteValue.default, {
    "data-test": "latest-absolute-value",
    error: latestParseValid ? parseLatest.error : undefined,
    displayValue: latestParseValid ? parseLatest.displayValue : undefined,
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 223,
      columnNumber: 21
    }
  }))), /*#__PURE__*/_react.default.createElement(_Styles.StyledApplyContainer, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 230,
      columnNumber: 13
    }
  }, /*#__PURE__*/_react.default.createElement(_Button.default, {
    label: (0, _i18n._)('Apply'),
    disabled: !earliestParseValid || !latestParseValid || !!(parseEarliest && parseEarliest.error) || !!(parseEarliest && parseLatest.error),
    "data-test": "apply",
    onClick: handleApply,
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 231,
      columnNumber: 17
    }
  })));
};

Relative.defaultProps = {
  onChange: _lodash.noop,
  open: false
};
var _default = Relative;
exports.default = _default;