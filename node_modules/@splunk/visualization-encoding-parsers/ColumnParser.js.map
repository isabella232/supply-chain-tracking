{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@splunk/ui-utils/i18n\"","webpack:///external \"@splunk/visualization-encoding-parsers/Base\"","webpack:///./src/errorMsgs.js","webpack:///./src/ColumnParser.js","webpack:///external \"lodash/isEmpty\""],"names":["ErrorMsgs","NO_DATA_SOURCES","_","NO_ENCODING","ERROR_PARSE","dataContract","requiredDataSources","name","description","optionalDataSources","initialRequestParams","primary","offset","count","annotation","encoding","x","isRequired","type","default","y","y2","annotationX","annotationLabel","annotationColor","parse","isEmpty","mergeEncoding","parsedProps","baseParse","xFieldName","yFieldName","y2FieldName"],"mappings":"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","file":"ColumnParser.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","module.exports = require(\"@splunk/ui-utils/i18n\");","module.exports = require(\"@splunk/visualization-encoding-parsers/Base\");","import { _ } from '@splunk/ui-utils/i18n';\n\nexport const ErrorMsgs = {\n    NO_DATA_SOURCES: _('No valid dataSources.'),\n    NO_ENCODING: _('No valid encoding.'),\n    ERROR_PARSE: _('Can not parse data correctly.'),\n};\n","import { parse as baseParse, mergeEncoding } from '@splunk/visualization-encoding-parsers/Base';\nimport isEmpty from 'lodash/isEmpty';\nimport { ErrorMsgs } from './errorMsgs';\n\nexport const dataContract = {\n    requiredDataSources: [\n        {\n            name: 'primary',\n            description: 'DataSource that powers the visualization',\n        },\n    ],\n    optionalDataSources: [\n        // Note: SCP-14090 disable ui for optional datasources. We may need to add it back later\n        // {\n        //     name: 'annotation',\n        //     description: 'DataSource that populate event annotations',\n        // },\n    ],\n    initialRequestParams: {\n        primary: { offset: 0, count: 10000 },\n        annotation: { offset: 0, count: 10000 },\n    },\n    encoding: {\n        x: {\n            isRequired: true,\n            type: ['time', 'number', 'string'],\n            default: 'primary[0]',\n        },\n        y: {\n            isRequired: true,\n            type: ['number', 'string'],\n            default: 'primary[1:]',\n        },\n        y2: {\n            isRequired: false,\n            type: ['number', 'string'],\n        },\n        annotationX: {\n            isRequired: false,\n            type: ['time', 'number', 'string'],\n        },\n        annotationLabel: {\n            isRequired: false,\n            type: ['string'],\n        },\n        annotationColor: {\n            isRequired: false,\n            type: ['string'],\n        },\n    },\n};\n\n/**\n * Column parse function\n * @param {object} dataSources\n * @param {object} userDefinedEncoding\n * @return {object} props that dashboard/react visualizations can be used.\n * @public\n */\nexport const parse = (dataSources, userDefinedEncoding) => {\n    if (isEmpty(dataSources)) {\n        throw new Error(ErrorMsgs.NO_DATA_SOURCES);\n    }\n\n    const encoding = mergeEncoding(dataContract.encoding, userDefinedEncoding);\n    const parsedProps = baseParse(dataSources, encoding);\n\n    return {\n        x: parsedProps.x,\n        y: parsedProps.y,\n        y2: parsedProps.y2,\n        annotationX: parsedProps.annotationX,\n        annotationLabel: parsedProps.annotationLabel,\n        annotationColor: parsedProps.annotationColor,\n        xFieldName: parsedProps['_meta'].fieldNames.x, // eslint-disable-line dot-notation\n        yFieldName: parsedProps['_meta'].fieldNames.y, // eslint-disable-line dot-notation\n        y2FieldName: parsedProps['_meta'].fieldNames.y2, // eslint-disable-line dot-notation\n    };\n};\n","module.exports = require(\"lodash/isEmpty\");"],"sourceRoot":""}