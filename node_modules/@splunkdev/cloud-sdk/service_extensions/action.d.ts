/**
 * Copyright 2019 Splunk, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"): you may
 * not use this file except in compliance with the License. You may obtain
 * a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */
import BaseApiService from '../baseapiservice';
import { Constructor } from './service_extension';
export interface ActionTriggerResponse {
    statusId: string;
    statusUrl: string;
}
export interface TriggerEventInterface {
}
export declare type ActionServiceExtensions = {};
export interface ActionServiceInterface extends BaseApiService {
    getServiceCluster(): string;
    getServicePrefix(): string;
}
export declare function ActionServiceExtensions<T extends Constructor<ActionServiceInterface>>(constructor: T): {
    new (...args: any[]): {
        /**
         * Trigger an action
         * @param actionName The name of the action, as one or more identifier strings separated by periods. Each identifier string consists of lowercase letters, digits, and underscores, and cannot start with a digit.
         * @param triggerEvent The action payload, which must include values for any templated fields.
         * @return Promise of actionTriggerResponse
         */
        triggerAction: (actionName: string, triggerEvent: TriggerEventInterface) => Promise<ActionTriggerResponse>;
        getServiceCluster(): string;
        getServicePrefix(): string;
        client: import("../client").ServiceClient;
        template: (strings: TemplateStringsArray, ...keys: string[]) => (tlMap: {
            [key: string]: string;
        }) => string;
    };
} & T;
