import { Constructor } from './service_extension';
declare type SearchJobInterface = {
    sid?: string;
    status?: string;
};
export declare type SearchServiceInterface = {
    getJob(sid: string): Promise<SearchJobInterface>;
};
export declare type SearchServiceExtensions = {
    waitForJob<J extends SearchJobInterface>(job: J, pollInterval?: number, callback?: (job: J) => object): Promise<J>;
};
export declare function SearchServiceExtensions<T extends Constructor<SearchServiceInterface>>(constructor: T): {
    new (...args: any[]): {
        waitForJob<J extends SearchJobInterface>(jobIn: J, pollInterval?: number | undefined, callback?: ((job: J) => object) | undefined): Promise<J>;
        getJob(sid: string): Promise<SearchJobInterface>;
    };
} & T;
export {};
