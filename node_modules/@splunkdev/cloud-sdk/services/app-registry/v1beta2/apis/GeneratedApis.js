"use strict";
// tslint:disable
/**
 * Copyright 2020 Splunk, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"): you may
 * not use this file except in compliance with the License. You may obtain
 * a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 * App Registry
 * With the App Registry service in Splunk Cloud Services, you can create, update, and manage your apps.
 *
 * OpenAPI spec version: v1beta2.0 (recommended default)
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
var baseapiservice_1 = __importDefault(require("../../../../baseapiservice"));
var app_registry_1 = require("../../../../service_extensions/app-registry");
exports.APPREGISTRY_SERVICE_PREFIX = '/app-registry/v1beta2';
exports.APPREGISTRY_SERVICE_CLUSTER = 'api';
/**
 * App Registry
 * Version: v1beta2.0
 * With the App Registry service in Splunk Cloud Services, you can create, update, and manage your apps.
 */
var GeneratedAppRegistryService = /** @class */ (function (_super) {
    __extends(GeneratedAppRegistryService, _super);
    function GeneratedAppRegistryService() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Creates an app.
         * @param createAppRequest Creates a new app.
         * @param args parameters to be sent with the request
         * @param requestStatusCallback callback function to listen to the status of a request
         * @return AppResponseCreateUpdate
         */
        _this.createApp = function (createAppRequest, args, requestStatusCallback) {
            var path = "/app-registry/v1beta2/apps";
            return _this.client.post(exports.APPREGISTRY_SERVICE_CLUSTER, _this.client.buildPath('', path.split('/').slice(1)), createAppRequest, { query: args, statusCallback: requestStatusCallback })
                .then(function (response) { return response.body; });
        };
        /**
         * Creates a subscription.
         * @param appName Creates a subscription between a tenant and an app.
         * @param args parameters to be sent with the request
         * @param requestStatusCallback callback function to listen to the status of a request
         */
        _this.createSubscription = function (appName, args, requestStatusCallback) {
            var path = "/app-registry/v1beta2/subscriptions";
            return _this.client.post(exports.APPREGISTRY_SERVICE_CLUSTER, _this.client.buildPath('', path.split('/').slice(1)), appName, { query: args, statusCallback: requestStatusCallback })
                .then(function (response) { return response.body; });
        };
        /**
         * Removes an app.
         * @param appName App name.
         * @param args parameters to be sent with the request
         * @param requestStatusCallback callback function to listen to the status of a request
         */
        _this.deleteApp = function (appName, args, requestStatusCallback) {
            var path_params = {
                appName: appName
            };
            var path = _this.template(templateObject_1 || (templateObject_1 = __makeTemplateObject(["/app-registry/v1beta2/apps/", ""], ["/app-registry/v1beta2/apps/", ""])), 'appName')(path_params);
            return _this.client["delete"](exports.APPREGISTRY_SERVICE_CLUSTER, _this.client.buildPath('', path.split('/').slice(1)), { query: args, statusCallback: requestStatusCallback })
                .then(function (response) { return response.body; });
        };
        /**
         * Removes a subscription.
         * @param appName App name.
         * @param args parameters to be sent with the request
         * @param requestStatusCallback callback function to listen to the status of a request
         */
        _this.deleteSubscription = function (appName, args, requestStatusCallback) {
            var path_params = {
                appName: appName
            };
            var path = _this.template(templateObject_2 || (templateObject_2 = __makeTemplateObject(["/app-registry/v1beta2/subscriptions/", ""], ["/app-registry/v1beta2/subscriptions/", ""])), 'appName')(path_params);
            return _this.client["delete"](exports.APPREGISTRY_SERVICE_CLUSTER, _this.client.buildPath('', path.split('/').slice(1)), { query: args, statusCallback: requestStatusCallback })
                .then(function (response) { return response.body; });
        };
        /**
         * Returns the metadata of an app.
         * @param appName App name.
         * @param args parameters to be sent with the request
         * @param requestStatusCallback callback function to listen to the status of a request
         * @return AppResponseGetList
         */
        _this.getApp = function (appName, args, requestStatusCallback) {
            var path_params = {
                appName: appName
            };
            var path = _this.template(templateObject_3 || (templateObject_3 = __makeTemplateObject(["/app-registry/v1beta2/apps/", ""], ["/app-registry/v1beta2/apps/", ""])), 'appName')(path_params);
            return _this.client.get(exports.APPREGISTRY_SERVICE_CLUSTER, _this.client.buildPath('', path.split('/').slice(1)), { query: args, statusCallback: requestStatusCallback })
                .then(function (response) { return response.body; });
        };
        /**
         * Returns a list of the public keys used for verifying signed webhook requests.
         * @param args parameters to be sent with the request
         * @param requestStatusCallback callback function to listen to the status of a request
         * @return Array<Key>
         */
        _this.getKeys = function (args, requestStatusCallback) {
            var path = "/system/app-registry/v1beta2/keys";
            return _this.client.get(exports.APPREGISTRY_SERVICE_CLUSTER, _this.client.buildPath('', path.split('/').slice(1)), { query: args, statusCallback: requestStatusCallback })
                .then(function (response) { return response.body; });
        };
        /**
         * Returns or validates a subscription.
         * @param appName App name.
         * @param args parameters to be sent with the request
         * @param requestStatusCallback callback function to listen to the status of a request
         * @return Subscription
         */
        _this.getSubscription = function (appName, args, requestStatusCallback) {
            var path_params = {
                appName: appName
            };
            var path = _this.template(templateObject_4 || (templateObject_4 = __makeTemplateObject(["/app-registry/v1beta2/subscriptions/", ""], ["/app-registry/v1beta2/subscriptions/", ""])), 'appName')(path_params);
            return _this.client.get(exports.APPREGISTRY_SERVICE_CLUSTER, _this.client.buildPath('', path.split('/').slice(1)), { query: args, statusCallback: requestStatusCallback })
                .then(function (response) { return response.body; });
        };
        /**
         * Returns the collection of subscriptions to an app.
         * @param appName App name.
         * @param args parameters to be sent with the request
         * @param requestStatusCallback callback function to listen to the status of a request
         * @return Array<Subscription>
         */
        _this.listAppSubscriptions = function (appName, args, requestStatusCallback) {
            var path_params = {
                appName: appName
            };
            var path = _this.template(templateObject_5 || (templateObject_5 = __makeTemplateObject(["/app-registry/v1beta2/apps/", "/subscriptions"], ["/app-registry/v1beta2/apps/", "/subscriptions"])), 'appName')(path_params);
            return _this.client.get(exports.APPREGISTRY_SERVICE_CLUSTER, _this.client.buildPath('', path.split('/').slice(1)), { query: args, statusCallback: requestStatusCallback })
                .then(function (response) { return response.body; });
        };
        /**
         * Returns a list of apps.
         * @param args parameters to be sent with the request
         * @param requestStatusCallback callback function to listen to the status of a request
         * @return Array<AppResponseGetList>
         */
        _this.listApps = function (args, requestStatusCallback) {
            var path = "/app-registry/v1beta2/apps";
            return _this.client.get(exports.APPREGISTRY_SERVICE_CLUSTER, _this.client.buildPath('', path.split('/').slice(1)), { query: args, statusCallback: requestStatusCallback })
                .then(function (response) { return response.body; });
        };
        /**
         * Returns the tenant subscriptions.
         * @param args parameters to be sent with the request
         * @param args.kind The kind of application.
         * @param requestStatusCallback callback function to listen to the status of a request
         * @return Array<Subscription>
         */
        _this.listSubscriptions = function (args, requestStatusCallback) {
            var path = "/app-registry/v1beta2/subscriptions";
            return _this.client.get(exports.APPREGISTRY_SERVICE_CLUSTER, _this.client.buildPath('', path.split('/').slice(1)), { query: args, statusCallback: requestStatusCallback })
                .then(function (response) { return response.body; });
        };
        /**
         * Rotates the client secret for an app.
         * @param appName App name.
         * @param args parameters to be sent with the request
         * @param requestStatusCallback callback function to listen to the status of a request
         * @return AppResponseCreateUpdate
         */
        _this.rotateSecret = function (appName, args, requestStatusCallback) {
            var path_params = {
                appName: appName
            };
            var path = _this.template(templateObject_6 || (templateObject_6 = __makeTemplateObject(["/app-registry/v1beta2/apps/", "/rotate-secret"], ["/app-registry/v1beta2/apps/", "/rotate-secret"])), 'appName')(path_params);
            return _this.client.post(exports.APPREGISTRY_SERVICE_CLUSTER, _this.client.buildPath('', path.split('/').slice(1)), { query: args, statusCallback: requestStatusCallback })
                .then(function (response) { return response.body; });
        };
        /**
         * Updates an app.
         * @param appName App name.
         * @param updateAppRequest Updates app contents.
         * @param args parameters to be sent with the request
         * @param requestStatusCallback callback function to listen to the status of a request
         * @return AppResponseCreateUpdate
         */
        _this.updateApp = function (appName, updateAppRequest, args, requestStatusCallback) {
            var path_params = {
                appName: appName
            };
            var path = _this.template(templateObject_7 || (templateObject_7 = __makeTemplateObject(["/app-registry/v1beta2/apps/", ""], ["/app-registry/v1beta2/apps/", ""])), 'appName')(path_params);
            return _this.client.put(exports.APPREGISTRY_SERVICE_CLUSTER, _this.client.buildPath('', path.split('/').slice(1)), updateAppRequest, { query: args, statusCallback: requestStatusCallback })
                .then(function (response) { return response.body; });
        };
        return _this;
    }
    GeneratedAppRegistryService.prototype.getServiceCluster = function () {
        return exports.APPREGISTRY_SERVICE_CLUSTER;
    };
    GeneratedAppRegistryService.prototype.getServicePrefix = function () {
        return exports.APPREGISTRY_SERVICE_PREFIX;
    };
    return GeneratedAppRegistryService;
}(baseapiservice_1["default"]));
exports.GeneratedAppRegistryService = GeneratedAppRegistryService;
exports.AppRegistryService = app_registry_1.AppRegistryServiceExtensions(GeneratedAppRegistryService);
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7;
//# sourceMappingURL=GeneratedApis.js.map