"use strict";
/**
 * Copyright 2019 Splunk, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"): you may
 * not use this file except in compliance with the License. You may obtain
 * a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
function buildSplunkError(errorParams) {
    if (typeof errorParams === 'string') {
        return new SplunkError(errorParams);
    }
    switch (errorParams.httpStatusCode) {
        case 401:
            return new SplunkUnauthorizedError(errorParams);
        case 500:
            return new SplunkServerError(errorParams);
        default:
            return new SplunkError(errorParams);
    }
}
exports.buildSplunkError = buildSplunkError;
var SplunkError = /** @class */ (function (_super) {
    __extends(SplunkError, _super);
    function SplunkError(errorParams) {
        var _this = _super.call(this, typeof errorParams === 'string' ? errorParams : JSON.stringify(errorParams)) || this;
        if (typeof errorParams !== 'string') {
            _this.message = errorParams.message || _this.message;
            _this.code = errorParams.code;
            _this.details = errorParams.details;
            _this.moreInfo = errorParams.moreInfo;
            _this.httpStatusCode = errorParams.httpStatusCode;
        }
        return _this;
    }
    return SplunkError;
}(Error));
exports.SplunkError = SplunkError;
var SplunkServerError = /** @class */ (function (_super) {
    __extends(SplunkServerError, _super);
    function SplunkServerError(errorParams) {
        return _super.call(this, errorParams) || this;
    }
    return SplunkServerError;
}(SplunkError));
exports.SplunkServerError = SplunkServerError;
var SplunkUnauthorizedError = /** @class */ (function (_super) {
    __extends(SplunkUnauthorizedError, _super);
    function SplunkUnauthorizedError(errorParams) {
        return _super.call(this, errorParams) || this;
    }
    return SplunkUnauthorizedError;
}(SplunkError));
exports.SplunkUnauthorizedError = SplunkUnauthorizedError;
//# sourceMappingURL=errors.js.map