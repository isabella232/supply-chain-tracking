"use strict";
/**
 * Copyright 2019 Splunk, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"): you may
 * not use this file except in compliance with the License. You may obtain
 * a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */
exports.__esModule = true;
var client_1 = require("./client");
var action_1 = require("./services/action");
var app_registry_1 = require("./services/app-registry");
var catalog_1 = require("./services/catalog");
var collect_1 = require("./services/collect");
var forwarders_1 = require("./services/forwarders");
var identity_1 = require("./services/identity");
var ingest_1 = require("./services/ingest");
var kvstore_1 = require("./services/kvstore");
var ml_1 = require("./services/ml");
var provisioner_1 = require("./services/provisioner");
var search_1 = require("./services/search");
var streams_1 = require("./services/streams");
/**
 * This class is a Splunk Cloud client.
 */
var SplunkCloud = /** @class */ (function () {
    /**
     * Builds a Splunk Cloud client.
     * @param args A `ServiceClientArgs` object.
     */
    function SplunkCloud(args) {
        this.client = new client_1.ServiceClient(args);
        this.search = new search_1.SearchService(this.client);
        this.catalog = new catalog_1.CatalogService(this.client);
        this.collect = new collect_1.CollectService(this.client);
        this.identity = new identity_1.IdentityService(this.client);
        this.ingest = new ingest_1.IngestService(this.client);
        this.kvstore = new kvstore_1.KVStoreService(this.client);
        this.action = new action_1.ActionService(this.client);
        this.streams = new streams_1.StreamsService(this.client);
        this.ml = new ml_1.MLService(this.client);
        this.forwarders = new forwarders_1.ForwardersService(this.client);
        this.appreg = new app_registry_1.AppRegistryService(this.client);
        this.provisioner = new provisioner_1.ProvisionerService(this.client);
    }
    return SplunkCloud;
}());
exports.SplunkCloud = SplunkCloud;
//# sourceMappingURL=splunk.js.map